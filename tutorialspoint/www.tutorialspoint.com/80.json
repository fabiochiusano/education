{"title_html": "<h1>Kotlin - Generics</h1>", "content": "\n Kotlin - Generics \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n Like Java, Kotlin provides higher order of variable typing called as Generics. In this chapter, we will learn how Kotlin implements Generics and how as a developer we can use those functionalities provided inside the generics library. Implementation wise, generics is pretty similar to Java but Kotlin developer has introduced two new keywords \u201cout\u201d and \u201cin\u201d to make Kotlin codes more readable and easy for the developer. \n In Kotlin, a class and a type are totally different concepts. As per the example, List is a class in Kotlin, whereas List<String> is a type in Kotlin. The following example depicts how generics is implemented in Kotlin. \n \nfun main(args: Array<String>) {\n   val integer: Int = 1\n   val number: Number = integer\n   print(number)\n}\n \n In the above code, we have declared one \u201cinteger\u201d and later we have assigned that variable to a number variable. This is possible because \u201cInt\u201d is a subclass of Number class, hence the type conversion happens automatically at runtime and produces the output as \u201c1\u201d. \n Let us learn something more about generics in Kotlin. It is better to go for generic data type whenever we are not sure about the data type we are going to use in the application. Generally, in Kotlin generics is defined by <T> where \u201cT\u201d stands for template, which can be determined dynamically by Kotlin complier. In the following example, we will see how to use generic data types in Kotlin programming language. \n  Live Demo \n \nfun main(args: Array<String>) {\n   var objet = genericsExample<String>(\"JAVA\")\n   var objet1 = genericsExample<Int>(10)\n}\nclass genericsExample<T>(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n \n In the above piece of code, we are creating one class with generic return type, which is represented as <T>. Take a look at the main method, where we have dynamically defined its value at the run by proving the value type, while creating the object of this class. This is how generics is interpreted by Kotlin compiler. We will get the following output in the browser, once we run this code in our coding ground. \n \nI am getting called with the value JAVA\nI am getting called with the value 10\n \n When we want to assign the generic type to any of its super type, then we need to use \u201cout\u201d keyword, and when we want to assign the generic type to any of its sub-type, then we need to use \u201cin\u201d keyword. In the following example, we will use \u201cout\u201d keyword. Similarly, you can try using \u201cin\u201d keyword. \n  Live Demo \n \nfun main(args: Array<String>) {\n   var objet1 = genericsExample<Int>(10)\n   var object2 = genericsExample<Double>(10.00)\n   println(objet1)\n   println(object2)\n}\nclass genericsExample<out T>(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n \n The above code will yield the following output in the browser. \n \nI am getting called with the value 10\nI am getting called with the value 10.0\ngenericsExample@28d93b30\ngenericsExample@1b6d3586\n \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "url": "https://www.tutorialspoint.com/kotlin/kotlin_generics.htm", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>Kotlin Generics</title>\n<meta content=\"Kotlin Generics - Learn Kotlin in simple and easy steps starting from basic to advanced concepts with examples including Overview, Environment Setup, Architecture, Basic Types, Control Flow, Class and Object, Constructors, Inheritance, Interface, Visibility Control, Extension, Data Classes, Sealed Class, Generics, Delegation, Functions, Destructuring Declarations, Exception Handling.\" name=\"description\">\n<meta content=\"Kotlin, Tutorial, Learning, Overview, Environment Setup, Architecture, Basic Types, Control Flow, Class and Object, Constructors, Inheritance, Interface, Visibility Control, Extension, Data Classes, Sealed Class, Generics, Delegation, Functions, Destructuring Declarations, Exception Handling.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #de33a3 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #de33a3 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #de33a3 !important;}\r\n.submenu-item{ border-bottom: 2px solid #de33a3 !important; border-top: 2px solid #de33a3 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#de33a3; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/kotlin/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"Kotlin Tutorial\" src=\"/kotlin/images/kotlin-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Kotlin Tutorial</li>\n<li><a href=\"/kotlin/index.htm\">Kotlin - Home</a></li>\n<li><a href=\"/kotlin/kotlin_overview.htm\">Kotlin - Overview</a></li>\n<li><a href=\"/kotlin/kotlin_environment_setup.htm\">Kotlin - Environment Setup</a></li>\n<li><a href=\"/kotlin/kotlin_architecture.htm\">Kotlin - Architecture</a></li>\n<li><a href=\"/kotlin/kotlin_basic_types.htm\">Kotlin - Basic Types</a></li>\n<li><a href=\"/kotlin/kotlin_control_flow.htm\">Kotlin - Control Flow</a></li>\n<li><a href=\"/kotlin/kotlin_class_and_object.htm\">Kotlin - Class &amp; Object</a></li>\n<li><a href=\"/kotlin/kotlin_constructors.htm\">Kotlin - Constructors</a></li>\n<li><a href=\"/kotlin/kotlin_inheritance.htm\">Kotlin - Inheritance</a></li>\n<li><a href=\"/kotlin/kotlin_interface.htm\">Kotlin - Interface</a></li>\n<li><a href=\"/kotlin/kotlin_visibility_control.htm\">Kotlin - Visibility Control</a></li>\n<li><a href=\"/kotlin/kotlin_extension.htm\">Kotlin - Extension</a></li>\n<li><a href=\"/kotlin/kotlin_data_classes.htm\">Kotlin - Data Classes</a></li>\n<li><a href=\"/kotlin/kotlin_sealed_class.htm\">Kotlin - Sealed Class</a></li>\n<li><a href=\"/kotlin/kotlin_generics.htm\">Kotlin - Generics</a></li>\n<li><a href=\"/kotlin/kotlin_delegation.htm\">Kotlin - Delegation</a></li>\n<li><a href=\"/kotlin/kotlin_functions.htm\">Kotlin - Functions</a></li>\n<li><a href=\"/kotlin/kotlin_destructuring_declarations.htm\">Kotlin - Destructuring Declarations</a></li>\n<li><a href=\"/kotlin/kotlin_exception_handling.htm\">Kotlin - Exception Handling</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Kotlin Useful Resources</li>\n<li><a href=\"/kotlin/kotlin_quick_guide.htm\">Kotlin - Quick Guide</a></li>\n<li><a href=\"/kotlin/kotlin_useful_resources.htm\">Kotlin - Useful Resources</a></li>\n<li><a href=\"/kotlin/kotlin_discussion.htm\">Kotlin - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>Kotlin - Generics</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_sealed_class.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_delegation.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>Like Java, Kotlin provides higher order of variable typing called as Generics. In this chapter, we will learn how Kotlin implements Generics and how as a developer we can use those functionalities provided inside the generics library. Implementation wise, generics is pretty similar to Java but Kotlin developer has introduced two new keywords <b>\u201cout\u201d</b> and <b>\u201cin\u201d</b> to make Kotlin codes more readable and easy for the developer.</p>\n<p>In Kotlin, a class and a type are totally different concepts. As per the example, List is a class in Kotlin, whereas List&lt;String&gt; is a type in Kotlin. The following example depicts how generics is implemented in Kotlin.</p>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   val integer: Int = 1\n   val number: Number = integer\n   print(number)\n}\n</pre>\n<p>In the above code, we have declared one \u201cinteger\u201d and later we have assigned that variable to a number variable. This is possible because \u201cInt\u201d is a subclass of Number class, hence the type conversion happens automatically at runtime and produces the output as \u201c1\u201d.</p>\n<p>Let us learn something more about generics in Kotlin. It is better to go for generic data type whenever we are not sure about the data type we are going to use in the application. Generally, in Kotlin generics is defined by <b>&lt;T&gt;</b> where \u201cT\u201d stands for template, which can be determined dynamically by Kotlin complier. In the following example, we will see how to use generic data types in Kotlin programming language.</p>\n<a class=\"demo\" href=\"http://tpcg.io/edI3jn\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   var objet = genericsExample&lt;String&gt;(\"JAVA\")\n   var objet1 = genericsExample&lt;Int&gt;(10)\n}\nclass genericsExample&lt;T&gt;(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n</pre>\n<p>In the above piece of code, we are creating one class with generic return type, which is represented as <b>&lt;T&gt;</b>. Take a look at the main method, where we have dynamically defined its value at the run by proving the value type, while creating the object of this class. This is how generics is interpreted by Kotlin compiler. We will get the following output in the browser, once we run this code in our coding ground.</p>\n<pre class=\"result notranslate\">\nI am getting called with the value JAVA\nI am getting called with the value 10\n</pre>\n<p>When we want to assign the generic type to any of its super type, then we need to use \u201cout\u201d keyword, and when we want to assign the generic type to any of its sub-type, then we need to use \u201cin\u201d keyword. In the following example, we will use \u201cout\u201d keyword. Similarly, you can try using \u201cin\u201d keyword.</p>\n<a class=\"demo\" href=\"http://tpcg.io/HWRSvq\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   var objet1 = genericsExample&lt;Int&gt;(10)\n   var object2 = genericsExample&lt;Double&gt;(10.00)\n   println(objet1)\n   println(object2)\n}\nclass genericsExample&lt;out T&gt;(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n</pre>\n<p>The above code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">\nI am getting called with the value 10\nI am getting called with the value 10.0\ngenericsExample@28d93b30\ngenericsExample@1b6d3586\n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_sealed_class.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_delegation.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/kotlin/kotlin_generics.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\">\n</img></a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/kotlin/kotlin_generics.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/kotlin/kotlin_generics.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/kotlin/kotlin_generics.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/kotlin/kotlin_generics.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/kotlin/kotlin_generics.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "title": "Kotlin - Generics", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>Kotlin - Generics</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_sealed_class.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_delegation.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>Like Java, Kotlin provides higher order of variable typing called as Generics. In this chapter, we will learn how Kotlin implements Generics and how as a developer we can use those functionalities provided inside the generics library. Implementation wise, generics is pretty similar to Java but Kotlin developer has introduced two new keywords <b>\u201cout\u201d</b> and <b>\u201cin\u201d</b> to make Kotlin codes more readable and easy for the developer.</p>\n<p>In Kotlin, a class and a type are totally different concepts. As per the example, List is a class in Kotlin, whereas List&lt;String&gt; is a type in Kotlin. The following example depicts how generics is implemented in Kotlin.</p>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   val integer: Int = 1\n   val number: Number = integer\n   print(number)\n}\n</pre>\n<p>In the above code, we have declared one \u201cinteger\u201d and later we have assigned that variable to a number variable. This is possible because \u201cInt\u201d is a subclass of Number class, hence the type conversion happens automatically at runtime and produces the output as \u201c1\u201d.</p>\n<p>Let us learn something more about generics in Kotlin. It is better to go for generic data type whenever we are not sure about the data type we are going to use in the application. Generally, in Kotlin generics is defined by <b>&lt;T&gt;</b> where \u201cT\u201d stands for template, which can be determined dynamically by Kotlin complier. In the following example, we will see how to use generic data types in Kotlin programming language.</p>\n<a class=\"demo\" href=\"http://tpcg.io/edI3jn\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   var objet = genericsExample&lt;String&gt;(\"JAVA\")\n   var objet1 = genericsExample&lt;Int&gt;(10)\n}\nclass genericsExample&lt;T&gt;(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n</pre>\n<p>In the above piece of code, we are creating one class with generic return type, which is represented as <b>&lt;T&gt;</b>. Take a look at the main method, where we have dynamically defined its value at the run by proving the value type, while creating the object of this class. This is how generics is interpreted by Kotlin compiler. We will get the following output in the browser, once we run this code in our coding ground.</p>\n<pre class=\"result notranslate\">\nI am getting called with the value JAVA\nI am getting called with the value 10\n</pre>\n<p>When we want to assign the generic type to any of its super type, then we need to use \u201cout\u201d keyword, and when we want to assign the generic type to any of its sub-type, then we need to use \u201cin\u201d keyword. In the following example, we will use \u201cout\u201d keyword. Similarly, you can try using \u201cin\u201d keyword.</p>\n<a class=\"demo\" href=\"http://tpcg.io/HWRSvq\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\nfun main(args: Array&lt;String&gt;) {\n   var objet1 = genericsExample&lt;Int&gt;(10)\n   var object2 = genericsExample&lt;Double&gt;(10.00)\n   println(objet1)\n   println(object2)\n}\nclass genericsExample&lt;out T&gt;(input:T) {\n   init {\n      println(\"I am getting called with the value \"+input)\n   }\n}\n</pre>\n<p>The above code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">\nI am getting called with the value 10\nI am getting called with the value 10.0\ngenericsExample@28d93b30\ngenericsExample@1b6d3586\n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_sealed_class.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_delegation.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>"}