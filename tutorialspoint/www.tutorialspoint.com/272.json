{"title_html": "<h1>Python - Regular Expressions</h1>", "content": "\n Python - Regular Expressions \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n A regular expression is a special sequence of characters that helps you match or find other strings or sets of strings, using a specialized syntax held in a pattern. Regular expressions are widely used in UNIX world. \n The module re provides full support for Perl-like regular expressions in Python. The re module raises the exception re.error if an error occurs while compiling or\nusing a regular expression. \n We would cover two important functions, which would be used to handle regular expressions. But a small thing first: There are various characters, which would have special meaning when they are used in regular expression. To avoid any confusion while dealing with regular expressions, we would use Raw Strings as r'expression'. \n The match Function \n This function attempts to match RE pattern to string with optional flags. \n Here is the syntax for this function \u2212 \n \nre.match(pattern, string, flags=0)\n \n Here is the description of the parameters \u2212 \n \n\nSr.No.\nParameter & Description\n\n\n1\npattern\nThis is the regular expression to be matched.\n\n\n2\nstring\nThis is the string, which would be searched to match the pattern at the beginning of string.\n\n\n3\nflags\nYou can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.\n\n \n The re.match function returns a match object on success, None on failure. We usegroup(num) or groups()  function of match object to get matched expression. \n \n\nSr.No.\nMatch Object Method & Description\n\n\n1\ngroup(num=0)\nThis method returns entire match (or specific subgroup num)\n\n\n2\ngroups()\nThis method returns all matching subgroups in a tuple (empty if there weren't any)\n\n \n Example \n  Live Demo \n \n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\"\n\nmatchObj = re.match( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif matchObj:\n   print \"matchObj.group() : \", matchObj.group()\n   print \"matchObj.group(1) : \", matchObj.group(1)\n   print \"matchObj.group(2) : \", matchObj.group(2)\nelse:\n   print \"No match!!\"\n \n When the above code is  executed, it produces following result \u2212 \n \nmatchObj.group() :  Cats are smarter than dogs\nmatchObj.group(1) :  Cats\nmatchObj.group(2) :  smarter\n \n The search Function \n This function searches for first occurrence of RE pattern within string with optional flags. \n Here is the syntax for this function \u2212 \n \nre.search(pattern, string, flags=0)\n \n Here is the description of the parameters \u2212 \n \n\nSr.No.\nParameter & Description\n\n\n1\npattern\nThis is the regular expression to be matched.\n\n\n2\nstring\nThis is the string, which would be searched to match the pattern anywhere in the string.\n\n\n3\nflags\nYou can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.\n\n \n The re.search function returns a match object on success, none on failure. We use group(num)  or groups()  function of match object to get matched expression. \n \n\nSr.No.\nMatch Object Methods & Description\n\n\n1\ngroup(num=0)\nThis method returns entire match (or specific subgroup num)\n\n\n2\ngroups()\nThis method returns all matching subgroups in a tuple (empty if there weren't any)\n\n \n Example \n  Live Demo \n \n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nsearchObj = re.search( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif searchObj:\n   print \"searchObj.group() : \", searchObj.group()\n   print \"searchObj.group(1) : \", searchObj.group(1)\n   print \"searchObj.group(2) : \", searchObj.group(2)\nelse:\n   print \"Nothing found!!\"\n \n When the above code is  executed, it produces following result \u2212 \n \nsearchObj.group() :  Cats are smarter than dogs\nsearchObj.group(1) :  Cats\nsearchObj.group(2) :  smarter\n \n Matching Versus Searching \n Python offers two different primitive operations based on regular expressions: match checks for a match only at the beginning of the string, while search checks for a match anywhere in the string (this is what Perl does by default). \n Example \n  Live Demo \n \n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nmatchObj = re.match( r'dogs', line, re.M|re.I)\nif matchObj:\n   print \"match --> matchObj.group() : \", matchObj.group()\nelse:\n   print \"No match!!\"\n\nsearchObj = re.search( r'dogs', line, re.M|re.I)\nif searchObj:\n   print \"search --> searchObj.group() : \", searchObj.group()\nelse:\n   print \"Nothing found!!\"\n \n When the above code is  executed, it produces the following result \u2212 \n \nNo match!!\nsearch --> matchObj.group() :  dogs\n \n Search and Replace \n One of the most important re methods that use regular expressions is sub. \n Syntax \n \nre.sub(pattern, repl, string, max=0)\n \n This method replaces all occurrences of the RE pattern in string with repl, substituting all occurrences unless max provided. This method returns modified string. \n Example \n  Live Demo \n \n#!/usr/bin/python\nimport re\n\nphone = \"2004-959-559 # This is Phone Number\"\n\n# Delete Python-style comments\nnum = re.sub(r'#.*$', \"\", phone)\nprint \"Phone Num : \", num\n\n# Remove anything other than digits\nnum = re.sub(r'\\D', \"\", phone)    \nprint \"Phone Num : \", num\n \n When the above code is  executed, it produces the following result \u2212 \n \nPhone Num :  2004-959-559\nPhone Num :  2004959559\n \n Regular Expression Modifiers: Option Flags \n Regular expression literals may include an optional modifier to control various aspects of matching. The modifiers are specified as an optional flag. You can provide multiple modifiers using exclusive OR (|), as shown previously and may be represented by one of these \u2212 \n \n\nSr.No.\nModifier & Description\n\n\n1\nre.I\nPerforms case-insensitive matching.\n\n\n2\nre.L\nInterprets words according to the current locale. This interpretation affects the alphabetic group (\\w and \\W), as well as word boundary behavior(\\b and \\B).\n\n\n3\nre.M\nMakes $ match the end of a line (not just the end of the string) and makes ^ match the start of any line (not just the start of the string).\n\n\n4\nre.S\nMakes a period (dot) match any character, including a newline.\n\n\n5\nre.U\nInterprets letters according to the Unicode character set. This flag affects the behavior of \\w, \\W, \\b, \\B.\n\n\n6\nre.X\nPermits \"cuter\" regular expression syntax. It ignores whitespace (except inside a set [] or when escaped by a backslash) and treats unescaped # as a comment marker.\n\n \n Regular Expression Patterns \n Except for control characters, (+ ? . * ^ $ ( ) [ ] { } | \\), all characters match themselves. You can escape a control character by preceding it with a backslash. \n Following table lists the regular expression syntax that is available in Python \u2212 \n \n\nSr.No.\nPattern & Description\n\n\n1\n^\nMatches beginning of line.\n\n\n2\n$\nMatches end of line.\n\n\n3\n.\nMatches any single character except newline. Using m option allows it to match newline as well.\n\n\n4\n[...]\nMatches any single character in brackets.\n\n\n5\n[^...]\nMatches any single character not in brackets\n\n\n6\nre*\nMatches 0 or more occurrences of preceding expression.\n\n\n7\nre+\nMatches 1 or more occurrence of preceding expression.\n\n\n8\nre?\nMatches 0 or 1 occurrence of preceding expression.\n\n\n9\nre{ n}\nMatches exactly n number of occurrences of preceding expression.\n\n\n10\nre{ n,}\nMatches n or more occurrences of preceding expression.\n\n\n11\nre{ n, m}\nMatches at least n and at most m occurrences of preceding expression.\n\n\n12\na| b\nMatches either a or b.\n\n\n13\n(re)\nGroups regular expressions and remembers matched text.\n\n\n14\n(?imx)\nTemporarily toggles on i, m, or x options within a regular expression. If in parentheses, only that area is affected.\n\n\n15\n(?-imx)\nTemporarily toggles off i, m, or x options within a regular expression. If in parentheses, only that area is affected.\n\n\n16\n(?: re)\nGroups regular expressions without remembering matched text.\n\n\n17\n(?imx: re)\nTemporarily toggles on i, m, or x options within parentheses.\n\n\n18\n(?-imx: re)\nTemporarily toggles off i, m, or x options within parentheses.\n\n\n19\n(?#...)\nComment.\n\n\n20\n(?= re)\nSpecifies position using a pattern. Doesn't have a range.\n\n\n21\n(?! re)\nSpecifies position using pattern negation. Doesn't have a range.\n\n\n22\n(?> re)\nMatches independent pattern without backtracking.\n\n\n23\n\\w\nMatches word characters.\n\n\n24\n\\W\nMatches nonword characters.\n\n\n25\n\\s\nMatches whitespace. Equivalent to [\\t\\n\\r\\f].\n\n\n26\n\\S\nMatches nonwhitespace.\n\n\n27\n\\d\nMatches digits. Equivalent to [0-9].\n\n\n28\n\\D\nMatches nondigits.\n\n\n29\n\\A\nMatches beginning of string.\n\n\n30\n\\Z\nMatches end of string. If a newline exists, it matches just before newline.\n\n\n31\n\\z\nMatches end of string.\n\n\n32\n\\G\nMatches point where last match finished.\n\n\n33\n\\b\nMatches word boundaries when outside brackets. Matches backspace (0x08) when inside brackets.\n\n\n34\n\\B\nMatches nonword boundaries.\n\n\n35\n\\n, \\t, etc.\nMatches newlines, carriage returns, tabs, etc.\n\n\n36\n\\1...\\9\nMatches nth grouped subexpression.\n\n\n37\n\\10\nMatches nth grouped subexpression if it matched already. Otherwise refers to the octal representation of a character code.\n\n \n Regular Expression Examples \n Literal characters \n \n\nSr.No.\nExample & Description\n\n\n1\npython\nMatch \"python\".\n\n \n Character classes \n \n\nSr.No.\nExample & Description\n\n\n1\n[Pp]ython\nMatch \"Python\" or \"python\"\n\n\n2\nrub[ye]\nMatch \"ruby\" or \"rube\"\n\n\n3\n[aeiou]\nMatch any one lowercase vowel\n\n\n4\n[0-9]\nMatch any digit; same as [0123456789]\n\n\n5\n[a-z]\nMatch any lowercase ASCII letter\n\n\n6\n[A-Z]\nMatch any uppercase ASCII letter\n\n\n7\n[a-zA-Z0-9]\nMatch any of the above\n\n\n8\n[^aeiou]\nMatch anything other than a lowercase vowel\n\n\n9\n[^0-9]\nMatch anything other than a digit\n\n \n Special Character Classes \n \n\nSr.No.\nExample & Description\n\n\n1\n.\nMatch any character except newline\n\n\n2\n\\d\nMatch a digit: [0-9]\n\n\n3\n\\D\nMatch a nondigit: [^0-9]\n\n\n4\n\\s\nMatch a whitespace character: [ \\t\\r\\n\\f]\n\n\n5\n\\S\nMatch nonwhitespace: [^ \\t\\r\\n\\f]\n\n\n6\n\\w\nMatch a single word character: [A-Za-z0-9_]\n\n\n7\n\\W\nMatch a nonword character: [^A-Za-z0-9_]\n\n \n Repetition Cases \n \n\nSr.No.\nExample & Description\n\n\n1\nruby?\nMatch \"rub\" or \"ruby\": the y is optional\n\n\n2\nruby*\nMatch \"rub\" plus 0 or more ys\n\n\n3\nruby+\nMatch \"rub\" plus 1 or more ys\n\n\n4\n\\d{3}\nMatch exactly 3 digits\n\n\n5\n\\d{3,}\nMatch 3 or more digits\n\n\n6\n\\d{3,5}\nMatch 3, 4, or 5 digits\n\n \n Nongreedy repetition \n This matches the smallest number of repetitions \u2212 \n \n\nSr.No.\nExample & Description\n\n\n1\n<.*>\nGreedy repetition: matches \"<python>perl>\"\n\n\n2\n<.*?>\nNongreedy: matches \"<python>\" in \"<python>perl>\"\n\n \n Grouping with Parentheses \n \n\nSr.No.\nExample & Description\n\n\n1\n\\D\\d+\nNo group: + repeats \\d\n\n\n2\n(\\D\\d)+\nGrouped: + repeats \\D\\d pair\n\n\n3\n([Pp]ython(, )?)+\nMatch \"Python\", \"Python, python, python\", etc.\n\n \n Backreferences \n This matches a previously matched group again \u2212 \n \n\nSr.No.\nExample & Description\n\n\n1\n([Pp])ython&\\1ails\nMatch python&pails or Python&Pails\n\n\n2\n(['\"])[^\\1]*\\1\nSingle or double-quoted string. \\1 matches whatever the 1st group matched. \\2 matches whatever the 2nd group matched, etc.\n\n \n Alternatives \n \n\nSr.No.\nExample & Description\n\n\n1\npython|perl\nMatch \"python\" or \"perl\"\n\n\n2\nrub(y|le))\nMatch \"ruby\" or \"ruble\"\n\n\n3\nPython(!+|\\?)\n\"Python\" followed by one or more ! or one ?\n\n \n Anchors \n This needs to specify match position. \n \n\nSr.No.\nExample & Description\n\n\n1\n^Python\nMatch \"Python\" at the start of a string or internal line\n\n\n2\nPython$\nMatch \"Python\" at the end of a string or line\n\n\n3\n\\APython\nMatch \"Python\" at the start of a string\n\n\n4\nPython\\Z\nMatch \"Python\" at the end of a string\n\n\n5\n\\bPython\\b\nMatch \"Python\" at a word boundary\n\n\n6\n\\brub\\B\n\\B is nonword boundary: match \"rub\" in \"rube\" and \"ruby\" but not alone\n\n\n7\nPython(?=!)\nMatch \"Python\", if followed by an exclamation point.\n\n\n8\nPython(?!!)\nMatch \"Python\", if not followed by an exclamation point.\n\n \n Special Syntax with Parentheses \n \n\nSr.No.\nExample & Description\n\n\n1\nR(?#comment)\nMatches \"R\". All the rest is a comment\n\n\n2\nR(?i)uby\nCase-insensitive while matching \"uby\"\n\n\n3\nR(?i:uby)\nSame as above\n\n\n4\nrub(?:y|le))\nGroup only without creating \\1 backreference\n\n \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "url": "https://www.tutorialspoint.com/python/python_reg_expressions.htm", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>Python Regular Expressions</title>\n<meta content=\"Python Regular Expressions - Learn Python in simple and easy steps starting from basic to advanced concepts with examples including Python Syntax Object Oriented Language, Methods, Tuples, Tools/Utilities, Exceptions Handling, Sockets, GUI, Extentions, XML Programming.\" name=\"description\">\n<meta content=\"Python, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Networking, Multithreading,Methods, Tuples, Tools/Utilities, Exceptions Handling, Sockets, GUI, Extentions, XML, Programming.\" name=\"Keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\npre.prettyprint.tryit {min-height:37px; background: #eee url(/python/images/try-it.jpg) top right no-repeat !important}select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #fdbf00 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #fdbf00 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #fdbf00 !important;}\r\n.submenu-item{ border-bottom: 2px solid #fdbf00 !important; border-top: 2px solid #fdbf00 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#fdbf00; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/python/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<style>\r\n.ts {\r\n   text-align:center !important;\r\n   vertical-align:middle !important;\r\n}\r\n</style>\n<div class=\"mini-logo\">\n<img alt=\"Python Tutorial\" src=\"/python/images/python-mini.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Python Basic Tutorial</li>\n<li><a href=\"/python/index.htm\" target=\"_top\">Python - Home</a></li>\n<li><a href=\"/python/python_overview.htm\" target=\"_top\">Python - Overview</a></li>\n<li><a href=\"/python/python_environment.htm\" target=\"_top\">Python - Environment Setup</a></li>\n<li><a href=\"/python/python_basic_syntax.htm\" target=\"_top\">Python - Basic Syntax</a></li>\n<li><a href=\"/python/python_variable_types.htm\" target=\"_top\">Python - Variable Types</a></li>\n<li><a href=\"/python/python_basic_operators.htm\" target=\"_top\">Python - Basic Operators</a></li>\n<li><a href=\"/python/python_decision_making.htm\" target=\"_top\">Python - Decision Making</a></li>\n<li><a href=\"/python/python_loops.htm\" target=\"_top\">Python - Loops</a></li>\n<li><a href=\"/python/python_numbers.htm\" target=\"_top\">Python - Numbers</a></li>\n<li><a href=\"/python/python_strings.htm\" target=\"_top\">Python - Strings</a></li>\n<li><a href=\"/python/python_lists.htm\" target=\"_top\">Python - Lists</a></li>\n<li><a href=\"/python/python_tuples.htm\" target=\"_top\">Python - Tuples</a></li>\n<li><a href=\"/python/python_dictionary.htm\" target=\"_top\">Python - Dictionary</a></li>\n<li><a href=\"/python/python_date_time.htm\" target=\"_top\">Python - Date &amp; Time</a></li>\n<li><a href=\"/python/python_functions.htm\" target=\"_top\">Python - Functions</a></li>\n<li><a href=\"/python/python_modules.htm\" target=\"_top\">Python - Modules</a></li>\n<li><a href=\"/python/python_files_io.htm\" target=\"_top\">Python - Files I/O</a></li>\n<li><a href=\"/python/python_exceptions.htm\" target=\"_top\">Python - Exceptions</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Python Advanced Tutorial</li>\n<li><a href=\"/python/python_classes_objects.htm\" target=\"_top\">Python - Classes/Objects</a></li>\n<li><a href=\"/python/python_reg_expressions.htm\" target=\"_top\">Python - Reg Expressions</a></li>\n<li><a href=\"/python/python_cgi_programming.htm\" target=\"_top\">Python - CGI Programming</a></li>\n<li><a href=\"/python/python_database_access.htm\" target=\"_top\">Python - Database Access</a></li>\n<li><a href=\"/python/python_networking.htm\" target=\"_top\">Python - Networking</a></li>\n<li><a href=\"/python/python_sending_email.htm\" target=\"_top\">Python - Sending Email</a></li>\n<li><a href=\"/python/python_multithreading.htm\" target=\"_top\">Python - Multithreading</a></li>\n<li><a href=\"/python/python_xml_processing.htm\" target=\"_top\">Python - XML Processing</a></li>\n<li><a href=\"/python/python_gui_programming.htm\" target=\"_top\">Python - GUI Programming</a></li>\n<li><a href=\"/python/python_further_extensions.htm\" target=\"_top\">Python - Further Extensions</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Python  Useful Resources</li>\n<li><a href=\"/python/python_questions_answers.htm\" target=\"_top\">Python - Questions and Answers</a></li>\n<li><a href=\"/python/python_quick_guide.htm\" target=\"_top\">Python - Quick Guide</a></li>\n<li><a href=\"/python/python_tools_utilities.htm\" target=\"_top\">Python - Tools/Utilities</a></li>\n<li><a href=\"/python/python_useful_resources.htm\" target=\"_top\">Python - Useful Resources</a></li>\n<li><a href=\"/python/python_discussion.htm\" target=\"_top\">Python - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>Python - Regular Expressions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/python/python_classes_objects.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/python/python_cgi_programming.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>A <i>regular expression</i> is a special sequence of characters that helps you match or find other strings or sets of strings, using a specialized syntax held in a pattern. Regular expressions are widely used in UNIX world.</p>\n<p>The module <b>re</b> provides full support for Perl-like regular expressions in Python. The re module raises the exception re.error if an error occurs while compiling or\nusing a regular expression.</p>\n<p>We would cover two important functions, which would be used to handle regular expressions. But a small thing first: There are various characters, which would have special meaning when they are used in regular expression. To avoid any confusion while dealing with regular expressions, we would use Raw Strings as <b>r'expression'</b>.</p>\n<h2>The <i>match</i> Function</h2>\n<p>This function attempts to match RE <i>pattern</i> to <i>string</i> with optional <i>flags</i>.</p>\n<p>Here is the syntax for this function \u2212</p>\n<pre class=\"result notranslate\">\nre.match(pattern, string, flags=0)\n</pre>\n<p>Here is the description of the parameters \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Parameter &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>pattern</b></p>\n<p>This is the regular expression to be matched.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>string</b></p>\n<p>This is the string, which would be searched to match the pattern at the beginning of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>flags</b></p>\n<p>You can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.</p></td>\n</tr>\n</table>\n<p>The <i>re.match</i> function returns a <b>match</b> object on success, <b>None</b> on failure. We use<i>group(num)</i> or <i>groups() </i> function of <b>match</b> object to get matched expression.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Match Object Method &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>group(num=0)</b></p>\n<p>This method returns entire match (or specific subgroup num)</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>groups()</b></p>\n<p>This method returns all matching subgroups in a tuple (empty if there weren't any)</p></td>\n</tr>\n</table>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/cZGpLX\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\"\n\nmatchObj = re.match( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif matchObj:\n   print \"matchObj.group() : \", matchObj.group()\n   print \"matchObj.group(1) : \", matchObj.group(1)\n   print \"matchObj.group(2) : \", matchObj.group(2)\nelse:\n   print \"No match!!\"\n</pre>\n<p>When the above code is  executed, it produces following result \u2212</p>\n<pre class=\"result notranslate\">\nmatchObj.group() :  Cats are smarter than dogs\nmatchObj.group(1) :  Cats\nmatchObj.group(2) :  smarter\n</pre>\n<h2>The <i>search</i> Function</h2>\n<p>This function searches for first occurrence of RE <i>pattern</i> within <i>string</i> with optional <i>flags</i>.</p>\n<p>Here is the syntax for this function \u2212</p>\n<pre class=\"result notranslate\">\nre.search(pattern, string, flags=0)\n</pre>\n<p>Here is the description of the parameters \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Parameter &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>pattern</b></p>\n<p>This is the regular expression to be matched.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>string</b></p>\n<p>This is the string, which would be searched to match the pattern anywhere in the string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>flags</b></p>\n<p>You can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.</p></td>\n</tr>\n</table>\n<p>The <i>re.search</i> function returns a <b>match</b> object on success, <b>none</b> on failure. We use <i>group(num) </i> or <i>groups() </i> function of <b>match</b> object to get matched expression.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Match Object Methods &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>group(num=0)</b></p>\n<p>This method returns entire match (or specific subgroup num)</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>groups()</b></p>\n<p>This method returns all matching subgroups in a tuple (empty if there weren't any)</p></td>\n</tr>\n</table>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/WE021A\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nsearchObj = re.search( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif searchObj:\n   print \"searchObj.group() : \", searchObj.group()\n   print \"searchObj.group(1) : \", searchObj.group(1)\n   print \"searchObj.group(2) : \", searchObj.group(2)\nelse:\n   print \"Nothing found!!\"\n</pre>\n<p>When the above code is  executed, it produces following result \u2212</p>\n<pre class=\"result notranslate\">\nsearchObj.group() :  Cats are smarter than dogs\nsearchObj.group(1) :  Cats\nsearchObj.group(2) :  smarter\n</pre>\n<h2>Matching Versus Searching</h2>\n<p>Python offers two different primitive operations based on regular expressions: <b>match</b> checks for a match only at the beginning of the string, while <b>search</b> checks for a match anywhere in the string (this is what Perl does by default).</p>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/1VpZ8k\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nmatchObj = re.match( r'dogs', line, re.M|re.I)\nif matchObj:\n   print \"match --&gt; matchObj.group() : \", matchObj.group()\nelse:\n   print \"No match!!\"\n\nsearchObj = re.search( r'dogs', line, re.M|re.I)\nif searchObj:\n   print \"search --&gt; searchObj.group() : \", searchObj.group()\nelse:\n   print \"Nothing found!!\"\n</pre>\n<p>When the above code is  executed, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nNo match!!\nsearch --&gt; matchObj.group() :  dogs\n</pre>\n<h2>Search and Replace</h2>\n<p>One of the most important <b>re</b> methods that use regular expressions is <b>sub</b>.</p>\n<h3>Syntax</h3>\n<pre class=\"result notranslate\">\nre.sub(pattern, repl, string, max=0)\n</pre>\n<p>This method replaces all occurrences of the RE <i>pattern</i> in <i>string</i> with <i>repl</i>, substituting all occurrences unless <i>max</i> provided. This method returns modified string.</p>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/jVaoEQ\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nphone = \"2004-959-559 # This is Phone Number\"\n\n# Delete Python-style comments\nnum = re.sub(r'#.*$', \"\", phone)\nprint \"Phone Num : \", num\n\n# Remove anything other than digits\nnum = re.sub(r'\\D', \"\", phone)    \nprint \"Phone Num : \", num\n</pre>\n<p>When the above code is  executed, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPhone Num :  2004-959-559\nPhone Num :  2004959559\n</pre>\n<h2>Regular Expression Modifiers: Option Flags</h2>\n<p>Regular expression literals may include an optional modifier to control various aspects of matching. The modifiers are specified as an optional flag. You can provide multiple modifiers using exclusive OR (|), as shown previously and may be represented by one of these \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Modifier &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>re.I</b></p>\n<p>Performs case-insensitive matching.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>re.L</b></p>\n<p>Interprets words according to the current locale. This interpretation affects the alphabetic group (\\w and \\W), as well as word boundary behavior(\\b and \\B).</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>re.M</b></p>\n<p>Makes $ match the end of a line (not just the end of the string) and makes ^ match the start of any line (not just the start of the string).</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>re.S</b></p>\n<p>Makes a period (dot) match any character, including a newline.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>re.U</b></p>\n<p>Interprets letters according to the Unicode character set. This flag affects the behavior of \\w, \\W, \\b, \\B.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>re.X</b></p>\n<p>Permits \"cuter\" regular expression syntax. It ignores whitespace (except inside a set [] or when escaped by a backslash) and treats unescaped # as a comment marker.</p></td>\n</tr>\n</table>\n<h2>Regular Expression Patterns</h2>\n<p>Except for control characters, <b>(+ ? . * ^ $ ( ) [ ] { } | \\)</b>, all characters match themselves. You can escape a control character by preceding it with a backslash.</p>\n<p>Following table lists the regular expression syntax that is available in Python \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Pattern &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>^</b></p>\n<p>Matches beginning of line.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>$</b></p>\n<p>Matches end of line.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>.</b></p>\n<p>Matches any single character except newline. Using m option allows it to match newline as well.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>[...]</b></p>\n<p>Matches any single character in brackets.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>[^...]</b></p>\n<p>Matches any single character not in brackets</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>re*</b></p>\n<p>Matches 0 or more occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>re+</b></p>\n<p>Matches 1 or more occurrence of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>re?</b></p>\n<p>Matches 0 or 1 occurrence of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>re{ n}</b></p>\n<p>Matches exactly n number of occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>re{ n,}</b></p>\n<p>Matches n or more occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><p><b>re{ n, m}</b></p>\n<p>Matches at least n and at most m occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">12</td>\n<td><p><b>a| b</b></p>\n<p>Matches either a or b.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">13</td>\n<td><p><b>(re)</b></p>\n<p>Groups regular expressions and remembers matched text.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">14</td>\n<td><p><b>(?imx)</b></p>\n<p>Temporarily toggles on i, m, or x options within a regular expression. If in parentheses, only that area is affected.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">15</td>\n<td><p><b>(?-imx)</b></p>\n<p>Temporarily toggles off i, m, or x options within a regular expression. If in parentheses, only that area is affected.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">16</td>\n<td><p><b>(?: re)</b></p>\n<p>Groups regular expressions without remembering matched text.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">17</td>\n<td><p><b>(?imx: re)</b></p>\n<p>Temporarily toggles on i, m, or x options within parentheses.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">18</td>\n<td><p><b>(?-imx: re)</b></p>\n<p>Temporarily toggles off i, m, or x options within parentheses.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">19</td>\n<td><p><b>(?#...)</b></p>\n<p>Comment.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">20</td>\n<td><p><b>(?= re)</b></p>\n<p>Specifies position using a pattern. Doesn't have a range.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">21</td>\n<td><p><b>(?! re)</b></p>\n<p>Specifies position using pattern negation. Doesn't have a range.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">22</td>\n<td><p><b>(?&gt; re)</b></p>\n<p>Matches independent pattern without backtracking.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">23</td>\n<td><p><b>\\w</b></p>\n<p>Matches word characters.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">24</td>\n<td><p><b>\\W</b></p>\n<p>Matches nonword characters.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">25</td>\n<td><p><b>\\s</b></p>\n<p>Matches whitespace. Equivalent to [\\t\\n\\r\\f].</p></td>\n</tr>\n<tr>\n<td class=\"ts\">26</td>\n<td><p><b>\\S</b></p>\n<p>Matches nonwhitespace.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">27</td>\n<td><p><b>\\d</b></p>\n<p>Matches digits. Equivalent to [0-9].</p></td>\n</tr>\n<tr>\n<td class=\"ts\">28</td>\n<td><p><b>\\D</b></p>\n<p>Matches nondigits.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">29</td>\n<td><p><b>\\A</b></p>\n<p>Matches beginning of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">30</td>\n<td><p><b>\\Z</b></p>\n<p>Matches end of string. If a newline exists, it matches just before newline.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">31</td>\n<td><p><b>\\z</b></p>\n<p>Matches end of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">32</td>\n<td><p><b>\\G</b></p>\n<p>Matches point where last match finished.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">33</td>\n<td><p><b>\\b</b></p>\n<p>Matches word boundaries when outside brackets. Matches backspace (0x08) when inside brackets.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">34</td>\n<td><p><b>\\B</b></p>\n<p>Matches nonword boundaries.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">35</td>\n<td><p><b>\\n, \\t, etc.</b></p>\n<p>Matches newlines, carriage returns, tabs, etc.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">36</td>\n<td><p><b>\\1...\\9</b></p>\n<p>Matches nth grouped subexpression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">37</td>\n<td><p><b>\\10</b></p>\n<p>Matches nth grouped subexpression if it matched already. Otherwise refers to the octal representation of a character code.</p></td>\n</tr>\n</table>\n<h2>Regular Expression Examples</h2>\n<h3>Literal characters</h3>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>python</b></p>\n<p>Match \"python\".</p></td>\n</tr>\n</table>\n<h2>Character classes</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>[Pp]ython</b></p>\n<p>Match \"Python\" or \"python\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>rub[ye]</b></p>\n<p>Match \"ruby\" or \"rube\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>[aeiou]</b></p>\n<p>Match any one lowercase vowel</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>[0-9]</b></p>\n<p>Match any digit; same as [0123456789]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>[a-z]</b></p>\n<p>Match any lowercase ASCII letter</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>[A-Z]</b></p>\n<p>Match any uppercase ASCII letter</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>[a-zA-Z0-9]</b></p>\n<p>Match any of the above</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>[^aeiou]</b></p>\n<p>Match anything other than a lowercase vowel</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>[^0-9]</b></p>\n<p>Match anything other than a digit</p></td>\n</tr>\n</table>\n<h2>Special Character Classes</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>.</b></p>\n<p>Match any character except newline</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>\\d</b></p>\n<p>Match a digit: [0-9]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>\\D</b></p>\n<p>Match a nondigit: [^0-9]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>\\s</b></p>\n<p>Match a whitespace character: [ \\t\\r\\n\\f]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\S</b></p>\n<p>Match nonwhitespace: [^ \\t\\r\\n\\f]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\w</b></p>\n<p>Match a single word character: [A-Za-z0-9_]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>\\W</b></p>\n<p>Match a nonword character: [^A-Za-z0-9_]</p></td>\n</tr>\n</table>\n<h2>Repetition Cases</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ruby?</b></p>\n<p>Match \"rub\" or \"ruby\": the y is optional</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ruby*</b></p>\n<p>Match \"rub\" plus 0 or more ys</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ruby+</b></p>\n<p>Match \"rub\" plus 1 or more ys</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>\\d{3}</b></p>\n<p>Match exactly 3 digits</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\d{3,}</b></p>\n<p>Match 3 or more digits</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\d{3,5}</b></p>\n<p>Match 3, 4, or 5 digits</p></td>\n</tr>\n</table>\n<h2>Nongreedy repetition</h2>\n<p>This matches the smallest number of repetitions \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>&lt;.*&gt;</b></p>\n<p>Greedy repetition: matches \"&lt;python&gt;perl&gt;\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>&lt;.*?&gt;</b></p>\n<p>Nongreedy: matches \"&lt;python&gt;\" in \"&lt;python&gt;perl&gt;\"</p></td>\n</tr>\n</table>\n<h2>Grouping with Parentheses</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>\\D\\d+</b></p>\n<p>No group: + repeats \\d</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>(\\D\\d)+</b></p>\n<p>Grouped: + repeats \\D\\d pair</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>([Pp]ython(, )?)+</b></p>\n<p>Match \"Python\", \"Python, python, python\", etc.</p></td>\n</tr>\n</table>\n<h2>Backreferences</h2>\n<p>This matches a previously matched group again \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>([Pp])ython&amp;\\1ails</b></p>\n<p>Match python&amp;pails or Python&amp;Pails</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>(['\"])[^\\1]*\\1</b></p>\n<p>Single or double-quoted string. \\1 matches whatever the 1st group matched. \\2 matches whatever the 2nd group matched, etc.</p></td>\n</tr>\n</table>\n<h2>Alternatives</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>python|perl</b></p>\n<p>Match \"python\" or \"perl\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>rub(y|le))</b></p>\n<p>Match \"ruby\" or \"ruble\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>Python(!+|\\?)</b></p>\n<p>\"Python\" followed by one or more ! or one ?</p></td>\n</tr>\n</table>\n<h2>Anchors</h2>\n<p>This needs to specify match position.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>^Python</b></p>\n<p>Match \"Python\" at the start of a string or internal line</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>Python$</b></p>\n<p>Match \"Python\" at the end of a string or line</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>\\APython</b></p>\n<p>Match \"Python\" at the start of a string</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>Python\\Z</b></p>\n<p>Match \"Python\" at the end of a string</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\bPython\\b</b></p>\n<p>Match \"Python\" at a word boundary</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\brub\\B</b></p>\n<p>\\B is nonword boundary: match \"rub\" in \"rube\" and \"ruby\" but not alone</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>Python(?=!)</b></p>\n<p>Match \"Python\", if followed by an exclamation point.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>Python(?!!)</b></p>\n<p>Match \"Python\", if not followed by an exclamation point.</p></td>\n</tr>\n</table>\n<h2>Special Syntax with Parentheses</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>R(?#comment)</b></p>\n<p>Matches \"R\". All the rest is a comment</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>R(?i)uby</b></p>\n<p>Case-insensitive while matching \"uby\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>R(?i:uby)</b></p>\n<p>Same as above</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>rub(?:y|le))</b></p>\n<p>Group only without creating \\1 backreference</p></td>\n</tr>\n</table>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/python/python_classes_objects.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/python/python_cgi_programming.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/python/python_reg_expressions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\">\n</img></a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/python/python_reg_expressions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/python/python_reg_expressions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/python/python_reg_expressions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/python/python_reg_expressions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/python/python_reg_expressions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n<script src=\"/theme/js/jquery.colorbox-min.js\"></script>\n<script>\n   var tryit = new $.TryIt('/python/try_python.php');\n   tryit.compile();\n</script>\n\n\n", "title": "Python - Regular Expressions", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>Python - Regular Expressions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/python/python_classes_objects.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/python/python_cgi_programming.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>A <i>regular expression</i> is a special sequence of characters that helps you match or find other strings or sets of strings, using a specialized syntax held in a pattern. Regular expressions are widely used in UNIX world.</p>\n<p>The module <b>re</b> provides full support for Perl-like regular expressions in Python. The re module raises the exception re.error if an error occurs while compiling or\nusing a regular expression.</p>\n<p>We would cover two important functions, which would be used to handle regular expressions. But a small thing first: There are various characters, which would have special meaning when they are used in regular expression. To avoid any confusion while dealing with regular expressions, we would use Raw Strings as <b>r'expression'</b>.</p>\n<h2>The <i>match</i> Function</h2>\n<p>This function attempts to match RE <i>pattern</i> to <i>string</i> with optional <i>flags</i>.</p>\n<p>Here is the syntax for this function \u2212</p>\n<pre class=\"result notranslate\">\nre.match(pattern, string, flags=0)\n</pre>\n<p>Here is the description of the parameters \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Parameter &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>pattern</b></p>\n<p>This is the regular expression to be matched.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>string</b></p>\n<p>This is the string, which would be searched to match the pattern at the beginning of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>flags</b></p>\n<p>You can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.</p></td>\n</tr>\n</table>\n<p>The <i>re.match</i> function returns a <b>match</b> object on success, <b>None</b> on failure. We use<i>group(num)</i> or <i>groups() </i> function of <b>match</b> object to get matched expression.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Match Object Method &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>group(num=0)</b></p>\n<p>This method returns entire match (or specific subgroup num)</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>groups()</b></p>\n<p>This method returns all matching subgroups in a tuple (empty if there weren't any)</p></td>\n</tr>\n</table>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/cZGpLX\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\"\n\nmatchObj = re.match( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif matchObj:\n   print \"matchObj.group() : \", matchObj.group()\n   print \"matchObj.group(1) : \", matchObj.group(1)\n   print \"matchObj.group(2) : \", matchObj.group(2)\nelse:\n   print \"No match!!\"\n</pre>\n<p>When the above code is  executed, it produces following result \u2212</p>\n<pre class=\"result notranslate\">\nmatchObj.group() :  Cats are smarter than dogs\nmatchObj.group(1) :  Cats\nmatchObj.group(2) :  smarter\n</pre>\n<h2>The <i>search</i> Function</h2>\n<p>This function searches for first occurrence of RE <i>pattern</i> within <i>string</i> with optional <i>flags</i>.</p>\n<p>Here is the syntax for this function \u2212</p>\n<pre class=\"result notranslate\">\nre.search(pattern, string, flags=0)\n</pre>\n<p>Here is the description of the parameters \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Parameter &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>pattern</b></p>\n<p>This is the regular expression to be matched.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>string</b></p>\n<p>This is the string, which would be searched to match the pattern anywhere in the string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>flags</b></p>\n<p>You can specify different flags using bitwise OR (|). These are modifiers, which are listed in the table below.</p></td>\n</tr>\n</table>\n<p>The <i>re.search</i> function returns a <b>match</b> object on success, <b>none</b> on failure. We use <i>group(num) </i> or <i>groups() </i> function of <b>match</b> object to get matched expression.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Match Object Methods &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>group(num=0)</b></p>\n<p>This method returns entire match (or specific subgroup num)</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>groups()</b></p>\n<p>This method returns all matching subgroups in a tuple (empty if there weren't any)</p></td>\n</tr>\n</table>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/WE021A\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nsearchObj = re.search( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif searchObj:\n   print \"searchObj.group() : \", searchObj.group()\n   print \"searchObj.group(1) : \", searchObj.group(1)\n   print \"searchObj.group(2) : \", searchObj.group(2)\nelse:\n   print \"Nothing found!!\"\n</pre>\n<p>When the above code is  executed, it produces following result \u2212</p>\n<pre class=\"result notranslate\">\nsearchObj.group() :  Cats are smarter than dogs\nsearchObj.group(1) :  Cats\nsearchObj.group(2) :  smarter\n</pre>\n<h2>Matching Versus Searching</h2>\n<p>Python offers two different primitive operations based on regular expressions: <b>match</b> checks for a match only at the beginning of the string, while <b>search</b> checks for a match anywhere in the string (this is what Perl does by default).</p>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/1VpZ8k\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nline = \"Cats are smarter than dogs\";\n\nmatchObj = re.match( r'dogs', line, re.M|re.I)\nif matchObj:\n   print \"match --&gt; matchObj.group() : \", matchObj.group()\nelse:\n   print \"No match!!\"\n\nsearchObj = re.search( r'dogs', line, re.M|re.I)\nif searchObj:\n   print \"search --&gt; searchObj.group() : \", searchObj.group()\nelse:\n   print \"Nothing found!!\"\n</pre>\n<p>When the above code is  executed, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nNo match!!\nsearch --&gt; matchObj.group() :  dogs\n</pre>\n<h2>Search and Replace</h2>\n<p>One of the most important <b>re</b> methods that use regular expressions is <b>sub</b>.</p>\n<h3>Syntax</h3>\n<pre class=\"result notranslate\">\nre.sub(pattern, repl, string, max=0)\n</pre>\n<p>This method replaces all occurrences of the RE <i>pattern</i> in <i>string</i> with <i>repl</i>, substituting all occurrences unless <i>max</i> provided. This method returns modified string.</p>\n<h3>Example</h3>\n<a class=\"demo\" href=\"http://tpcg.io/jVaoEQ\" rel=\"nofollow\" target=\"_blank\"><i class=\"fa-external-link\"></i> Live Demo</a>\n<pre class=\"prettyprint notranslate\">\n#!/usr/bin/python\nimport re\n\nphone = \"2004-959-559 # This is Phone Number\"\n\n# Delete Python-style comments\nnum = re.sub(r'#.*$', \"\", phone)\nprint \"Phone Num : \", num\n\n# Remove anything other than digits\nnum = re.sub(r'\\D', \"\", phone)    \nprint \"Phone Num : \", num\n</pre>\n<p>When the above code is  executed, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPhone Num :  2004-959-559\nPhone Num :  2004959559\n</pre>\n<h2>Regular Expression Modifiers: Option Flags</h2>\n<p>Regular expression literals may include an optional modifier to control various aspects of matching. The modifiers are specified as an optional flag. You can provide multiple modifiers using exclusive OR (|), as shown previously and may be represented by one of these \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Modifier &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>re.I</b></p>\n<p>Performs case-insensitive matching.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>re.L</b></p>\n<p>Interprets words according to the current locale. This interpretation affects the alphabetic group (\\w and \\W), as well as word boundary behavior(\\b and \\B).</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>re.M</b></p>\n<p>Makes $ match the end of a line (not just the end of the string) and makes ^ match the start of any line (not just the start of the string).</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>re.S</b></p>\n<p>Makes a period (dot) match any character, including a newline.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>re.U</b></p>\n<p>Interprets letters according to the Unicode character set. This flag affects the behavior of \\w, \\W, \\b, \\B.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>re.X</b></p>\n<p>Permits \"cuter\" regular expression syntax. It ignores whitespace (except inside a set [] or when escaped by a backslash) and treats unescaped # as a comment marker.</p></td>\n</tr>\n</table>\n<h2>Regular Expression Patterns</h2>\n<p>Except for control characters, <b>(+ ? . * ^ $ ( ) [ ] { } | \\)</b>, all characters match themselves. You can escape a control character by preceding it with a backslash.</p>\n<p>Following table lists the regular expression syntax that is available in Python \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Pattern &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>^</b></p>\n<p>Matches beginning of line.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>$</b></p>\n<p>Matches end of line.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>.</b></p>\n<p>Matches any single character except newline. Using m option allows it to match newline as well.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>[...]</b></p>\n<p>Matches any single character in brackets.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>[^...]</b></p>\n<p>Matches any single character not in brackets</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>re*</b></p>\n<p>Matches 0 or more occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>re+</b></p>\n<p>Matches 1 or more occurrence of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>re?</b></p>\n<p>Matches 0 or 1 occurrence of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>re{ n}</b></p>\n<p>Matches exactly n number of occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>re{ n,}</b></p>\n<p>Matches n or more occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><p><b>re{ n, m}</b></p>\n<p>Matches at least n and at most m occurrences of preceding expression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">12</td>\n<td><p><b>a| b</b></p>\n<p>Matches either a or b.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">13</td>\n<td><p><b>(re)</b></p>\n<p>Groups regular expressions and remembers matched text.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">14</td>\n<td><p><b>(?imx)</b></p>\n<p>Temporarily toggles on i, m, or x options within a regular expression. If in parentheses, only that area is affected.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">15</td>\n<td><p><b>(?-imx)</b></p>\n<p>Temporarily toggles off i, m, or x options within a regular expression. If in parentheses, only that area is affected.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">16</td>\n<td><p><b>(?: re)</b></p>\n<p>Groups regular expressions without remembering matched text.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">17</td>\n<td><p><b>(?imx: re)</b></p>\n<p>Temporarily toggles on i, m, or x options within parentheses.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">18</td>\n<td><p><b>(?-imx: re)</b></p>\n<p>Temporarily toggles off i, m, or x options within parentheses.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">19</td>\n<td><p><b>(?#...)</b></p>\n<p>Comment.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">20</td>\n<td><p><b>(?= re)</b></p>\n<p>Specifies position using a pattern. Doesn't have a range.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">21</td>\n<td><p><b>(?! re)</b></p>\n<p>Specifies position using pattern negation. Doesn't have a range.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">22</td>\n<td><p><b>(?&gt; re)</b></p>\n<p>Matches independent pattern without backtracking.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">23</td>\n<td><p><b>\\w</b></p>\n<p>Matches word characters.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">24</td>\n<td><p><b>\\W</b></p>\n<p>Matches nonword characters.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">25</td>\n<td><p><b>\\s</b></p>\n<p>Matches whitespace. Equivalent to [\\t\\n\\r\\f].</p></td>\n</tr>\n<tr>\n<td class=\"ts\">26</td>\n<td><p><b>\\S</b></p>\n<p>Matches nonwhitespace.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">27</td>\n<td><p><b>\\d</b></p>\n<p>Matches digits. Equivalent to [0-9].</p></td>\n</tr>\n<tr>\n<td class=\"ts\">28</td>\n<td><p><b>\\D</b></p>\n<p>Matches nondigits.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">29</td>\n<td><p><b>\\A</b></p>\n<p>Matches beginning of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">30</td>\n<td><p><b>\\Z</b></p>\n<p>Matches end of string. If a newline exists, it matches just before newline.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">31</td>\n<td><p><b>\\z</b></p>\n<p>Matches end of string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">32</td>\n<td><p><b>\\G</b></p>\n<p>Matches point where last match finished.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">33</td>\n<td><p><b>\\b</b></p>\n<p>Matches word boundaries when outside brackets. Matches backspace (0x08) when inside brackets.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">34</td>\n<td><p><b>\\B</b></p>\n<p>Matches nonword boundaries.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">35</td>\n<td><p><b>\\n, \\t, etc.</b></p>\n<p>Matches newlines, carriage returns, tabs, etc.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">36</td>\n<td><p><b>\\1...\\9</b></p>\n<p>Matches nth grouped subexpression.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">37</td>\n<td><p><b>\\10</b></p>\n<p>Matches nth grouped subexpression if it matched already. Otherwise refers to the octal representation of a character code.</p></td>\n</tr>\n</table>\n<h2>Regular Expression Examples</h2>\n<h3>Literal characters</h3>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>python</b></p>\n<p>Match \"python\".</p></td>\n</tr>\n</table>\n<h2>Character classes</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>[Pp]ython</b></p>\n<p>Match \"Python\" or \"python\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>rub[ye]</b></p>\n<p>Match \"ruby\" or \"rube\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>[aeiou]</b></p>\n<p>Match any one lowercase vowel</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>[0-9]</b></p>\n<p>Match any digit; same as [0123456789]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>[a-z]</b></p>\n<p>Match any lowercase ASCII letter</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>[A-Z]</b></p>\n<p>Match any uppercase ASCII letter</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>[a-zA-Z0-9]</b></p>\n<p>Match any of the above</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>[^aeiou]</b></p>\n<p>Match anything other than a lowercase vowel</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>[^0-9]</b></p>\n<p>Match anything other than a digit</p></td>\n</tr>\n</table>\n<h2>Special Character Classes</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>.</b></p>\n<p>Match any character except newline</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>\\d</b></p>\n<p>Match a digit: [0-9]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>\\D</b></p>\n<p>Match a nondigit: [^0-9]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>\\s</b></p>\n<p>Match a whitespace character: [ \\t\\r\\n\\f]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\S</b></p>\n<p>Match nonwhitespace: [^ \\t\\r\\n\\f]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\w</b></p>\n<p>Match a single word character: [A-Za-z0-9_]</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>\\W</b></p>\n<p>Match a nonword character: [^A-Za-z0-9_]</p></td>\n</tr>\n</table>\n<h2>Repetition Cases</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ruby?</b></p>\n<p>Match \"rub\" or \"ruby\": the y is optional</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ruby*</b></p>\n<p>Match \"rub\" plus 0 or more ys</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ruby+</b></p>\n<p>Match \"rub\" plus 1 or more ys</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>\\d{3}</b></p>\n<p>Match exactly 3 digits</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\d{3,}</b></p>\n<p>Match 3 or more digits</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\d{3,5}</b></p>\n<p>Match 3, 4, or 5 digits</p></td>\n</tr>\n</table>\n<h2>Nongreedy repetition</h2>\n<p>This matches the smallest number of repetitions \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>&lt;.*&gt;</b></p>\n<p>Greedy repetition: matches \"&lt;python&gt;perl&gt;\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>&lt;.*?&gt;</b></p>\n<p>Nongreedy: matches \"&lt;python&gt;\" in \"&lt;python&gt;perl&gt;\"</p></td>\n</tr>\n</table>\n<h2>Grouping with Parentheses</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>\\D\\d+</b></p>\n<p>No group: + repeats \\d</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>(\\D\\d)+</b></p>\n<p>Grouped: + repeats \\D\\d pair</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>([Pp]ython(, )?)+</b></p>\n<p>Match \"Python\", \"Python, python, python\", etc.</p></td>\n</tr>\n</table>\n<h2>Backreferences</h2>\n<p>This matches a previously matched group again \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>([Pp])ython&amp;\\1ails</b></p>\n<p>Match python&amp;pails or Python&amp;Pails</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>(['\"])[^\\1]*\\1</b></p>\n<p>Single or double-quoted string. \\1 matches whatever the 1st group matched. \\2 matches whatever the 2nd group matched, etc.</p></td>\n</tr>\n</table>\n<h2>Alternatives</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>python|perl</b></p>\n<p>Match \"python\" or \"perl\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>rub(y|le))</b></p>\n<p>Match \"ruby\" or \"ruble\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>Python(!+|\\?)</b></p>\n<p>\"Python\" followed by one or more ! or one ?</p></td>\n</tr>\n</table>\n<h2>Anchors</h2>\n<p>This needs to specify match position.</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>^Python</b></p>\n<p>Match \"Python\" at the start of a string or internal line</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>Python$</b></p>\n<p>Match \"Python\" at the end of a string or line</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>\\APython</b></p>\n<p>Match \"Python\" at the start of a string</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>Python\\Z</b></p>\n<p>Match \"Python\" at the end of a string</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>\\bPython\\b</b></p>\n<p>Match \"Python\" at a word boundary</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>\\brub\\B</b></p>\n<p>\\B is nonword boundary: match \"rub\" in \"rube\" and \"ruby\" but not alone</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>Python(?=!)</b></p>\n<p>Match \"Python\", if followed by an exclamation point.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>Python(?!!)</b></p>\n<p>Match \"Python\", if not followed by an exclamation point.</p></td>\n</tr>\n</table>\n<h2>Special Syntax with Parentheses</h2>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;width:10%\">Sr.No.</th>\n<th style=\"text-align:center;\">Example &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>R(?#comment)</b></p>\n<p>Matches \"R\". All the rest is a comment</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>R(?i)uby</b></p>\n<p>Case-insensitive while matching \"uby\"</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>R(?i:uby)</b></p>\n<p>Same as above</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>rub(?:y|le))</b></p>\n<p>Group only without creating \\1 backreference</p></td>\n</tr>\n</table>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/python/python_classes_objects.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/python/python_cgi_programming.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>"}