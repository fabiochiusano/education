{"title_html": "<h1>Java Interview Questions</h1>", "content": "\n Java Interview Questions \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n Dear readers, these Java Interview Questions have been designed especially to get you acquainted with the nature of questions you may encounter during your interview for the subject of Java Programming Language. As per my experience, good interviewers hardly planned to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer \u2212 \n \n What do you know about Java?\n\nJava is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX.\n\n \n \n What are the supported platforms by Java Programming Language?\n\nJava runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX/Linux like HP-Unix, Sun Solaris, Redhat Linux, Ubuntu, CentOS, etc.\n\n \n \n List any five features of Java?\n\nSome features include Object Oriented, Platform Independent, Robust, Interpreted, Multi-threaded\n\n \n \n Why is Java Architectural Neutral?\n\nIt\u2019s compiler generates an architecture-neutral object file format, which makes the compiled code to be executable on many processors, with the presence of Java runtime system.\n\n \n \n How Java enabled High Performance?\n\nJava uses Just-In-Time compiler to enable high performance. Just-In-Time compiler is a program that turns Java bytecode, which is a program that contains instructions that must be interpreted into instructions that can be sent directly to the processor.\n\n \n \n Why Java is considered dynamic?\n\nIt is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.\n\n \n \n What is Java Virtual Machine and how it is considered in context of Java\u2019s platform independent feature?\n\nWhen Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by virtual Machine (JVM) on whichever platform it is being run.\n\n \n \n List two Java IDE\u2019s?\n\nNetbeans, Eclipse, etc.\n\n \n \n List some Java keywords(unlike C, C++ keywords)?\n\nSome Java keywords are import, super, finally, etc.\n\n \n \n What do you mean by Object?\n\nObject is a runtime entity and it\u2019s  state is stored in fields and behavior is shown via methods. Methods operate on an object's internal state and serve as the primary mechanism for object-to-object communication.\n\n \n \n Define class?\n\nA class is a blue print from which individual objects are created. A class can contain fields and methods to describe the behavior of an object.\n\n \n \n What kind of variables a class can consist of?\n\nA class consist of Local variable, instance variables and class variables.\n\n \n \n What is a Local Variable?\n\nVariables defined inside methods, constructors or blocks are called local variables. The variable will be declared and initialized within the method and it will be destroyed when the method has completed.\n\n \n \n What is a Instance Variable?\n\nInstance variables are variables within a class but outside any method. These variables are instantiated when the class is loaded.\n\n \n \n What is a Class Variable?\n\nThese are variables declared with in a class, outside any method, with the static keyword.\n\n \n \n What is Singleton class?\n\nSingleton class control object creation, limiting the number to one but allowing the flexibility to create more objects if the situation changes.\n\n \n \n What do you mean by Constructor?\n\nConstructor gets invoked when a new object is created. Every class has a constructor. If we do not explicitly write a constructor for a class the java compiler builds a default constructor for that class.\n\n \n \n List the three steps for creating an Object for a class?\n\nAn Object is first declared, then instantiated and then it is initialized.\n\n \n \n What is the default value of byte datatype in Java?\n\nDefault value of byte datatype is 0.\n\n \n \n What is the default value of float and double datatype in Java?\n\nDefault value of float and double datatype in different as compared to C/C++. For float its 0.0f and for double it\u2019s 0.0d\n\n \n \n When a byte datatype is used?\n\nThis data type is used to save space in large arrays, mainly in place of integers, since a byte is four times smaller than an int.\n\n \n \n What is a static variable?\n\nClass variables also known as static variables are declared with the static keyword in a class, but outside a method, constructor or a block.\n\n \n \n What do you mean by Access Modifier?\n\nJava provides access modifiers to set access levels for classes, variables, methods and constructors. A member has package or default accessibility when no accessibility modifier is specified.\n\n \n \n What is protected access modifier?\n\nVariables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class.\n\n \n \n What do you mean by synchronized Non Access Modifier?\n\nJava provides these modifiers for providing functionalities other than Access Modifiers, synchronized used to indicate that a method can be accessed by only one thread at a time.\n\n \n \n According to Java Operator precedence, which operator is considered to be with highest precedence?\n\nPostfix operators i.e () [] . is at the highest precedence.\n\n \n \n Variables used in a switch statement can be used with which datatypes?\n\nVariables used in a switch statement can only be a string, enum, byte, short, int, or char.\n\n \n \n When parseInt() method can be used?\n\nThis method is used to get the primitive data type of a certain String.\n\n \n \n Why is String class considered immutable?\n\nThe String class is immutable, so that once it is created a String object cannot be changed. Since String is immutable it can safely be shared between many threads ,which is considered very important for multithreaded programming.\n\n \n \n Why is StringBuffer called mutable?\n\nThe String class is considered as immutable, so that once it is created a String object cannot be changed. If there is a necessity to make alot of modifications to Strings of characters then StringBuffer should be used.\n\n \n \n What is the difference between StringBuffer and StringBuilder class?\n\nUse StringBuilder whenever possible because it is faster than StringBuffer. But, if thread safety is necessary then use StringBuffer objects.\n\n \n \n Which package is used for pattern matching with regular expressions?\n\njava.util.regex package is used for this purpose.\n\n \n \n java.util.regex consists of which classes?\n\njava.util.regex consists of three classes \u2212 Pattern class, Matcher class and PatternSyntaxException class.\n\n \n \n What is finalize() method?\n\nIt is possible to define a method that will be called just before an object's final destruction by the garbage collector. This method is called finalize( ), and it can be used to ensure that an object terminates cleanly.\n\n \n \n What is an Exception?\n\nAn exception is a problem that arises during the execution of a program. Exceptions are caught by handlers positioned along the thread's method invocation stack.\n\n \n \n What do you mean by Checked Exceptions?\n\nIt is an exception that is typically a user error or a problem that cannot be foreseen by the programmer. For example, if a file is to be opened, but the file cannot be found, an exception occurs. These exceptions cannot simply be ignored at the time of compilation.\n\n \n \n Explain Runtime Exceptions?\n\nIt is an exception that occurs that probably could have been avoided by the programmer. As opposed to checked exceptions, runtime exceptions are ignored at the time of compliation.\n\n \n \n Which are the two subclasses under Exception class?\n\nThe Exception class has two main subclasses : IOException class and RuntimeException Class.\n\n \n \n When throws keyword is used?\n\nIf a method does not handle a checked exception, the method must declare it using the throwskeyword. The throws keyword appears at the end of a method's signature.\n\n \n \n When throw keyword is used?\n\nAn exception can be thrown, either a newly instantiated one or an exception that you just caught, by using throw keyword.\n\n \n \n How finally used under Exception Handling?\n\nThe finally keyword is used to create a block of code that follows a try block. A finally block of code always executes, whether or not an exception has occurred.\n\n \n \n What things should be kept in mind while creating your own exceptions in Java?\n\nWhile creating your own exception \u2212\nAll exceptions must be a child of Throwable.\nIf you want to write a checked exception that is automatically enforced by the Handle or  Declare Rule, you need to extend the Exception class.\nYou want to write a runtime exception, you need to extend the RuntimeException class.\n\n\n \n \n Define Inheritance?\n\nIt is the process where one object acquires the properties of another. With the use of inheritance the information is made manageable in a hierarchical order.\n\n \n \n When super keyword is used?\n\nIf the method overrides one of its superclass's methods, overridden method can be invoked through the use of the keyword super. It can be also used to refer to a hidden field.\n\n \n \n What is Polymorphism?\n\nPolymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object.\n\n \n \n What is Abstraction?\n\nIt refers to the ability to make a class abstract in OOP. It helps to reduce the complexity and also improves the maintainability of the system.\n\n \n \n What is Abstract class?\n\nThese classes cannot be instantiated and are either partially implemented or not at all implemented. This class contains one or more abstract methods which are simply method declarations without a body.\n\n \n \n When Abstract methods are used?\n\nIf you want a class to contain a particular method but you want the actual implementation of that method to be determined by child classes, you can declare the method in the parent class as abstract.\n\n \n \n What is Encapsulation?\n\nIt is the technique of making the fields in a class private and providing access to the fields via public methods. If a field is declared private, it cannot be accessed by anyone outside the class, thereby hiding the fields within the class. Therefore encapsulation is also referred to as data hiding.\n\n \n \n What is the primary benefit of Encapsulation?\n\nThe main benefit of encapsulation is the ability to modify our implemented code without breaking the code of others who use our code. With this Encapsulation gives maintainability, flexibility and extensibility to our code.\n\n \n \n What is an Interface?\n\nAn interface is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface.\n\n \n \n Give some features of Interface?\n\nIt includes \u2212\n\nInterface cannot be instantiated\nAn interface does not contain any constructors.\nAll of the methods in an interface are abstract.\n\n\n \n \n Define Packages in Java?\n\nA Package can be defined as a grouping of related types(classes, interfaces, enumerations and annotations ) providing access protection and name space management.\n\n \n \n Why Packages are used?\n\nPackages are used in Java in-order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations, etc., easier.\n\n \n \n What do you mean by Multithreaded program?\n\nA multithreaded program contains two or more parts that can run concurrently. Each part of such a program is called a thread, and each thread defines a separate path of execution.\n\n \n \n What are the two ways in which Thread can be created?\n\nThread can be created by: implementing Runnable interface, extending the Thread class.\n\n \n \n What is an applet?\n\nAn applet is a Java program that runs in a Web browser. An applet can be a fully functional Java application because it has the entire Java API at its disposal.\n\n \n \n An applet extend which class?\n\nAn applet extends java.applet.Applet class.\n\n \n \n Explain garbage collection in Java?\n\nIt uses garbage collection to free the memory. By cleaning those objects that is no longer reference by any of the program.\n\n \n \n Define immutable object?\n\nAn immutable object can\u2019t be changed once it is created.\n\n \n \n Explain the usage of this() with constructors?\n\nIt is used with variables or methods and used to call constructer of same class.\n\n \n \n Explain Set Interface?\n\nIt is a collection of element which cannot contain duplicate elements. The Set interface contains only methods inherited from Collection and adds the restriction that duplicate elements are prohibited.\n\n \n \n Explain TreeSet?\n\nIt is a Set implemented when we want elements in a sorted order.\n\n \n \n What is Comparable Interface?\n\nIt is used to sort collections and arrays of objects using the collections.sort() and java.utils. The objects of the class implementing the Comparable interface can be ordered.\n\n \n \n Difference between throw and throws?\n\nIt includes:\n\nThrow is used to trigger an exception where as throws is used in declaration of exception.\nWithout throws, Checked exception cannot be handled where as checked exception can be propagated with throws.\n\n\n \n \n Explain the following line used under Java Program \u2212\npublic static void main (String args[ ])\n\nThe following shows the explanation individually \u2212\n\npublic \u2212 it is the access specifier.\nstatic \u2212 it allows main() to be called without instantiating a particular instance of a class.\nvoid \u2212 it affirns the compiler that no value is returned by main().\nmain() \u2212 this method is called at the beginning of a Java program.\nString args[ ] \u2212 args parameter is an instance array of class String\n\n\n \n \n Define JRE i.e. Java Runtime Environment?\n\nJava Runtime Environment is an implementation of the Java Virtual Machine which executes Java programs. It provides the minimum requirements for executing a Java application;\n\n \n \n What is JAR file?\n\nJAR files is Java Archive fles and it aggregates many files into one. It holds Java classes in a library. JAR files are built on ZIP file format and have .jar file extension.\n\n \n \n What is a WAR file?\n\nThis is Web Archive File and used to store XML, java classes, and JavaServer pages. which is used to distribute a collection of JavaServer Pages, Java Servlets, Java classes, XML files, static Web pages etc.\n\n \n \n Define JIT compiler?\n\nIt improves the runtime performance of computer programs based on bytecode.\n\n \n \n What is the difference between object oriented programming language and object based programming language?\n\nObject based programming languages follow all the features of OOPs except Inheritance. JavaScript is an example of object based programming languages.\n\n \n \n What is the purpose of default constructor?\n\nThe java compiler creates a default constructor only if there is no constructor in the class.\n\n \n \n Can a constructor be made final?\n\nNo, this is not possible.\n\n \n \n What is static block?\n\nIt is used to initialize the static data member, It is excuted before main method at the time of classloading.\n\n \n \n Define composition?\n\nHolding the reference of the other class within some other class is known as composition.\n\n \n \n What is function overloading?\n\nIf a class has multiple functions by same name but different parameters, it is known as Method Overloading.\n\n \n \n What is function overriding?\n\nIf a subclass provides a specific implementation of a method that is already provided by its parent class, it is known as Method Overriding.\n\n \n \n Difference between Overloading and Overriding?\n\nMethod overloading increases the readability of the program. Method overriding provides the specific implementation of the method that is already provided by its super class parameter must be different in case of overloading, parameter must be same in case of overriding.\n\n \n \n What is final class?\n\nFinal classes are created so the methods implemented by that class cannot be overridden. It can\u2019t be inherited.\n\n \n \n What is NullPointerException?\n\nA NullPointerException is thrown when calling the instance method of a null object, accessing or modifying the field of a null object etc.\n\n \n \n What are the ways in which a thread can enter the waiting state?\n\nA thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.\n\n \n \n How does multi-threading take place on a computer with a single CPU?\n\nThe operating system's task scheduler allocates execution time to multiple tasks. By quickly switching between executing tasks, it creates the impression that tasks execute sequentially.\n\n \n \n What invokes a thread's run() method?\n\nAfter a thread is started, via its start() method of the Thread class, the JVM invokes the thread's run() method when the thread is initially executed.\n\n \n \n Does it matter in what order catch statements for FileNotFoundException and IOException are written?\n\nYes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first.\n\n \n \n What is the difference between yielding and sleeping?\n\nWhen a task invokes its yield() method, it returns to the ready state. When a task invokes its sleep() method, it returns to the waiting state.\n\n \n \n Why Vector class is used?\n\nThe Vector class provides the capability to implement a growable array of objects. Vector proves to be very useful if you don't know the size of the array in advance, or you just need one that can change sizes over the lifetime of a program.\n\n \n \n How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters?\n\nUnicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns.\n\n \n \n What are Wrapper classes?\n\nThese are classes that allow primitive types to be accessed as objects. Example: Integer, Character, Double, Boolean etc.\n\n \n \n What is the difference between a Window and a Frame?\n\nThe Frame class extends Window to define a main application window that can have a menu bar.\n\n \n \n Which package has light weight components?\n\njavax.Swing package. All components in Swing, except JApplet, JDialog, JFrame and JWindow are lightweight components.\n\n \n \n What is the difference between the paint() and repaint() methods?\n\nThe paint() method supports painting via a Graphics object. The repaint() method is used to cause paint() to be invoked by the AWT painting thread.\n\n \n \n What is the purpose of File class?\n\nIt is used to create objects that provide access to the files and directories of a local file system.\n\n \n \n What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?\n\nThe Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented.\n\n \n \n Which class should you use to obtain design information about an object?\n\nThe Class class is used to obtain information about an object's design and java.lang.Class class instance represent classes, interfaces in a running Java application.\n\n \n \n What is the difference between static and non-static variables?\n\nA static variable is associated with the class as a whole rather than with specific instances of a class. Non-static variables take on unique values with each object instance.\n\n \n \n What is Serialization and deserialization?\n\nSerialization is the process of writing the state of an object to a byte stream. Deserialization is the process of restoring these objects.\n\n \n \n What are use cases?\n\nIt is part of the analysis of a program and describes a situation that a program might encounter and what behavior the program should exhibit in that circumstance.\n\n \n \n Explain the use of sublass in a Java program?\n\nSub class inherits all the public and protected methods and the implementation. It also inherits all the default modifier methods and their implementation.\n\n \n \n How to add menushortcut to menu item?\n\nIf there is a button instance called b1, you may add menu short cut by calling b1.setMnemonic('F'), so the user may be able to use Alt+F to click the button.\n\n \n \n Can you write a Java class that could be used both as an applet as well as an application?\n\nYes, just add a main() method to the applet.\n\n \n \n What is the difference between Swing and AWT components?\n\nAWT components are heavy-weight, whereas Swing components are lightweight. Heavy weight components depend on the local windowing toolkit. For example, java.awt.Button is a heavy weight component, when it is running on the Java platform for Unix platform, it maps to a real Motif button.\n\n \n \n What's the difference between constructors and other methods?\n\nConstructors must have the same name as the class and can not return a value. They are only called once while regular methods could be called many times.\n\n \n \n Is there any limitation of using Inheritance?\n\nYes, since inheritance inherits everything from the super class and interface, it may make the subclass too clustering and sometimes error-prone when dynamic overriding or dynamic overloading in some situation.\n\n \n \n When is the ArrayStoreException thrown?\n\nWhen copying elements between different arrays, if the source or destination arguments are not arrays or their types are not compatible, an ArrayStoreException will be thrown.\n\n \n \n Can you call one constructor from another if a class has multiple constructors?\n\nYes, use this() syntax.\n\n \n \n What's the difference between the methods sleep() and wait()?\n\nThe code sleep(2000); puts thread aside for exactly two seconds. The code wait(2000), causes a wait of up to two second. A thread could stop waiting earlier if it receives the notify() or notifyAll() call. The method wait() is defined in the class Object and the method sleep() is defined in the class Thread. \n\n \n \n When ArithmeticException is thrown?\n\nThe ArithmeticException is thrown when integer is divided by zero or taking the remainder of a number by zero. It is never thrown in floating-point operations.\n\n \n \n What is a transient variable?\n\nA transient variable is a variable that may not be serialized during Serialization and which is initialized by its default value during de-serialization,\n\n \n \n What is synchronization?\n\nSynchronization is the capability to control the access of multiple threads to shared resources. synchronized keyword in java provides locking which ensures mutual exclusive access of shared resource and prevent data race.\n\n \n \n What is the Collections API?\n\nThe Collections API is a set of classes and interfaces that support operations on collections of objects.\n\n \n \n Does garbage collection guarantee that a program will not run out of memory?\n\nGarbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.\n\n \n \n The immediate superclass of the Applet class?\n\nPanel is the immediate superclass. A panel provides space in which an application can attach any other component, including other panels.\n\n \n \n Which Java operator is right associative?\n\nThe = operator is right associative.\n\n \n \n What is the difference between a break statement and a continue statement?\n\nA break statement results in the termination of the statement to which it applies (switch, for, do, or while). A continue statement is used to end the current loop iteration and return control to the loop statement.\n\n \n \n If a variable is declared as private, where may the variable be accessed?\n\nA private variable may only be accessed within the class in which it is declared.\n\n \n \n What is the purpose of the System class?\n\nThe purpose of the System class is to provide access to system resources.\n\n \n \n List primitive Java types?\n\nThe eight primitive types are byte, char, short, int, long, float, double, and boolean.\n\n \n \n What is the relationship between clipping and repainting under AWT?\n\nWhen a window is repainted by the AWT painting thread, it sets the clipping regions to the area of the window that requires repainting.\n\n \n \n Which class is the immediate superclass of the Container class?\n\nComponent class is the immediate super class.\n\n \n \n What class of exceptions are generated by the Java run-time system?\n\nThe Java runtime system generates RuntimeException and Error exceptions.\n\n \n \n Under what conditions is an object's finalize() method invoked by the garbage collector?\n\nThe garbage collector invokes an object's finalize() method when it detects that the object has become unreachable.\n\n \n \n How can a dead thread be restarted?\n\nA dead thread cannot be restarted.\n\n \n \n Which arithmetic operations can result in the throwing of an ArithmeticException?\n\nInteger / and % can result in the throwing of an ArithmeticException.\n\n \n \n Variable of the boolean type is automatically initialized as?\n\nThe default value of the boolean type is false.\n\n \n \n Can try statements be nested?\n\nYes\n\n \n \n What are ClassLoaders?\n\nA class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class.\n\n \n \n What is the difference between an Interface and an Abstract class?\n\nAn abstract class can have instance methods that implement a default behavior. An Interface can only declare constants and instance methods, but cannot implement default behavior and all methods are implicitly abstract. An interface has all public members and no implementation.\n\n \n \n What will happen if static modifier is removed from the signature of the main method?\n\nProgram throws \"NoSuchMethodError\" error at runtime.\n\n \n \n What is the default value of an object reference declared as an instance variable?\n\nNull, unless it is defined explicitly.\n\n \n \n Can a top level class be private or protected?\n\nNo, a top level class can not be private or protected. It can have either \"public\" or no modifier. \n\n \n \n Why do we need wrapper classes?\n\nWe can pass them around as method parameters where a method expects an object. It also provides utility methods.\n\n \n \n What is the difference between error and an exception?\n\nAn error is an irrecoverable condition occurring at runtime. Such as OutOfMemory error. Exceptions are conditions that occur because of bad input etc. e.g. FileNotFoundException will be thrown if the specified file does not exist.\n\n \n \n Is it necessary that each try block must be followed by a catch block?\n\nIt is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block or a finally block.\n\n \n \n When a thread is created and started, what is its initial state?\n\nA thread is in the ready state as initial state after it has been created and started.\n\n \n \n What is the Locale class?\n\nThe Locale class is used to tailor program output to the conventions of a particular geographic, political, or cultural region.\n\n \n \n What are synchronized methods and synchronized statements?\n\nSynchronized methods are methods that are used to control access to an object. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.\n\n \n \n What is runtime polymorphism or dynamic method dispatch?\n\nRuntime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass.\n\n \n \n What is Dynamic Binding(late binding)?\n\nBinding refers to the linking of a procedure call to the code to be executed in response to the call. Dynamic binding means that the code associated with a given procedure call is not known until the time of the call at run-time.\n\n \n \n Can constructor be inherited?\n\nNo, constructor cannot be inherited.\n\n \n \n What are the advantages of ArrayList over arrays?\n\nArrayList can grow dynamically and provides more powerful insertion and search mechanisms than arrays.\n\n \n \n Why deletion in LinkedList is fast than ArrayList?\n\nDeletion in linked list is fast because it involves only updating the next pointer in the node before the deleted node and updating the previous pointer in the node after the deleted node.\n\n \n \n How do you decide when to use ArrayList and LinkedList?\n\nIf you need to frequently add and remove elements from the middle of the list and only access the list elements sequentially, then LinkedList should be used. If you need to support random access, without inserting or removing elements from any place other than the end, then ArrayList should be used.\n\n \n \n What is a Values Collection View ?\n\nIt is a collection returned by the values() method of the Map Interface, It contains all the objects present as values in the map.\n\n \n \n What is dot operator?\n\nThe dot operator(.) is used to access the instance variables and methods of class objects.It is also used to access classes and sub-packages from a package.\n\n \n \n Where and how can you use a private constructor?\n\nPrivate constructor is used if you do not want other classes to instantiate the object and to prevent subclassing.T\n\n \n \n What is type casting?\n\nType casting means treating a variable of one type as though it is another type.\n\n \n \n Describe life cycle of thread?\n\nA thread is a execution in a program. The life cycle of a thread include \u2212\n\nNewborn state\nRunnable state\nRunning state\nBlocked state\nDead state\n\n\n \n \n What is the difference between the >> and >>> operators?\n\nThe >> operator carries the sign bit when shifting right. The >>> zero-fills bits that have been shifted out. \n\n \n \n Which method of the Component class is used to set the position and size of a component?\n\nsetBounds() method is used for this purpose.\n\n \n \n What is the range of the short type?\n\nThe range of the short type is -(2^15) to 2^15 - 1.\n\n \n \n What is the immediate superclass of Menu?\n\nMenuItem class\n\n \n \n Does Java allow Default Arguments?\n\nNo, Java does not allow Default Arguments.\n\n \n \n Which number is denoted by leading zero in java?\n\nOctal Numbers are denoted by leading zero in java, example: 06\n\n \n \n Which number is denoted by leading 0x or 0X in java?\n\nHexadecimal Numbers are denoted by leading 0x or 0X in java, example \u2212 0XF \n\n \n \n Break statement can be used as labels in Java?\n\nYes, an example can be break one;\n\n \n \n Where import statement is used in a Java program?\n\nImport statement is allowed at the beginning of the program file after package statement.\n\n \n \n Explain suspend() method under Thread class>\n\nIt is used to pause or temporarily stop the execution of the thread.\n\n \n \n Explain isAlive() method under Thread class?\n\nIt is used to find out whether a thread is still running or not.\n\n \n \n What is currentThread()?\n\nIt is a public static method used to obtain a reference to the current thread.\n\n \n \n Explain main thread under Thread class execution?\n\nThe main thread is created automatically and it begins to execute immediately when a program starts. It ia thread from which all other child threads originate.\n\n \n \n Life cycle of an applet includes which steps?\n\nLife cycle involves the following steps \u2212\n\nInitialization\nStarting\nStopping\nDestroying\nPainting\n\n\n \n \n Why is the role of init() method under applets?\n\nIt initializes the applet and is the first method to be called.\n\n \n \n Which method is called by Applet class to load an image?\n\ngetImage(URL object, filename) is used for this purpose.\n\n \n \n Define code as an attribute of Applet?\n\nIt is used to specify the name of the applet class.\n\n \n \n Define canvas?\n\nIt is a simple drawing surface which are used for painting images or to perform other graphical operations.\n\n \n \n Define Network Programming?\n\nIt refers to writing programs that execute across multiple devices (computers), in which the devices are all connected to each other using a network.\n\n \n \n What is a Socket?\n\nSockets provide the communication mechanism between two computers using TCP. A client program creates a socket on its end of the communication and attempts to connect that socket to a server.\n\n \n \n Advantages of Java Sockets?\n\nSockets are flexible and sufficient. Efficient socket based programming can be easily implemented for general communications. It cause low network traffic.\n\n \n \n Disadvantages of Java Sockets?\n\nSocket based communications allows only to send packets of raw data between applications. Both the client-side and server-side have to provide mechanisms to make the data useful in any way.\n\n \n \n Which class is used by server applications to obtain a port and listen for client requests?\n\njava.net.ServerSocket class is used by server applications to obtain a port and listen for client requests\n\n \n \n Which class represents the socket that both the client and server use to communicate with each other?\n\njava.net.Socket class represents the socket that both the client and server use to communicate with each other.\n\n \n \n Why Generics are used in Java?\n\nGenerics provide compile-time type safety that allows programmers to catch invalid types at compile time. Java Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods or, with a single class declaration, a set of related types.\n\n \n \n What environment variables do I need to set on my machine in order to be able to run Java programs?\n\nCLASSPATH and PATH are the two variables.\n\n \n \n Is there any need to import java.lang package?\n\nNo, there is no need to import this package. It is by default loaded internally by the JVM.\n\n \n \n What is Nested top-level class?\n\nIf a class is declared within a class and specify the static modifier, the compiler treats the class just like any other top-level class. Nested top-level class is an Inner class.\n\n \n \n What is Externalizable interface?\n\nExternalizable is an interface which contains two methods readExternal and writeExternal. These methods give you a control over the serialization mechanism.\n\n \n \n If System.exit (0); is written at the end of the try block, will the finally block still execute?\n\nNo in this case the finally block will not execute because when you say System.exit (0); the control immediately goes out of the program, and thus finally never executes.\n\n \n \n What is daemon thread?\n\nDaemon thread is a low priority thread, which runs intermittently in the back ground doing the garbage collection operation for the java runtime system.\n\n \n \n Which method is used to create the daemon thread?\n\nsetDaemon method is used to create a daemon thread.\n\n \n \n Which method must be implemented by all threads?\n\nAll tasks must implement the run() method\n\n \n \n What is the GregorianCalendar class?\n\nThe GregorianCalendar provides support for traditional Western calendars\n\n \n \n What is the SimpleTimeZone class?\n\nThe SimpleTimeZone class provides support for a Gregorian calendar .\n\n \n \n What is the difference between the size and capacity of a Vector?\n\nThe size is the number of elements actually stored in the vector, while capacity is the maximum number of elements it can store at a given instance of time.\n\n \n \n Can a vector contain heterogenous objects?\n\nYes a Vector can contain heterogenous objects. Because a Vector stores everything in terms of Object.\n\n \n \n What is an enumeration?\n\nAn enumeration is an interface containing methods for accessing the underlying data structure from which the enumeration is obtained. It allows sequential access to all the elements stored in the collection.\n\n \n \n What is difference between Path and Classpath?\n\nPath and Classpath are operating system level environment variales. Path is defines where the system can find the executables(.exe) files and classpath is used to specify the location of .class files.\n\n \n \n Can a class declared as private be accessed outside it's package?\n\nNo, it's not possible to accessed outside it's package.\n\n \n \n What are the restriction imposed on a static method or a static block of code?\n\nA static method should not refer to instance variables without creating an instance and cannot use \"this\" operator to refer the instance.\n\n \n \n Can an Interface extend another Interface?\n\nYes an Interface can inherit another Interface, for that matter an Interface can extend more than one Interface.\n\n \n \n Which object oriented Concept is achieved by using overloading and overriding?\n\nPolymorphism\n\n \n \n What is an object's lock and which object's have locks?\n\nAn object's lock is a mechanism that is used by multiple threads to obtain synchronized access to the object. A thread may execute a synchronized method of an object only after it has acquired the object's lock.\n\n \n \n What is Downcasting?\n\nIt is the casting from a general to a more specific type, i.e. casting down the hierarchy.\n\n \n \n What are order of precedence and associativity and how are they used?\n\nOrder of precedence determines the order in which operators are evaluated in expressions. Associatity determines whether an expression is evaluated left-to-right or right-to-left.\n\n \n \n If a method is declared as protected, where may the method be accessed?\n\nA protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.\n\n \n \n What is the difference between inner class and nested class?\n\nWhen a class is defined within a scope of another class, then it becomes inner class. If the access modifier of the inner class is static, then it becomes nested class.\n\n \n \n What restrictions are placed on method overriding?\n\nOverridden methods must have the same name, argument list, and return type. The overriding method may not limit the access of the method it overrides.\n\n \n \n What is constructor chaining and how is it achieved in Java?\n\nA child object constructor always first needs to construct its parent. In Java it is done via an implicit call to the no-args constructor as the first statement.\n\n \n \n Can a double value be cast to a byte?\n\nYes, a double value can be cast to a byte.\n\n \n \n How does a try statement determine which catch clause should be used to handle an exception?\n\nWhen an exception is thrown within the body of a try statement, the catch clauses of the try statement are examined in the order in which they appear. The first catch clause that is capable of handling the exception is executed. The remaining catch clauses are ignored.\n\n \n \n What will be the default values of all the elements of an array defined as an instance variable?\n\nIf the array is an array of primitive types, then all the elements of the array will be initialized to the default value corresponding to that primitive type.\n\n \n What is Next? \n Further, you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong. \n Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-) \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n java_questions_answers.htm \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "url": "https://www.tutorialspoint.com/java/java_interview_questions.htm", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>Java Interview Questions - tutorialspoint</title>\n<meta content=\"Java Interview Questions - Learning Java in simple and easy steps : A beginner's tutorial containing complete knowledge of Java Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, Packages, Collections, Networking, Multithreading, Generics, Multimedia, Serialization, GUI.\" name=\"description\">\n<meta content=\"Java, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, Packages, Collections, Networking, Multithreading, Generics, Multimedia, Serialization, GUI.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #eb4847 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #eb4847 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #eb4847 !important;}\r\n.submenu-item{ border-bottom: 2px solid #eb4847 !important; border-top: 2px solid #eb4847 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#eb4847; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/java/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<style>\r\n.ts{\r\n   vertical-align:middle !important;\r\n   text-align:center !important;   \r\n}\r\n</style>\n<div class=\"mini-logo\">\n<img alt=\"Java Tutorial\" src=\"/java/images/java-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li><a class=\"videolink\" href=\"/java_online_training/index.asp\" target=\"_blank\"><img alt=\"Java Video Tutorials\" src=\"/java/images/java-video-tutorials.jpg\"/></a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Java Tutorial</li>\n<li><a href=\"/java/index.htm\">Java - Home</a></li>\n<li><a href=\"/java/java_overview.htm\">Java - Overview</a></li>\n<li><a href=\"/java/java_environment_setup.htm\">Java - Environment Setup</a></li>\n<li><a href=\"/java/java_basic_syntax.htm\">Java - Basic Syntax</a></li>\n<li><a href=\"/java/java_object_classes.htm\">Java - Object &amp; Classes</a></li>\n<li><a href=\"/java/java_constructors.htm\">Java - Constructors</a></li>\n<li><a href=\"/java/java_basic_datatypes.htm\">Java - Basic Datatypes</a></li>\n<li><a href=\"/java/java_variable_types.htm\">Java - Variable Types</a></li>\n<li><a href=\"/java/java_modifier_types.htm\">Java - Modifier Types</a></li>\n<li><a href=\"/java/java_basic_operators.htm\">Java - Basic Operators</a></li>\n<li><a href=\"/java/java_loop_control.htm\">Java - Loop Control</a></li>\n<li><a href=\"/java/java_decision_making.htm\">Java - Decision Making</a></li>\n<li><a href=\"/java/java_numbers.htm\">Java - Numbers</a></li>\n<li><a href=\"/java/java_characters.htm\">Java - Characters</a></li>\n<li><a href=\"/java/java_strings.htm\">Java - Strings</a></li>\n<li><a href=\"/java/java_arrays.htm\">Java - Arrays</a></li>\n<li><a href=\"/java/java_date_time.htm\">Java - Date &amp; Time</a></li>\n<li><a href=\"/java/java_regular_expressions.htm\">Java - Regular Expressions</a></li>\n<li><a href=\"/java/java_methods.htm\">Java - Methods</a></li>\n<li><a href=\"/java/java_files_io.htm\">Java - Files and I/O</a></li>\n<li><a href=\"/java/java_exceptions.htm\">Java - Exceptions</a></li>\n<li><a href=\"/java/java_innerclasses.htm\">Java - Inner classes</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Java Object Oriented</li>\n<li><a href=\"/java/java_inheritance.htm\">Java - Inheritance</a></li>\n<li><a href=\"/java/java_overriding.htm\">Java - Overriding</a></li>\n<li><a href=\"/java/java_polymorphism.htm\">Java - Polymorphism</a></li>\n<li><a href=\"/java/java_abstraction.htm\">Java - Abstraction</a></li>\n<li><a href=\"/java/java_encapsulation.htm\">Java - Encapsulation</a></li>\n<li><a href=\"/java/java_interfaces.htm\">Java - Interfaces</a></li>\n<li><a href=\"/java/java_packages.htm\">Java - Packages</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Java Advanced</li>\n<li><a href=\"/java/java_data_structures.htm\">Java - Data Structures</a></li>\n<li><a href=\"/java/java_collections.htm\">Java - Collections</a></li>\n<li><a href=\"/java/java_generics.htm\">Java - Generics</a></li>\n<li><a href=\"/java/java_serialization.htm\">Java - Serialization</a></li>\n<li><a href=\"/java/java_networking.htm\">Java - Networking</a></li>\n<li><a href=\"/java/java_sending_email.htm\">Java - Sending Email</a></li>\n<li><a href=\"/java/java_multithreading.htm\">Java - Multithreading</a></li>\n<li><a href=\"/java/java_applet_basics.htm\">Java - Applet Basics</a></li>\n<li><a href=\"/java/java_documentation.htm\">Java - Documentation</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Java Useful Resources</li>\n<li><a href=\"/java/java_questions_answers.htm\">Java - Questions and Answers</a></li>\n<li><a href=\"/java/java_quick_guide.htm\">Java - Quick Guide</a></li>\n<li><a href=\"/java/java_useful_resources.htm\">Java - Useful Resources</a></li>\n<li><a href=\"/java/java_discussion.htm\">Java - Discussion</a></li>\n<li><a href=\"/javaexamples/index.htm\">Java - Examples</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>Java Interview Questions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/java/java_questions_answers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/java/java_questions_answers.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>Dear readers, these <b>Java Interview Questions</b> have been designed especially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>Java Programming Language</b>. As per my experience, good interviewers hardly planned to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer \u2212</p>\n<section class=\"toggle\">\n<label> What do you know about Java?</label>\n<div class=\"toggle-content\">\n<p>Java is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the supported platforms by Java Programming Language?</label>\n<div class=\"toggle-content\">\n<p>Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX/Linux like HP-Unix, Sun Solaris, Redhat Linux, Ubuntu, CentOS, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List any five features of Java?</label>\n<div class=\"toggle-content\">\n<p>Some features include Object Oriented, Platform Independent, Robust, Interpreted, Multi-threaded</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is Java Architectural Neutral?</label>\n<div class=\"toggle-content\">\n<p>It\u2019s compiler generates an architecture-neutral object file format, which makes the compiled code to be executable on many processors, with the presence of Java runtime system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How Java enabled High Performance?</label>\n<div class=\"toggle-content\">\n<p>Java uses Just-In-Time compiler to enable high performance. Just-In-Time compiler is a program that turns Java bytecode, which is a program that contains instructions that must be interpreted into instructions that can be sent directly to the processor.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Java is considered dynamic?</label>\n<div class=\"toggle-content\">\n<p>It is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Java Virtual Machine and how it is considered in context of Java\u2019s platform independent feature?</label>\n<div class=\"toggle-content\">\n<p>When Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by virtual Machine (JVM) on whichever platform it is being run.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List two Java IDE\u2019s?</label>\n<div class=\"toggle-content\">\n<p>Netbeans, Eclipse, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List some Java keywords(unlike C, C++ keywords)?</label>\n<div class=\"toggle-content\">\n<p>Some Java keywords are import, super, finally, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Object?</label>\n<div class=\"toggle-content\">\n<p>Object is a runtime entity and it\u2019s  state is stored in fields and behavior is shown via methods. Methods operate on an object's internal state and serve as the primary mechanism for object-to-object communication.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define class?</label>\n<div class=\"toggle-content\">\n<p>A class is a blue print from which individual objects are created. A class can contain fields and methods to describe the behavior of an object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What kind of variables a class can consist of?</label>\n<div class=\"toggle-content\">\n<p>A class consist of Local variable, instance variables and class variables.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Local Variable?</label>\n<div class=\"toggle-content\">\n<p>Variables defined inside methods, constructors or blocks are called local variables. The variable will be declared and initialized within the method and it will be destroyed when the method has completed.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Instance Variable?</label>\n<div class=\"toggle-content\">\n<p>Instance variables are variables within a class but outside any method. These variables are instantiated when the class is loaded.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Class Variable?</label>\n<div class=\"toggle-content\">\n<p>These are variables declared with in a class, outside any method, with the static keyword.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Singleton class?</label>\n<div class=\"toggle-content\">\n<p>Singleton class control object creation, limiting the number to one but allowing the flexibility to create more objects if the situation changes.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Constructor?</label>\n<div class=\"toggle-content\">\n<p>Constructor gets invoked when a new object is created. Every class has a constructor. If we do not explicitly write a constructor for a class the java compiler builds a default constructor for that class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List the three steps for creating an Object for a class?</label>\n<div class=\"toggle-content\">\n<p>An Object is first declared, then instantiated and then it is initialized.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of byte datatype in Java?</label>\n<div class=\"toggle-content\">\n<p>Default value of byte datatype is 0.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of float and double datatype in Java?</label>\n<div class=\"toggle-content\">\n<p>Default value of float and double datatype in different as compared to C/C++. For float its 0.0f and for double it\u2019s 0.0d</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When a byte datatype is used?</label>\n<div class=\"toggle-content\">\n<p>This data type is used to save space in large arrays, mainly in place of integers, since a byte is four times smaller than an int.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a static variable?</label>\n<div class=\"toggle-content\">\n<p>Class variables also known as static variables are declared with the static keyword in a class, but outside a method, constructor or a block.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Access Modifier?</label>\n<div class=\"toggle-content\">\n<p>Java provides access modifiers to set access levels for classes, variables, methods and constructors. A member has package or default accessibility when no accessibility modifier is specified.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is protected access modifier?</label>\n<div class=\"toggle-content\">\n<p>Variables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by synchronized Non Access Modifier?</label>\n<div class=\"toggle-content\">\n<p>Java provides these modifiers for providing functionalities other than Access Modifiers, synchronized used to indicate that a method can be accessed by only one thread at a time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> According to Java Operator precedence, which operator is considered to be with highest precedence?</label>\n<div class=\"toggle-content\">\n<p>Postfix operators i.e () [] . is at the highest precedence.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Variables used in a switch statement can be used with which datatypes?</label>\n<div class=\"toggle-content\">\n<p>Variables used in a switch statement can only be a string, enum, byte, short, int, or char.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When parseInt() method can be used?</label>\n<div class=\"toggle-content\">\n<p>This method is used to get the primitive data type of a certain String.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is String class considered immutable?</label>\n<div class=\"toggle-content\">\n<p>The String class is immutable, so that once it is created a String object cannot be changed. Since String is immutable it can safely be shared between many threads ,which is considered very important for multithreaded programming.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is StringBuffer called mutable?</label>\n<div class=\"toggle-content\">\n<p>The String class is considered as immutable, so that once it is created a String object cannot be changed. If there is a necessity to make alot of modifications to Strings of characters then StringBuffer should be used.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between StringBuffer and StringBuilder class?</label>\n<div class=\"toggle-content\">\n<p>Use StringBuilder whenever possible because it is faster than StringBuffer. But, if thread safety is necessary then use StringBuffer objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which package is used for pattern matching with regular expressions?</label>\n<div class=\"toggle-content\">\n<p>java.util.regex package is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> java.util.regex consists of which classes?</label>\n<div class=\"toggle-content\">\n<p>java.util.regex consists of three classes \u2212 Pattern class, Matcher class and PatternSyntaxException class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is finalize() method?</label>\n<div class=\"toggle-content\">\n<p>It is possible to define a method that will be called just before an object's final destruction by the garbage collector. This method is called finalize( ), and it can be used to ensure that an object terminates cleanly.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an Exception?</label>\n<div class=\"toggle-content\">\n<p>An exception is a problem that arises during the execution of a program. Exceptions are caught by handlers positioned along the thread's method invocation stack.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Checked Exceptions?</label>\n<div class=\"toggle-content\">\n<p>It is an exception that is typically a user error or a problem that cannot be foreseen by the programmer. For example, if a file is to be opened, but the file cannot be found, an exception occurs. These exceptions cannot simply be ignored at the time of compilation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain Runtime Exceptions?</label>\n<div class=\"toggle-content\">\n<p>It is an exception that occurs that probably could have been avoided by the programmer. As opposed to checked exceptions, runtime exceptions are ignored at the time of compliation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which are the two subclasses under Exception class?</label>\n<div class=\"toggle-content\">\n<p>The Exception class has two main subclasses : IOException class and RuntimeException Class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When throws keyword is used?</label>\n<div class=\"toggle-content\">\n<p>If a method does not handle a checked exception, the method must declare it using the throwskeyword. The throws keyword appears at the end of a method's signature.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When throw keyword is used?</label>\n<div class=\"toggle-content\">\n<p>An exception can be thrown, either a newly instantiated one or an exception that you just caught, by using throw keyword.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How finally used under Exception Handling?</label>\n<div class=\"toggle-content\">\n<p>The finally keyword is used to create a block of code that follows a try block. A finally block of code always executes, whether or not an exception has occurred.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What things should be kept in mind while creating your own exceptions in Java?</label>\n<div class=\"toggle-content\">\n<p>While creating your own exception \u2212</p>\n<ul class=\"list\"><li><p>All exceptions must be a child of Throwable.</p></li>\n<li><p>If you want to write a checked exception that is automatically enforced by the Handle or  Declare Rule, you need to extend the Exception class.</p></li>\n<li><p>You want to write a runtime exception, you need to extend the RuntimeException class.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Inheritance?</label>\n<div class=\"toggle-content\">\n<p>It is the process where one object acquires the properties of another. With the use of inheritance the information is made manageable in a hierarchical order.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When super keyword is used?</label>\n<div class=\"toggle-content\">\n<p>If the method overrides one of its superclass's methods, overridden method can be invoked through the use of the keyword super. It can be also used to refer to a hidden field.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Polymorphism?</label>\n<div class=\"toggle-content\">\n<p>Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Abstraction?</label>\n<div class=\"toggle-content\">\n<p>It refers to the ability to make a class abstract in OOP. It helps to reduce the complexity and also improves the maintainability of the system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Abstract class?</label>\n<div class=\"toggle-content\">\n<p>These classes cannot be instantiated and are either partially implemented or not at all implemented. This class contains one or more abstract methods which are simply method declarations without a body.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When Abstract methods are used?</label>\n<div class=\"toggle-content\">\n<p>If you want a class to contain a particular method but you want the actual implementation of that method to be determined by child classes, you can declare the method in the parent class as abstract.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Encapsulation?</label>\n<div class=\"toggle-content\">\n<p>It is the technique of making the fields in a class private and providing access to the fields via public methods. If a field is declared private, it cannot be accessed by anyone outside the class, thereby hiding the fields within the class. Therefore encapsulation is also referred to as data hiding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the primary benefit of Encapsulation?</label>\n<div class=\"toggle-content\">\n<p>The main benefit of encapsulation is the ability to modify our implemented code without breaking the code of others who use our code. With this Encapsulation gives maintainability, flexibility and extensibility to our code.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an Interface?</label>\n<div class=\"toggle-content\">\n<p>An interface is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Give some features of Interface?</label>\n<div class=\"toggle-content\">\n<p>It includes \u2212</p>\n<ul class=\"list\">\n<li><p>Interface cannot be instantiated</p></li>\n<li><p>An interface does not contain any constructors.</p></li>\n<li><p>All of the methods in an interface are abstract.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Packages in Java?</label>\n<div class=\"toggle-content\">\n<p>A Package can be defined as a grouping of related types(classes, interfaces, enumerations and annotations ) providing access protection and name space management.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Packages are used?</label>\n<div class=\"toggle-content\">\n<p>Packages are used in Java in-order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations, etc., easier.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Multithreaded program?</label>\n<div class=\"toggle-content\">\n<p>A multithreaded program contains two or more parts that can run concurrently. Each part of such a program is called a thread, and each thread defines a separate path of execution.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the two ways in which Thread can be created?</label>\n<div class=\"toggle-content\">\n<p>Thread can be created by: implementing Runnable interface, extending the Thread class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an applet?</label>\n<div class=\"toggle-content\">\n<p>An applet is a Java program that runs in a Web browser. An applet can be a fully functional Java application because it has the entire Java API at its disposal.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> An applet extend which class?</label>\n<div class=\"toggle-content\">\n<p>An applet extends java.applet.Applet class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain garbage collection in Java?</label>\n<div class=\"toggle-content\">\n<p>It uses garbage collection to free the memory. By cleaning those objects that is no longer reference by any of the program.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define immutable object?</label>\n<div class=\"toggle-content\">\n<p>An immutable object can\u2019t be changed once it is created.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain the usage of this() with constructors?</label>\n<div class=\"toggle-content\">\n<p>It is used with variables or methods and used to call constructer of same class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain Set Interface?</label>\n<div class=\"toggle-content\">\n<p>It is a collection of element which cannot contain duplicate elements. The Set interface contains only methods inherited from Collection and adds the restriction that duplicate elements are prohibited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain TreeSet?</label>\n<div class=\"toggle-content\">\n<p>It is a Set implemented when we want elements in a sorted order.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Comparable Interface?</label>\n<div class=\"toggle-content\">\n<p>It is used to sort collections and arrays of objects using the collections.sort() and java.utils. The objects of the class implementing the Comparable interface can be ordered.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Difference between throw and throws?</label>\n<div class=\"toggle-content\">\n<p>It includes:</p>\n<ul class=\"list\">\n<li><p>Throw is used to trigger an exception where as throws is used in declaration of exception.</p></li>\n<li><p>Without throws, Checked exception cannot be handled where as checked exception can be propagated with throws.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> <b>Explain the following line used under Java Program \u2212</b>\n<p>public static void main (String args[ ])</p></label>\n<div class=\"toggle-content\">\n<p>The following shows the explanation individually \u2212</p>\n<ul class=\"list\">\n<li><p>public \u2212 it is the access specifier.</p></li>\n<li><p>static \u2212 it allows main() to be called without instantiating a particular instance of a class.</p></li>\n<li><p>void \u2212 it affirns the compiler that no value is returned by main().</p></li>\n<li><p>main() \u2212 this method is called at the beginning of a Java program.</p></li>\n<li><p>String args[ ] \u2212 args parameter is an instance array of class String</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define JRE i.e. Java Runtime Environment?</label>\n<div class=\"toggle-content\">\n<p>Java Runtime Environment is an implementation of the Java Virtual Machine which executes Java programs. It provides the minimum requirements for executing a Java application;</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is JAR file?</label>\n<div class=\"toggle-content\">\n<p>JAR files is Java Archive fles and it aggregates many files into one. It holds Java classes in a library. JAR files are built on ZIP file format and have .jar file extension.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a WAR file?</label>\n<div class=\"toggle-content\">\n<p>This is Web Archive File and used to store XML, java classes, and JavaServer pages. which is used to distribute a collection of JavaServer Pages, Java Servlets, Java classes, XML files, static Web pages etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define JIT compiler?</label>\n<div class=\"toggle-content\">\n<p>It improves the runtime performance of computer programs based on bytecode.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between object oriented programming language and object based programming language?</label>\n<div class=\"toggle-content\">\n<p>Object based programming languages follow all the features of OOPs except Inheritance. JavaScript is an example of object based programming languages.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of default constructor?</label>\n<div class=\"toggle-content\">\n<p>The java compiler creates a default constructor only if there is no constructor in the class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a constructor be made final?</label>\n<div class=\"toggle-content\">\n<p>No, this is not possible.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is static block?</label>\n<div class=\"toggle-content\">\n<p>It is used to initialize the static data member, It is excuted before main method at the time of classloading.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define composition?</label>\n<div class=\"toggle-content\">\n<p>Holding the reference of the other class within some other class is known as composition.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is function overloading?</label>\n<div class=\"toggle-content\">\n<p>If a class has multiple functions by same name but different parameters, it is known as Method Overloading.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is function overriding?</label>\n<div class=\"toggle-content\">\n<p>If a subclass provides a specific implementation of a method that is already provided by its parent class, it is known as Method Overriding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Difference between Overloading and Overriding?</label>\n<div class=\"toggle-content\">\n<p>Method overloading increases the readability of the program. Method overriding provides the specific implementation of the method that is already provided by its super class parameter must be different in case of overloading, parameter must be same in case of overriding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is final class?</label>\n<div class=\"toggle-content\">\n<p>Final classes are created so the methods implemented by that class cannot be overridden. It can\u2019t be inherited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is NullPointerException?</label>\n<div class=\"toggle-content\">\n<p>A NullPointerException is thrown when calling the instance method of a null object, accessing or modifying the field of a null object etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the ways in which a thread can enter the waiting state?</label>\n<div class=\"toggle-content\">\n<p>A thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How does multi-threading take place on a computer with a single CPU?</label>\n<div class=\"toggle-content\">\n<p>The operating system's task scheduler allocates execution time to multiple tasks. By quickly switching between executing tasks, it creates the impression that tasks execute sequentially.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What invokes a thread's run() method?</label>\n<div class=\"toggle-content\">\n<p>After a thread is started, via its start() method of the Thread class, the JVM invokes the thread's run() method when the thread is initially executed.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does it matter in what order catch statements for FileNotFoundException and IOException are written?</label>\n<div class=\"toggle-content\">\n<p>Yes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between yielding and sleeping?</label>\n<div class=\"toggle-content\">\n<p>When a task invokes its yield() method, it returns to the ready state. When a task invokes its sleep() method, it returns to the waiting state.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Vector class is used?</label>\n<div class=\"toggle-content\">\n<p>The Vector class provides the capability to implement a growable array of objects. Vector proves to be very useful if you don't know the size of the array in advance, or you just need one that can change sizes over the lifetime of a program.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters?</label>\n<div class=\"toggle-content\">\n<p>Unicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are Wrapper classes?</label>\n<div class=\"toggle-content\">\n<p>These are classes that allow primitive types to be accessed as objects. Example: Integer, Character, Double, Boolean etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between a Window and a Frame?</label>\n<div class=\"toggle-content\">\n<p>The Frame class extends Window to define a main application window that can have a menu bar.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which package has light weight components?</label>\n<div class=\"toggle-content\">\n<p>javax.Swing package. All components in Swing, except JApplet, JDialog, JFrame and JWindow are lightweight components.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the paint() and repaint() methods?</label>\n<div class=\"toggle-content\">\n<p>The paint() method supports painting via a Graphics object. The repaint() method is used to cause paint() to be invoked by the AWT painting thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of File class?</label>\n<div class=\"toggle-content\">\n<p>It is used to create objects that provide access to the files and directories of a local file system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?</label>\n<div class=\"toggle-content\">\n<p>The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class should you use to obtain design information about an object?</label>\n<div class=\"toggle-content\">\n<p>The Class class is used to obtain information about an object's design and java.lang.Class class instance represent classes, interfaces in a running Java application.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between static and non-static variables?</label>\n<div class=\"toggle-content\">\n<p>A static variable is associated with the class as a whole rather than with specific instances of a class. Non-static variables take on unique values with each object instance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Serialization and deserialization?</label>\n<div class=\"toggle-content\">\n<p>Serialization is the process of writing the state of an object to a byte stream. Deserialization is the process of restoring these objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are use cases?</label>\n<div class=\"toggle-content\">\n<p>It is part of the analysis of a program and describes a situation that a program might encounter and what behavior the program should exhibit in that circumstance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain the use of sublass in a Java program?</label>\n<div class=\"toggle-content\">\n<p>Sub class inherits all the public and protected methods and the implementation. It also inherits all the default modifier methods and their implementation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How to add menushortcut to menu item?</label>\n<div class=\"toggle-content\">\n<p>If there is a button instance called b1, you may add menu short cut by calling b1.setMnemonic('F'), so the user may be able to use Alt+F to click the button.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can you write a Java class that could be used both as an applet as well as an application?</label>\n<div class=\"toggle-content\">\n<p>Yes, just add a main() method to the applet.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between Swing and AWT components?</label>\n<div class=\"toggle-content\">\n<p>AWT components are heavy-weight, whereas Swing components are lightweight. Heavy weight components depend on the local windowing toolkit. For example, java.awt.Button is a heavy weight component, when it is running on the Java platform for Unix platform, it maps to a real Motif button.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What's the difference between constructors and other methods?</label>\n<div class=\"toggle-content\">\n<p>Constructors must have the same name as the class and can not return a value. They are only called once while regular methods could be called many times.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is there any limitation of using Inheritance?</label>\n<div class=\"toggle-content\">\n<p>Yes, since inheritance inherits everything from the super class and interface, it may make the subclass too clustering and sometimes error-prone when dynamic overriding or dynamic overloading in some situation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When is the ArrayStoreException thrown?</label>\n<div class=\"toggle-content\">\n<p>When copying elements between different arrays, if the source or destination arguments are not arrays or their types are not compatible, an ArrayStoreException will be thrown.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can you call one constructor from another if a class has multiple constructors?</label>\n<div class=\"toggle-content\">\n<p>Yes, use this() syntax.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What's the difference between the methods sleep() and wait()?</label>\n<div class=\"toggle-content\">\n<p>The code sleep(2000); puts thread aside for exactly two seconds. The code wait(2000), causes a wait of up to two second. A thread could stop waiting earlier if it receives the notify() or notifyAll() call. The method wait() is defined in the class Object and the method sleep() is defined in the class Thread. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When ArithmeticException is thrown?</label>\n<div class=\"toggle-content\">\n<p>The ArithmeticException is thrown when integer is divided by zero or taking the remainder of a number by zero. It is never thrown in floating-point operations.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a transient variable?</label>\n<div class=\"toggle-content\">\n<p>A transient variable is a variable that may not be serialized during Serialization and which is initialized by its default value during de-serialization,</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is synchronization?</label>\n<div class=\"toggle-content\">\n<p>Synchronization is the capability to control the access of multiple threads to shared resources. synchronized keyword in java provides locking which ensures mutual exclusive access of shared resource and prevent data race.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the Collections API?</label>\n<div class=\"toggle-content\">\n<p>The Collections API is a set of classes and interfaces that support operations on collections of objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does garbage collection guarantee that a program will not run out of memory?</label>\n<div class=\"toggle-content\">\n<p>Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> The immediate superclass of the Applet class?</label>\n<div class=\"toggle-content\">\n<p>Panel is the immediate superclass. A panel provides space in which an application can attach any other component, including other panels.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which Java operator is right associative?</label>\n<div class=\"toggle-content\">\n<p>The = operator is right associative.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between a break statement and a continue statement?</label>\n<div class=\"toggle-content\">\n<p>A break statement results in the termination of the statement to which it applies (switch, for, do, or while). A continue statement is used to end the current loop iteration and return control to the loop statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If a variable is declared as private, where may the variable be accessed?</label>\n<div class=\"toggle-content\">\n<p>A private variable may only be accessed within the class in which it is declared.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of the System class?</label>\n<div class=\"toggle-content\">\n<p>The purpose of the System class is to provide access to system resources.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List primitive Java types?</label>\n<div class=\"toggle-content\">\n<p>The eight primitive types are byte, char, short, int, long, float, double, and boolean.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the relationship between clipping and repainting under AWT?</label>\n<div class=\"toggle-content\">\n<p>When a window is repainted by the AWT painting thread, it sets the clipping regions to the area of the window that requires repainting.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class is the immediate superclass of the Container class?</label>\n<div class=\"toggle-content\">\n<p>Component class is the immediate super class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What class of exceptions are generated by the Java run-time system?</label>\n<div class=\"toggle-content\">\n<p>The Java runtime system generates RuntimeException and Error exceptions.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Under what conditions is an object's finalize() method invoked by the garbage collector?</label>\n<div class=\"toggle-content\">\n<p>The garbage collector invokes an object's finalize() method when it detects that the object has become unreachable.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How can a dead thread be restarted?</label>\n<div class=\"toggle-content\">\n<p>A dead thread cannot be restarted.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which arithmetic operations can result in the throwing of an ArithmeticException?</label>\n<div class=\"toggle-content\">\n<p>Integer / and % can result in the throwing of an ArithmeticException.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Variable of the boolean type is automatically initialized as?</label>\n<div class=\"toggle-content\">\n<p>The default value of the boolean type is false.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can try statements be nested?</label>\n<div class=\"toggle-content\">\n<p>Yes</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are ClassLoaders?</label>\n<div class=\"toggle-content\">\n<p>A class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between an Interface and an Abstract class?</label>\n<div class=\"toggle-content\">\n<p>An abstract class can have instance methods that implement a default behavior. An Interface can only declare constants and instance methods, but cannot implement default behavior and all methods are implicitly abstract. An interface has all public members and no implementation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What will happen if static modifier is removed from the signature of the main method?</label>\n<div class=\"toggle-content\">\n<p>Program throws \"NoSuchMethodError\" error at runtime.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of an object reference declared as an instance variable?</label>\n<div class=\"toggle-content\">\n<p>Null, unless it is defined explicitly.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a top level class be private or protected?</label>\n<div class=\"toggle-content\">\n<p>No, a top level class can not be private or protected. It can have either \"public\" or no modifier. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why do we need wrapper classes?</label>\n<div class=\"toggle-content\">\n<p>We can pass them around as method parameters where a method expects an object. It also provides utility methods.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between error and an exception?</label>\n<div class=\"toggle-content\">\n<p>An error is an irrecoverable condition occurring at runtime. Such as OutOfMemory error. Exceptions are conditions that occur because of bad input etc. e.g. FileNotFoundException will be thrown if the specified file does not exist.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is it necessary that each try block must be followed by a catch block?</label>\n<div class=\"toggle-content\">\n<p>It is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block or a finally block.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When a thread is created and started, what is its initial state?</label>\n<div class=\"toggle-content\">\n<p>A thread is in the ready state as initial state after it has been created and started.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the Locale class?</label>\n<div class=\"toggle-content\">\n<p>The Locale class is used to tailor program output to the conventions of a particular geographic, political, or cultural region.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are synchronized methods and synchronized statements?</label>\n<div class=\"toggle-content\">\n<p>Synchronized methods are methods that are used to control access to an object. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is runtime polymorphism or dynamic method dispatch?</label>\n<div class=\"toggle-content\">\n<p>Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Dynamic Binding(late binding)?</label>\n<div class=\"toggle-content\">\n<p>Binding refers to the linking of a procedure call to the code to be executed in response to the call. Dynamic binding means that the code associated with a given procedure call is not known until the time of the call at run-time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can constructor be inherited?</label>\n<div class=\"toggle-content\">\n<p>No, constructor cannot be inherited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the advantages of ArrayList over arrays?</label>\n<div class=\"toggle-content\">\n<p>ArrayList can grow dynamically and provides more powerful insertion and search mechanisms than arrays.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why deletion in LinkedList is fast than ArrayList?</label>\n<div class=\"toggle-content\">\n<p>Deletion in linked list is fast because it involves only updating the next pointer in the node before the deleted node and updating the previous pointer in the node after the deleted node.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How do you decide when to use ArrayList and LinkedList?</label>\n<div class=\"toggle-content\">\n<p>If you need to frequently add and remove elements from the middle of the list and only access the list elements sequentially, then LinkedList should be used. If you need to support random access, without inserting or removing elements from any place other than the end, then ArrayList should be used.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Values Collection View ?</label>\n<div class=\"toggle-content\">\n<p>It is a collection returned by the values() method of the Map Interface, It contains all the objects present as values in the map.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is dot operator?</label>\n<div class=\"toggle-content\">\n<p>The dot operator(.) is used to access the instance variables and methods of class objects.It is also used to access classes and sub-packages from a package.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Where and how can you use a private constructor?</label>\n<div class=\"toggle-content\">\n<p>Private constructor is used if you do not want other classes to instantiate the object and to prevent subclassing.T</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is type casting?</label>\n<div class=\"toggle-content\">\n<p>Type casting means treating a variable of one type as though it is another type.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Describe life cycle of thread?</label>\n<div class=\"toggle-content\">\n<p>A thread is a execution in a program. The life cycle of a thread include \u2212</p>\n<ul class=\"list\">\n<li>Newborn state</li>\n<li>Runnable state</li>\n<li>Running state</li>\n<li>Blocked state</li>\n<li>Dead state</li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the &gt;&gt; and &gt;&gt;&gt; operators?</label>\n<div class=\"toggle-content\">\n<p>The &gt;&gt; operator carries the sign bit when shifting right. The &gt;&gt;&gt; zero-fills bits that have been shifted out. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method of the Component class is used to set the position and size of a component?</label>\n<div class=\"toggle-content\">\n<p>setBounds() method is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the range of the short type?</label>\n<div class=\"toggle-content\">\n<p>The range of the short type is -(2^15) to 2^15 - 1.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the immediate superclass of Menu?</label>\n<div class=\"toggle-content\">\n<p>MenuItem class</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does Java allow Default Arguments?</label>\n<div class=\"toggle-content\">\n<p>No, Java does not allow Default Arguments.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which number is denoted by leading zero in java?</label>\n<div class=\"toggle-content\">\n<p>Octal Numbers are denoted by leading zero in java, example: 06</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which number is denoted by leading 0x or 0X in java?</label>\n<div class=\"toggle-content\">\n<p>Hexadecimal Numbers are denoted by leading 0x or 0X in java, example \u2212 0XF </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Break statement can be used as labels in Java?</label>\n<div class=\"toggle-content\">\n<p>Yes, an example can be <i>break one;</i></p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Where import statement is used in a Java program?</label>\n<div class=\"toggle-content\">\n<p>Import statement is allowed at the beginning of the program file after package statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain suspend() method under Thread class&gt;</label>\n<div class=\"toggle-content\">\n<p>It is used to pause or temporarily stop the execution of the thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain isAlive() method under Thread class?</label>\n<div class=\"toggle-content\">\n<p>It is used to find out whether a thread is still running or not.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is currentThread()?</label>\n<div class=\"toggle-content\">\n<p>It is a public static method used to obtain a reference to the current thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain main thread under Thread class execution?</label>\n<div class=\"toggle-content\">\n<p>The main thread is created automatically and it begins to execute immediately when a program starts. It ia thread from which all other child threads originate.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Life cycle of an applet includes which steps?</label>\n<div class=\"toggle-content\">\n<p>Life cycle involves the following steps \u2212</p>\n<ul class=\"list\">\n<li><p>Initialization</p></li>\n<li><p>Starting</p></li>\n<li><p>Stopping</p></li>\n<li><p>Destroying</p></li>\n<li><p>Painting</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is the role of init() method under applets?</label>\n<div class=\"toggle-content\">\n<p>It initializes the applet and is the first method to be called.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method is called by Applet class to load an image?</label>\n<div class=\"toggle-content\">\n<p>getImage(URL object, filename) is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define code as an attribute of Applet?</label>\n<div class=\"toggle-content\">\n<p>It is used to specify the name of the applet class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define canvas?</label>\n<div class=\"toggle-content\">\n<p>It is a simple drawing surface which are used for painting images or to perform other graphical operations.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Network Programming?</label>\n<div class=\"toggle-content\">\n<p>It refers to writing programs that execute across multiple devices (computers), in which the devices are all connected to each other using a network.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Socket?</label>\n<div class=\"toggle-content\">\n<p>Sockets provide the communication mechanism between two computers using TCP. A client program creates a socket on its end of the communication and attempts to connect that socket to a server.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Advantages of Java Sockets?</label>\n<div class=\"toggle-content\">\n<p>Sockets are flexible and sufficient. Efficient socket based programming can be easily implemented for general communications. It cause low network traffic.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Disadvantages of Java Sockets?</label>\n<div class=\"toggle-content\">\n<p>Socket based communications allows only to send packets of raw data between applications. Both the client-side and server-side have to provide mechanisms to make the data useful in any way.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class is used by server applications to obtain a port and listen for client requests?</label>\n<div class=\"toggle-content\">\n<p>java.net.ServerSocket class is used by server applications to obtain a port and listen for client requests</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class represents the socket that both the client and server use to communicate with each other?</label>\n<div class=\"toggle-content\">\n<p>java.net.Socket class represents the socket that both the client and server use to communicate with each other.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Generics are used in Java?</label>\n<div class=\"toggle-content\">\n<p>Generics provide compile-time type safety that allows programmers to catch invalid types at compile time. Java Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods or, with a single class declaration, a set of related types.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What environment variables do I need to set on my machine in order to be able to run Java programs?</label>\n<div class=\"toggle-content\">\n<p>CLASSPATH and PATH are the two variables.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is there any need to import java.lang package?</label>\n<div class=\"toggle-content\">\n<p>No, there is no need to import this package. It is by default loaded internally by the JVM.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Nested top-level class?</label>\n<div class=\"toggle-content\">\n<p>If a class is declared within a class and specify the static modifier, the compiler treats the class just like any other top-level class. Nested top-level class is an Inner class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Externalizable interface?</label>\n<div class=\"toggle-content\">\n<p>Externalizable is an interface which contains two methods readExternal and writeExternal. These methods give you a control over the serialization mechanism.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If System.exit (0); is written at the end of the try block, will the finally block still execute?</label>\n<div class=\"toggle-content\">\n<p>No in this case the finally block will not execute because when you say System.exit (0); the control immediately goes out of the program, and thus finally never executes.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is daemon thread?</label>\n<div class=\"toggle-content\">\n<p>Daemon thread is a low priority thread, which runs intermittently in the back ground doing the garbage collection operation for the java runtime system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method is used to create the daemon thread?</label>\n<div class=\"toggle-content\">\n<p>setDaemon method is used to create a daemon thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method must be implemented by all threads?</label>\n<div class=\"toggle-content\">\n<p>All tasks must implement the run() method</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the GregorianCalendar class?</label>\n<div class=\"toggle-content\">\n<p>The GregorianCalendar provides support for traditional Western calendars</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the SimpleTimeZone class?</label>\n<div class=\"toggle-content\">\n<p>The SimpleTimeZone class provides support for a Gregorian calendar .</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the size and capacity of a Vector?</label>\n<div class=\"toggle-content\">\n<p>The size is the number of elements actually stored in the vector, while capacity is the maximum number of elements it can store at a given instance of time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a vector contain heterogenous objects?</label>\n<div class=\"toggle-content\">\n<p>Yes a Vector can contain heterogenous objects. Because a Vector stores everything in terms of Object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an enumeration?</label>\n<div class=\"toggle-content\">\n<p>An enumeration is an interface containing methods for accessing the underlying data structure from which the enumeration is obtained. It allows sequential access to all the elements stored in the collection.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is difference between Path and Classpath?</label>\n<div class=\"toggle-content\">\n<p>Path and Classpath are operating system level environment variales. Path is defines where the system can find the executables(.exe) files and classpath is used to specify the location of .class files.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a class declared as private be accessed outside it's package?</label>\n<div class=\"toggle-content\">\n<p>No, it's not possible to accessed outside it's package.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the restriction imposed on a static method or a static block of code?</label>\n<div class=\"toggle-content\">\n<p>A static method should not refer to instance variables without creating an instance and cannot use \"this\" operator to refer the instance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can an Interface extend another Interface?</label>\n<div class=\"toggle-content\">\n<p>Yes an Interface can inherit another Interface, for that matter an Interface can extend more than one Interface.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which object oriented Concept is achieved by using overloading and overriding?</label>\n<div class=\"toggle-content\">\n<p>Polymorphism</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an object's lock and which object's have locks?</label>\n<div class=\"toggle-content\">\n<p>An object's lock is a mechanism that is used by multiple threads to obtain synchronized access to the object. A thread may execute a synchronized method of an object only after it has acquired the object's lock.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Downcasting?</label>\n<div class=\"toggle-content\">\n<p>It is the casting from a general to a more specific type, i.e. casting down the hierarchy.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are order of precedence and associativity and how are they used?</label>\n<div class=\"toggle-content\">\n<p>Order of precedence determines the order in which operators are evaluated in expressions. Associatity determines whether an expression is evaluated left-to-right or right-to-left.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If a method is declared as protected, where may the method be accessed?</label>\n<div class=\"toggle-content\">\n<p>A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between inner class and nested class?</label>\n<div class=\"toggle-content\">\n<p>When a class is defined within a scope of another class, then it becomes inner class. If the access modifier of the inner class is static, then it becomes nested class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What restrictions are placed on method overriding?</label>\n<div class=\"toggle-content\">\n<p>Overridden methods must have the same name, argument list, and return type. The overriding method may not limit the access of the method it overrides.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is constructor chaining and how is it achieved in Java?</label>\n<div class=\"toggle-content\">\n<p>A child object constructor always first needs to construct its parent. In Java it is done via an implicit call to the no-args constructor as the first statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a double value be cast to a byte?</label>\n<div class=\"toggle-content\">\n<p>Yes, a double value can be cast to a byte.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How does a try statement determine which catch clause should be used to handle an exception?</label>\n<div class=\"toggle-content\">\n<p>When an exception is thrown within the body of a try statement, the catch clauses of the try statement are examined in the order in which they appear. The first catch clause that is capable of handling the exception is executed. The remaining catch clauses are ignored.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What will be the default values of all the elements of an array defined as an instance variable?</label>\n<div class=\"toggle-content\">\n<p>If the array is an array of primitive types, then all the elements of the array will be initialized to the default value corresponding to that primitive type.</p>\n</div>\n</section>\n<h2>What is Next?</h2>\n<p>Further, you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>\n<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/java/java_questions_answers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/java/java_questions_answers.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"parent-file\">java_questions_answers.htm</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/java/java_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/java/java_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/java/java_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/java/java_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/java/java_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/java/java_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "title": "Java Interview Questions", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>Java Interview Questions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/java/java_questions_answers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/java/java_questions_answers.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>Dear readers, these <b>Java Interview Questions</b> have been designed especially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>Java Programming Language</b>. As per my experience, good interviewers hardly planned to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer \u2212</p>\n<section class=\"toggle\">\n<label> What do you know about Java?</label>\n<div class=\"toggle-content\">\n<p>Java is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the supported platforms by Java Programming Language?</label>\n<div class=\"toggle-content\">\n<p>Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX/Linux like HP-Unix, Sun Solaris, Redhat Linux, Ubuntu, CentOS, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List any five features of Java?</label>\n<div class=\"toggle-content\">\n<p>Some features include Object Oriented, Platform Independent, Robust, Interpreted, Multi-threaded</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is Java Architectural Neutral?</label>\n<div class=\"toggle-content\">\n<p>It\u2019s compiler generates an architecture-neutral object file format, which makes the compiled code to be executable on many processors, with the presence of Java runtime system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How Java enabled High Performance?</label>\n<div class=\"toggle-content\">\n<p>Java uses Just-In-Time compiler to enable high performance. Just-In-Time compiler is a program that turns Java bytecode, which is a program that contains instructions that must be interpreted into instructions that can be sent directly to the processor.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Java is considered dynamic?</label>\n<div class=\"toggle-content\">\n<p>It is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Java Virtual Machine and how it is considered in context of Java\u2019s platform independent feature?</label>\n<div class=\"toggle-content\">\n<p>When Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by virtual Machine (JVM) on whichever platform it is being run.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List two Java IDE\u2019s?</label>\n<div class=\"toggle-content\">\n<p>Netbeans, Eclipse, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List some Java keywords(unlike C, C++ keywords)?</label>\n<div class=\"toggle-content\">\n<p>Some Java keywords are import, super, finally, etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Object?</label>\n<div class=\"toggle-content\">\n<p>Object is a runtime entity and it\u2019s  state is stored in fields and behavior is shown via methods. Methods operate on an object's internal state and serve as the primary mechanism for object-to-object communication.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define class?</label>\n<div class=\"toggle-content\">\n<p>A class is a blue print from which individual objects are created. A class can contain fields and methods to describe the behavior of an object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What kind of variables a class can consist of?</label>\n<div class=\"toggle-content\">\n<p>A class consist of Local variable, instance variables and class variables.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Local Variable?</label>\n<div class=\"toggle-content\">\n<p>Variables defined inside methods, constructors or blocks are called local variables. The variable will be declared and initialized within the method and it will be destroyed when the method has completed.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Instance Variable?</label>\n<div class=\"toggle-content\">\n<p>Instance variables are variables within a class but outside any method. These variables are instantiated when the class is loaded.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Class Variable?</label>\n<div class=\"toggle-content\">\n<p>These are variables declared with in a class, outside any method, with the static keyword.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Singleton class?</label>\n<div class=\"toggle-content\">\n<p>Singleton class control object creation, limiting the number to one but allowing the flexibility to create more objects if the situation changes.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Constructor?</label>\n<div class=\"toggle-content\">\n<p>Constructor gets invoked when a new object is created. Every class has a constructor. If we do not explicitly write a constructor for a class the java compiler builds a default constructor for that class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List the three steps for creating an Object for a class?</label>\n<div class=\"toggle-content\">\n<p>An Object is first declared, then instantiated and then it is initialized.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of byte datatype in Java?</label>\n<div class=\"toggle-content\">\n<p>Default value of byte datatype is 0.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of float and double datatype in Java?</label>\n<div class=\"toggle-content\">\n<p>Default value of float and double datatype in different as compared to C/C++. For float its 0.0f and for double it\u2019s 0.0d</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When a byte datatype is used?</label>\n<div class=\"toggle-content\">\n<p>This data type is used to save space in large arrays, mainly in place of integers, since a byte is four times smaller than an int.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a static variable?</label>\n<div class=\"toggle-content\">\n<p>Class variables also known as static variables are declared with the static keyword in a class, but outside a method, constructor or a block.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Access Modifier?</label>\n<div class=\"toggle-content\">\n<p>Java provides access modifiers to set access levels for classes, variables, methods and constructors. A member has package or default accessibility when no accessibility modifier is specified.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is protected access modifier?</label>\n<div class=\"toggle-content\">\n<p>Variables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by synchronized Non Access Modifier?</label>\n<div class=\"toggle-content\">\n<p>Java provides these modifiers for providing functionalities other than Access Modifiers, synchronized used to indicate that a method can be accessed by only one thread at a time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> According to Java Operator precedence, which operator is considered to be with highest precedence?</label>\n<div class=\"toggle-content\">\n<p>Postfix operators i.e () [] . is at the highest precedence.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Variables used in a switch statement can be used with which datatypes?</label>\n<div class=\"toggle-content\">\n<p>Variables used in a switch statement can only be a string, enum, byte, short, int, or char.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When parseInt() method can be used?</label>\n<div class=\"toggle-content\">\n<p>This method is used to get the primitive data type of a certain String.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is String class considered immutable?</label>\n<div class=\"toggle-content\">\n<p>The String class is immutable, so that once it is created a String object cannot be changed. Since String is immutable it can safely be shared between many threads ,which is considered very important for multithreaded programming.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is StringBuffer called mutable?</label>\n<div class=\"toggle-content\">\n<p>The String class is considered as immutable, so that once it is created a String object cannot be changed. If there is a necessity to make alot of modifications to Strings of characters then StringBuffer should be used.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between StringBuffer and StringBuilder class?</label>\n<div class=\"toggle-content\">\n<p>Use StringBuilder whenever possible because it is faster than StringBuffer. But, if thread safety is necessary then use StringBuffer objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which package is used for pattern matching with regular expressions?</label>\n<div class=\"toggle-content\">\n<p>java.util.regex package is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> java.util.regex consists of which classes?</label>\n<div class=\"toggle-content\">\n<p>java.util.regex consists of three classes \u2212 Pattern class, Matcher class and PatternSyntaxException class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is finalize() method?</label>\n<div class=\"toggle-content\">\n<p>It is possible to define a method that will be called just before an object's final destruction by the garbage collector. This method is called finalize( ), and it can be used to ensure that an object terminates cleanly.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an Exception?</label>\n<div class=\"toggle-content\">\n<p>An exception is a problem that arises during the execution of a program. Exceptions are caught by handlers positioned along the thread's method invocation stack.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Checked Exceptions?</label>\n<div class=\"toggle-content\">\n<p>It is an exception that is typically a user error or a problem that cannot be foreseen by the programmer. For example, if a file is to be opened, but the file cannot be found, an exception occurs. These exceptions cannot simply be ignored at the time of compilation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain Runtime Exceptions?</label>\n<div class=\"toggle-content\">\n<p>It is an exception that occurs that probably could have been avoided by the programmer. As opposed to checked exceptions, runtime exceptions are ignored at the time of compliation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which are the two subclasses under Exception class?</label>\n<div class=\"toggle-content\">\n<p>The Exception class has two main subclasses : IOException class and RuntimeException Class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When throws keyword is used?</label>\n<div class=\"toggle-content\">\n<p>If a method does not handle a checked exception, the method must declare it using the throwskeyword. The throws keyword appears at the end of a method's signature.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When throw keyword is used?</label>\n<div class=\"toggle-content\">\n<p>An exception can be thrown, either a newly instantiated one or an exception that you just caught, by using throw keyword.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How finally used under Exception Handling?</label>\n<div class=\"toggle-content\">\n<p>The finally keyword is used to create a block of code that follows a try block. A finally block of code always executes, whether or not an exception has occurred.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What things should be kept in mind while creating your own exceptions in Java?</label>\n<div class=\"toggle-content\">\n<p>While creating your own exception \u2212</p>\n<ul class=\"list\"><li><p>All exceptions must be a child of Throwable.</p></li>\n<li><p>If you want to write a checked exception that is automatically enforced by the Handle or  Declare Rule, you need to extend the Exception class.</p></li>\n<li><p>You want to write a runtime exception, you need to extend the RuntimeException class.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Inheritance?</label>\n<div class=\"toggle-content\">\n<p>It is the process where one object acquires the properties of another. With the use of inheritance the information is made manageable in a hierarchical order.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When super keyword is used?</label>\n<div class=\"toggle-content\">\n<p>If the method overrides one of its superclass's methods, overridden method can be invoked through the use of the keyword super. It can be also used to refer to a hidden field.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Polymorphism?</label>\n<div class=\"toggle-content\">\n<p>Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Abstraction?</label>\n<div class=\"toggle-content\">\n<p>It refers to the ability to make a class abstract in OOP. It helps to reduce the complexity and also improves the maintainability of the system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Abstract class?</label>\n<div class=\"toggle-content\">\n<p>These classes cannot be instantiated and are either partially implemented or not at all implemented. This class contains one or more abstract methods which are simply method declarations without a body.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When Abstract methods are used?</label>\n<div class=\"toggle-content\">\n<p>If you want a class to contain a particular method but you want the actual implementation of that method to be determined by child classes, you can declare the method in the parent class as abstract.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Encapsulation?</label>\n<div class=\"toggle-content\">\n<p>It is the technique of making the fields in a class private and providing access to the fields via public methods. If a field is declared private, it cannot be accessed by anyone outside the class, thereby hiding the fields within the class. Therefore encapsulation is also referred to as data hiding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the primary benefit of Encapsulation?</label>\n<div class=\"toggle-content\">\n<p>The main benefit of encapsulation is the ability to modify our implemented code without breaking the code of others who use our code. With this Encapsulation gives maintainability, flexibility and extensibility to our code.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an Interface?</label>\n<div class=\"toggle-content\">\n<p>An interface is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Give some features of Interface?</label>\n<div class=\"toggle-content\">\n<p>It includes \u2212</p>\n<ul class=\"list\">\n<li><p>Interface cannot be instantiated</p></li>\n<li><p>An interface does not contain any constructors.</p></li>\n<li><p>All of the methods in an interface are abstract.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Packages in Java?</label>\n<div class=\"toggle-content\">\n<p>A Package can be defined as a grouping of related types(classes, interfaces, enumerations and annotations ) providing access protection and name space management.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Packages are used?</label>\n<div class=\"toggle-content\">\n<p>Packages are used in Java in-order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations, etc., easier.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What do you mean by Multithreaded program?</label>\n<div class=\"toggle-content\">\n<p>A multithreaded program contains two or more parts that can run concurrently. Each part of such a program is called a thread, and each thread defines a separate path of execution.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the two ways in which Thread can be created?</label>\n<div class=\"toggle-content\">\n<p>Thread can be created by: implementing Runnable interface, extending the Thread class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an applet?</label>\n<div class=\"toggle-content\">\n<p>An applet is a Java program that runs in a Web browser. An applet can be a fully functional Java application because it has the entire Java API at its disposal.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> An applet extend which class?</label>\n<div class=\"toggle-content\">\n<p>An applet extends java.applet.Applet class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain garbage collection in Java?</label>\n<div class=\"toggle-content\">\n<p>It uses garbage collection to free the memory. By cleaning those objects that is no longer reference by any of the program.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define immutable object?</label>\n<div class=\"toggle-content\">\n<p>An immutable object can\u2019t be changed once it is created.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain the usage of this() with constructors?</label>\n<div class=\"toggle-content\">\n<p>It is used with variables or methods and used to call constructer of same class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain Set Interface?</label>\n<div class=\"toggle-content\">\n<p>It is a collection of element which cannot contain duplicate elements. The Set interface contains only methods inherited from Collection and adds the restriction that duplicate elements are prohibited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain TreeSet?</label>\n<div class=\"toggle-content\">\n<p>It is a Set implemented when we want elements in a sorted order.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Comparable Interface?</label>\n<div class=\"toggle-content\">\n<p>It is used to sort collections and arrays of objects using the collections.sort() and java.utils. The objects of the class implementing the Comparable interface can be ordered.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Difference between throw and throws?</label>\n<div class=\"toggle-content\">\n<p>It includes:</p>\n<ul class=\"list\">\n<li><p>Throw is used to trigger an exception where as throws is used in declaration of exception.</p></li>\n<li><p>Without throws, Checked exception cannot be handled where as checked exception can be propagated with throws.</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> <b>Explain the following line used under Java Program \u2212</b>\n<p>public static void main (String args[ ])</p></label>\n<div class=\"toggle-content\">\n<p>The following shows the explanation individually \u2212</p>\n<ul class=\"list\">\n<li><p>public \u2212 it is the access specifier.</p></li>\n<li><p>static \u2212 it allows main() to be called without instantiating a particular instance of a class.</p></li>\n<li><p>void \u2212 it affirns the compiler that no value is returned by main().</p></li>\n<li><p>main() \u2212 this method is called at the beginning of a Java program.</p></li>\n<li><p>String args[ ] \u2212 args parameter is an instance array of class String</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define JRE i.e. Java Runtime Environment?</label>\n<div class=\"toggle-content\">\n<p>Java Runtime Environment is an implementation of the Java Virtual Machine which executes Java programs. It provides the minimum requirements for executing a Java application;</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is JAR file?</label>\n<div class=\"toggle-content\">\n<p>JAR files is Java Archive fles and it aggregates many files into one. It holds Java classes in a library. JAR files are built on ZIP file format and have .jar file extension.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a WAR file?</label>\n<div class=\"toggle-content\">\n<p>This is Web Archive File and used to store XML, java classes, and JavaServer pages. which is used to distribute a collection of JavaServer Pages, Java Servlets, Java classes, XML files, static Web pages etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define JIT compiler?</label>\n<div class=\"toggle-content\">\n<p>It improves the runtime performance of computer programs based on bytecode.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between object oriented programming language and object based programming language?</label>\n<div class=\"toggle-content\">\n<p>Object based programming languages follow all the features of OOPs except Inheritance. JavaScript is an example of object based programming languages.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of default constructor?</label>\n<div class=\"toggle-content\">\n<p>The java compiler creates a default constructor only if there is no constructor in the class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a constructor be made final?</label>\n<div class=\"toggle-content\">\n<p>No, this is not possible.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is static block?</label>\n<div class=\"toggle-content\">\n<p>It is used to initialize the static data member, It is excuted before main method at the time of classloading.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define composition?</label>\n<div class=\"toggle-content\">\n<p>Holding the reference of the other class within some other class is known as composition.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is function overloading?</label>\n<div class=\"toggle-content\">\n<p>If a class has multiple functions by same name but different parameters, it is known as Method Overloading.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is function overriding?</label>\n<div class=\"toggle-content\">\n<p>If a subclass provides a specific implementation of a method that is already provided by its parent class, it is known as Method Overriding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Difference between Overloading and Overriding?</label>\n<div class=\"toggle-content\">\n<p>Method overloading increases the readability of the program. Method overriding provides the specific implementation of the method that is already provided by its super class parameter must be different in case of overloading, parameter must be same in case of overriding.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is final class?</label>\n<div class=\"toggle-content\">\n<p>Final classes are created so the methods implemented by that class cannot be overridden. It can\u2019t be inherited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is NullPointerException?</label>\n<div class=\"toggle-content\">\n<p>A NullPointerException is thrown when calling the instance method of a null object, accessing or modifying the field of a null object etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the ways in which a thread can enter the waiting state?</label>\n<div class=\"toggle-content\">\n<p>A thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How does multi-threading take place on a computer with a single CPU?</label>\n<div class=\"toggle-content\">\n<p>The operating system's task scheduler allocates execution time to multiple tasks. By quickly switching between executing tasks, it creates the impression that tasks execute sequentially.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What invokes a thread's run() method?</label>\n<div class=\"toggle-content\">\n<p>After a thread is started, via its start() method of the Thread class, the JVM invokes the thread's run() method when the thread is initially executed.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does it matter in what order catch statements for FileNotFoundException and IOException are written?</label>\n<div class=\"toggle-content\">\n<p>Yes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between yielding and sleeping?</label>\n<div class=\"toggle-content\">\n<p>When a task invokes its yield() method, it returns to the ready state. When a task invokes its sleep() method, it returns to the waiting state.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Vector class is used?</label>\n<div class=\"toggle-content\">\n<p>The Vector class provides the capability to implement a growable array of objects. Vector proves to be very useful if you don't know the size of the array in advance, or you just need one that can change sizes over the lifetime of a program.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters?</label>\n<div class=\"toggle-content\">\n<p>Unicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are Wrapper classes?</label>\n<div class=\"toggle-content\">\n<p>These are classes that allow primitive types to be accessed as objects. Example: Integer, Character, Double, Boolean etc.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between a Window and a Frame?</label>\n<div class=\"toggle-content\">\n<p>The Frame class extends Window to define a main application window that can have a menu bar.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which package has light weight components?</label>\n<div class=\"toggle-content\">\n<p>javax.Swing package. All components in Swing, except JApplet, JDialog, JFrame and JWindow are lightweight components.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the paint() and repaint() methods?</label>\n<div class=\"toggle-content\">\n<p>The paint() method supports painting via a Graphics object. The repaint() method is used to cause paint() to be invoked by the AWT painting thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of File class?</label>\n<div class=\"toggle-content\">\n<p>It is used to create objects that provide access to the files and directories of a local file system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?</label>\n<div class=\"toggle-content\">\n<p>The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class should you use to obtain design information about an object?</label>\n<div class=\"toggle-content\">\n<p>The Class class is used to obtain information about an object's design and java.lang.Class class instance represent classes, interfaces in a running Java application.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between static and non-static variables?</label>\n<div class=\"toggle-content\">\n<p>A static variable is associated with the class as a whole rather than with specific instances of a class. Non-static variables take on unique values with each object instance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Serialization and deserialization?</label>\n<div class=\"toggle-content\">\n<p>Serialization is the process of writing the state of an object to a byte stream. Deserialization is the process of restoring these objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are use cases?</label>\n<div class=\"toggle-content\">\n<p>It is part of the analysis of a program and describes a situation that a program might encounter and what behavior the program should exhibit in that circumstance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain the use of sublass in a Java program?</label>\n<div class=\"toggle-content\">\n<p>Sub class inherits all the public and protected methods and the implementation. It also inherits all the default modifier methods and their implementation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How to add menushortcut to menu item?</label>\n<div class=\"toggle-content\">\n<p>If there is a button instance called b1, you may add menu short cut by calling b1.setMnemonic('F'), so the user may be able to use Alt+F to click the button.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can you write a Java class that could be used both as an applet as well as an application?</label>\n<div class=\"toggle-content\">\n<p>Yes, just add a main() method to the applet.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between Swing and AWT components?</label>\n<div class=\"toggle-content\">\n<p>AWT components are heavy-weight, whereas Swing components are lightweight. Heavy weight components depend on the local windowing toolkit. For example, java.awt.Button is a heavy weight component, when it is running on the Java platform for Unix platform, it maps to a real Motif button.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What's the difference between constructors and other methods?</label>\n<div class=\"toggle-content\">\n<p>Constructors must have the same name as the class and can not return a value. They are only called once while regular methods could be called many times.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is there any limitation of using Inheritance?</label>\n<div class=\"toggle-content\">\n<p>Yes, since inheritance inherits everything from the super class and interface, it may make the subclass too clustering and sometimes error-prone when dynamic overriding or dynamic overloading in some situation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When is the ArrayStoreException thrown?</label>\n<div class=\"toggle-content\">\n<p>When copying elements between different arrays, if the source or destination arguments are not arrays or their types are not compatible, an ArrayStoreException will be thrown.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can you call one constructor from another if a class has multiple constructors?</label>\n<div class=\"toggle-content\">\n<p>Yes, use this() syntax.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What's the difference between the methods sleep() and wait()?</label>\n<div class=\"toggle-content\">\n<p>The code sleep(2000); puts thread aside for exactly two seconds. The code wait(2000), causes a wait of up to two second. A thread could stop waiting earlier if it receives the notify() or notifyAll() call. The method wait() is defined in the class Object and the method sleep() is defined in the class Thread. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When ArithmeticException is thrown?</label>\n<div class=\"toggle-content\">\n<p>The ArithmeticException is thrown when integer is divided by zero or taking the remainder of a number by zero. It is never thrown in floating-point operations.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a transient variable?</label>\n<div class=\"toggle-content\">\n<p>A transient variable is a variable that may not be serialized during Serialization and which is initialized by its default value during de-serialization,</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is synchronization?</label>\n<div class=\"toggle-content\">\n<p>Synchronization is the capability to control the access of multiple threads to shared resources. synchronized keyword in java provides locking which ensures mutual exclusive access of shared resource and prevent data race.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the Collections API?</label>\n<div class=\"toggle-content\">\n<p>The Collections API is a set of classes and interfaces that support operations on collections of objects.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does garbage collection guarantee that a program will not run out of memory?</label>\n<div class=\"toggle-content\">\n<p>Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> The immediate superclass of the Applet class?</label>\n<div class=\"toggle-content\">\n<p>Panel is the immediate superclass. A panel provides space in which an application can attach any other component, including other panels.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which Java operator is right associative?</label>\n<div class=\"toggle-content\">\n<p>The = operator is right associative.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between a break statement and a continue statement?</label>\n<div class=\"toggle-content\">\n<p>A break statement results in the termination of the statement to which it applies (switch, for, do, or while). A continue statement is used to end the current loop iteration and return control to the loop statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If a variable is declared as private, where may the variable be accessed?</label>\n<div class=\"toggle-content\">\n<p>A private variable may only be accessed within the class in which it is declared.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the purpose of the System class?</label>\n<div class=\"toggle-content\">\n<p>The purpose of the System class is to provide access to system resources.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> List primitive Java types?</label>\n<div class=\"toggle-content\">\n<p>The eight primitive types are byte, char, short, int, long, float, double, and boolean.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the relationship between clipping and repainting under AWT?</label>\n<div class=\"toggle-content\">\n<p>When a window is repainted by the AWT painting thread, it sets the clipping regions to the area of the window that requires repainting.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class is the immediate superclass of the Container class?</label>\n<div class=\"toggle-content\">\n<p>Component class is the immediate super class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What class of exceptions are generated by the Java run-time system?</label>\n<div class=\"toggle-content\">\n<p>The Java runtime system generates RuntimeException and Error exceptions.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Under what conditions is an object's finalize() method invoked by the garbage collector?</label>\n<div class=\"toggle-content\">\n<p>The garbage collector invokes an object's finalize() method when it detects that the object has become unreachable.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How can a dead thread be restarted?</label>\n<div class=\"toggle-content\">\n<p>A dead thread cannot be restarted.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which arithmetic operations can result in the throwing of an ArithmeticException?</label>\n<div class=\"toggle-content\">\n<p>Integer / and % can result in the throwing of an ArithmeticException.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Variable of the boolean type is automatically initialized as?</label>\n<div class=\"toggle-content\">\n<p>The default value of the boolean type is false.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can try statements be nested?</label>\n<div class=\"toggle-content\">\n<p>Yes</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are ClassLoaders?</label>\n<div class=\"toggle-content\">\n<p>A class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between an Interface and an Abstract class?</label>\n<div class=\"toggle-content\">\n<p>An abstract class can have instance methods that implement a default behavior. An Interface can only declare constants and instance methods, but cannot implement default behavior and all methods are implicitly abstract. An interface has all public members and no implementation.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What will happen if static modifier is removed from the signature of the main method?</label>\n<div class=\"toggle-content\">\n<p>Program throws \"NoSuchMethodError\" error at runtime.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the default value of an object reference declared as an instance variable?</label>\n<div class=\"toggle-content\">\n<p>Null, unless it is defined explicitly.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a top level class be private or protected?</label>\n<div class=\"toggle-content\">\n<p>No, a top level class can not be private or protected. It can have either \"public\" or no modifier. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why do we need wrapper classes?</label>\n<div class=\"toggle-content\">\n<p>We can pass them around as method parameters where a method expects an object. It also provides utility methods.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between error and an exception?</label>\n<div class=\"toggle-content\">\n<p>An error is an irrecoverable condition occurring at runtime. Such as OutOfMemory error. Exceptions are conditions that occur because of bad input etc. e.g. FileNotFoundException will be thrown if the specified file does not exist.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is it necessary that each try block must be followed by a catch block?</label>\n<div class=\"toggle-content\">\n<p>It is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block or a finally block.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> When a thread is created and started, what is its initial state?</label>\n<div class=\"toggle-content\">\n<p>A thread is in the ready state as initial state after it has been created and started.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the Locale class?</label>\n<div class=\"toggle-content\">\n<p>The Locale class is used to tailor program output to the conventions of a particular geographic, political, or cultural region.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are synchronized methods and synchronized statements?</label>\n<div class=\"toggle-content\">\n<p>Synchronized methods are methods that are used to control access to an object. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is runtime polymorphism or dynamic method dispatch?</label>\n<div class=\"toggle-content\">\n<p>Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Dynamic Binding(late binding)?</label>\n<div class=\"toggle-content\">\n<p>Binding refers to the linking of a procedure call to the code to be executed in response to the call. Dynamic binding means that the code associated with a given procedure call is not known until the time of the call at run-time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can constructor be inherited?</label>\n<div class=\"toggle-content\">\n<p>No, constructor cannot be inherited.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the advantages of ArrayList over arrays?</label>\n<div class=\"toggle-content\">\n<p>ArrayList can grow dynamically and provides more powerful insertion and search mechanisms than arrays.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why deletion in LinkedList is fast than ArrayList?</label>\n<div class=\"toggle-content\">\n<p>Deletion in linked list is fast because it involves only updating the next pointer in the node before the deleted node and updating the previous pointer in the node after the deleted node.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How do you decide when to use ArrayList and LinkedList?</label>\n<div class=\"toggle-content\">\n<p>If you need to frequently add and remove elements from the middle of the list and only access the list elements sequentially, then LinkedList should be used. If you need to support random access, without inserting or removing elements from any place other than the end, then ArrayList should be used.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Values Collection View ?</label>\n<div class=\"toggle-content\">\n<p>It is a collection returned by the values() method of the Map Interface, It contains all the objects present as values in the map.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is dot operator?</label>\n<div class=\"toggle-content\">\n<p>The dot operator(.) is used to access the instance variables and methods of class objects.It is also used to access classes and sub-packages from a package.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Where and how can you use a private constructor?</label>\n<div class=\"toggle-content\">\n<p>Private constructor is used if you do not want other classes to instantiate the object and to prevent subclassing.T</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is type casting?</label>\n<div class=\"toggle-content\">\n<p>Type casting means treating a variable of one type as though it is another type.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Describe life cycle of thread?</label>\n<div class=\"toggle-content\">\n<p>A thread is a execution in a program. The life cycle of a thread include \u2212</p>\n<ul class=\"list\">\n<li>Newborn state</li>\n<li>Runnable state</li>\n<li>Running state</li>\n<li>Blocked state</li>\n<li>Dead state</li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the &gt;&gt; and &gt;&gt;&gt; operators?</label>\n<div class=\"toggle-content\">\n<p>The &gt;&gt; operator carries the sign bit when shifting right. The &gt;&gt;&gt; zero-fills bits that have been shifted out. </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method of the Component class is used to set the position and size of a component?</label>\n<div class=\"toggle-content\">\n<p>setBounds() method is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the range of the short type?</label>\n<div class=\"toggle-content\">\n<p>The range of the short type is -(2^15) to 2^15 - 1.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the immediate superclass of Menu?</label>\n<div class=\"toggle-content\">\n<p>MenuItem class</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Does Java allow Default Arguments?</label>\n<div class=\"toggle-content\">\n<p>No, Java does not allow Default Arguments.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which number is denoted by leading zero in java?</label>\n<div class=\"toggle-content\">\n<p>Octal Numbers are denoted by leading zero in java, example: 06</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which number is denoted by leading 0x or 0X in java?</label>\n<div class=\"toggle-content\">\n<p>Hexadecimal Numbers are denoted by leading 0x or 0X in java, example \u2212 0XF </p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Break statement can be used as labels in Java?</label>\n<div class=\"toggle-content\">\n<p>Yes, an example can be <i>break one;</i></p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Where import statement is used in a Java program?</label>\n<div class=\"toggle-content\">\n<p>Import statement is allowed at the beginning of the program file after package statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain suspend() method under Thread class&gt;</label>\n<div class=\"toggle-content\">\n<p>It is used to pause or temporarily stop the execution of the thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain isAlive() method under Thread class?</label>\n<div class=\"toggle-content\">\n<p>It is used to find out whether a thread is still running or not.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is currentThread()?</label>\n<div class=\"toggle-content\">\n<p>It is a public static method used to obtain a reference to the current thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Explain main thread under Thread class execution?</label>\n<div class=\"toggle-content\">\n<p>The main thread is created automatically and it begins to execute immediately when a program starts. It ia thread from which all other child threads originate.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Life cycle of an applet includes which steps?</label>\n<div class=\"toggle-content\">\n<p>Life cycle involves the following steps \u2212</p>\n<ul class=\"list\">\n<li><p>Initialization</p></li>\n<li><p>Starting</p></li>\n<li><p>Stopping</p></li>\n<li><p>Destroying</p></li>\n<li><p>Painting</p></li>\n</ul>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why is the role of init() method under applets?</label>\n<div class=\"toggle-content\">\n<p>It initializes the applet and is the first method to be called.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method is called by Applet class to load an image?</label>\n<div class=\"toggle-content\">\n<p>getImage(URL object, filename) is used for this purpose.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define code as an attribute of Applet?</label>\n<div class=\"toggle-content\">\n<p>It is used to specify the name of the applet class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define canvas?</label>\n<div class=\"toggle-content\">\n<p>It is a simple drawing surface which are used for painting images or to perform other graphical operations.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Define Network Programming?</label>\n<div class=\"toggle-content\">\n<p>It refers to writing programs that execute across multiple devices (computers), in which the devices are all connected to each other using a network.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is a Socket?</label>\n<div class=\"toggle-content\">\n<p>Sockets provide the communication mechanism between two computers using TCP. A client program creates a socket on its end of the communication and attempts to connect that socket to a server.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Advantages of Java Sockets?</label>\n<div class=\"toggle-content\">\n<p>Sockets are flexible and sufficient. Efficient socket based programming can be easily implemented for general communications. It cause low network traffic.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Disadvantages of Java Sockets?</label>\n<div class=\"toggle-content\">\n<p>Socket based communications allows only to send packets of raw data between applications. Both the client-side and server-side have to provide mechanisms to make the data useful in any way.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class is used by server applications to obtain a port and listen for client requests?</label>\n<div class=\"toggle-content\">\n<p>java.net.ServerSocket class is used by server applications to obtain a port and listen for client requests</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which class represents the socket that both the client and server use to communicate with each other?</label>\n<div class=\"toggle-content\">\n<p>java.net.Socket class represents the socket that both the client and server use to communicate with each other.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Why Generics are used in Java?</label>\n<div class=\"toggle-content\">\n<p>Generics provide compile-time type safety that allows programmers to catch invalid types at compile time. Java Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods or, with a single class declaration, a set of related types.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What environment variables do I need to set on my machine in order to be able to run Java programs?</label>\n<div class=\"toggle-content\">\n<p>CLASSPATH and PATH are the two variables.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Is there any need to import java.lang package?</label>\n<div class=\"toggle-content\">\n<p>No, there is no need to import this package. It is by default loaded internally by the JVM.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Nested top-level class?</label>\n<div class=\"toggle-content\">\n<p>If a class is declared within a class and specify the static modifier, the compiler treats the class just like any other top-level class. Nested top-level class is an Inner class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Externalizable interface?</label>\n<div class=\"toggle-content\">\n<p>Externalizable is an interface which contains two methods readExternal and writeExternal. These methods give you a control over the serialization mechanism.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If System.exit (0); is written at the end of the try block, will the finally block still execute?</label>\n<div class=\"toggle-content\">\n<p>No in this case the finally block will not execute because when you say System.exit (0); the control immediately goes out of the program, and thus finally never executes.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is daemon thread?</label>\n<div class=\"toggle-content\">\n<p>Daemon thread is a low priority thread, which runs intermittently in the back ground doing the garbage collection operation for the java runtime system.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method is used to create the daemon thread?</label>\n<div class=\"toggle-content\">\n<p>setDaemon method is used to create a daemon thread.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which method must be implemented by all threads?</label>\n<div class=\"toggle-content\">\n<p>All tasks must implement the run() method</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the GregorianCalendar class?</label>\n<div class=\"toggle-content\">\n<p>The GregorianCalendar provides support for traditional Western calendars</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the SimpleTimeZone class?</label>\n<div class=\"toggle-content\">\n<p>The SimpleTimeZone class provides support for a Gregorian calendar .</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between the size and capacity of a Vector?</label>\n<div class=\"toggle-content\">\n<p>The size is the number of elements actually stored in the vector, while capacity is the maximum number of elements it can store at a given instance of time.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a vector contain heterogenous objects?</label>\n<div class=\"toggle-content\">\n<p>Yes a Vector can contain heterogenous objects. Because a Vector stores everything in terms of Object.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an enumeration?</label>\n<div class=\"toggle-content\">\n<p>An enumeration is an interface containing methods for accessing the underlying data structure from which the enumeration is obtained. It allows sequential access to all the elements stored in the collection.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is difference between Path and Classpath?</label>\n<div class=\"toggle-content\">\n<p>Path and Classpath are operating system level environment variales. Path is defines where the system can find the executables(.exe) files and classpath is used to specify the location of .class files.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a class declared as private be accessed outside it's package?</label>\n<div class=\"toggle-content\">\n<p>No, it's not possible to accessed outside it's package.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are the restriction imposed on a static method or a static block of code?</label>\n<div class=\"toggle-content\">\n<p>A static method should not refer to instance variables without creating an instance and cannot use \"this\" operator to refer the instance.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can an Interface extend another Interface?</label>\n<div class=\"toggle-content\">\n<p>Yes an Interface can inherit another Interface, for that matter an Interface can extend more than one Interface.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Which object oriented Concept is achieved by using overloading and overriding?</label>\n<div class=\"toggle-content\">\n<p>Polymorphism</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is an object's lock and which object's have locks?</label>\n<div class=\"toggle-content\">\n<p>An object's lock is a mechanism that is used by multiple threads to obtain synchronized access to the object. A thread may execute a synchronized method of an object only after it has acquired the object's lock.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is Downcasting?</label>\n<div class=\"toggle-content\">\n<p>It is the casting from a general to a more specific type, i.e. casting down the hierarchy.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What are order of precedence and associativity and how are they used?</label>\n<div class=\"toggle-content\">\n<p>Order of precedence determines the order in which operators are evaluated in expressions. Associatity determines whether an expression is evaluated left-to-right or right-to-left.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> If a method is declared as protected, where may the method be accessed?</label>\n<div class=\"toggle-content\">\n<p>A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is the difference between inner class and nested class?</label>\n<div class=\"toggle-content\">\n<p>When a class is defined within a scope of another class, then it becomes inner class. If the access modifier of the inner class is static, then it becomes nested class.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What restrictions are placed on method overriding?</label>\n<div class=\"toggle-content\">\n<p>Overridden methods must have the same name, argument list, and return type. The overriding method may not limit the access of the method it overrides.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What is constructor chaining and how is it achieved in Java?</label>\n<div class=\"toggle-content\">\n<p>A child object constructor always first needs to construct its parent. In Java it is done via an implicit call to the no-args constructor as the first statement.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> Can a double value be cast to a byte?</label>\n<div class=\"toggle-content\">\n<p>Yes, a double value can be cast to a byte.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> How does a try statement determine which catch clause should be used to handle an exception?</label>\n<div class=\"toggle-content\">\n<p>When an exception is thrown within the body of a try statement, the catch clauses of the try statement are examined in the order in which they appear. The first catch clause that is capable of handling the exception is executed. The remaining catch clauses are ignored.</p>\n</div>\n</section>\n<section class=\"toggle\">\n<label> What will be the default values of all the elements of an array defined as an instance variable?</label>\n<div class=\"toggle-content\">\n<p>If the array is an array of primitive types, then all the elements of the array will be initialized to the default value corresponding to that primitive type.</p>\n</div>\n</section>\n<h2>What is Next?</h2>\n<p>Further, you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>\n<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/java/java_questions_answers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/java/java_questions_answers.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"parent-file\">java_questions_answers.htm</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>"}