{"content": "comments By Nils Schl\u00fcter , Software Engineer Tuning Hyperparameters for your neural network can be tricky (Photo by Anthony Roberts on Unsplash ) Hyperparameter Tuning is one of the most computationally expensive tasks when creating deep learning networks. Luckily, you can use Google Colab to speed up the process significantly. In this post, I will show you how you can tune the hyperparameters of your existing keras models using Hyperas and run everything in a Google Colab Notebook. \u00a0 Creating a new notebook and enable the GPU\u00a0Runtime Dialog to change the runtime to\u00a0GPU First, you need to create a new notebook. Open your\u00a0 Colab Console\u00a0 and select\u00a0 New Python 3 Notebook. \u00a0In your notebook, choose\u00a0 Runtime\u00a0 from the menu and then\u00a0 Change runtime type. Select Hardware accelerator: GPU and hit save. This will significantly speed up every calculation you do in this notebook. \u00a0 Installing the\u00a0packages You can install new packages using\u00a0 pip . In this case, we need\u00a0 hyperas \u00a0and\u00a0 hyperopt . Copy and paste the following into the first cell of your notebook: !pip install hyperas\r !pip install hyperopt When you run the cell you will see that pip is downloading and installing the dependencies. \u00a0 Getting the data and creating the\u00a0model \u00a0 For this post I\u2019m going to use the example from the\u00a0 hyperas github page . You can find the finished Colab Notebook\u00a0 here . \u00a0 Data Function You\u2019ll need a data function to load your data. It needs to return your X_train, Y_train, X_test and Y_test values. Here is an example for a data function: Note:\u00a0 Your data function needs to return the values in exactly this order: X_train, Y_train, X_test, Y_test. Be careful if you\u2019re using scikit learns\u00a0 train_test_split , as this returns the values in a different order \u00a0 Model Function The Model Function is where you define your model. You can use your all available keras functions and layers. To add Hyperparameters for tuning, you can use the {{}} and {{}} keywords. Let\u2019s say you want to try out different values for your\u00a0 batch_size . You can simply write\u00a0 batch_size={{}} \u00a0and during each trial, one of the values will be chosen and tried out\u00a0. A more in-depth explanation on how to define the parameters to tune can be found on the\u00a0 Hyperas Github Page \u00a0or you can look at the example: Note:\u00a0 Your model function has to return a python dictionary with a loss key and a status key \u00a0 Problems with\u00a0Colab \u00a0 If you try to run this example now, the trial will fail because Hyperas won\u2019t be able to find your notebook. You need to copy your notebook and upload it again to your google drive folder. Luckily, you can do this from inside your notebook as described in this\u00a0 stackoverflow answer . Note:\u00a0 In lines 16 and 18, you\u2019ll need to change\u00a0 HyperasMediumExample\u00a0 to the name of your own notebook After running this cell, you will be prompted to open a website in your browser and copy & paste a code back into the notebook: The output after you run the cell\u00a0above Follow the link, log in with your google account and copy & paste the code back into the notebook. If you open the\u00a0 Files\u00a0 Tab in the left sidebar, you should now see a File called .ipynb \u00a0 Starting the\u00a0Trial Now you can start the trial. Be careful, you have to set the parameter\u00a0 notebook_name \u00a0to the name of your Notebook. Otherwise the Trial will fail: After running this cell, the Scan starts you can see the result in the output of the cell. \u00a0 Troubleshooting \u00a0 If you have any problems while doing this, I recommend to do the following: In the left sidebar, open\u00a0 Files.\u00a0 There will be a file called .ipynb. Delete that file In the menu, select\u00a0 Runtime\u00a0 and then\u00a0 Restart Runtime . Reload the page After your runtime is connected again, you can start again by running every cell from top to bottom \u00a0 Conclusion \u00a0 With just a few tweaks you can use Google colab to tune the hyperparameters of your keras network. Again, the full example can be found\u00a0 here . \u00a0 Bio: Nils Schl\u00fcter ( @schlueter_nils ) is a Software Engineer & Machine learning enthusiast. Original . Reposted with permission. Related: The Current State of Automated Machine Learning Auto-Keras, or How You can Create a Deep Learning Model in 4 Lines of Code Automated Machine Learning vs Automated Data Science", "title_html": "<h1 id=\"title\">Keras Hyperparameter Tuning in Google Colab Using Hyperas</h1> ", "url": "https://www.kdnuggets.com/2018/12/keras-hyperparameter-tuning-google-colab-hyperas.html", "tfidf": {"tfidf": {"after": 4.08280828084, "relat": 1.23750876919, "googl": 56.944045911, "ipynb": 3175.2, "permiss": 6.280063291139999, "this": 13.049317147230001, "post": 4.47652615254, "here": 7.26923076924, "nil": 143.6742081448, "pip": 542.769230768, "new": 4.0715522216, "speed": 7.740614334480001, "xtrain": 3175.2, "describ": 1.47027227264, "paramet": 34.513043478200004, "layer": 8.14153846154, "learn": 13.936503291900001, "care": 4.98853102906, "function": 19.96353348, "neural": 59.4606741573, "log": 13.6744186047, "notebooknam": 1587.6, "python": 112.5957446808, "just": 1.33580143037, "valu": 11.388809182200001, "simpli": 2.5192002538900002, "dure": 1.0503473370799998, "enthusiast": 9.39408284024, "defin": 5.45660766454, "expens": 3.5453327378300004, "code": 11.64214128576, "recommend": 3.9142011834300003, "won": 2.31732593782, "where": 1.06715063521, "robert": 1.8618505922400002, "save": 2.8178913737999998, "dialog": 71.8371040724, "creat": 6.2464589235000005, "prompt": 4.44456886898, "run": 10.89849955866, "how": 4.80750984153, "enabl": 3.5421686747, "repost": 933.882352941, "load": 6.80497213888, "dictionari": 5.2292490118599995, "order": 2.49250333622, "found": 2.2277415281, "autom": 59.460674157300005, "abl": 1.8208510150200001, "deep": 7.2559414990799995, "depend": 2.2411067193700003, "will": 9.79848788768, "the": 50.0, "open": 4.98226894712, "hyperasmediumexampl": 1587.6, "otherwis": 3.72151898734, "select": 6.07035432066, "troubleshoot": 248.0625, "need": 10.06083650187, "exact": 3.46864758575, "there": 1.04091266719, "colab": 9525.599999999999, "connect": 1.8843916913900003, "tune": 62.5039370076, "num": 4.00126016004, "hardwar": 18.8104265403, "say": 1.7544480053, "exampl": 7.5241706161, "has": 1.0436497502, "have": 2.0297896822799997, "stackoverflow": 1587.6, "use": 8.237110059039999, "follow": 3.1392037964699995, "now": 3.4823426189999998, "unsplash": 1587.6, "tri": 5.563368765329999, "name": 2.20423464074, "out": 2.12033388982, "model": 14.6341848828, "see": 3.81726376533, "batchsiz": 3175.2, "output": 15.353965183760002, "browser": 68.1373390558, "hyperparamet": 7938.0, "start": 5.06694326976, "everyth": 4.81967213115, "loss": 2.42529789184, "acceler": 8.15408320493, "task": 3.88641370869, "hypera": 9525.599999999999, "signific": 2.9058295964200003, "past": 6.05107356117, "restart": 32.2682926829, "autokera": 1587.6, "machin": 12.073003802279999, "want": 1.99698113208, "problem": 3.53349655018, "xtest": 3175.2, "instal": 18.9360687023, "case": 1.48498737256, "let": 3.48616600791, "scienc": 2.31969608416, "bio": 42.336000000000006, "chosen": 3.59266802444, "github": 3175.2, "tweak": 113.4, "that": 2.0079681275, "calcul": 6.12972972973, "one": 2.01254991444, "show": 1.26703910615, "schlueternil": 1587.6, "softwar": 20.5248868778, "status": 2.4636871508400002, "full": 1.66729678639, "becaus": 1.1495184997499999, "anthoni": 6.01819560273, "get": 1.78562591385, "network": 7.781081522639999, "consol": 20.275862069000002, "should": 1.6643254009900001, "add": 4.61243463103, "file": 18.855106888349997, "process": 1.69524826482, "cell": 49.7234899329, "kera": 2506.736842104, "set": 1.18707940781, "ani": 1.13383802314, "when": 2.0415353951, "tab": 54.1843003413, "from": 4.00226885988, "engin": 4.94271481942, "back": 2.52140077822, "account": 1.94463498285, "answer": 4.64890190337, "differ": 2.4730898045, "most": 1.02096463023, "left": 2.8797387992, "return": 5.58129724028, "tricki": 115.883211679, "for": 5.0015752000500004, "drive": 2.93510815308, "fail": 3.8562059752199995, "all": 1.01146788991, "top": 1.8387769284200002, "bottom": 6.27261951798, "with": 5.005991044949999, "ytrain": 3175.2, "explan": 6.50922509225, "exist": 1.4647107666799999, "current": 1.5325803649, "result": 1.14611608432, "look": 1.9086318826599997, "insid": 2.7396031061299997, "call": 2.1353059852, "more": 1.0171706817, "and": 20.0012598426, "while": 1.0441988950299999, "indepth": 1587.6, "finish": 3.22879804759, "keyword": 139.263157895, "websit": 2.52160101652, "comment": 3.05954904606, "again": 6.03535449536, "state": 1.0477133240899998, "download": 14.6457564576, "then": 2.17315721032, "can": 19.99644365414, "avail": 1.7288467821, "comput": 3.9277585353800006, "photo": 6.41973311767, "write": 2.0575427682700003, "runtim": 1111.32, "each": 1.18974820144, "ytest": 3175.2, "few": 1.31729173581, "key": 4.5601034037, "menu": 122.5945945946, "reload": 79.7788944724, "upload": 77.82352941180001, "packag": 15.656804733720001, "link": 2.15151104486, "trial": 20.20875763745, "type": 2.0281042411900003, "data": 23.63504891538, "note": 4.27348586811, "notebook": 602.8860759495, "into": 3.04507384437, "schl\u00fcter": 3175.2, "origin": 1.13724928367, "abov": 1.90382539873, "scan": 18.8104265403, "scikit": 1587.6, "traintestsplit": 1587.6, "first": 2.01523229246, "everi": 2.95835274388, "copi": 15.350253807120001, "luckili": 382.554216868, "choos": 4.17899447223, "page": 6.11007055806, "delet": 22.1731843575, "folder": 168.893617021, "chang": 3.5426956263, "find": 3.4588235294199996, "hit": 3.1166077738499998, "sidebar": 992.25, "line": 2.8365195640599996, "hyperopt": 3175.2, "conclus": 4.84615384615, "own": 1.17844418052}, "logtfidf": {"after": 0.08196277859239999, "relat": 0.21310030165399999, "googl": 12.1631561129, "ipynb": 14.739957441820001, "permiss": 1.8373800586400002, "this": 0.0492238376825, "post": 1.6114003054019999, "here": 2.6551145651100003, "nil": 8.548802224780001, "pip": 19.64155951644, "new": 0.0709197874044, "speed": 2.7066677505400003, "xtrain": 14.739957441820001, "describ": 0.385447603125, "paramet": 5.696380287719999, "layer": 2.0969791623500003, "learn": 5.05651238847, "care": 1.8279886058219998, "function": 7.315725932752, "neural": 4.0853151555, "log": 2.61552683221, "notebooknam": 7.369978720910001, "python": 8.06131348592, "just": 0.289531434109, "valu": 4.11596655074, "simpli": 0.923941491586, "dure": 0.0491209066894, "enthusiast": 2.24008000599, "defin": 2.0073602185, "expens": 1.26563201674, "code": 4.06805728791, "recommend": 1.36461126863, "won": 0.8404139079, "where": 0.0649921387457, "robert": 0.6215709351609999, "save": 1.03598886547, "dialog": 4.2744011123900005, "creat": 1.1128840925699999, "prompt": 1.4916828719100002, "run": 3.0990048287730003, "how": 1.4147008707900002, "enabl": 1.26473915954, "repost": 6.83935046985, "load": 1.91765354188, "dictionari": 1.65426767539, "order": 0.44028076158600005, "found": 0.215682248096, "autom": 8.960108600489999, "abl": 0.599303982475, "deep": 2.5773469396, "depend": 0.806969815, "will": 1.62229227932, "the": 0.0, "open": 0.878364152116, "hyperasmediumexampl": 7.369978720910001, "otherwis": 1.3141319148700001, "select": 2.114414061399, "troubleshoot": 5.51368073054, "need": 2.539181144094, "exact": 1.2437647732500001, "there": 0.0400978929255, "colab": 44.21987232546, "connect": 0.633605058682, "tune": 14.06082046596, "num": 0.0012599615815880002, "hardwar": 2.93441131931, "say": 0.562154280552, "exampl": 2.0434133749949996, "has": 0.0427239448548, "have": 0.0295700046824, "stackoverflow": 7.369978720910001, "use": 0.2336641578528, "follow": 0.1360707332826, "now": 0.44727883506300004, "unsplash": 7.369978720910001, "tri": 1.8527745874800001, "name": 0.19446633276860004, "out": 0.1168527818386, "model": 5.162150511777001, "see": 0.722764756476, "batchsiz": 14.739957441820001, "output": 4.07645315654, "browser": 4.22152536034, "hyperparamet": 36.849893604550005, "start": 0.945773477164, "everyth": 1.57270590317, "loss": 0.885954358842, "acceler": 2.0985188085299997, "task": 1.35748680661, "hypera": 44.21987232546, "signific": 0.747143488664, "past": 2.1048702472830003, "restart": 3.47408509741, "autokera": 7.369978720910001, "machin": 4.17707874186, "want": 0.6916366062549999, "problem": 1.138281448546, "xtest": 14.739957441820001, "instal": 6.658152939500001, "case": 0.395406268889, "let": 1.2488025672799998, "scienc": 0.841436178891, "bio": 3.7456377879300002, "chosen": 1.27889510877, "github": 14.739957441820001, "tweak": 4.73092139129, "that": 0.00795229675928, "calcul": 1.8131506592099997, "one": 0.012510703291, "show": 0.236682766013, "schlueternil": 7.369978720910001, "softwar": 4.65698192666, "status": 0.9016590696060001, "full": 0.511203624148, "becaus": 0.139343158825, "anthoni": 1.79478748063, "get": 0.579769005782, "network": 2.8592491591559996, "consol": 3.00943111791, "should": 0.509419876758, "add": 1.52875583713, "file": 6.6367294361499996, "process": 0.527829199025, "cell": 13.723971148019999, "kera": 20.18437450422, "set": 0.171496011289, "ani": 0.125608358366, "when": 0.0411099777168, "tab": 3.99239120489, "from": 0.002268216675464, "engin": 1.809535116552, "back": 0.46333486179399996, "account": 0.665074289973, "answer": 1.5366310419, "differ": 0.424642242624, "most": 0.020747896295599998, "left": 0.729104829506, "return": 1.332507474368, "tricki": 4.75258288807, "for": 0.0015749519769850003, "drive": 1.07674430203, "fail": 1.313073223146, "all": 0.011402632097799998, "top": 0.609100637788, "bottom": 1.8361940533599999, "with": 0.00598745856695, "ytrain": 14.739957441820001, "explan": 1.87322041569, "exist": 0.38165779408699996, "current": 0.42695282784500005, "result": 0.136378908381, "look": 0.6463866936, "insid": 1.00781305813, "call": 0.1309255488976, "more": 0.017024931599999998, "and": 0.001259802841272, "while": 0.04324998379380001, "indepth": 7.369978720910001, "finish": 1.17210994649, "keyword": 4.93636536551, "websit": 0.924894023806, "comment": 1.11826753454, "again": 1.645360926448, "state": 0.0466100027668, "download": 2.6841506319, "then": 0.16606773046179998, "can": 2.759798638698, "avail": 0.547454586289, "comput": 1.36806891594, "photo": 1.8593765463799998, "write": 0.721512439877, "runtim": 35.47175539537, "each": 0.173741689304, "ytest": 14.739957441820001, "few": 0.275577913653, "key": 1.64839623792, "menu": 8.2314715044, "reload": 4.37925898918, "upload": 4.35444382006, "packag": 4.115516898380001, "link": 0.7661704068449999, "trial": 6.983390722149999, "type": 0.707101485387, "data": 8.5177440936, "note": 1.061452704249, "notebook": 55.405170735, "into": 0.0447385896861, "schl\u00fcter": 14.739957441820001, "origin": 0.128612437587, "abov": 0.643865229816, "scan": 2.93441131931, "scikit": 7.369978720910001, "traintestsplit": 7.369978720910001, "first": 0.015174579624319999, "everi": 0.782970854842, "copi": 5.37935058976, "luckili": 10.50744641222, "choos": 1.43007066072, "page": 2.1339780972330002, "delet": 3.09888364694, "folder": 5.129269031630001, "chang": 0.49882687517400004, "find": 1.095562660576, "hit": 1.1367451583600001, "sidebar": 12.4136558222, "line": 0.698861228904, "hyperopt": 14.739957441820001, "conclus": 1.57818536893, "own": 0.164195077421}, "logidf": {"after": 0.020490694648099998, "relat": 0.21310030165399999, "googl": 2.43263122258, "ipynb": 7.369978720910001, "permiss": 1.8373800586400002, "this": 0.0037864490525, "post": 0.8057001527009999, "here": 0.8850381883700001, "nil": 4.2744011123900005, "pip": 4.91038987911, "new": 0.0177299468511, "speed": 1.3533338752700002, "xtrain": 7.369978720910001, "describ": 0.385447603125, "paramet": 2.8481901438599997, "layer": 2.0969791623500003, "learn": 0.842752064745, "care": 0.9139943029109999, "function": 0.914465741594, "neural": 4.0853151555, "log": 2.61552683221, "notebooknam": 7.369978720910001, "python": 4.03065674296, "just": 0.289531434109, "valu": 0.823193310148, "simpli": 0.923941491586, "dure": 0.0491209066894, "enthusiast": 2.24008000599, "defin": 1.00368010925, "expens": 1.26563201674, "code": 1.35601909597, "recommend": 1.36461126863, "won": 0.8404139079, "where": 0.0649921387457, "robert": 0.6215709351609999, "save": 1.03598886547, "dialog": 4.2744011123900005, "creat": 0.222576818514, "prompt": 1.4916828719100002, "run": 0.442714975539, "how": 0.47156695693000006, "enabl": 1.26473915954, "repost": 6.83935046985, "load": 1.91765354188, "dictionari": 1.65426767539, "order": 0.22014038079300002, "found": 0.107841124048, "autom": 2.9867028668299995, "abl": 0.599303982475, "deep": 1.2886734698, "depend": 0.806969815, "will": 0.202786534915, "the": 0.0, "open": 0.219591038029, "hyperasmediumexampl": 7.369978720910001, "otherwis": 1.3141319148700001, "select": 0.704804687133, "troubleshoot": 5.51368073054, "need": 0.362740163442, "exact": 1.2437647732500001, "there": 0.0400978929255, "colab": 7.369978720910001, "connect": 0.633605058682, "tune": 2.3434700776599997, "num": 0.00031499039539700004, "hardwar": 2.93441131931, "say": 0.562154280552, "exampl": 0.40868267499899996, "has": 0.0427239448548, "have": 0.0147850023412, "stackoverflow": 7.369978720910001, "use": 0.0292080197316, "follow": 0.045356911094199995, "now": 0.149092945021, "unsplash": 7.369978720910001, "tri": 0.61759152916, "name": 0.09723316638430002, "out": 0.0584263909193, "model": 0.7374500731110001, "see": 0.240921585492, "batchsiz": 7.369978720910001, "output": 2.03822657827, "browser": 4.22152536034, "hyperparamet": 7.369978720910001, "start": 0.236443369291, "everyth": 1.57270590317, "loss": 0.885954358842, "acceler": 2.0985188085299997, "task": 1.35748680661, "hypera": 7.369978720910001, "signific": 0.373571744332, "past": 0.7016234157610001, "restart": 3.47408509741, "autokera": 7.369978720910001, "machin": 1.39235958062, "want": 0.6916366062549999, "problem": 0.569140724273, "xtest": 7.369978720910001, "instal": 1.3316305879, "case": 0.395406268889, "let": 1.2488025672799998, "scienc": 0.841436178891, "bio": 3.7456377879300002, "chosen": 1.27889510877, "github": 7.369978720910001, "tweak": 4.73092139129, "that": 0.00397614837964, "calcul": 1.8131506592099997, "one": 0.0062553516455, "show": 0.236682766013, "schlueternil": 7.369978720910001, "softwar": 2.32849096333, "status": 0.9016590696060001, "full": 0.511203624148, "becaus": 0.139343158825, "anthoni": 1.79478748063, "get": 0.579769005782, "network": 0.9530830530519999, "consol": 3.00943111791, "should": 0.509419876758, "add": 1.52875583713, "file": 1.32734588723, "process": 0.527829199025, "cell": 1.9605673068599998, "kera": 6.72812483474, "set": 0.171496011289, "ani": 0.125608358366, "when": 0.0205549888584, "tab": 3.99239120489, "from": 0.000567054168866, "engin": 0.904767558276, "back": 0.23166743089699998, "account": 0.665074289973, "answer": 1.5366310419, "differ": 0.212321121312, "most": 0.020747896295599998, "left": 0.364552414753, "return": 0.333126868592, "tricki": 4.75258288807, "for": 0.00031499039539700004, "drive": 1.07674430203, "fail": 0.656536611573, "all": 0.011402632097799998, "top": 0.609100637788, "bottom": 1.8361940533599999, "with": 0.00119749171339, "ytrain": 7.369978720910001, "explan": 1.87322041569, "exist": 0.38165779408699996, "current": 0.42695282784500005, "result": 0.136378908381, "look": 0.6463866936, "insid": 1.00781305813, "call": 0.0654627744488, "more": 0.017024931599999998, "and": 6.29901420636e-05, "while": 0.04324998379380001, "indepth": 7.369978720910001, "finish": 1.17210994649, "keyword": 4.93636536551, "websit": 0.924894023806, "comment": 1.11826753454, "again": 0.411340231612, "state": 0.0466100027668, "download": 2.6841506319, "then": 0.08303386523089999, "can": 0.162341096394, "avail": 0.547454586289, "comput": 1.36806891594, "photo": 1.8593765463799998, "write": 0.721512439877, "runtim": 5.0673936279100005, "each": 0.173741689304, "ytest": 7.369978720910001, "few": 0.275577913653, "key": 0.82419811896, "menu": 4.1157357522, "reload": 4.37925898918, "upload": 4.35444382006, "packag": 2.0577584491900005, "link": 0.7661704068449999, "trial": 1.3966781444299998, "type": 0.707101485387, "data": 1.2168205848, "note": 0.353817568083, "notebook": 3.693678049, "into": 0.0149128632287, "schl\u00fcter": 7.369978720910001, "origin": 0.128612437587, "abov": 0.643865229816, "scan": 2.93441131931, "scikit": 7.369978720910001, "traintestsplit": 7.369978720910001, "first": 0.0075872898121599995, "everi": 0.391485427421, "copi": 1.34483764744, "luckili": 5.25372320611, "choos": 1.43007066072, "page": 0.711326032411, "delet": 3.09888364694, "folder": 5.129269031630001, "chang": 0.166275625058, "find": 0.547781330288, "hit": 1.1367451583600001, "sidebar": 6.2068279111, "line": 0.349430614452, "hyperopt": 7.369978720910001, "conclus": 1.57818536893, "own": 0.164195077421}, "freq": {"after": 4, "relat": 1, "googl": 5, "ipynb": 2, "permiss": 1, "this": 13, "post": 2, "here": 3, "nil": 2, "pip": 4, "new": 4, "speed": 2, "xtrain": 2, "describ": 1, "paramet": 2, "layer": 1, "learn": 6, "care": 2, "function": 8, "neural": 1, "log": 1, "notebooknam": 1, "python": 2, "just": 1, "valu": 5, "simpli": 1, "dure": 1, "enthusiast": 1, "defin": 2, "expens": 1, "code": 3, "recommend": 1, "won": 1, "where": 1, "robert": 1, "save": 1, "dialog": 1, "creat": 5, "prompt": 1, "run": 7, "how": 3, "enabl": 1, "repost": 1, "load": 1, "dictionari": 1, "order": 2, "found": 2, "autom": 3, "abl": 1, "deep": 2, "depend": 1, "will": 8, "the": 50, "open": 4, "hyperasmediumexampl": 1, "otherwis": 1, "select": 3, "troubleshoot": 1, "need": 7, "exact": 1, "there": 1, "colab": 6, "connect": 1, "tune": 6, "num": 4, "hardwar": 1, "say": 1, "exampl": 5, "has": 1, "have": 2, "stackoverflow": 1, "use": 8, "follow": 3, "now": 3, "unsplash": 1, "tri": 3, "name": 2, "out": 2, "model": 7, "see": 3, "batchsiz": 2, "output": 2, "browser": 1, "hyperparamet": 5, "start": 4, "everyth": 1, "loss": 1, "acceler": 1, "task": 1, "hypera": 6, "signific": 2, "past": 3, "restart": 1, "autokera": 1, "machin": 3, "want": 1, "problem": 2, "xtest": 2, "instal": 5, "case": 1, "let": 1, "scienc": 1, "bio": 1, "chosen": 1, "github": 2, "tweak": 1, "that": 2, "calcul": 1, "one": 2, "show": 1, "schlueternil": 1, "softwar": 2, "status": 1, "full": 1, "becaus": 1, "anthoni": 1, "get": 1, "network": 3, "consol": 1, "should": 1, "add": 1, "file": 5, "process": 1, "cell": 7, "kera": 3, "set": 1, "ani": 1, "when": 2, "tab": 1, "from": 4, "engin": 2, "back": 2, "account": 1, "answer": 1, "differ": 2, "most": 1, "left": 2, "return": 4, "tricki": 1, "for": 5, "drive": 1, "fail": 2, "all": 1, "top": 1, "bottom": 1, "with": 5, "ytrain": 2, "explan": 1, "exist": 1, "current": 1, "result": 1, "look": 1, "insid": 1, "call": 2, "more": 1, "and": 20, "while": 1, "indepth": 1, "finish": 1, "keyword": 1, "websit": 1, "comment": 1, "again": 4, "state": 1, "download": 1, "then": 2, "can": 17, "avail": 1, "comput": 1, "photo": 1, "write": 1, "runtim": 7, "each": 1, "ytest": 2, "few": 1, "key": 2, "menu": 2, "reload": 1, "upload": 1, "packag": 2, "link": 1, "trial": 5, "type": 1, "data": 7, "note": 3, "notebook": 15, "into": 3, "schl\u00fcter": 2, "origin": 1, "abov": 1, "scan": 1, "scikit": 1, "traintestsplit": 1, "first": 2, "everi": 2, "copi": 4, "luckili": 2, "choos": 1, "page": 3, "delet": 1, "folder": 1, "chang": 3, "find": 2, "hit": 1, "sidebar": 2, "line": 2, "hyperopt": 2, "conclus": 1, "own": 1}, "idf": {"after": 1.02070207021, "relat": 1.23750876919, "googl": 11.388809182200001, "ipynb": 1587.6, "permiss": 6.280063291139999, "this": 1.00379362671, "post": 2.23826307627, "here": 2.42307692308, "nil": 71.8371040724, "pip": 135.692307692, "new": 1.0178880554, "speed": 3.8703071672400005, "xtrain": 1587.6, "describ": 1.47027227264, "paramet": 17.256521739100002, "layer": 8.14153846154, "learn": 2.32275054865, "care": 2.49426551453, "function": 2.495441685, "neural": 59.4606741573, "log": 13.6744186047, "notebooknam": 1587.6, "python": 56.2978723404, "just": 1.33580143037, "valu": 2.2777618364400003, "simpli": 2.5192002538900002, "dure": 1.0503473370799998, "enthusiast": 9.39408284024, "defin": 2.72830383227, "expens": 3.5453327378300004, "code": 3.8807137619199996, "recommend": 3.9142011834300003, "won": 2.31732593782, "where": 1.06715063521, "robert": 1.8618505922400002, "save": 2.8178913737999998, "dialog": 71.8371040724, "creat": 1.2492917847, "prompt": 4.44456886898, "run": 1.55692850838, "how": 1.60250328051, "enabl": 3.5421686747, "repost": 933.882352941, "load": 6.80497213888, "dictionari": 5.2292490118599995, "order": 1.24625166811, "found": 1.11387076405, "autom": 19.8202247191, "abl": 1.8208510150200001, "deep": 3.6279707495399998, "depend": 2.2411067193700003, "will": 1.22481098596, "the": 1.0, "open": 1.24556723678, "hyperasmediumexampl": 1587.6, "otherwis": 3.72151898734, "select": 2.02345144022, "troubleshoot": 248.0625, "need": 1.4372623574099999, "exact": 3.46864758575, "there": 1.04091266719, "colab": 1587.6, "connect": 1.8843916913900003, "tune": 10.4173228346, "num": 1.00031504001, "hardwar": 18.8104265403, "say": 1.7544480053, "exampl": 1.50483412322, "has": 1.0436497502, "have": 1.0148948411399998, "stackoverflow": 1587.6, "use": 1.0296387573799999, "follow": 1.04640126549, "now": 1.160780873, "unsplash": 1587.6, "tri": 1.8544562551099997, "name": 1.10211732037, "out": 1.06016694491, "model": 2.0905978404, "see": 1.27242125511, "batchsiz": 1587.6, "output": 7.676982591880001, "browser": 68.1373390558, "hyperparamet": 1587.6, "start": 1.26673581744, "everyth": 4.81967213115, "loss": 2.42529789184, "acceler": 8.15408320493, "task": 3.88641370869, "hypera": 1587.6, "signific": 1.4529147982100001, "past": 2.01702452039, "restart": 32.2682926829, "autokera": 1587.6, "machin": 4.02433460076, "want": 1.99698113208, "problem": 1.76674827509, "xtest": 1587.6, "instal": 3.78721374046, "case": 1.48498737256, "let": 3.48616600791, "scienc": 2.31969608416, "bio": 42.336000000000006, "chosen": 3.59266802444, "github": 1587.6, "tweak": 113.4, "that": 1.00398406375, "calcul": 6.12972972973, "one": 1.00627495722, "show": 1.26703910615, "schlueternil": 1587.6, "softwar": 10.2624434389, "status": 2.4636871508400002, "full": 1.66729678639, "becaus": 1.1495184997499999, "anthoni": 6.01819560273, "get": 1.78562591385, "network": 2.59369384088, "consol": 20.275862069000002, "should": 1.6643254009900001, "add": 4.61243463103, "file": 3.7710213776699995, "process": 1.69524826482, "cell": 7.1033557047, "kera": 835.5789473680001, "set": 1.18707940781, "ani": 1.13383802314, "when": 1.02076769755, "tab": 54.1843003413, "from": 1.00056721497, "engin": 2.47135740971, "back": 1.26070038911, "account": 1.94463498285, "answer": 4.64890190337, "differ": 1.23654490225, "most": 1.02096463023, "left": 1.4398693996, "return": 1.39532431007, "tricki": 115.883211679, "for": 1.00031504001, "drive": 2.93510815308, "fail": 1.9281029876099998, "all": 1.01146788991, "top": 1.8387769284200002, "bottom": 6.27261951798, "with": 1.0011982089899998, "ytrain": 1587.6, "explan": 6.50922509225, "exist": 1.4647107666799999, "current": 1.5325803649, "result": 1.14611608432, "look": 1.9086318826599997, "insid": 2.7396031061299997, "call": 1.0676529926, "more": 1.0171706817, "and": 1.00006299213, "while": 1.0441988950299999, "indepth": 1587.6, "finish": 3.22879804759, "keyword": 139.263157895, "websit": 2.52160101652, "comment": 3.05954904606, "again": 1.50883862384, "state": 1.0477133240899998, "download": 14.6457564576, "then": 1.08657860516, "can": 1.17626139142, "avail": 1.7288467821, "comput": 3.9277585353800006, "photo": 6.41973311767, "write": 2.0575427682700003, "runtim": 158.76, "each": 1.18974820144, "ytest": 1587.6, "few": 1.31729173581, "key": 2.28005170185, "menu": 61.2972972973, "reload": 79.7788944724, "upload": 77.82352941180001, "packag": 7.828402366860001, "link": 2.15151104486, "trial": 4.04175152749, "type": 2.0281042411900003, "data": 3.37643555934, "note": 1.42449528937, "notebook": 40.1924050633, "into": 1.01502461479, "schl\u00fcter": 1587.6, "origin": 1.13724928367, "abov": 1.90382539873, "scan": 18.8104265403, "scikit": 1587.6, "traintestsplit": 1587.6, "first": 1.00761614623, "everi": 1.47917637194, "copi": 3.8375634517800004, "luckili": 191.277108434, "choos": 4.17899447223, "page": 2.03669018602, "delet": 22.1731843575, "folder": 168.893617021, "chang": 1.1808985421, "find": 1.7294117647099998, "hit": 3.1166077738499998, "sidebar": 496.125, "line": 1.4182597820299998, "hyperopt": 1587.6, "conclus": 4.84615384615, "own": 1.17844418052}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Keras Hyperparameter Tuning in Google Colab Using Hyperas</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/keras-hyperparameter-tuning-google-colab-hyperas.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Keras Hyperparameter Tuning in Google Colab Using Hyperas Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/n47.html\" rel=\"prev\" title=\"KDnuggets\u2122 News 18:n47, Dec 12: Common mistakes when doing machine learning; Here are the most popular Python IDEs / Editors\"/>\n<link href=\"https://www.kdnuggets.com/jobs/18/12-12-intuit-staff-experimentation-data-scientist.html\" rel=\"next\" title=\"Intuit: Staff Experimentation Data Scientist [Mountain View, CA]\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/12/keras-hyperparameter-tuning-google-colab-hyperas.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=88223\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/keras-hyperparameter-tuning-google-colab-hyperas.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-88223 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 12-Dec, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Keras Hyperparameter Tuning in Google Colab Using Hyperas (\u00a0<a href=\"/2018/n48.html\">18:n48</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Keras Hyperparameter Tuning in Google Colab Using Hyperas</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/n47.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/jobs/18/12-12-intuit-staff-experimentation-data-scientist.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/automated-machine-learning\" rel=\"tag\">Automated Machine Learning</a>, <a href=\"https://www.kdnuggets.com/tag/colaboratory\" rel=\"tag\">CoLaboratory</a>, <a href=\"https://www.kdnuggets.com/tag/google\" rel=\"tag\">Google</a>, <a href=\"https://www.kdnuggets.com/tag/hyperparameter\" rel=\"tag\">Hyperparameter</a>, <a href=\"https://www.kdnuggets.com/tag/keras\" rel=\"tag\">Keras</a>, <a href=\"https://www.kdnuggets.com/tag/python\" rel=\"tag\">Python</a></div>\n<br/>\n<p class=\"excerpt\">\n     In this post, I will show you how you can tune the hyperparameters of your existing keras models using Hyperas and run everything in a Google Colab Notebook.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.nilsschlueter.de/\" rel=\"noopener noreferrer\" target=\"_blank\">Nils Schl\u00fcter</a>, Software Engineer</b></p>\n<p><center><img alt=\"Figure\" src=\"https://cdn-images-1.medium.com/max/800/0*K-0v6zWiCXt2_FHB\" width=\"99%\"><br>\n<font size=\"-1\">Tuning Hyperparameters for your neural network can be tricky (Photo by <a href=\"https://unsplash.com/@aroberts1228\" rel=\"noopener\" target=\"_blank\">Anthony Roberts</a> on <a href=\"https://unsplash.com/\" rel=\"noopener\" target=\"_blank\">Unsplash</a>)</font></br></img></center></p>\n<p>Hyperparameter Tuning is one of the most computationally expensive tasks when creating deep learning networks. Luckily, you can use Google Colab to speed up the process significantly. In this post, I will show you how you can tune the hyperparameters of your existing keras models using Hyperas and run everything in a Google Colab Notebook.</p>\n<p>\u00a0<br>\n<b>Creating a new notebook and enable the GPU\u00a0Runtime</b></br></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/600/1*enXh4J9hOc8ggaM0j-757A.png\" width=\"50%\"/><br>\n<font size=\"-1\">Dialog to change the runtime to\u00a0GPU</font></br></center></p>\n<p>First, you need to create a new notebook. Open your\u00a0<a href=\"https://colab.research.google.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Colab Console\u00a0</a>and select\u00a0<strong>New Python 3 Notebook.</strong>\u00a0In your notebook, choose\u00a0<strong>Runtime\u00a0</strong>from the menu and then\u00a0<strong>Change runtime type.</strong> Select Hardware accelerator: GPU and hit save. This will significantly speed up every calculation you do in this notebook.</p>\n<p>\u00a0<br>\n<b>Installing the\u00a0packages</b></br></p>\n<p>You can install new packages using\u00a0<em>pip</em>. In this case, we need\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">hyperas</a>\u00a0and\u00a0<a href=\"https://github.com/hyperopt/hyperopt\" rel=\"noopener noreferrer\" target=\"_blank\">hyperopt</a>. Copy and paste the following into the first cell of your notebook:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>!pip install hyperas\r\n!pip install hyperopt</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>When you run the cell you will see that pip is downloading and installing the dependencies.</p>\n<p>\u00a0</p>\n<h3><strong>Getting the data and creating the\u00a0model</strong></h3>\n<p>\u00a0<br/>\nFor this post I\u2019m going to use the example from the\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">hyperas github page</a>. You can find the finished Colab Notebook\u00a0<a href=\"https://colab.research.google.com/drive/184Tas98M-pPQanCfTbOHRBRUeE9dtdM9#scrollTo=rdo3mScvBHF4\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br/>\n<b><strong>Data Function</strong></b></p>\n<p>You\u2019ll need a data function to load your data. It needs to return your X_train, Y_train, X_test and Y_test values. Here is an example for a data function:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/698d75b4b14292cc60bf8837df6d854e.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>Your data function needs to return the values in exactly this order: X_train, Y_train, X_test, Y_test. Be careful if you\u2019re using scikit learns\u00a0<a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html\" rel=\"noopener noreferrer\" target=\"_blank\">train_test_split</a>, as this returns the values in a different order</p></blockquote>\n<p>\u00a0<br/>\n<b><strong>Model Function</strong></b></p>\n<p>The Model Function is where you define your model. You can use your all available keras functions and layers. To add Hyperparameters for tuning, you can use the <strong>{{uniform()}}</strong> and <strong>{{choice()}}</strong> keywords.</p>\n<p>Let\u2019s say you want to try out different values for your\u00a0<em>batch_size</em>. You can simply write\u00a0<em>batch_size={{choice([32, 64, 128])}}</em>\u00a0and during each trial, one of the values will be chosen and tried out\u00a0. A more in-depth explanation on how to define the parameters to tune can be found on the\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">Hyperas Github Page</a>\u00a0or you can look at the example:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/4a2138e6d3be7020d6954d3b0127c184.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>Your model function has to return a python dictionary with a loss key and a status key</p></blockquote>\n<p>\u00a0</p>\n<h3>Problems with\u00a0Colab</h3>\n<p>\u00a0<br/>\nIf you try to run this example now, the trial will fail because Hyperas won\u2019t be able to find your notebook. You need to copy your notebook and upload it again to your google drive folder. Luckily, you can do this from inside your notebook as described in this\u00a0<a href=\"https://stackoverflow.com/questions/49920031/get-the-path-of-the-notebook-on-google-colab\" rel=\"noopener noreferrer\" target=\"_blank\">stackoverflow answer</a>.</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/10c5680c9c3083d7f7ab697bba7880a8.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>In lines 16 and 18, you\u2019ll need to change\u00a0<em>HyperasMediumExample\u00a0</em>to the name of your own notebook</p></blockquote>\n<p>After running this cell, you will be prompted to open a website in your browser and copy &amp; paste a code back into the notebook:</p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*DwQlmlARWsN_lP8fSaFLAg.png\" width=\"70%\"/><br/>\n<font size=\"-1\">The output after you run the cell\u00a0above</font></center></p>\n<p>Follow the link, log in with your google account and copy &amp; paste the code back into the notebook. If you open the\u00a0<strong>Files\u00a0</strong>Tab in the left sidebar, you should now see a File called &lt;YourNotebook&gt;.ipynb</p>\n<p>\u00a0<br/>\n<b>Starting the\u00a0Trial</b></p>\n<p>Now you can start the trial. Be careful, you have to set the parameter\u00a0<em>notebook_name</em>\u00a0to the name of your Notebook. Otherwise the Trial will fail:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/79b8e1c85c69d3e7239967d2269ab445.js\"></script></p>\n<p>After running this cell, the Scan starts you can see the result in the output of the cell.</p>\n<p>\u00a0</p>\n<h3><strong>Troubleshooting</strong></h3>\n<p>\u00a0<br/>\nIf you have any problems while doing this, I recommend to do the following:</p>\n<ol>\n<li>In the left sidebar, open\u00a0<strong>Files.\u00a0</strong>There will be a file called &lt;YourNotebook&gt;.ipynb. Delete that file\n<li>In the menu, select\u00a0<strong>Runtime\u00a0</strong>and then\u00a0<strong>Restart Runtime</strong>.\n<li>Reload the page\n</li></li></li></ol>\n<p>After your runtime is connected again, you can start again by running every cell from top to bottom</p>\n<p>\u00a0</p>\n<h3>Conclusion</h3>\n<p>\u00a0<br/>\nWith just a few tweaks you can use Google colab to tune the hyperparameters of your keras network. Again, the full example can be found\u00a0<a href=\"https://colab.research.google.com/drive/184Tas98M-pPQanCfTbOHRBRUeE9dtdM9#scrollTo=rdo3mScvBHF4\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br/>\n<b>Bio: <a href=\"https://www.nilsschlueter.de/\" rel=\"noopener noreferrer\" target=\"_blank\">Nils Schl\u00fcter</a></b> (<strong><a href=\"https://twitter.com/schlueter_nils\" rel=\"noopener\" target=\"_blank\">@schlueter_nils</a></strong>) is a Software Engineer &amp; Machine learning enthusiast.</p>\n<p><a href=\"https://towardsdatascience.com/keras-hyperparameter-tuning-in-google-colab-using-hyperas-624fa4bbf673\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/01/current-state-automated-machine-learning.html\">The Current State of Automated Machine Learning</a>\n<li><a href=\"/2018/08/auto-keras-create-deep-learning-model-4-lines-code.html\">Auto-Keras, or How You can Create a Deep Learning Model in 4 Lines of Code</a>\n<li><a href=\"/2018/07/automated-machine-learning-vs-automated-data-science.html\">Automated Machine Learning vs Automated Data Science</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/n47.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/jobs/18/12-12-intuit-staff-experimentation-data-scientist.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Keras Hyperparameter Tuning in Google Colab Using Hyperas (\u00a0<a href=\"/2018/n48.html\">18:n48</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556334802\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.610 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 23:13:22 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "nil", "schl\u00fcter", "softwar", "engin", "tune", "hyperparamet", "for", "neural", "network", "can", "tricki", "photo", "anthoni", "robert", "unsplash", "hyperparamet", "tune", "one", "the", "most", "comput", "expens", "task", "when", "creat", "deep", "learn", "network", "luckili", "can", "use", "googl", "colab", "speed", "the", "process", "signific", "this", "post", "will", "show", "how", "can", "tune", "the", "hyperparamet", "exist", "kera", "model", "use", "hypera", "and", "run", "everyth", "googl", "colab", "notebook", "creat", "new", "notebook", "and", "enabl", "the", "runtim", "dialog", "chang", "the", "runtim", "first", "need", "creat", "new", "notebook", "open", "colab", "consol", "and", "select", "new", "python", "num", "notebook", "notebook", "choos", "runtim", "from", "the", "menu", "and", "then", "chang", "runtim", "type", "select", "hardwar", "acceler", "and", "hit", "save", "this", "will", "signific", "speed", "everi", "calcul", "this", "notebook", "instal", "the", "packag", "can", "instal", "new", "packag", "use", "pip", "this", "case", "need", "hypera", "and", "hyperopt", "copi", "and", "past", "the", "follow", "into", "the", "first", "cell", "notebook", "pip", "instal", "hypera", "pip", "instal", "hyperopt", "when", "run", "the", "cell", "will", "see", "that", "pip", "download", "and", "instal", "the", "depend", "get", "the", "data", "and", "creat", "the", "model", "for", "this", "post", "use", "the", "exampl", "from", "the", "hypera", "github", "page", "can", "find", "the", "finish", "colab", "notebook", "here", "data", "function", "need", "data", "function", "load", "data", "need", "return", "xtrain", "ytrain", "xtest", "and", "ytest", "valu", "here", "exampl", "for", "data", "function", "note", "data", "function", "need", "return", "the", "valu", "exact", "this", "order", "xtrain", "ytrain", "xtest", "ytest", "care", "use", "scikit", "learn", "traintestsplit", "this", "return", "the", "valu", "differ", "order", "model", "function", "the", "model", "function", "where", "defin", "model", "can", "use", "all", "avail", "kera", "function", "and", "layer", "add", "hyperparamet", "for", "tune", "can", "use", "the", "and", "keyword", "let", "say", "want", "tri", "out", "differ", "valu", "for", "batchsiz", "can", "simpli", "write", "batchsiz", "and", "dure", "each", "trial", "one", "the", "valu", "will", "chosen", "and", "tri", "out", "more", "indepth", "explan", "how", "defin", "the", "paramet", "tune", "can", "found", "the", "hypera", "github", "page", "can", "look", "the", "exampl", "note", "model", "function", "has", "return", "python", "dictionari", "with", "loss", "key", "and", "status", "key", "problem", "with", "colab", "tri", "run", "this", "exampl", "now", "the", "trial", "will", "fail", "becaus", "hypera", "won", "abl", "find", "notebook", "need", "copi", "notebook", "and", "upload", "again", "googl", "drive", "folder", "luckili", "can", "this", "from", "insid", "notebook", "describ", "this", "stackoverflow", "answer", "note", "line", "num", "and", "num", "need", "chang", "hyperasmediumexampl", "the", "name", "own", "notebook", "after", "run", "this", "cell", "will", "prompt", "open", "websit", "browser", "and", "copi", "past", "code", "back", "into", "the", "notebook", "the", "output", "after", "run", "the", "cell", "abov", "follow", "the", "link", "log", "with", "googl", "account", "and", "copi", "past", "the", "code", "back", "into", "the", "notebook", "open", "the", "file", "tab", "the", "left", "sidebar", "should", "now", "see", "file", "call", "ipynb", "start", "the", "trial", "now", "can", "start", "the", "trial", "care", "have", "set", "the", "paramet", "notebooknam", "the", "name", "notebook", "otherwis", "the", "trial", "will", "fail", "after", "run", "this", "cell", "the", "scan", "start", "can", "see", "the", "result", "the", "output", "the", "cell", "troubleshoot", "have", "ani", "problem", "while", "this", "recommend", "the", "follow", "the", "left", "sidebar", "open", "file", "there", "will", "file", "call", "ipynb", "delet", "that", "file", "the", "menu", "select", "runtim", "and", "then", "restart", "runtim", "reload", "the", "page", "after", "runtim", "connect", "again", "can", "start", "again", "run", "everi", "cell", "from", "top", "bottom", "conclus", "with", "just", "few", "tweak", "can", "use", "googl", "colab", "tune", "the", "hyperparamet", "kera", "network", "again", "the", "full", "exampl", "can", "found", "here", "bio", "nil", "schl\u00fcter", "schlueternil", "softwar", "engin", "machin", "learn", "enthusiast", "origin", "repost", "with", "permiss", "relat", "the", "current", "state", "autom", "machin", "learn", "autokera", "how", "can", "creat", "deep", "learn", "model", "num", "line", "code", "autom", "machin", "learn", "autom", "data", "scienc"], "timestamp_scraper": 1556376303.697904, "title": "Keras Hyperparameter Tuning in Google Colab Using Hyperas", "read_time": 222.29999999999998, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.nilsschlueter.de/\" rel=\"noopener noreferrer\" target=\"_blank\">Nils Schl\u00fcter</a>, Software Engineer</b></p>\n<p><center><img alt=\"Figure\" src=\"https://cdn-images-1.medium.com/max/800/0*K-0v6zWiCXt2_FHB\" width=\"99%\"><br>\n<font size=\"-1\">Tuning Hyperparameters for your neural network can be tricky (Photo by <a href=\"https://unsplash.com/@aroberts1228\" rel=\"noopener\" target=\"_blank\">Anthony Roberts</a> on <a href=\"https://unsplash.com/\" rel=\"noopener\" target=\"_blank\">Unsplash</a>)</font></br></img></center></p>\n<p>Hyperparameter Tuning is one of the most computationally expensive tasks when creating deep learning networks. Luckily, you can use Google Colab to speed up the process significantly. In this post, I will show you how you can tune the hyperparameters of your existing keras models using Hyperas and run everything in a Google Colab Notebook.</p>\n<p>\u00a0<br>\n<b>Creating a new notebook and enable the GPU\u00a0Runtime</b></br></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/600/1*enXh4J9hOc8ggaM0j-757A.png\" width=\"50%\"/><br>\n<font size=\"-1\">Dialog to change the runtime to\u00a0GPU</font></br></center></p>\n<p>First, you need to create a new notebook. Open your\u00a0<a href=\"https://colab.research.google.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Colab Console\u00a0</a>and select\u00a0<strong>New Python 3 Notebook.</strong>\u00a0In your notebook, choose\u00a0<strong>Runtime\u00a0</strong>from the menu and then\u00a0<strong>Change runtime type.</strong> Select Hardware accelerator: GPU and hit save. This will significantly speed up every calculation you do in this notebook.</p>\n<p>\u00a0<br>\n<b>Installing the\u00a0packages</b></br></p>\n<p>You can install new packages using\u00a0<em>pip</em>. In this case, we need\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">hyperas</a>\u00a0and\u00a0<a href=\"https://github.com/hyperopt/hyperopt\" rel=\"noopener noreferrer\" target=\"_blank\">hyperopt</a>. Copy and paste the following into the first cell of your notebook:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>!pip install hyperas\r\n!pip install hyperopt</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>When you run the cell you will see that pip is downloading and installing the dependencies.</p>\n<p>\u00a0</p>\n<h3><strong>Getting the data and creating the\u00a0model</strong></h3>\n<p>\u00a0<br/>\nFor this post I\u2019m going to use the example from the\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">hyperas github page</a>. You can find the finished Colab Notebook\u00a0<a href=\"https://colab.research.google.com/drive/184Tas98M-pPQanCfTbOHRBRUeE9dtdM9#scrollTo=rdo3mScvBHF4\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br/>\n<b><strong>Data Function</strong></b></p>\n<p>You\u2019ll need a data function to load your data. It needs to return your X_train, Y_train, X_test and Y_test values. Here is an example for a data function:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/698d75b4b14292cc60bf8837df6d854e.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>Your data function needs to return the values in exactly this order: X_train, Y_train, X_test, Y_test. Be careful if you\u2019re using scikit learns\u00a0<a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html\" rel=\"noopener noreferrer\" target=\"_blank\">train_test_split</a>, as this returns the values in a different order</p></blockquote>\n<p>\u00a0<br/>\n<b><strong>Model Function</strong></b></p>\n<p>The Model Function is where you define your model. You can use your all available keras functions and layers. To add Hyperparameters for tuning, you can use the <strong>{{uniform()}}</strong> and <strong>{{choice()}}</strong> keywords.</p>\n<p>Let\u2019s say you want to try out different values for your\u00a0<em>batch_size</em>. You can simply write\u00a0<em>batch_size={{choice([32, 64, 128])}}</em>\u00a0and during each trial, one of the values will be chosen and tried out\u00a0. A more in-depth explanation on how to define the parameters to tune can be found on the\u00a0<a href=\"https://github.com/maxpumperla/hyperas\" rel=\"noopener noreferrer\" target=\"_blank\">Hyperas Github Page</a>\u00a0or you can look at the example:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/4a2138e6d3be7020d6954d3b0127c184.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>Your model function has to return a python dictionary with a loss key and a status key</p></blockquote>\n<p>\u00a0</p>\n<h3>Problems with\u00a0Colab</h3>\n<p>\u00a0<br/>\nIf you try to run this example now, the trial will fail because Hyperas won\u2019t be able to find your notebook. You need to copy your notebook and upload it again to your google drive folder. Luckily, you can do this from inside your notebook as described in this\u00a0<a href=\"https://stackoverflow.com/questions/49920031/get-the-path-of-the-notebook-on-google-colab\" rel=\"noopener noreferrer\" target=\"_blank\">stackoverflow answer</a>.</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/10c5680c9c3083d7f7ab697bba7880a8.js\"></script></p>\n<blockquote><p><strong>Note:\u00a0</strong>In lines 16 and 18, you\u2019ll need to change\u00a0<em>HyperasMediumExample\u00a0</em>to the name of your own notebook</p></blockquote>\n<p>After running this cell, you will be prompted to open a website in your browser and copy &amp; paste a code back into the notebook:</p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*DwQlmlARWsN_lP8fSaFLAg.png\" width=\"70%\"/><br/>\n<font size=\"-1\">The output after you run the cell\u00a0above</font></center></p>\n<p>Follow the link, log in with your google account and copy &amp; paste the code back into the notebook. If you open the\u00a0<strong>Files\u00a0</strong>Tab in the left sidebar, you should now see a File called &lt;YourNotebook&gt;.ipynb</p>\n<p>\u00a0<br/>\n<b>Starting the\u00a0Trial</b></p>\n<p>Now you can start the trial. Be careful, you have to set the parameter\u00a0<em>notebook_name</em>\u00a0to the name of your Notebook. Otherwise the Trial will fail:</p>\n<p><script src=\"https://gist.github.com/NilsSchlueter/79b8e1c85c69d3e7239967d2269ab445.js\"></script></p>\n<p>After running this cell, the Scan starts you can see the result in the output of the cell.</p>\n<p>\u00a0</p>\n<h3><strong>Troubleshooting</strong></h3>\n<p>\u00a0<br/>\nIf you have any problems while doing this, I recommend to do the following:</p>\n<ol>\n<li>In the left sidebar, open\u00a0<strong>Files.\u00a0</strong>There will be a file called &lt;YourNotebook&gt;.ipynb. Delete that file\n<li>In the menu, select\u00a0<strong>Runtime\u00a0</strong>and then\u00a0<strong>Restart Runtime</strong>.\n<li>Reload the page\n</li></li></li></ol>\n<p>After your runtime is connected again, you can start again by running every cell from top to bottom</p>\n<p>\u00a0</p>\n<h3>Conclusion</h3>\n<p>\u00a0<br/>\nWith just a few tweaks you can use Google colab to tune the hyperparameters of your keras network. Again, the full example can be found\u00a0<a href=\"https://colab.research.google.com/drive/184Tas98M-pPQanCfTbOHRBRUeE9dtdM9#scrollTo=rdo3mScvBHF4\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br/>\n<b>Bio: <a href=\"https://www.nilsschlueter.de/\" rel=\"noopener noreferrer\" target=\"_blank\">Nils Schl\u00fcter</a></b> (<strong><a href=\"https://twitter.com/schlueter_nils\" rel=\"noopener\" target=\"_blank\">@schlueter_nils</a></strong>) is a Software Engineer &amp; Machine learning enthusiast.</p>\n<p><a href=\"https://towardsdatascience.com/keras-hyperparameter-tuning-in-google-colab-using-hyperas-624fa4bbf673\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/01/current-state-automated-machine-learning.html\">The Current State of Automated Machine Learning</a>\n<li><a href=\"/2018/08/auto-keras-create-deep-learning-model-4-lines-code.html\">Auto-Keras, or How You can Create a Deep Learning Model in 4 Lines of Code</a>\n<li><a href=\"/2018/07/automated-machine-learning-vs-automated-data-science.html\">Automated Machine Learning vs Automated Data Science</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}