{"content": "By Paul Singman, Freelance Data Scientist . For Part I of this riveting series,\u00a0 click here . In Part I, we went through each calculation by hand of a forward and backward pass through a simple single-layer neural network. To start Part II, we\u2019re going to do the same for the second pass through. My hope is after doing this a second time trends will emerge and we will be able to understand how the network\u2019s weights end up where they do by 100,000th pass. Since the first pass was called iteration #0, we begin with iteration #1: \r \r ---------ITERATION #1-------------\r inputs:\r [[0 0 1]\r [0 1 1]\r [1 0 1]\r [1 1 1]]\r \r weights:\r [[ 0.67423821]\r [-0.33473064]\r [-0.40469539]]\r \r dot product results:\r [[-0.40469539]\r [-0.73942603]\r [ 0.26954282]\r [-0.06518782]]\r \r l1 probability predictions (sigmoid):\r [[ 0.40018475]\r [ 0.32312967]\r [ 0.56698066]\r [ 0.48370881]]\r \r Compared to the first pass, the first weight is larger and the second two weights got smaller. We\u2019ll see if these updated weights cause less error in our predictions ( Spoiler:\u00a0 They will). Although you should be able to do dot products in your sleep at this point since you followed along so closely with Part I of the series, I\u2019ll walk us through the dot product again: \r \r (0 * .674) + (0 * -.335) + (1 * -.404) = -.4047\r (0 * .674) + (1 * -.335) + (1 * -.404) = -.7394\r (1 * .674) + (0 * -.335) + (1 * -.404) = .2695\r (1 * .674) + (1 * -.335) + (1 * -.404) = -.0652\r \r Great. Now we run the\u00a0results through the sigmoid function to generate probability predictions (shown as \u201cl1 probability predictions (sigmoid) above). For nostalgia\u2019s sake, here were our predictions from the previous pass: \r \r OLD l1 probability predictions (sigmoid):\r [[ 0.36672394]\r [ 0.27408027]\r [ 0.46173529]\r [ 0.35868411]]\r \r If you compare the old predictions with the new ones, you\u2019ll notice that they simply all went up, meaning the model thinks they are more likely to be ones than before. In terms of error, it hasn\u2019t improved much from the last run. \r \r OLD l1_error:\r [[-0.36672394]\r [-0.27408027]\r [ 0.53826471]\r [ 0.64131589]]\r \r \r \r NEW l1_error:\r [[-0.40018475]\r [-0.32312967]\r [ 0.43301934]\r [ 0.51629119]]\r \r Calculating\u00a0the sum of the absolute value of the four errors, it did decrease from 1.82 to 1.67. So there was improvement! Unlike in Part I, I\u2019m not going to dive into the details of how taking the derivative of the sigmoid at the spot of the probability prediction, multiplying the result by the errors, and then taking the dot product of the result with the inputs leads to updating the weights in a way that will reduce prediction error\u2026 but instead just skip to the updated weights: \r \r pre-update weights:\r [[ 0.67423821]\r [-0.33473064]\r [-0.40469539]]\r \r post-update weights:\r [[ 0.90948611]\r [-0.27646878]\r [-0.33618051]]", "title_html": "<h1 id=\"title\">Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2</h1> ", "url": "https://www.kdnuggets.com/2016/04/holding-your-hand-neural-network-part-2.html", "tfidf": {"tfidf": {"after": 1.02070207021, "hand": 1.6152202665600002, "backward": 14.605335786600001, "sleep": 8.4178154825, "sake": 19.9447236181, "unlik": 2.42529789184, "dive": 16.085106383, "postupd": 1058.4, "here": 4.84615384616, "simpl": 3.3981164383599998, "larger": 2.2407904022599996, "calcul": 12.25945945946, "one": 2.01254991444, "were": 1.02458857696, "valu": 2.2777618364400003, "take": 2.27923336444, "numth": 1.1751295336799998, "begin": 1.3305397251100002, "got": 3.61969904241, "see": 1.27242125511, "much": 1.1942229577299999, "previous": 1.42846859816, "multipli": 20.4061696658, "lnumerror": 2116.8, "decreas": 4.5230769230800005, "four": 1.20950784702, "function": 2.495441685, "more": 1.0171706817, "network": 5.18738768176, "like": 1.14918566775, "neural": 59.4606741573, "deriv": 2.78379800105, "through": 5.35374654345, "dot": 75.5101070156, "just": 1.33580143037, "part": 5.216534139449999, "walk": 3.56363636364, "simpli": 2.5192002538900002, "term": 1.39520168732, "click": 34.7396061269, "paul": 2.1979786792200002, "this": 3.01138088013, "two": 1.01379310345, "nostalgia": 68.1373390558, "should": 1.6643254009900001, "improv": 4.08753861998, "from": 3.00170164491, "product": 6.49059689288, "spoiler": 130.131147541, "instead": 1.59461631177, "great": 1.26592775696, "detail": 2.26186066391, "num": 74.02331296074, "preupdat": 1058.4, "run": 3.11385701676, "how": 3.20500656102, "went": 3.6196990424, "singlelay": 1058.4, "seri": 2.93023255814, "start": 1.26673581744, "for": 3.00094512003, "predict": 46.66361854995, "freelanc": 61.0615384615, "along": 1.2973768080399999, "all": 1.01146788991, "end": 1.10680423871, "spot": 4.52952924394, "with": 4.004792835959999, "abl": 3.6417020300400003, "will": 4.89924394384, "these": 1.07415426252, "are": 1.02990593578, "result": 4.58446433728, "rivet": 90.72, "lnum": 161.4508474575, "that": 2.0079681275, "second": 3.3392694383999997, "weight": 43.91026429013999, "updat": 16.69400630916, "call": 1.0676529926, "smaller": 2.59369384088, "new": 1.0178880554, "caus": 1.38521943984, "and": 4.00025196852, "but": 1.01632417899, "our": 4.71517671518, "there": 1.04091266719, "trend": 5.43140608963, "where": 1.06715063521, "singman": 1058.4, "point": 1.25990000794, "emerg": 2.1131372288, "befor": 1.10036041031, "lead": 1.2664326739, "again": 1.50883862384, "compar": 3.7324556247800005, "close": 1.2848818387799998, "generat": 2.05275407292, "hope": 2.50884955752, "think": 2.90715986083, "old": 1.52844902282, "pass": 9.70910202834, "sum": 6.681818181819999, "follow": 1.04640126549, "now": 1.160780873, "way": 1.2190739461, "probabl": 13.22779536745, "each": 1.18974820144, "error\u2026": 1058.4, "model": 2.0905978404, "than": 1.03278688525, "skip": 26.111842105300003, "error": 24.16438356164, "absolut": 5.3472549680000006, "data": 3.37643555934, "forward": 3.66566612792, "reduc": 1.98698372966, "mean": 1.44906900329, "not": 1.01567398119, "scientist": 4.69426374926, "notic": 4.36994219653, "iter": 74.8867924528, "sigmoid": 5292.0, "time": 1.01127460348, "abov": 1.90382539873, "sinc": 2.16737201366, "the": 31.0, "understand": 2.96858638743, "less": 1.46904783936, "first": 3.0228484386899996, "input": 24.4058416602, "shown": 2.76923076923, "then": 1.08657860516, "into": 1.01502461479, "they": 4.12069301148, "hasn": 1058.4, "last": 1.2117234010100002, "same": 1.11857958148, "although": 1.14968498805}, "logtfidf": {"after": 0.020490694648099998, "hand": 0.479471335336, "backward": 2.68138692678, "sleep": 2.1303503507099997, "sake": 2.9929646280599997, "unlik": 0.885954358842, "dive": 2.7778937744700003, "postupd": 6.964513612799999, "here": 1.7700763767400003, "simpl": 1.2232212893899999, "larger": 0.806828661778, "calcul": 3.6263013184199995, "one": 0.012510703291, "were": 0.024291143681099997, "valu": 0.823193310148, "take": 0.261383924394, "numth": 0.161378382949, "begin": 0.285584668268, "got": 1.2863908849299999, "see": 0.240921585492, "much": 0.17749572930100002, "previous": 0.356602960063, "multipli": 3.01583728972, "lnumerror": 13.929027225599999, "decreas": 1.50919249744, "four": 0.190213538869, "function": 0.914465741594, "more": 0.017024931599999998, "network": 1.9061661061039998, "like": 0.139053576545, "neural": 4.0853151555, "deriv": 1.02381618275, "through": 0.3417934594245, "dot": 11.75188861572, "just": 0.289531434109, "part": 0.21197655491400003, "walk": 1.270781474, "simpli": 0.923941491586, "term": 0.33303898354600003, "click": 3.54788042301, "paul": 0.7875381558519999, "this": 0.0113593471575, "two": 0.0136988443582, "nostalgia": 4.22152536034, "should": 0.509419876758, "improv": 1.4295916078639999, "from": 0.0017011625065979999, "product": 1.936240546144, "spoiler": 4.86854276917, "instead": 0.46663315041500003, "great": 0.235805258079, "detail": 0.816187777173, "num": 0.023309289259378002, "preupdat": 6.964513612799999, "run": 0.885429951078, "how": 0.9431339138600001, "went": 1.18648740873, "singlelay": 6.964513612799999, "seri": 0.7638692213959999, "start": 0.236443369291, "for": 0.0009449711861910001, "predict": 14.811662139209998, "freelanc": 4.1118821828900005, "along": 0.260344385917, "all": 0.011402632097799998, "end": 0.101476798618, "spot": 1.5106180144299999, "with": 0.00478996685356, "abl": 1.19860796495, "will": 0.81114613966, "these": 0.0715336194008, "are": 0.0294674735827, "result": 0.545515633524, "rivet": 4.50777783998, "lnum": 11.95676537268, "that": 0.00795229675928, "second": 0.32141929014, "weight": 14.264311735080001, "updat": 5.149312388069999, "call": 0.0654627744488, "smaller": 0.9530830530519999, "new": 0.0177299468511, "caus": 0.325858567406, "and": 0.0002519605682544, "but": 0.0161923720719, "our": 1.7152784283640001, "there": 0.0400978929255, "trend": 1.6921980487900001, "where": 0.0649921387457, "singman": 6.964513612799999, "point": 0.23103235903299998, "emerg": 0.748173681534, "befor": 0.0956377718795, "lead": 0.23620402986699998, "again": 0.411340231612, "compar": 1.2478383618539999, "close": 0.250666759864, "generat": 0.719182341736, "hope": 0.919824304455, "think": 1.06717661175, "old": 0.424253510675, "pass": 2.88782597844, "sum": 1.89939013342, "follow": 0.045356911094199995, "now": 0.149092945021, "way": 0.19809150993500002, "probabl": 4.864412064565, "each": 0.173741689304, "error\u2026": 6.964513612799999, "model": 0.7374500731110001, "than": 0.0322608622182, "skip": 3.26238893194, "error": 7.1943417372, "absolut": 1.67658333914, "data": 1.2168205848, "forward": 1.29901007269, "reduc": 0.686617775143, "mean": 0.37092128352, "not": 0.0155524130075, "scientist": 1.54634128444, "notic": 1.47474978168, "iter": 7.24566071734, "sigmoid": 34.822568063999995, "time": 0.0112115188626, "abov": 0.643865229816, "sinc": 0.1607363989154, "the": 0.0, "understand": 1.0880858756799998, "less": 0.3846144626, "first": 0.02276186943648, "input": 5.00335067078, "shown": 1.01856958099, "then": 0.08303386523089999, "into": 0.0149128632287, "they": 0.1189079790704, "hasn": 6.964513612799999, "last": 0.19204364461100001, "same": 0.112059649604, "although": 0.139487981418}, "logidf": {"after": 0.020490694648099998, "hand": 0.479471335336, "backward": 2.68138692678, "sleep": 2.1303503507099997, "sake": 2.9929646280599997, "unlik": 0.885954358842, "dive": 2.7778937744700003, "postupd": 6.964513612799999, "here": 0.8850381883700001, "simpl": 1.2232212893899999, "larger": 0.806828661778, "calcul": 1.8131506592099997, "one": 0.0062553516455, "were": 0.024291143681099997, "valu": 0.823193310148, "take": 0.130691962197, "numth": 0.161378382949, "begin": 0.285584668268, "got": 1.2863908849299999, "see": 0.240921585492, "much": 0.17749572930100002, "previous": 0.356602960063, "multipli": 3.01583728972, "lnumerror": 6.964513612799999, "decreas": 1.50919249744, "four": 0.190213538869, "function": 0.914465741594, "more": 0.017024931599999998, "network": 0.9530830530519999, "like": 0.139053576545, "neural": 4.0853151555, "deriv": 1.02381618275, "through": 0.0683586918849, "dot": 2.93797215393, "just": 0.289531434109, "part": 0.04239531098280001, "walk": 1.270781474, "simpli": 0.923941491586, "term": 0.33303898354600003, "click": 3.54788042301, "paul": 0.7875381558519999, "this": 0.0037864490525, "two": 0.0136988443582, "nostalgia": 4.22152536034, "should": 0.509419876758, "improv": 0.7147958039319999, "from": 0.000567054168866, "product": 0.484060136536, "spoiler": 4.86854276917, "instead": 0.46663315041500003, "great": 0.235805258079, "detail": 0.816187777173, "num": 0.00031499039539700004, "preupdat": 6.964513612799999, "run": 0.442714975539, "how": 0.47156695693000006, "went": 0.593243704365, "singlelay": 6.964513612799999, "seri": 0.38193461069799994, "start": 0.236443369291, "for": 0.00031499039539700004, "predict": 1.6457402376899999, "freelanc": 4.1118821828900005, "along": 0.260344385917, "all": 0.011402632097799998, "end": 0.101476798618, "spot": 1.5106180144299999, "with": 0.00119749171339, "abl": 0.599303982475, "will": 0.202786534915, "these": 0.0715336194008, "are": 0.0294674735827, "result": 0.136378908381, "rivet": 4.50777783998, "lnum": 3.98558845756, "that": 0.00397614837964, "second": 0.10713976337999999, "weight": 1.58492352612, "updat": 1.7164374626899999, "call": 0.0654627744488, "smaller": 0.9530830530519999, "new": 0.0177299468511, "caus": 0.325858567406, "and": 6.29901420636e-05, "but": 0.0161923720719, "our": 0.8576392141820001, "there": 0.0400978929255, "trend": 1.6921980487900001, "where": 0.0649921387457, "singman": 6.964513612799999, "point": 0.23103235903299998, "emerg": 0.748173681534, "befor": 0.0956377718795, "lead": 0.23620402986699998, "again": 0.411340231612, "compar": 0.6239191809269999, "close": 0.250666759864, "generat": 0.719182341736, "hope": 0.919824304455, "think": 1.06717661175, "old": 0.424253510675, "pass": 0.48130432974, "sum": 1.89939013342, "follow": 0.045356911094199995, "now": 0.149092945021, "way": 0.19809150993500002, "probabl": 0.972882412913, "each": 0.173741689304, "error\u2026": 6.964513612799999, "model": 0.7374500731110001, "than": 0.0322608622182, "skip": 3.26238893194, "error": 1.7985854343, "absolut": 1.67658333914, "data": 1.2168205848, "forward": 1.29901007269, "reduc": 0.686617775143, "mean": 0.37092128352, "not": 0.0155524130075, "scientist": 1.54634128444, "notic": 1.47474978168, "iter": 3.62283035867, "sigmoid": 6.964513612799999, "time": 0.0112115188626, "abov": 0.643865229816, "sinc": 0.0803681994577, "the": 0.0, "understand": 1.0880858756799998, "less": 0.3846144626, "first": 0.0075872898121599995, "input": 2.50167533539, "shown": 1.01856958099, "then": 0.08303386523089999, "into": 0.0149128632287, "they": 0.0297269947676, "hasn": 6.964513612799999, "last": 0.19204364461100001, "same": 0.112059649604, "although": 0.139487981418}, "freq": {"after": 1, "hand": 1, "backward": 1, "sleep": 1, "sake": 1, "unlik": 1, "dive": 1, "postupd": 1, "here": 2, "simpl": 1, "larger": 1, "calcul": 2, "one": 2, "were": 1, "valu": 1, "take": 2, "numth": 1, "begin": 1, "got": 1, "see": 1, "much": 1, "previous": 1, "multipli": 1, "lnumerror": 2, "decreas": 1, "four": 1, "function": 1, "more": 1, "network": 2, "like": 1, "neural": 1, "deriv": 1, "through": 5, "dot": 4, "just": 1, "part": 5, "walk": 1, "simpli": 1, "term": 1, "click": 1, "paul": 1, "this": 3, "two": 1, "nostalgia": 1, "should": 1, "improv": 2, "from": 3, "product": 4, "spoiler": 1, "instead": 1, "great": 1, "detail": 1, "num": 74, "preupdat": 1, "run": 2, "how": 2, "went": 2, "singlelay": 1, "seri": 2, "start": 1, "for": 3, "predict": 9, "freelanc": 1, "along": 1, "all": 1, "end": 1, "spot": 1, "with": 4, "abl": 2, "will": 4, "these": 1, "are": 1, "result": 4, "rivet": 1, "lnum": 3, "that": 2, "second": 3, "weight": 9, "updat": 3, "call": 1, "smaller": 1, "new": 1, "caus": 1, "and": 4, "but": 1, "our": 2, "there": 1, "trend": 1, "where": 1, "singman": 1, "point": 1, "emerg": 1, "befor": 1, "lead": 1, "again": 1, "compar": 2, "close": 1, "generat": 1, "hope": 1, "think": 1, "old": 1, "pass": 6, "sum": 1, "follow": 1, "now": 1, "way": 1, "probabl": 5, "each": 1, "error\u2026": 1, "model": 1, "than": 1, "skip": 1, "error": 4, "absolut": 1, "data": 1, "forward": 1, "reduc": 1, "mean": 1, "not": 1, "scientist": 1, "notic": 1, "iter": 2, "sigmoid": 5, "time": 1, "abov": 1, "sinc": 2, "the": 31, "understand": 1, "less": 1, "first": 3, "input": 2, "shown": 1, "then": 1, "into": 1, "they": 4, "hasn": 1, "last": 1, "same": 1, "although": 1}, "idf": {"after": 1.02070207021, "hand": 1.6152202665600002, "backward": 14.605335786600001, "sleep": 8.4178154825, "sake": 19.9447236181, "unlik": 2.42529789184, "dive": 16.085106383, "postupd": 1058.4, "here": 2.42307692308, "simpl": 3.3981164383599998, "larger": 2.2407904022599996, "calcul": 6.12972972973, "one": 1.00627495722, "were": 1.02458857696, "valu": 2.2777618364400003, "take": 1.13961668222, "numth": 1.1751295336799998, "begin": 1.3305397251100002, "got": 3.61969904241, "see": 1.27242125511, "much": 1.1942229577299999, "previous": 1.42846859816, "multipli": 20.4061696658, "lnumerror": 1058.4, "decreas": 4.5230769230800005, "four": 1.20950784702, "function": 2.495441685, "more": 1.0171706817, "network": 2.59369384088, "like": 1.14918566775, "neural": 59.4606741573, "deriv": 2.78379800105, "through": 1.07074930869, "dot": 18.8775267539, "just": 1.33580143037, "part": 1.04330682789, "walk": 3.56363636364, "simpli": 2.5192002538900002, "term": 1.39520168732, "click": 34.7396061269, "paul": 2.1979786792200002, "this": 1.00379362671, "two": 1.01379310345, "nostalgia": 68.1373390558, "should": 1.6643254009900001, "improv": 2.04376930999, "from": 1.00056721497, "product": 1.62264922322, "spoiler": 130.131147541, "instead": 1.59461631177, "great": 1.26592775696, "detail": 2.26186066391, "num": 1.00031504001, "preupdat": 1058.4, "run": 1.55692850838, "how": 1.60250328051, "went": 1.8098495212, "singlelay": 1058.4, "seri": 1.46511627907, "start": 1.26673581744, "for": 1.00031504001, "predict": 5.18484650555, "freelanc": 61.0615384615, "along": 1.2973768080399999, "all": 1.01146788991, "end": 1.10680423871, "spot": 4.52952924394, "with": 1.0011982089899998, "abl": 1.8208510150200001, "will": 1.22481098596, "these": 1.07415426252, "are": 1.02990593578, "result": 1.14611608432, "rivet": 90.72, "lnum": 53.8169491525, "that": 1.00398406375, "second": 1.1130898128, "weight": 4.878918254459999, "updat": 5.56466876972, "call": 1.0676529926, "smaller": 2.59369384088, "new": 1.0178880554, "caus": 1.38521943984, "and": 1.00006299213, "but": 1.01632417899, "our": 2.35758835759, "there": 1.04091266719, "trend": 5.43140608963, "where": 1.06715063521, "singman": 1058.4, "point": 1.25990000794, "emerg": 2.1131372288, "befor": 1.10036041031, "lead": 1.2664326739, "again": 1.50883862384, "compar": 1.8662278123900002, "close": 1.2848818387799998, "generat": 2.05275407292, "hope": 2.50884955752, "think": 2.90715986083, "old": 1.52844902282, "pass": 1.61818367139, "sum": 6.681818181819999, "follow": 1.04640126549, "now": 1.160780873, "way": 1.2190739461, "probabl": 2.64555907349, "each": 1.18974820144, "error\u2026": 1058.4, "model": 2.0905978404, "than": 1.03278688525, "skip": 26.111842105300003, "error": 6.04109589041, "absolut": 5.3472549680000006, "data": 3.37643555934, "forward": 3.66566612792, "reduc": 1.98698372966, "mean": 1.44906900329, "not": 1.01567398119, "scientist": 4.69426374926, "notic": 4.36994219653, "iter": 37.4433962264, "sigmoid": 1058.4, "time": 1.01127460348, "abov": 1.90382539873, "sinc": 1.08368600683, "the": 1.0, "understand": 2.96858638743, "less": 1.46904783936, "first": 1.00761614623, "input": 12.2029208301, "shown": 2.76923076923, "then": 1.08657860516, "into": 1.01502461479, "they": 1.03017325287, "hasn": 1058.4, "last": 1.2117234010100002, "same": 1.11857958148, "although": 1.14968498805}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/holding-your-hand-neural-network-part-2.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2 Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/learn-more-pacific-ms-analytics-program.html\" rel=\"prev\" title=\"Learn More About Pacific\u2019s MS Analytics Program\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/black-box-challenge-machine-learning-competition.html\" rel=\"next\" title=\"Black Box Challenge Machine Learning Competition\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/04/holding-your-hand-neural-network-part-2.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=48012\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/holding-your-hand-neural-network-part-2.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-48012 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 21-Apr, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2 (\u00a0<a href=\"/2016/n15.html\">16:n15</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/learn-more-pacific-ms-analytics-program.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/black-box-challenge-machine-learning-competition.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a></div>\n<br/>\n<p class=\"excerpt\">\n     The second of 2 posts expanding upon a now-classic neural network blog post and demonstration, guiding the reader through the workings of a simple neural network.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><b>By Paul Singman, Freelance Data Scientist</b>.</p>\n<p><img align=\"right\" alt=\"Neural\" net\"=\"\" src=\"/wp-content/uploads/neural-network-illustration.png\" width=\"50%\"/><br>\nFor Part I of this riveting series,\u00a0<a href=\"/2016/04/holding-your-hand-neural-network-part-1.html\" target=\"_blank\">click here</a>.</br></p>\n<p>In Part I, we went through each calculation by hand of a forward and backward pass through a simple single-layer neural network.</p>\n<p>To start Part II, we\u2019re going to do the same for the second pass through. My hope is after doing this a second time trends will emerge and we will be able to understand how the network\u2019s weights end up where they do by 100,000th pass.</p>\n<p>Since the first pass was called iteration #0, we begin with iteration #1:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  ---------ITERATION #1-------------\r\n  inputs:\r\n   [[0 0 1]\r\n   [0 1 1]\r\n   [1 0 1]\r\n   [1 1 1]]\r\n\r\n  weights:\r\n   [[ 0.67423821]\r\n   [-0.33473064]\r\n   [-0.40469539]]\r\n\r\n  dot product results:\r\n   [[-0.40469539]\r\n   [-0.73942603]\r\n   [ 0.26954282]\r\n   [-0.06518782]]\r\n\r\n  l1 probability predictions (sigmoid):\r\n   [[ 0.40018475]\r\n   [ 0.32312967]\r\n   [ 0.56698066]\r\n   [ 0.48370881]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Compared to the first pass, the first weight is larger and the second two weights got smaller. We\u2019ll see if these updated weights cause less error in our predictions (<strong>Spoiler:\u00a0</strong>They will).</p>\n<p>Although you should be able to do dot products in your sleep at this point since you followed along so closely with Part I of the series, I\u2019ll walk us through the dot product again:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  (0 * .674) + (0 * -.335) + (1 * -.404) = -.4047\r\n  (0 * .674) + (1 * -.335) + (1 * -.404) = -.7394\r\n  (1 * .674) + (0 * -.335) + (1 * -.404) = .2695\r\n  (1 * .674) + (1 * -.335) + (1 * -.404) = -.0652\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Great. Now we run the\u00a0results through the sigmoid function to generate probability predictions (shown as \u201cl1 probability predictions (sigmoid) above).</p>\n<p>For nostalgia\u2019s sake, here were our predictions from the previous pass:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  OLD l1 probability predictions (sigmoid):\r\n   [[ 0.36672394]\r\n   [ 0.27408027]\r\n   [ 0.46173529]\r\n   [ 0.35868411]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>If you compare the old predictions with the new ones, you\u2019ll notice that they simply all went up, meaning the model thinks they are more likely to be ones than before.</p>\n<p>In terms of error, it hasn\u2019t improved much from the last run.</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  OLD l1_error:\r\n   [[-0.36672394]\r\n   [-0.27408027]\r\n   [ 0.53826471]\r\n   [ 0.64131589]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  NEW l1_error:\r\n   [[-0.40018475]\r\n   [-0.32312967]\r\n   [ 0.43301934]\r\n   [ 0.51629119]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Calculating\u00a0the sum of the absolute value of the four errors, it did decrease from 1.82 to 1.67. So there was improvement!</p>\n<p>Unlike in Part I, I\u2019m not going to dive into the details of how taking the derivative of the sigmoid at the spot of the probability prediction, multiplying the result by the errors, and then taking the dot product of the result with the inputs leads to updating the weights in a way that will reduce prediction error\u2026 but instead just skip to the updated weights:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  pre-update weights:\r\n   [[ 0.67423821]\r\n   [-0.33473064]\r\n   [-0.40469539]]\r\n\r\n  post-update weights:\r\n   [[ 0.90948611]\r\n   [-0.27646878]\r\n   [-0.33618051]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2016/04/holding-your-hand-neural-network-part-2.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/learn-more-pacific-ms-analytics-program.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/black-box-challenge-machine-learning-competition.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2 (\u00a0<a href=\"/2016/n15.html\">16:n15</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556366047\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.615 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 07:54:07 -->\n<!-- Compression = gzip -->", "content_tokenized": ["paul", "singman", "freelanc", "data", "scientist", "for", "part", "this", "rivet", "seri", "click", "here", "part", "went", "through", "each", "calcul", "hand", "forward", "and", "backward", "pass", "through", "simpl", "singlelay", "neural", "network", "start", "part", "the", "same", "for", "the", "second", "pass", "through", "hope", "after", "this", "second", "time", "trend", "will", "emerg", "and", "will", "abl", "understand", "how", "the", "network", "weight", "end", "where", "they", "numth", "pass", "sinc", "the", "first", "pass", "call", "iter", "num", "begin", "with", "iter", "num", "num", "input", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "weight", "num", "num", "num", "dot", "product", "result", "num", "num", "num", "num", "lnum", "probabl", "predict", "sigmoid", "num", "num", "num", "num", "compar", "the", "first", "pass", "the", "first", "weight", "larger", "and", "the", "second", "two", "weight", "got", "smaller", "see", "these", "updat", "weight", "caus", "less", "error", "our", "predict", "spoiler", "they", "will", "although", "should", "abl", "dot", "product", "sleep", "this", "point", "sinc", "follow", "along", "close", "with", "part", "the", "seri", "walk", "through", "the", "dot", "product", "again", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "num", "great", "now", "run", "the", "result", "through", "the", "sigmoid", "function", "generat", "probabl", "predict", "shown", "lnum", "probabl", "predict", "sigmoid", "abov", "for", "nostalgia", "sake", "here", "were", "our", "predict", "from", "the", "previous", "pass", "lnum", "probabl", "predict", "sigmoid", "num", "num", "num", "num", "compar", "the", "old", "predict", "with", "the", "new", "one", "notic", "that", "they", "simpli", "all", "went", "mean", "the", "model", "think", "they", "are", "more", "like", "one", "than", "befor", "term", "error", "hasn", "improv", "much", "from", "the", "last", "run", "lnumerror", "num", "num", "num", "num", "lnumerror", "num", "num", "num", "num", "calcul", "the", "sum", "the", "absolut", "valu", "the", "four", "error", "decreas", "from", "num", "num", "there", "improv", "unlik", "part", "not", "dive", "into", "the", "detail", "how", "take", "the", "deriv", "the", "sigmoid", "the", "spot", "the", "probabl", "predict", "multipli", "the", "result", "the", "error", "and", "then", "take", "the", "dot", "product", "the", "result", "with", "the", "input", "lead", "updat", "the", "weight", "way", "that", "will", "reduc", "predict", "error\u2026", "but", "instead", "just", "skip", "the", "updat", "weight", "preupdat", "weight", "num", "num", "num", "postupd", "weight", "num", "num", "num"], "timestamp_scraper": 1556366048.225342, "title": "Holding Your Hand Like a Small Child Through a Neural Network \u2013 Part 2", "read_time": 144.29999999999998, "content_html": "<div class=\"post\" id=\"post-\">\n<p><b>By Paul Singman, Freelance Data Scientist</b>.</p>\n<p><img align=\"right\" alt=\"Neural\" net\"=\"\" src=\"/wp-content/uploads/neural-network-illustration.png\" width=\"50%\"/><br>\nFor Part I of this riveting series,\u00a0<a href=\"/2016/04/holding-your-hand-neural-network-part-1.html\" target=\"_blank\">click here</a>.</br></p>\n<p>In Part I, we went through each calculation by hand of a forward and backward pass through a simple single-layer neural network.</p>\n<p>To start Part II, we\u2019re going to do the same for the second pass through. My hope is after doing this a second time trends will emerge and we will be able to understand how the network\u2019s weights end up where they do by 100,000th pass.</p>\n<p>Since the first pass was called iteration #0, we begin with iteration #1:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  ---------ITERATION #1-------------\r\n  inputs:\r\n   [[0 0 1]\r\n   [0 1 1]\r\n   [1 0 1]\r\n   [1 1 1]]\r\n\r\n  weights:\r\n   [[ 0.67423821]\r\n   [-0.33473064]\r\n   [-0.40469539]]\r\n\r\n  dot product results:\r\n   [[-0.40469539]\r\n   [-0.73942603]\r\n   [ 0.26954282]\r\n   [-0.06518782]]\r\n\r\n  l1 probability predictions (sigmoid):\r\n   [[ 0.40018475]\r\n   [ 0.32312967]\r\n   [ 0.56698066]\r\n   [ 0.48370881]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Compared to the first pass, the first weight is larger and the second two weights got smaller. We\u2019ll see if these updated weights cause less error in our predictions (<strong>Spoiler:\u00a0</strong>They will).</p>\n<p>Although you should be able to do dot products in your sleep at this point since you followed along so closely with Part I of the series, I\u2019ll walk us through the dot product again:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  (0 * .674) + (0 * -.335) + (1 * -.404) = -.4047\r\n  (0 * .674) + (1 * -.335) + (1 * -.404) = -.7394\r\n  (1 * .674) + (0 * -.335) + (1 * -.404) = .2695\r\n  (1 * .674) + (1 * -.335) + (1 * -.404) = -.0652\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Great. Now we run the\u00a0results through the sigmoid function to generate probability predictions (shown as \u201cl1 probability predictions (sigmoid) above).</p>\n<p>For nostalgia\u2019s sake, here were our predictions from the previous pass:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  OLD l1 probability predictions (sigmoid):\r\n   [[ 0.36672394]\r\n   [ 0.27408027]\r\n   [ 0.46173529]\r\n   [ 0.35868411]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>If you compare the old predictions with the new ones, you\u2019ll notice that they simply all went up, meaning the model thinks they are more likely to be ones than before.</p>\n<p>In terms of error, it hasn\u2019t improved much from the last run.</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  OLD l1_error:\r\n   [[-0.36672394]\r\n   [-0.27408027]\r\n   [ 0.53826471]\r\n   [ 0.64131589]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  NEW l1_error:\r\n   [[-0.40018475]\r\n   [-0.32312967]\r\n   [ 0.43301934]\r\n   [ 0.51629119]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n<p>Calculating\u00a0the sum of the absolute value of the four errors, it did decrease from 1.82 to 1.67. So there was improvement!</p>\n<p>Unlike in Part I, I\u2019m not going to dive into the details of how taking the derivative of the sigmoid at the spot of the probability prediction, multiplying the result by the errors, and then taking the dot product of the result with the inputs leads to updating the weights in a way that will reduce prediction error\u2026 but instead just skip to the updated weights:</p>\n<pre style=\"background-color:#F5F5DC\">\r\n\r\n  pre-update weights:\r\n   [[ 0.67423821]\r\n   [-0.33473064]\r\n   [-0.40469539]]\r\n\r\n  post-update weights:\r\n   [[ 0.90948611]\r\n   [-0.27646878]\r\n   [-0.33618051]]\r\n\r\n</pre>\n<p><br class=\"blank\"/></p>\n</div> ", "website": "kdnuggets"}