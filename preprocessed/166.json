{"content": "comments By Bharath Raj . Photo by Alexandre Debi\u00e8ve on Unsplash \u00a0 Scalable Deep Learning services are contingent on several constraints. Depending on your target application, you may require low latency, enhanced security or long-term cost effectiveness. Hosting your Deep Learning model on the cloud may not be the best solution in such cases. Computing on the Edge ( Source ) Deep Learning on the edge \u00a0alleviates the above issues, and provides other benefits. Edge here refers to the computation that is performed locally on the consumer\u2019s products. This blog explores the\u00a0 benefits \u00a0of using edge computing for Deep Learning, and the \u00a0problems \u00a0associated with it. Why edge? Why not use the\u00a0cloud? There is a plethora of compelling reasons to favor edge computing over cloud computing. 1. Bandwidth and\u00a0Latency It\u2019s no doubt that there\u2019s a tangible Round Trip Time (RTT) associated with API calls to a remote server. Applications that demand near instantaneous inference can not function properly with the latency. Latency and Power consumption stats for Object Detection (DET), Tracking (TRA) and Localization (LOC) on four different edge devices ( Source ) \u00a0 Take\u00a0 self driving cars \u00a0for example. A large enough\u00a0 latency \u00a0could significantly increase the\u00a0 risk\u00a0 of accidents. Moreover, unexpected events such as animal crossing or jay walking can happen over just a few frames. In these cases, response time is extremely critical. This is why Nvidia has their custom\u00a0 on-board compute devices \u00a0to perform inference on the edge. Moreover, when you have a large number of devices connected to the same network, the effective bandwidth is reduced. This is because of the inherent competition to use the communication channel. This can be significantly reduced if computation is done on the edge. Bandwidth requirement for various applications. ( Source ) \u00a0 Take the case of processing 4K HD videos on multiple devices. Processing them locally would heavily save bandwidth usage. This is because we do not need to upload data to the cloud for inference. Due to this, we can scale this network relatively easily. 2. Security and Decentralization Commercial servers are prone to attacks and hacks. Of course, the risk is negligible if you use a trusted vendor. But, you are required to trust a third party for the security of the data you collect and your intellectual property (IP). Having devices on the edge gives you\u00a0 absolute control \u00a0over your IP. Centralized vs Decentralized vs Distributed. ( Source ) \u00a0 If you\u2019ve heard about blockchain, decentralization or distribution may be familiar to you. Nonetheless, having several devices on the edge reaps all the benefits of decentralization. It\u2019s\u00a0 harder \u00a0to bring down an entire network of hidden devices using a\u00a0 single DDoS attack , than a centralized server. This is especially useful for applications such as using drones for border patrol. 3. Job Specific Usage (Customization) Imagine you have a factory that produces toys. It has a couple hundred work stations. You require an image classification service at every work station. Problem is, each work station has a different set of objects, and training a single classifier may not be effective. Moreover, hosting\u00a0 multiple classifiers on the\u00a0 cloud \u00a0would be\u00a0 expensive . The cost effective solution is to train classifiers specific to each part on the cloud, and ship the\u00a0 trained models \u00a0to the\u00a0 edge devices . Now, these devices are customized to their work station. They would have better performance than a classifier predicting across all work stations. 4. Swarm Intelligence Continuing with the idea mentioned above, edge devices can aid in training machine learning models too. This is especially useful for\u00a0 Reinforcement Learning , for which you could simulate a large number of \u201cepisodes\u201d in\u00a0 parallel . Multiple agents trying to grasp objects. ( Source ) \u00a0 Moreover, edge devices can be used to collect data for\u00a0 Online Learning \u00a0(or\u00a0 Continuous Learning ). For instance, we can use multiple drones to survey an area for classification. Using optimization techniques such as Asynchronous SGD, a single model can be\u00a0 trained in parallel \u00a0among all edge devices. It can also be merely used for aggregating and processing data from various sources. 5. Redundancy Redundancy is extremely vital for robust memory and network architectures. Failure of one node in a network could have serious impacts on the other nodes. In our case, edge devices can provide a good level of redundancy. If one of the our edge devices (here, a node) fail, its neighbor can take over temporarily. This greatly ensures reliability and heavily reduces downtime. 6. Cost effective in the long\u00a0run In the long run, cloud services will turn out to be more expensive than having a dedicated set of inference devices. This is especially true if your devices have a large duty cycle (that is, they are working most of the time). Moreover, edge devices are much cheaper if they\u2019re fabricated in bulk, reducing the cost significantly. Constraints for Deep Learning on the\u00a0Edge Deep Learning\u00a0 models are known for being\u00a0 large \u00a0and\u00a0 computationally expensive . It\u2019s a challenge to fit these models into\u00a0 edge devices \u00a0which usually have\u00a0 frugal memory . There are a number of ways by which we can approach these problems. 1. Parameter Efficient Neural\u00a0Networks A striking feature about neural networks is their enormous size. Edge devices typically can not handle large neural networks. This motivated researchers to minimize the size of the neural networks, while maintaining accuracy. Two popular parameter efficient neural networks are the\u00a0 MobileNet \u00a0and the\u00a0 SqueezeNet . The\u00a0 SqueezeNet \u00a0incorporates a lot of strategies such as late down-sampling and filter count reduction, to get high performance at a low parameter count. They introduce \u201cFire modules\u201d that have \u201csqueeze\u201d and \u201cexpand\u201d layers that optimize the parameter efficiency of the network. Fire module in the SqueezeNet. ( Source ) \u00a0 The\u00a0 MobileNet \u00a0factorizes normal convolutions into a combination of depth wise convolutions and 1x1 convolutions. This arrangement greatly reduces the number of parameters involved. Top 1 accuracy in the ImageNet dataset with respect to number of Multiply-Accumulates (MACs). ( Source ) 2. Pruning and Truncation A large number of neurons in trained networks are\u00a0 benign \u00a0and do not contribute to the final accuracy. In this case, we can\u00a0 prune \u00a0such neurons to save some space. Google\u2019s\u00a0 Learn2Compress \u00a0has found that we can obtain a size \u00a0 reduction by factor of 2 , while retaining 97% of the accuracy. Moreover, most neural network parameters are 32 bit float values. Edge devices on the other hand can be designed to work on 8 bit values, or less. Reducing precision can significantly reduce the model size. For instance, reducing a\u00a0 32 bit model \u00a0to\u00a0 8 bit model \u00a0ideally reduces model size by a\u00a0 factor of 4 . 3. Distillation Distillation is the process of teaching smaller networks using a larger \u201cteacher\u201d network. Google\u2019s\u00a0 Learn2Compress \u00a0incorporates this in their size reduction process. Combined with transfer learning, this becomes a powerful method to reduce model size without losing much accuracy. Joint training and distillation approach to learn compact student models. ( Source ) \u00a0 4. Optimized Microprocessor Designs So far we have discussed way to scale down neural networks to fit in our edge devices. An alternate (or complementary) method would be to scale up the performance of the microprocessor. The simplest solution would be to have a GPU on a microprocessor, such as the popular\u00a0 Nvidia Jetson . However, these devices may not be cost effective when deployed on a large scale. Nvidia Jetson ( Source ) \u00a0 A more interesting solution would be to use Vision Processing Units (VPUs). Intel claims that their Movidius VPUs have \u201chigh speed performance at an ultra low power consumption\u201d. Google\u2019s\u00a0 AIY kits \u00a0and Intel\u2019s\u00a0 Neural Compute Stick\u00a0 internally use this VPU. Google AIY\u2019s Vision Bonnet using a Movidius VPU. ( Source ) \u00a0 Alternatively, we could use FPGAs. They have low power consumption than GPUs and can accommodate lower bit (< 32 bit) architectures. However, there could be a slight drop in performance compared to GPUs owing to their lower FLOPs rating. For large scale deployment, custom ASICs would be the best solution. Fabricating micro-architectures similar to Nvidia\u2019s V100 to accelerate matrix multiplications could greatly boost performance. Pascal vs Volta architecture; Nvidia. ( Source ) Original . Reposted with permission. Bio : Bharath Raj is an undergraduate student at SSN who loves to experiment with Machine Learning and Computer Vision concepts. Bharath writes code and tech blogs. You can check out his projects here . Related: Top /r/MachineLearning posts, August 2018: Everybody Dance Now; Stanford class Machine Learning cheat sheets; Academic Torrents for sharing enormous datasets See NVIDIA Deep Learning In Action [Webinar Series] Machine Learning Cheat Sheets", "title_html": "<h1 id=\"title\">Deep Learning on the Edge</h1> ", "url": "https://www.kdnuggets.com/2018/09/deep-learning-edge.html", "tfidf": {"tfidf": {"hand": 1.6152202665600002, "strike": 3.5620372447800004, "boost": 9.16099249856, "failur": 3.28559602649, "googl": 45.555236728800004, "decentr": 162.0, "survey": 3.7791002142300005, "patrol": 10.6265060241, "fit": 6.74140127388, "take": 3.4188500466600003, "typic": 2.2541530597799997, "neuron": 128.5506072874, "space": 2.39818731118, "would": 7.580110497259999, "reap": 73.1612903226, "number": 6.60857499654, "swarm": 60.3650190114, "dataset": 387.219512196, "function": 2.495441685, "class": 2.11651779763, "ship": 3.14812611541, "strategi": 4.44208170118, "unexpect": 9.88542963885, "product": 1.62264922322, "done": 2.3302509907499998, "benign": 55.125, "ddos": 1323.0, "approach": 4.15113086678, "toy": 15.383720930199999, "retain": 2.74956702459, "danc": 4.9350326391, "their": 6.092874504300001, "motiv": 5.01611374408, "scale": 18.734953976849997, "similar": 1.37514075357, "sheet": 17.2190889371, "multipl": 13.740695862900001, "stanford": 12.6, "repost": 933.882352941, "maintain": 1.77306231852, "instantan": 54.9342560554, "scalabl": 186.776470588, "increas": 1.32024948025, "especi": 5.001365116020001, "hundr": 2.4698195395099996, "distribut": 5.479206212259999, "due": 1.23789473684, "found": 1.11387076405, "station": 11.78269259315, "downsampl": 1587.6, "interest": 1.60331246213, "deep": 25.395795246779997, "remot": 7.74816983895, "will": 1.22481098596, "associ": 2.6526315789400003, "event": 1.5356935577500002, "microprocessor": 292.1963190183, "attack": 3.94189944134, "write": 2.0575427682700003, "incorpor": 5.25695364238, "constraint": 30.0966824644, "claim": 1.52697893623, "downtim": 317.52, "but": 1.01632417899, "speed": 3.8703071672400005, "need": 1.4372623574099999, "our": 7.07276507277, "classif": 16.134146341460003, "cost": 11.596785975149999, "object": 7.04660452731, "parti": 2.06369426752, "applic": 13.70688538744, "walk": 3.56363636364, "hidden": 7.81299212598, "volta": 136.862068966, "neglig": 24.2381679389, "has": 4.1745990008, "inher": 10.7706919946, "paramet": 103.53913043460001, "also": 1.01476510067, "enorm": 15.09843081312, "reduct": 18.96019108281, "use": 17.503858875459997, "experi": 1.87062566278, "optim": 34.6133720931, "unsplash": 1587.6, "out": 2.12033388982, "model": 25.0871740848, "good": 1.51981619759, "concept": 2.65707112971, "much": 2.3884459154599997, "cours": 2.15092805853, "competit": 3.06960556845, "absolut": 5.3472549680000006, "count": 6.96315789474, "duti": 3.8154289834199995, "usag": 12.855060728739998, "fabric": 22.6315039202, "not": 8.12539184952, "far": 1.71022298826, "involv": 1.4498630137000001, "tri": 1.8544562551099997, "are": 11.32896529358, "minim": 6.10850327049, "altern": 4.278092158440001, "four": 1.20950784702, "border": 3.15751789976, "multiplyaccumul": 1587.6, "torrent": 111.020979021, "aggreg": 17.542541436500002, "handl": 3.9229058561900003, "asic": 330.75, "they": 5.15086626435, "design": 2.9165059245, "turn": 1.3838912133899999, "effect": 8.3778364116, "techniqu": 3.7293868921800004, "grasp": 23.766467065900002, "larger": 2.2407904022599996, "blog": 28.3753351206, "node": 133.0391061453, "ensur": 3.4127257093700005, "respons": 1.5066907089300001, "that": 9.03585657375, "infer": 84.5592543276, "provid": 2.43105428374, "valu": 4.555523672880001, "longterm": 512.129032258, "fpgas": 1587.6, "moreov": 45.36, "such": 7.43059641618, "accuraci": 63.810289389000005, "sever": 2.14482572278, "explor": 3.39593582888, "august": 1.46918378679, "network": 41.49910145408, "squeez": 35.5964125561, "without": 1.29547123623, "lot": 4.40877534018, "some": 1.04036697248, "sourc": 20.37125748504, "control": 1.46959178006, "may": 5.26008879465, "call": 1.0676529926, "mac": 20.511627907, "cycl": 5.40919931857, "produc": 1.36932896326, "filter": 16.8893617021, "rate": 2.14048806795, "introduc": 1.7258397651900002, "set": 2.37415881562, "third": 1.4195278969999998, "two": 1.01379310345, "squeezenet": 4762.799999999999, "modul": 33.886872999, "debi\u00e8v": 1587.6, "factori": 5.43326488706, "complementari": 32.466257668699996, "everybodi": 17.9389830508, "work": 7.806406293909999, "num": 20.006300800200002, "instanc": 6.514567090680001, "happen": 2.96359902931, "bulk": 9.651063829789999, "idea": 2.0930784443, "for": 20.006300800200002, "car": 3.53743315508, "predict": 5.18484650555, "discuss": 2.19676214197, "nvidia": 2268.0, "asynchron": 165.375, "with": 8.009585671919998, "teach": 3.98594024605, "plethora": 91.2413793103, "episod": 4.435875943, "late": 1.31740104556, "solut": 23.6390708755, "true": 2.55569864778, "better": 2.0065722952500002, "intel": 109.1134020618, "vital": 6.9509632224199995, "target": 3.2189781021900004, "popular": 3.01538461538, "video": 3.29719626168, "secur": 6.50655737706, "intern": 1.30355530011, "harder": 17.1262135922, "intellectu": 5.963936889559999, "combin": 3.39520958084, "latenc": 872.3076923100001, "imagin": 6.598503740650001, "familiar": 6.86381322957, "compar": 1.8662278123900002, "allevi": 22.6153846154, "photo": 6.41973311767, "proper": 3.3388012618299996, "train": 13.5559892657, "great": 3.79778327088, "upload": 77.82352941180001, "redund": 89.3583489681, "extrem": 4.73204172876, "his": 1.0943682360200002, "continu": 2.27857911734, "demand": 2.34159292035, "compel": 11.6735294118, "just": 1.33580143037, "machin": 16.09733840304, "into": 2.03004922958, "bharath": 4762.799999999999, "abov": 3.80765079746, "servic": 4.53902601735, "requir": 6.11379609128, "conting": 13.9141104294, "local": 4.55160550458, "various": 2.6646525679799997, "prone": 18.144000000000002, "ultra": 41.5602094241, "larg": 10.67174546265, "vpus": 3175.2, "tech": 19.1739130435, "relat": 2.47501753838, "can": 22.34896643698, "who": 1.06279287723, "trip": 4.9, "permiss": 6.280063291139999, "pascal": 43.3770491803, "post": 2.23826307627, "here": 7.26923076924, "lower": 4.20111140514, "ideal": 4.65571847507, "factor": 8.67382990347, "owe": 6.203985932, "give": 1.3653250774, "long": 2.5314518057799997, "onlin": 2.6051854282900004, "layer": 8.14153846154, "than": 4.131147541, "parallel": 9.15835015864, "about": 2.12972030318, "problem": 5.30024482527, "deploy": 14.83738317758, "job": 3.2539454806299997, "neural": 475.6853932584, "kit": 17.542541436500002, "entir": 1.59365589239, "devic": 110.18044164028, "heard": 4.45204711161, "featur": 1.52712581762, "classifi": 21.1750583528, "check": 6.50655737705, "expens": 10.635998213490002, "serious": 2.583984375, "contribut": 1.9255306246200001, "frugal": 128.032258065, "across": 1.7318642958400001, "save": 5.6357827475999995, "communic": 2.8395635843299996, "few": 1.31729173581, "among": 1.25670862028, "run": 3.11385701676, "love": 2.97303370787, "them": 1.09876115994, "bonnet": 102.425806452, "seri": 1.46511627907, "consumpt": 28.082547169799998, "trust": 9.79093432008, "nonetheless": 7.875, "singl": 4.82846715327, "expand": 2.2260235558000003, "lose": 3.0851146521599997, "cheat": 63.377245509, "track": 3.1276595744700004, "accommod": 5.70668583753, "critic": 1.67010309278, "tangibl": 56.2978723404, "over": 4.10100096868, "mobilenet": 3175.2, "consum": 4.93043478261, "too": 1.81585268215, "same": 1.11857958148, "there": 4.16365066876, "arrang": 2.8839237057200005, "connect": 1.8843916913900003, "prune": 262.41322314, "stick": 11.5377906977, "fire": 4.230779480340001, "cross": 2.33127753304, "cheaper": 17.2190889371, "wise": 15.5494613124, "way": 2.4381478922, "frame": 6.280063291139999, "best": 3.1657028913200005, "origin": 1.13724928367, "blockchain": 1587.6, "specif": 3.7438981252199994, "slight": 3.25327868852, "movidius": 3175.2, "now": 2.321561746, "central": 3.2242079610000003, "robust": 19.9447236181, "rmachinelearn": 1587.6, "code": 3.8807137619199996, "usual": 1.72508964468, "see": 1.27242125511, "high": 2.2955465587, "self": 11.972850678699999, "unit": 1.15394679459, "power": 5.358535144719999, "edg": 102.51207186969, "issu": 1.43921675279, "undergradu": 17.350819672100002, "cloud": 74.3357859531, "coupl": 3.2572835453400004, "risk": 8.191950464400001, "simplest": 28.0494699647, "reinforc": 6.453658536590001, "acceler": 8.15408320493, "research": 1.9420183486200002, "signific": 5.8116591928400005, "the": 60.0, "area": 1.3881262568900001, "becom": 1.12492028626, "drone": 105.84, "numxnum": 52.0524590164, "commerci": 2.4036336109, "challeng": 2.55816951337, "accid": 6.30250099246, "anim": 2.8395635843299996, "enhanc": 5.15957101072, "truncat": 69.0260869565, "simul": 11.4793926247, "howev": 2.1890382626599996, "share": 1.8566249561500001, "distil": 131.9335180056, "onboard": 61.0615384615, "jetson": 1176.0, "jay": 10.2096463023, "which": 3.015575535, "imagenet": 1587.6, "other": 3.02977099236, "refer": 1.30024570025, "one": 2.01254991444, "server": 114.215827338, "known": 1.0859097127200001, "impact": 2.97526236882, "custom": 14.538461538479998, "microarchitectur": 835.5789473680001, "becaus": 2.2990369994999997, "imag": 2.70137825421, "get": 1.78562591385, "vendor": 27.2783505155, "intellig": 4.19334389857, "collect": 3.28219971056, "doubt": 5.31325301205, "agent": 4.25858369099, "part": 1.04330682789, "memori": 5.14785992218, "precis": 5.322158900440001, "reliabl": 6.681818181819999, "mere": 4.20222339862, "this": 17.06449165407, "detect": 5.41288782816, "time": 3.03382381044, "process": 10.17148958892, "bit": 50.00314960632, "perform": 12.251181634000002, "flop": 62.5039370079, "smaller": 2.59369384088, "project": 1.7534791252500002, "differ": 2.4730898045, "bandwidth": 288.65454545439997, "most": 2.04192926046, "low": 8.52288283452, "heavili": 6.48264597796, "hack": 43.3770491803, "drive": 2.93510815308, "depend": 2.2411067193700003, "fail": 1.9281029876099998, "obtain": 2.68629441624, "all": 3.03440366973, "top": 3.6775538568400004, "joint": 3.38291071809, "action": 1.81855670103, "reason": 1.72340425532, "learnnumcompress": 3175.2, "less": 1.46904783936, "have": 14.208527775959997, "case": 7.4249368628, "webinar": 1587.6, "normal": 2.61075481006, "architectur": 15.38372093022, "drop": 2.4594887684, "academ": 3.8921304241199994, "final": 1.34008609775, "more": 2.0343413634, "and": 25.001574803249998, "dedic": 3.20533010297, "respect": 1.6443293630200002, "alexandr": 37.4433962264, "these": 5.3707713126000005, "compact": 12.451764705899999, "benefit": 9.20525705451, "temporarili": 7.534883720930001, "float": 10.903846153800002, "comment": 3.05954904606, "matrix": 22.6153846154, "favor": 3.1332149200700004, "channel": 3.6784059314199995, "near": 1.28769567686, "comput": 39.277585353800006, "raj": 116.3076923076, "aid": 2.65618203112, "each": 2.37949640288, "size": 17.45711592835, "bring": 2.03616775683, "student": 4.9434843531, "depth": 8.24299065421, "neighbor": 5.781500364169999, "transfer": 2.72549356223, "data": 13.50574223736, "reduc": 19.8698372966, "method": 5.1428571428600005, "level": 1.6544393497299998, "convolut": 303.363057324, "bio": 42.336000000000006, "stat": 52.92, "exampl": 1.50483412322, "gpus": 2116.8, "from": 1.00056721497, "everi": 1.47917637194, "vision": 14.64125422686, "could": 7.226217569399999, "enough": 2.2319696330700003, "while": 2.0883977900599997, "properti": 2.5949656750599996, "host": 5.418430034119999, "easili": 3.6938110749199997, "whi": 9.769846153860001, "teacher": 4.49363147467, "round": 3.3843530164099995, "down": 2.71779508688, "learn": 37.1640087784, "when": 2.0415353951, "mention": 2.53894130817, "effici": 15.280076997120002}, "logtfidf": {"hand": 0.479471335336, "strike": 1.27033264096, "boost": 2.2149545241900004, "failur": 1.18954807429, "googl": 9.73052489032, "decentr": 14.80520789644, "survey": 1.3294859427299999, "patrol": 2.36335144821, "fit": 2.4302412537799998, "take": 0.392075886591, "typic": 0.812774319158, "neuron": 8.32635095454, "space": 0.874713164972, "would": 0.5573233957529, "reap": 4.29266646036, "number": 0.5796514705116, "swarm": 4.100409781730001, "dataset": 10.53168913328, "function": 0.914465741594, "class": 0.7497721899330001, "ship": 1.14680739183, "strategi": 1.49112311818, "unexpect": 2.2910619194, "product": 0.484060136536, "done": 0.845975983129, "benign": 4.0096033337699994, "ddos": 7.18765716411, "approach": 1.4604672291620002, "toy": 2.73330986786, "retain": 1.0114434536799999, "danc": 1.59635928666, "their": 0.09216303073620001, "motiv": 1.61265547932, "scale": 6.6047653164, "similar": 0.318556092114, "sheet": 4.30574281958, "multipl": 5.0546200906, "stanford": 2.53369681396, "repost": 6.83935046985, "maintain": 0.572708175102, "instantan": 4.00613712579, "scalabl": 5.22991255741, "increas": 0.277820718929, "especi": 1.533295829127, "hundr": 0.904145087046, "distribut": 2.01562611626, "due": 0.21341214386399998, "found": 0.107841124048, "station": 4.285969064710001, "downsampl": 7.369978720910001, "interest": 0.47207177798199995, "deep": 9.0207142886, "remot": 2.04745666566, "will": 0.202786534915, "associ": 0.5648100307020001, "event": 0.428982108147, "microprocessor": 13.736440839300002, "attack": 1.357031036584, "write": 0.721512439877, "incorpor": 1.9328090459479998, "constraint": 5.422535535980001, "claim": 0.423291231925, "downtim": 5.76054080847, "but": 0.0161923720719, "speed": 1.3533338752700002, "need": 0.362740163442, "our": 2.5729176425460003, "classif": 4.17558147258, "cost": 4.2064503809, "object": 2.561800754409, "parti": 0.724497710444, "applic": 4.92641571396, "walk": 1.270781474, "hidden": 2.0557880052, "volta": 4.918973622799999, "neglig": 3.18792857827, "has": 0.1708957794192, "inher": 2.37682874115, "paramet": 17.089140863159997, "also": 0.0146571578, "enorm": 4.0428872764, "reduct": 5.53118785893, "use": 0.4965363354372, "experi": 0.626272953933, "optim": 7.336883386229999, "unsplash": 7.369978720910001, "out": 0.1168527818386, "model": 8.849400877332002, "good": 0.418589404907, "concept": 0.977224437103, "much": 0.35499145860200004, "cours": 0.765899404133, "competit": 1.12154907401, "absolut": 1.67658333914, "count": 2.49497182278, "duti": 1.33905310492, "usag": 3.72118076856, "fabric": 4.8523914675999995, "not": 0.12441930406, "far": 0.536623764503, "involv": 0.371469078658, "tri": 0.61759152916, "are": 0.3241422094097, "minim": 1.80968177926, "altern": 1.520719944564, "four": 0.190213538869, "border": 1.14978624419, "multiplyaccumul": 7.369978720910001, "torrent": 4.70971918364, "aggreg": 2.8646288702, "handl": 1.36683266903, "asic": 5.801362803, "they": 0.148634973838, "design": 0.754478236044, "turn": 0.324899251064, "effect": 2.0029813629479998, "techniqu": 1.31624384807, "grasp": 3.16827564037, "larger": 0.806828661778, "blog": 5.30474621118, "node": 11.3760924825, "ensur": 1.22751130026, "respons": 0.40991566230300003, "that": 0.035785335416759996, "infer": 12.204632648559999, "provid": 0.39035568865000003, "valu": 1.646386620296, "longterm": 6.238576609419999, "fpgas": 7.369978720910001, "moreov": 12.13722714114, "such": 0.417871844642, "accuraci": 12.732382703, "sever": 0.13982224079379998, "explor": 1.22257937218, "august": 0.384706999499, "network": 15.249328848831999, "squeez": 3.5722448618800002, "without": 0.258874517941, "lot": 1.4835969502500002, "some": 0.0395735090645, "sourc": 6.350619729012, "control": 0.38498466158600003, "may": 0.253549976422, "call": 0.0654627744488, "mac": 3.0209919403099996, "cycl": 1.68810108164, "produc": 0.314320812003, "filter": 2.82668393864, "rate": 0.761033872166, "introduc": 0.5457137524260001, "set": 0.342992022578, "third": 0.35032434942900004, "two": 0.0136988443582, "squeezenet": 22.10993616273, "modul": 5.65976106332, "debi\u00e8v": 7.369978720910001, "factori": 1.69254022159, "complementari": 3.4802013244300003, "everybodi": 2.8869761689, "work": 0.763241970911, "num": 0.006299807907940001, "instanc": 2.36178715944, "happen": 1.08640441802, "bulk": 2.2670681507, "idea": 0.73863592212, "for": 0.006299807907940001, "car": 1.2634013667, "predict": 1.6457402376899999, "discuss": 0.78698452262, "nvidia": 30.586078762049993, "asynchron": 5.10821562244, "with": 0.00957993370712, "teach": 1.38277323072, "plethora": 4.513508514690001, "episod": 1.48972510314, "late": 0.275660890876, "solut": 7.76731488135, "true": 0.938325629634, "better": 0.6964279406, "intel": 7.998481093460001, "vital": 1.9388802431299998, "target": 1.1690639496200002, "popular": 0.8211604175499999, "video": 1.19307248967, "secur": 2.322594620844, "intern": 0.265095377816, "harder": 2.84061024834, "intellectu": 1.78573081495, "combin": 1.058436621502, "latenc": 25.80852153695, "imagin": 1.88684291737, "familiar": 1.92626315167, "compar": 0.6239191809269999, "allevi": 3.1186304098799997, "photo": 1.8593765463799998, "proper": 1.2056118389200001, "train": 4.626428189873001, "great": 0.707415774237, "upload": 4.35444382006, "redund": 10.182127169220001, "extrem": 1.7224191678740002, "his": 0.0901772433641, "continu": 0.26080974797400003, "demand": 0.850831432969, "compel": 2.4573238351700004, "just": 0.289531434109, "machin": 5.56943832248, "into": 0.0298257264574, "bharath": 22.10993616273, "abov": 1.287730459632, "servic": 1.2423005002350003, "requir": 1.6970140427, "conting": 2.63290346404, "local": 1.250603220618, "various": 0.57385300014, "prone": 2.89833992755, "ultra": 3.7271432052999995, "larg": 1.5333755454540001, "vpus": 14.739957441820001, "tech": 2.9535506595200003, "relat": 0.42620060330799997, "can": 3.0844808314859997, "who": 0.0609002329859, "trip": 1.58923520512, "permiss": 1.8373800586400002, "pascal": 3.7699304805000002, "post": 0.8057001527009999, "here": 2.6551145651100003, "lower": 1.484403859988, "ideal": 1.53809624363, "factor": 3.18509443986, "owe": 1.82519197774, "give": 0.311392552224, "long": 0.471291587756, "onlin": 0.957503854357, "layer": 2.0969791623500003, "than": 0.1290434488728, "parallel": 3.04303773644, "about": 0.1256869549492, "problem": 1.707422172819, "deploy": 4.00800541178, "job": 1.1798682540899998, "neural": 32.682521244, "kit": 2.8646288702, "entir": 0.46603068026999994, "devic": 35.44369283465999, "heard": 1.4933640154799999, "featur": 0.423387418142, "classifi": 6.666118540599999, "check": 1.87281049562, "expens": 3.79689605022, "serious": 0.949332539075, "contribut": 0.655201578909, "frugal": 4.8522822483, "across": 0.549198455941, "save": 2.07197773094, "communic": 1.04365037288, "few": 0.275577913653, "among": 0.228496097073, "run": 0.885429951078, "love": 1.08958288195, "them": 0.0941833269093, "bonnet": 4.62913869698, "seri": 0.38193461069799994, "consumpt": 6.70960799265, "trust": 3.1766194152, "nonetheless": 2.06369318471, "singl": 1.427750307177, "expand": 0.80021683492, "lose": 1.1265888210600001, "cheat": 6.911915425639999, "track": 1.14028498507, "accommod": 1.7416384414200001, "critic": 0.512885356729, "tangibl": 4.03065674296, "over": 0.0997468859828, "mobilenet": 14.739957441820001, "consum": 1.5954271753600002, "too": 0.5965551547219999, "same": 0.112059649604, "there": 0.160391571702, "arrang": 1.05915176475, "connect": 0.633605058682, "prune": 9.75354653662, "stick": 2.4456277954099996, "fire": 1.49847813967, "cross": 0.846416414759, "cheaper": 2.8460185903500004, "wise": 2.74402599574, "way": 0.39618301987000004, "frame": 1.8373800586400002, "best": 0.918455865894, "origin": 0.128612437587, "blockchain": 7.369978720910001, "specif": 1.253960335082, "slight": 1.17966331506, "movidius": 14.739957441820001, "now": 0.298185890042, "central": 0.955080292078, "robust": 2.9929646280599997, "rmachinelearn": 7.369978720910001, "code": 1.35601909597, "usual": 0.545279017064, "see": 0.240921585492, "high": 0.27564757308000004, "self": 2.48264164316, "unit": 0.143188061817, "power": 1.16958513086, "edg": 34.37318605115, "issu": 0.364099043934, "undergradu": 2.8536397486299996, "cloud": 16.538776296560002, "coupl": 1.18089357972, "risk": 2.8200096817799998, "simplest": 3.3339697356999998, "reinforc": 1.86464718498, "acceler": 2.0985188085299997, "research": 0.663727818138, "signific": 1.494286977328, "the": 0.0, "area": 0.327954821122, "becom": 0.11771217648900001, "drone": 7.9375626785, "numxnum": 3.9522520373, "commerci": 0.8769815969470001, "challeng": 0.9392919688950001, "accid": 1.84094653755, "anim": 1.04365037288, "enhanc": 1.6408534385799998, "truncat": 4.23448450498, "simul": 2.44055348224, "howev": 0.180630234695, "share": 0.618760299747, "distil": 11.35105756671, "onboard": 4.1118821828900005, "jetson": 12.7534538958, "jay": 2.3233329892900003, "which": 0.01553524153629, "imagenet": 7.369978720910001, "other": 0.02962424375928, "refer": 0.262553246798, "one": 0.012510703291, "server": 10.9184327763, "known": 0.0824180805992, "impact": 1.09033222631, "custom": 5.162013185919999, "microarchitectur": 6.72812483474, "becaus": 0.27868631765, "imag": 0.99376210729, "get": 0.579769005782, "vendor": 3.30609336617, "intellig": 1.43349848213, "collect": 0.99073332104, "doubt": 1.67020426765, "agent": 1.4489366381, "part": 0.04239531098280001, "memori": 1.8908677973199999, "precis": 1.67187902939, "reliabl": 1.89939013342, "mere": 1.43561376584, "this": 0.0643696338925, "detect": 1.68878274493, "time": 0.0336345565878, "process": 3.16697519415, "bit": 12.72195915804, "perform": 3.40944680464, "flop": 4.135229546880001, "smaller": 0.9530830530519999, "project": 0.561601885907, "differ": 0.424642242624, "bandwidth": 17.1157450702, "most": 0.041495792591199995, "low": 3.0258411333960002, "heavili": 2.35196315278, "hack": 3.7699304805000002, "drive": 1.07674430203, "depend": 0.806969815, "fail": 0.656536611573, "obtain": 0.988162703503, "all": 0.03420789629339999, "top": 1.218201275576, "joint": 1.21873649811, "action": 0.598043165069, "reason": 0.544301552962, "learnnumcompress": 14.739957441820001, "less": 0.3846144626, "have": 0.2069900327768, "case": 1.9770313444449998, "webinar": 7.369978720910001, "normal": 0.959639378783, "architectur": 4.90409273757, "drop": 0.8999535106219999, "academ": 1.35895667459, "final": 0.292733863948, "more": 0.034049863199999995, "and": 0.00157475355159, "dedic": 1.16481508131, "respect": 0.49733261904, "alexandr": 3.62283035867, "these": 0.357668097004, "compact": 2.5218623563099998, "benefit": 3.36348735348, "temporarili": 2.0195434001, "float": 2.38911558515, "comment": 1.11826753454, "matrix": 3.1186304098799997, "favor": 1.1420596084299999, "channel": 1.30247948752, "near": 0.252854324034, "comput": 13.6806891594, "raj": 8.12618403744, "aid": 0.976889765079, "each": 0.347483378608, "size": 6.396860442426999, "bring": 0.7110694905930001, "student": 1.80984647329, "depth": 2.10936322154, "neighbor": 1.7546632275799998, "transfer": 1.00264953547, "data": 4.8672823392, "reduc": 6.86617775143, "method": 1.888923217682, "level": 0.503462189943, "convolut": 13.848954025650002, "bio": 3.7456377879300002, "stat": 3.96878133925, "exampl": 0.40868267499899996, "gpus": 13.929027225599999, "from": 0.000567054168866, "everi": 0.391485427421, "vision": 4.75569266229, "could": 1.1157376337400002, "enough": 0.802884439169, "while": 0.08649996758760002, "properti": 0.953573289192, "host": 1.993317862664, "easili": 1.3066587367, "whi": 3.54206529141, "teacher": 1.5026611665399998, "round": 1.2191627555700002, "down": 0.613347482372, "learn": 13.48403303592, "when": 0.0411099777168, "mention": 0.931747186336, "effici": 4.88381260242}, "logidf": {"hand": 0.479471335336, "strike": 1.27033264096, "boost": 2.2149545241900004, "failur": 1.18954807429, "googl": 2.43263122258, "decentr": 3.70130197411, "survey": 1.3294859427299999, "patrol": 2.36335144821, "fit": 1.2151206268899999, "take": 0.130691962197, "typic": 0.812774319158, "neuron": 4.16317547727, "space": 0.874713164972, "would": 0.0796176279647, "reap": 4.29266646036, "number": 0.0966085784186, "swarm": 4.100409781730001, "dataset": 5.26584456664, "function": 0.914465741594, "class": 0.7497721899330001, "ship": 1.14680739183, "strategi": 1.49112311818, "unexpect": 2.2910619194, "product": 0.484060136536, "done": 0.845975983129, "benign": 4.0096033337699994, "ddos": 7.18765716411, "approach": 0.7302336145810001, "toy": 2.73330986786, "retain": 1.0114434536799999, "danc": 1.59635928666, "their": 0.015360505122700001, "motiv": 1.61265547932, "scale": 1.32095306328, "similar": 0.318556092114, "sheet": 2.15287140979, "multipl": 1.01092401812, "stanford": 2.53369681396, "repost": 6.83935046985, "maintain": 0.572708175102, "instantan": 4.00613712579, "scalabl": 5.22991255741, "increas": 0.277820718929, "especi": 0.511098609709, "hundr": 0.904145087046, "distribut": 1.00781305813, "due": 0.21341214386399998, "found": 0.107841124048, "station": 0.857193812942, "downsampl": 7.369978720910001, "interest": 0.47207177798199995, "deep": 1.2886734698, "remot": 2.04745666566, "will": 0.202786534915, "associ": 0.28240501535100004, "event": 0.428982108147, "microprocessor": 4.5788136131, "attack": 0.678515518292, "write": 0.721512439877, "incorpor": 0.9664045229739999, "constraint": 2.7112677679900004, "claim": 0.423291231925, "downtim": 5.76054080847, "but": 0.0161923720719, "speed": 1.3533338752700002, "need": 0.362740163442, "our": 0.8576392141820001, "classif": 2.08779073629, "cost": 0.84129007618, "object": 0.853933584803, "parti": 0.724497710444, "applic": 1.23160392849, "walk": 1.270781474, "hidden": 2.0557880052, "volta": 4.918973622799999, "neglig": 3.18792857827, "has": 0.0427239448548, "inher": 2.37682874115, "paramet": 2.8481901438599997, "also": 0.0146571578, "enorm": 2.0214436382, "reduct": 1.8437292863099999, "use": 0.0292080197316, "experi": 0.626272953933, "optim": 2.4456277954099996, "unsplash": 7.369978720910001, "out": 0.0584263909193, "model": 0.7374500731110001, "good": 0.418589404907, "concept": 0.977224437103, "much": 0.17749572930100002, "cours": 0.765899404133, "competit": 1.12154907401, "absolut": 1.67658333914, "count": 1.24748591139, "duti": 1.33905310492, "usag": 1.86059038428, "fabric": 2.4261957337999998, "not": 0.0155524130075, "far": 0.536623764503, "involv": 0.371469078658, "tri": 0.61759152916, "are": 0.0294674735827, "minim": 1.80968177926, "altern": 0.760359972282, "four": 0.190213538869, "border": 1.14978624419, "multiplyaccumul": 7.369978720910001, "torrent": 4.70971918364, "aggreg": 2.8646288702, "handl": 1.36683266903, "asic": 5.801362803, "they": 0.0297269947676, "design": 0.377239118022, "turn": 0.324899251064, "effect": 0.333830227158, "techniqu": 1.31624384807, "grasp": 3.16827564037, "larger": 0.806828661778, "blog": 2.65237310559, "node": 3.7920308275, "ensur": 1.22751130026, "respons": 0.40991566230300003, "that": 0.00397614837964, "infer": 3.0511581621399997, "provid": 0.19517784432500002, "valu": 0.823193310148, "longterm": 6.238576609419999, "fpgas": 7.369978720910001, "moreov": 2.02287119019, "such": 0.059695977806, "accuraci": 2.5464765406, "sever": 0.06991112039689999, "explor": 1.22257937218, "august": 0.384706999499, "network": 0.9530830530519999, "squeez": 3.5722448618800002, "without": 0.258874517941, "lot": 1.4835969502500002, "some": 0.0395735090645, "sourc": 0.529218310751, "control": 0.38498466158600003, "may": 0.050709995284400004, "call": 0.0654627744488, "mac": 3.0209919403099996, "cycl": 1.68810108164, "produc": 0.314320812003, "filter": 2.82668393864, "rate": 0.761033872166, "introduc": 0.5457137524260001, "set": 0.171496011289, "third": 0.35032434942900004, "two": 0.0136988443582, "squeezenet": 7.369978720910001, "modul": 2.82988053166, "debi\u00e8v": 7.369978720910001, "factori": 1.69254022159, "complementari": 3.4802013244300003, "everybodi": 2.8869761689, "work": 0.109034567273, "num": 0.00031499039539700004, "instanc": 1.18089357972, "happen": 1.08640441802, "bulk": 2.2670681507, "idea": 0.73863592212, "for": 0.00031499039539700004, "car": 1.2634013667, "predict": 1.6457402376899999, "discuss": 0.78698452262, "nvidia": 6.117215752409999, "asynchron": 5.10821562244, "with": 0.00119749171339, "teach": 1.38277323072, "plethora": 4.513508514690001, "episod": 1.48972510314, "late": 0.275660890876, "solut": 1.55346297627, "true": 0.938325629634, "better": 0.6964279406, "intel": 3.9992405467300003, "vital": 1.9388802431299998, "target": 1.1690639496200002, "popular": 0.41058020877499996, "video": 1.19307248967, "secur": 0.774198206948, "intern": 0.265095377816, "harder": 2.84061024834, "intellectu": 1.78573081495, "combin": 0.529218310751, "latenc": 5.16170430739, "imagin": 1.88684291737, "familiar": 1.92626315167, "compar": 0.6239191809269999, "allevi": 3.1186304098799997, "photo": 1.8593765463799998, "proper": 1.2056118389200001, "train": 0.660918312839, "great": 0.235805258079, "upload": 4.35444382006, "redund": 3.3940423897400005, "extrem": 0.8612095839370001, "his": 0.0901772433641, "continu": 0.13040487398700001, "demand": 0.850831432969, "compel": 2.4573238351700004, "just": 0.289531434109, "machin": 1.39235958062, "into": 0.0149128632287, "bharath": 7.369978720910001, "abov": 0.643865229816, "servic": 0.41410016674500005, "requir": 0.424253510675, "conting": 2.63290346404, "local": 0.416867740206, "various": 0.28692650007, "prone": 2.89833992755, "ultra": 3.7271432052999995, "larg": 0.17037506060600002, "vpus": 7.369978720910001, "tech": 2.9535506595200003, "relat": 0.21310030165399999, "can": 0.162341096394, "who": 0.0609002329859, "trip": 1.58923520512, "permiss": 1.8373800586400002, "pascal": 3.7699304805000002, "post": 0.8057001527009999, "here": 0.8850381883700001, "lower": 0.742201929994, "ideal": 1.53809624363, "factor": 1.06169814662, "owe": 1.82519197774, "give": 0.311392552224, "long": 0.235645793878, "onlin": 0.957503854357, "layer": 2.0969791623500003, "than": 0.0322608622182, "parallel": 1.52151886822, "about": 0.0628434774746, "problem": 0.569140724273, "deploy": 2.00400270589, "job": 1.1798682540899998, "neural": 4.0853151555, "kit": 2.8646288702, "entir": 0.46603068026999994, "devic": 1.6110769470299997, "heard": 1.4933640154799999, "featur": 0.423387418142, "classifi": 1.6665296351499999, "check": 1.87281049562, "expens": 1.26563201674, "serious": 0.949332539075, "contribut": 0.655201578909, "frugal": 4.8522822483, "across": 0.549198455941, "save": 1.03598886547, "communic": 1.04365037288, "few": 0.275577913653, "among": 0.228496097073, "run": 0.442714975539, "love": 1.08958288195, "them": 0.0941833269093, "bonnet": 4.62913869698, "seri": 0.38193461069799994, "consumpt": 2.23653599755, "trust": 1.5883097076, "nonetheless": 2.06369318471, "singl": 0.475916769059, "expand": 0.80021683492, "lose": 1.1265888210600001, "cheat": 3.4559577128199996, "track": 1.14028498507, "accommod": 1.7416384414200001, "critic": 0.512885356729, "tangibl": 4.03065674296, "over": 0.0249367214957, "mobilenet": 7.369978720910001, "consum": 1.5954271753600002, "too": 0.5965551547219999, "same": 0.112059649604, "there": 0.0400978929255, "arrang": 1.05915176475, "connect": 0.633605058682, "prune": 4.87677326831, "stick": 2.4456277954099996, "fire": 0.749239069835, "cross": 0.846416414759, "cheaper": 2.8460185903500004, "wise": 2.74402599574, "way": 0.19809150993500002, "frame": 1.8373800586400002, "best": 0.459227932947, "origin": 0.128612437587, "blockchain": 7.369978720910001, "specif": 0.626980167541, "slight": 1.17966331506, "movidius": 7.369978720910001, "now": 0.149092945021, "central": 0.477540146039, "robust": 2.9929646280599997, "rmachinelearn": 7.369978720910001, "code": 1.35601909597, "usual": 0.545279017064, "see": 0.240921585492, "high": 0.13782378654000002, "self": 2.48264164316, "unit": 0.143188061817, "power": 0.292396282715, "edg": 1.4944863500499999, "issu": 0.364099043934, "undergradu": 2.8536397486299996, "cloud": 2.36268232808, "coupl": 1.18089357972, "risk": 1.4100048408899999, "simplest": 3.3339697356999998, "reinforc": 1.86464718498, "acceler": 2.0985188085299997, "research": 0.663727818138, "signific": 0.373571744332, "the": 0.0, "area": 0.327954821122, "becom": 0.11771217648900001, "drone": 3.96878133925, "numxnum": 3.9522520373, "commerci": 0.8769815969470001, "challeng": 0.9392919688950001, "accid": 1.84094653755, "anim": 1.04365037288, "enhanc": 1.6408534385799998, "truncat": 4.23448450498, "simul": 2.44055348224, "howev": 0.0903151173475, "share": 0.618760299747, "distil": 3.78368585557, "onboard": 4.1118821828900005, "jetson": 6.3767269479, "jay": 2.3233329892900003, "which": 0.00517841384543, "imagenet": 7.369978720910001, "other": 0.00987474791976, "refer": 0.262553246798, "one": 0.0062553516455, "server": 3.6394775921, "known": 0.0824180805992, "impact": 1.09033222631, "custom": 1.2905032964799998, "microarchitectur": 6.72812483474, "becaus": 0.139343158825, "imag": 0.99376210729, "get": 0.579769005782, "vendor": 3.30609336617, "intellig": 1.43349848213, "collect": 0.49536666052, "doubt": 1.67020426765, "agent": 1.4489366381, "part": 0.04239531098280001, "memori": 0.9454338986599999, "precis": 1.67187902939, "reliabl": 1.89939013342, "mere": 1.43561376584, "this": 0.0037864490525, "detect": 1.68878274493, "time": 0.0112115188626, "process": 0.527829199025, "bit": 2.12032652634, "perform": 0.42618085058, "flop": 4.135229546880001, "smaller": 0.9530830530519999, "project": 0.561601885907, "differ": 0.212321121312, "bandwidth": 4.27893626755, "most": 0.020747896295599998, "low": 0.7564602833490001, "heavili": 1.17598157639, "hack": 3.7699304805000002, "drive": 1.07674430203, "depend": 0.806969815, "fail": 0.656536611573, "obtain": 0.988162703503, "all": 0.011402632097799998, "top": 0.609100637788, "joint": 1.21873649811, "action": 0.598043165069, "reason": 0.544301552962, "learnnumcompress": 7.369978720910001, "less": 0.3846144626, "have": 0.0147850023412, "case": 0.395406268889, "webinar": 7.369978720910001, "normal": 0.959639378783, "architectur": 1.63469757919, "drop": 0.8999535106219999, "academ": 1.35895667459, "final": 0.292733863948, "more": 0.017024931599999998, "and": 6.29901420636e-05, "dedic": 1.16481508131, "respect": 0.49733261904, "alexandr": 3.62283035867, "these": 0.0715336194008, "compact": 2.5218623563099998, "benefit": 1.12116245116, "temporarili": 2.0195434001, "float": 2.38911558515, "comment": 1.11826753454, "matrix": 3.1186304098799997, "favor": 1.1420596084299999, "channel": 1.30247948752, "near": 0.252854324034, "comput": 1.36806891594, "raj": 4.06309201872, "aid": 0.976889765079, "each": 0.173741689304, "size": 0.9138372060609999, "bring": 0.7110694905930001, "student": 0.904923236645, "depth": 2.10936322154, "neighbor": 1.7546632275799998, "transfer": 1.00264953547, "data": 1.2168205848, "reduc": 0.686617775143, "method": 0.944461608841, "level": 0.503462189943, "convolut": 4.61631800855, "bio": 3.7456377879300002, "stat": 3.96878133925, "exampl": 0.40868267499899996, "gpus": 6.964513612799999, "from": 0.000567054168866, "everi": 0.391485427421, "vision": 1.58523088743, "could": 0.18595627229000003, "enough": 0.802884439169, "while": 0.04324998379380001, "properti": 0.953573289192, "host": 0.996658931332, "easili": 1.3066587367, "whi": 1.18068843047, "teacher": 1.5026611665399998, "round": 1.2191627555700002, "down": 0.306673741186, "learn": 0.842752064745, "when": 0.0205549888584, "mention": 0.931747186336, "effici": 1.62793753414}, "freq": {"hand": 1, "strike": 1, "boost": 1, "failur": 1, "googl": 4, "decentr": 4, "survey": 1, "patrol": 1, "fit": 2, "take": 3, "typic": 1, "neuron": 2, "space": 1, "would": 7, "reap": 1, "number": 6, "swarm": 1, "dataset": 2, "function": 1, "class": 1, "ship": 1, "strategi": 1, "unexpect": 1, "product": 1, "done": 1, "benign": 1, "ddos": 1, "approach": 2, "toy": 1, "retain": 1, "danc": 1, "their": 6, "motiv": 1, "scale": 5, "similar": 1, "sheet": 2, "multipl": 5, "stanford": 1, "repost": 1, "maintain": 1, "instantan": 1, "scalabl": 1, "increas": 1, "especi": 3, "hundr": 1, "distribut": 2, "due": 1, "found": 1, "station": 5, "downsampl": 1, "interest": 1, "deep": 7, "remot": 1, "will": 1, "associ": 2, "event": 1, "microprocessor": 3, "attack": 2, "write": 1, "incorpor": 2, "constraint": 2, "claim": 1, "downtim": 1, "but": 1, "speed": 1, "need": 1, "our": 3, "classif": 2, "cost": 5, "object": 3, "parti": 1, "applic": 4, "walk": 1, "hidden": 1, "volta": 1, "neglig": 1, "has": 4, "inher": 1, "paramet": 6, "also": 1, "enorm": 2, "reduct": 3, "use": 17, "experi": 1, "optim": 3, "unsplash": 1, "out": 2, "model": 12, "good": 1, "concept": 1, "much": 2, "cours": 1, "competit": 1, "absolut": 1, "count": 2, "duti": 1, "usag": 2, "fabric": 2, "not": 8, "far": 1, "involv": 1, "tri": 1, "are": 11, "minim": 1, "altern": 2, "four": 1, "border": 1, "multiplyaccumul": 1, "torrent": 1, "aggreg": 1, "handl": 1, "asic": 1, "they": 5, "design": 2, "turn": 1, "effect": 6, "techniqu": 1, "grasp": 1, "larger": 1, "blog": 2, "node": 3, "ensur": 1, "respons": 1, "that": 9, "infer": 4, "provid": 2, "valu": 2, "longterm": 1, "fpgas": 1, "moreov": 6, "such": 7, "accuraci": 5, "sever": 2, "explor": 1, "august": 1, "network": 16, "squeez": 1, "without": 1, "lot": 1, "some": 1, "sourc": 12, "control": 1, "may": 5, "call": 1, "mac": 1, "cycl": 1, "produc": 1, "filter": 1, "rate": 1, "introduc": 1, "set": 2, "third": 1, "two": 1, "squeezenet": 3, "modul": 2, "debi\u00e8v": 1, "factori": 1, "complementari": 1, "everybodi": 1, "work": 7, "num": 20, "instanc": 2, "happen": 1, "bulk": 1, "idea": 1, "for": 20, "car": 1, "predict": 1, "discuss": 1, "nvidia": 5, "asynchron": 1, "with": 8, "teach": 1, "plethora": 1, "episod": 1, "late": 1, "solut": 5, "true": 1, "better": 1, "intel": 2, "vital": 1, "target": 1, "popular": 2, "video": 1, "secur": 3, "intern": 1, "harder": 1, "intellectu": 1, "combin": 2, "latenc": 5, "imagin": 1, "familiar": 1, "compar": 1, "allevi": 1, "photo": 1, "proper": 1, "train": 7, "great": 3, "upload": 1, "redund": 3, "extrem": 2, "his": 1, "continu": 2, "demand": 1, "compel": 1, "just": 1, "machin": 4, "into": 2, "bharath": 3, "abov": 2, "servic": 3, "requir": 4, "conting": 1, "local": 3, "various": 2, "prone": 1, "ultra": 1, "larg": 9, "vpus": 2, "tech": 1, "relat": 2, "can": 19, "who": 1, "trip": 1, "permiss": 1, "pascal": 1, "post": 1, "here": 3, "lower": 2, "ideal": 1, "factor": 3, "owe": 1, "give": 1, "long": 2, "onlin": 1, "layer": 1, "than": 4, "parallel": 2, "about": 2, "problem": 3, "deploy": 2, "job": 1, "neural": 8, "kit": 1, "entir": 1, "devic": 22, "heard": 1, "featur": 1, "classifi": 4, "check": 1, "expens": 3, "serious": 1, "contribut": 1, "frugal": 1, "across": 1, "save": 2, "communic": 1, "few": 1, "among": 1, "run": 2, "love": 1, "them": 1, "bonnet": 1, "seri": 1, "consumpt": 3, "trust": 2, "nonetheless": 1, "singl": 3, "expand": 1, "lose": 1, "cheat": 2, "track": 1, "accommod": 1, "critic": 1, "tangibl": 1, "over": 4, "mobilenet": 2, "consum": 1, "too": 1, "same": 1, "there": 4, "arrang": 1, "connect": 1, "prune": 2, "stick": 1, "fire": 2, "cross": 1, "cheaper": 1, "wise": 1, "way": 2, "frame": 1, "best": 2, "origin": 1, "blockchain": 1, "specif": 2, "slight": 1, "movidius": 2, "now": 2, "central": 2, "robust": 1, "rmachinelearn": 1, "code": 1, "usual": 1, "see": 1, "high": 2, "self": 1, "unit": 1, "power": 4, "edg": 23, "issu": 1, "undergradu": 1, "cloud": 7, "coupl": 1, "risk": 2, "simplest": 1, "reinforc": 1, "acceler": 1, "research": 1, "signific": 4, "the": 60, "area": 1, "becom": 1, "drone": 2, "numxnum": 1, "commerci": 1, "challeng": 1, "accid": 1, "anim": 1, "enhanc": 1, "truncat": 1, "simul": 1, "howev": 2, "share": 1, "distil": 3, "onboard": 1, "jetson": 2, "jay": 1, "which": 3, "imagenet": 1, "other": 3, "refer": 1, "one": 2, "server": 3, "known": 1, "impact": 1, "custom": 4, "microarchitectur": 1, "becaus": 2, "imag": 1, "get": 1, "vendor": 1, "intellig": 1, "collect": 2, "doubt": 1, "agent": 1, "part": 1, "memori": 2, "precis": 1, "reliabl": 1, "mere": 1, "this": 17, "detect": 1, "time": 3, "process": 6, "bit": 6, "perform": 8, "flop": 1, "smaller": 1, "project": 1, "differ": 2, "bandwidth": 4, "most": 2, "low": 4, "heavili": 2, "hack": 1, "drive": 1, "depend": 1, "fail": 1, "obtain": 1, "all": 3, "top": 2, "joint": 1, "action": 1, "reason": 1, "learnnumcompress": 2, "less": 1, "have": 14, "case": 5, "webinar": 1, "normal": 1, "architectur": 3, "drop": 1, "academ": 1, "final": 1, "more": 2, "and": 25, "dedic": 1, "respect": 1, "alexandr": 1, "these": 5, "compact": 1, "benefit": 3, "temporarili": 1, "float": 1, "comment": 1, "matrix": 1, "favor": 1, "channel": 1, "near": 1, "comput": 10, "raj": 2, "aid": 1, "each": 2, "size": 7, "bring": 1, "student": 2, "depth": 1, "neighbor": 1, "transfer": 1, "data": 4, "reduc": 10, "method": 2, "level": 1, "convolut": 3, "bio": 1, "stat": 1, "exampl": 1, "gpus": 2, "from": 1, "everi": 1, "vision": 3, "could": 6, "enough": 1, "while": 2, "properti": 1, "host": 2, "easili": 1, "whi": 3, "teacher": 1, "round": 1, "down": 2, "learn": 16, "when": 2, "mention": 1, "effici": 3}, "idf": {"hand": 1.6152202665600002, "strike": 3.5620372447800004, "boost": 9.16099249856, "failur": 3.28559602649, "googl": 11.388809182200001, "decentr": 40.5, "survey": 3.7791002142300005, "patrol": 10.6265060241, "fit": 3.37070063694, "take": 1.13961668222, "typic": 2.2541530597799997, "neuron": 64.2753036437, "space": 2.39818731118, "would": 1.0828729281799998, "reap": 73.1612903226, "number": 1.10142916609, "swarm": 60.3650190114, "dataset": 193.609756098, "function": 2.495441685, "class": 2.11651779763, "ship": 3.14812611541, "strategi": 4.44208170118, "unexpect": 9.88542963885, "product": 1.62264922322, "done": 2.3302509907499998, "benign": 55.125, "ddos": 1323.0, "approach": 2.07556543339, "toy": 15.383720930199999, "retain": 2.74956702459, "danc": 4.9350326391, "their": 1.01547908405, "motiv": 5.01611374408, "scale": 3.7469907953699995, "similar": 1.37514075357, "sheet": 8.60954446855, "multipl": 2.74813917258, "stanford": 12.6, "repost": 933.882352941, "maintain": 1.77306231852, "instantan": 54.9342560554, "scalabl": 186.776470588, "increas": 1.32024948025, "especi": 1.66712170534, "hundr": 2.4698195395099996, "distribut": 2.7396031061299997, "due": 1.23789473684, "found": 1.11387076405, "station": 2.35653851863, "downsampl": 1587.6, "interest": 1.60331246213, "deep": 3.6279707495399998, "remot": 7.74816983895, "will": 1.22481098596, "associ": 1.3263157894700002, "event": 1.5356935577500002, "microprocessor": 97.3987730061, "attack": 1.97094972067, "write": 2.0575427682700003, "incorpor": 2.62847682119, "constraint": 15.0483412322, "claim": 1.52697893623, "downtim": 317.52, "but": 1.01632417899, "speed": 3.8703071672400005, "need": 1.4372623574099999, "our": 2.35758835759, "classif": 8.067073170730001, "cost": 2.31935719503, "object": 2.3488681757700003, "parti": 2.06369426752, "applic": 3.42672134686, "walk": 3.56363636364, "hidden": 7.81299212598, "volta": 136.862068966, "neglig": 24.2381679389, "has": 1.0436497502, "inher": 10.7706919946, "paramet": 17.256521739100002, "also": 1.01476510067, "enorm": 7.54921540656, "reduct": 6.320063694269999, "use": 1.0296387573799999, "experi": 1.87062566278, "optim": 11.5377906977, "unsplash": 1587.6, "out": 1.06016694491, "model": 2.0905978404, "good": 1.51981619759, "concept": 2.65707112971, "much": 1.1942229577299999, "cours": 2.15092805853, "competit": 3.06960556845, "absolut": 5.3472549680000006, "count": 3.48157894737, "duti": 3.8154289834199995, "usag": 6.427530364369999, "fabric": 11.3157519601, "not": 1.01567398119, "far": 1.71022298826, "involv": 1.4498630137000001, "tri": 1.8544562551099997, "are": 1.02990593578, "minim": 6.10850327049, "altern": 2.1390460792200003, "four": 1.20950784702, "border": 3.15751789976, "multiplyaccumul": 1587.6, "torrent": 111.020979021, "aggreg": 17.542541436500002, "handl": 3.9229058561900003, "asic": 330.75, "they": 1.03017325287, "design": 1.45825296225, "turn": 1.3838912133899999, "effect": 1.3963060686000002, "techniqu": 3.7293868921800004, "grasp": 23.766467065900002, "larger": 2.2407904022599996, "blog": 14.1876675603, "node": 44.3463687151, "ensur": 3.4127257093700005, "respons": 1.5066907089300001, "that": 1.00398406375, "infer": 21.1398135819, "provid": 1.21552714187, "valu": 2.2777618364400003, "longterm": 512.129032258, "fpgas": 1587.6, "moreov": 7.56, "such": 1.06151377374, "accuraci": 12.7620578778, "sever": 1.07241286139, "explor": 3.39593582888, "august": 1.46918378679, "network": 2.59369384088, "squeez": 35.5964125561, "without": 1.29547123623, "lot": 4.40877534018, "some": 1.04036697248, "sourc": 1.69760479042, "control": 1.46959178006, "may": 1.05201775893, "call": 1.0676529926, "mac": 20.511627907, "cycl": 5.40919931857, "produc": 1.36932896326, "filter": 16.8893617021, "rate": 2.14048806795, "introduc": 1.7258397651900002, "set": 1.18707940781, "third": 1.4195278969999998, "two": 1.01379310345, "squeezenet": 1587.6, "modul": 16.9434364995, "debi\u00e8v": 1587.6, "factori": 5.43326488706, "complementari": 32.466257668699996, "everybodi": 17.9389830508, "work": 1.11520089913, "num": 1.00031504001, "instanc": 3.2572835453400004, "happen": 2.96359902931, "bulk": 9.651063829789999, "idea": 2.0930784443, "for": 1.00031504001, "car": 3.53743315508, "predict": 5.18484650555, "discuss": 2.19676214197, "nvidia": 453.6, "asynchron": 165.375, "with": 1.0011982089899998, "teach": 3.98594024605, "plethora": 91.2413793103, "episod": 4.435875943, "late": 1.31740104556, "solut": 4.7278141751, "true": 2.55569864778, "better": 2.0065722952500002, "intel": 54.5567010309, "vital": 6.9509632224199995, "target": 3.2189781021900004, "popular": 1.50769230769, "video": 3.29719626168, "secur": 2.16885245902, "intern": 1.30355530011, "harder": 17.1262135922, "intellectu": 5.963936889559999, "combin": 1.69760479042, "latenc": 174.46153846200002, "imagin": 6.598503740650001, "familiar": 6.86381322957, "compar": 1.8662278123900002, "allevi": 22.6153846154, "photo": 6.41973311767, "proper": 3.3388012618299996, "train": 1.9365698950999999, "great": 1.26592775696, "upload": 77.82352941180001, "redund": 29.7861163227, "extrem": 2.36602086438, "his": 1.0943682360200002, "continu": 1.13928955867, "demand": 2.34159292035, "compel": 11.6735294118, "just": 1.33580143037, "machin": 4.02433460076, "into": 1.01502461479, "bharath": 1587.6, "abov": 1.90382539873, "servic": 1.51300867245, "requir": 1.52844902282, "conting": 13.9141104294, "local": 1.51720183486, "various": 1.3323262839899999, "prone": 18.144000000000002, "ultra": 41.5602094241, "larg": 1.18574949585, "vpus": 1587.6, "tech": 19.1739130435, "relat": 1.23750876919, "can": 1.17626139142, "who": 1.06279287723, "trip": 4.9, "permiss": 6.280063291139999, "pascal": 43.3770491803, "post": 2.23826307627, "here": 2.42307692308, "lower": 2.10055570257, "ideal": 4.65571847507, "factor": 2.89127663449, "owe": 6.203985932, "give": 1.3653250774, "long": 1.2657259028899999, "onlin": 2.6051854282900004, "layer": 8.14153846154, "than": 1.03278688525, "parallel": 4.57917507932, "about": 1.06486015159, "problem": 1.76674827509, "deploy": 7.41869158879, "job": 3.2539454806299997, "neural": 59.4606741573, "kit": 17.542541436500002, "entir": 1.59365589239, "devic": 5.00820189274, "heard": 4.45204711161, "featur": 1.52712581762, "classifi": 5.2937645882, "check": 6.50655737705, "expens": 3.5453327378300004, "serious": 2.583984375, "contribut": 1.9255306246200001, "frugal": 128.032258065, "across": 1.7318642958400001, "save": 2.8178913737999998, "communic": 2.8395635843299996, "few": 1.31729173581, "among": 1.25670862028, "run": 1.55692850838, "love": 2.97303370787, "them": 1.09876115994, "bonnet": 102.425806452, "seri": 1.46511627907, "consumpt": 9.3608490566, "trust": 4.89546716004, "nonetheless": 7.875, "singl": 1.60948905109, "expand": 2.2260235558000003, "lose": 3.0851146521599997, "cheat": 31.6886227545, "track": 3.1276595744700004, "accommod": 5.70668583753, "critic": 1.67010309278, "tangibl": 56.2978723404, "over": 1.02525024217, "mobilenet": 1587.6, "consum": 4.93043478261, "too": 1.81585268215, "same": 1.11857958148, "there": 1.04091266719, "arrang": 2.8839237057200005, "connect": 1.8843916913900003, "prune": 131.20661157, "stick": 11.5377906977, "fire": 2.1153897401700004, "cross": 2.33127753304, "cheaper": 17.2190889371, "wise": 15.5494613124, "way": 1.2190739461, "frame": 6.280063291139999, "best": 1.5828514456600002, "origin": 1.13724928367, "blockchain": 1587.6, "specif": 1.8719490626099997, "slight": 3.25327868852, "movidius": 1587.6, "now": 1.160780873, "central": 1.6121039805000001, "robust": 19.9447236181, "rmachinelearn": 1587.6, "code": 3.8807137619199996, "usual": 1.72508964468, "see": 1.27242125511, "high": 1.14777327935, "self": 11.972850678699999, "unit": 1.15394679459, "power": 1.3396337861799998, "edg": 4.45704660303, "issu": 1.43921675279, "undergradu": 17.350819672100002, "cloud": 10.6193979933, "coupl": 3.2572835453400004, "risk": 4.095975232200001, "simplest": 28.0494699647, "reinforc": 6.453658536590001, "acceler": 8.15408320493, "research": 1.9420183486200002, "signific": 1.4529147982100001, "the": 1.0, "area": 1.3881262568900001, "becom": 1.12492028626, "drone": 52.92, "numxnum": 52.0524590164, "commerci": 2.4036336109, "challeng": 2.55816951337, "accid": 6.30250099246, "anim": 2.8395635843299996, "enhanc": 5.15957101072, "truncat": 69.0260869565, "simul": 11.4793926247, "howev": 1.0945191313299998, "share": 1.8566249561500001, "distil": 43.9778393352, "onboard": 61.0615384615, "jetson": 588.0, "jay": 10.2096463023, "which": 1.005191845, "imagenet": 1587.6, "other": 1.00992366412, "refer": 1.30024570025, "one": 1.00627495722, "server": 38.071942446, "known": 1.0859097127200001, "impact": 2.97526236882, "custom": 3.6346153846199996, "microarchitectur": 835.5789473680001, "becaus": 1.1495184997499999, "imag": 2.70137825421, "get": 1.78562591385, "vendor": 27.2783505155, "intellig": 4.19334389857, "collect": 1.64109985528, "doubt": 5.31325301205, "agent": 4.25858369099, "part": 1.04330682789, "memori": 2.57392996109, "precis": 5.322158900440001, "reliabl": 6.681818181819999, "mere": 4.20222339862, "this": 1.00379362671, "detect": 5.41288782816, "time": 1.01127460348, "process": 1.69524826482, "bit": 8.33385826772, "perform": 1.5313977042500002, "flop": 62.5039370079, "smaller": 2.59369384088, "project": 1.7534791252500002, "differ": 1.23654490225, "bandwidth": 72.16363636359999, "most": 1.02096463023, "low": 2.13072070863, "heavili": 3.24132298898, "hack": 43.3770491803, "drive": 2.93510815308, "depend": 2.2411067193700003, "fail": 1.9281029876099998, "obtain": 2.68629441624, "all": 1.01146788991, "top": 1.8387769284200002, "joint": 3.38291071809, "action": 1.81855670103, "reason": 1.72340425532, "learnnumcompress": 1587.6, "less": 1.46904783936, "have": 1.0148948411399998, "case": 1.48498737256, "webinar": 1587.6, "normal": 2.61075481006, "architectur": 5.12790697674, "drop": 2.4594887684, "academ": 3.8921304241199994, "final": 1.34008609775, "more": 1.0171706817, "and": 1.00006299213, "dedic": 3.20533010297, "respect": 1.6443293630200002, "alexandr": 37.4433962264, "these": 1.07415426252, "compact": 12.451764705899999, "benefit": 3.06841901817, "temporarili": 7.534883720930001, "float": 10.903846153800002, "comment": 3.05954904606, "matrix": 22.6153846154, "favor": 3.1332149200700004, "channel": 3.6784059314199995, "near": 1.28769567686, "comput": 3.9277585353800006, "raj": 58.1538461538, "aid": 2.65618203112, "each": 1.18974820144, "size": 2.49387370405, "bring": 2.03616775683, "student": 2.47174217655, "depth": 8.24299065421, "neighbor": 5.781500364169999, "transfer": 2.72549356223, "data": 3.37643555934, "reduc": 1.98698372966, "method": 2.5714285714300003, "level": 1.6544393497299998, "convolut": 101.121019108, "bio": 42.336000000000006, "stat": 52.92, "exampl": 1.50483412322, "gpus": 1058.4, "from": 1.00056721497, "everi": 1.47917637194, "vision": 4.88041807562, "could": 1.2043695949, "enough": 2.2319696330700003, "while": 1.0441988950299999, "properti": 2.5949656750599996, "host": 2.7092150170599996, "easili": 3.6938110749199997, "whi": 3.2566153846200003, "teacher": 4.49363147467, "round": 3.3843530164099995, "down": 1.35889754344, "learn": 2.32275054865, "when": 1.02076769755, "mention": 2.53894130817, "effici": 5.09335899904}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Deep Learning on the Edge</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/deep-learning-edge.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Deep Learning on the Edge Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/data-augmentation-bounding-boxes-image-transforms.html\" rel=\"prev\" title=\"Data Augmentation For Bounding Boxes: Rethinking image transforms for object detection\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/activestate-webinar-mlops-machine-learning.html\" rel=\"next\" title=\"[Live Webinar] MLOps: Machine Learning Operationalization, Sep 27\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/09/deep-learning-edge.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=85275\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/deep-learning-edge.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-85275 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 19-Sep, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/opinions-interviews.html\">Opinions</a> \u00bb Deep Learning on the Edge (\u00a0<a href=\"/2018/n36.html\">18:n36</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Deep Learning on the Edge</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/09/data-augmentation-bounding-boxes-image-transforms.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/09/activestate-webinar-mlops-machine-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/cloud-computing\" rel=\"tag\">Cloud Computing</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/iot\" rel=\"tag\">IoT</a>, <a href=\"https://www.kdnuggets.com/tag/security\" rel=\"tag\">Security</a></div>\n<br/>\n<p class=\"excerpt\">\n     Detailed analysis into utilizing deep learning on the edge, covering both advantages and disadvantages and comparing this against more traditional cloud computing methods.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/bharathrajn/\">Bharath Raj</a></b>.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*iuSKK3d30UFIb_vNPdftjQ.jpeg\" width=\"100%\"><br>\n<center><span style=\"color: grey;\">Photo by <a href=\"https://unsplash.com/photos/FO7JIlwjOtU?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Alexandre Debi\u00e8ve</a> on <a href=\"https://unsplash.com/search/photos/electronics?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></center>\u00a0</br></img></p>\n<p>Scalable Deep Learning services are contingent on several constraints. Depending on your target application, you may require low latency, enhanced security or long-term cost effectiveness. Hosting your Deep Learning model on the cloud may not be the best solution in such cases.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*In6L9g43W0RmYOXASC1vtA.jpeg\" width=\"100%\"/><br>\n<center><span style=\"color: grey;\">Computing on the Edge (<a href=\"https://www.ptgrey.com/edge-computing\">Source</a>)</span></center></br></p>\n<p><strong>Deep Learning on the edge</strong>\u00a0alleviates the above issues, and provides other benefits. Edge here refers to the computation that is performed locally on the consumer\u2019s products. This blog explores the\u00a0<strong>benefits</strong>\u00a0of using edge computing for Deep Learning, and the<strong>\u00a0problems</strong>\u00a0associated with it.</p>\n<h3>Why edge? Why not use the\u00a0cloud?</h3>\n<p>There is a plethora of compelling reasons to favor edge computing over cloud computing.</p>\n<h4>1. Bandwidth and\u00a0Latency</h4>\n<p>It\u2019s no doubt that there\u2019s a tangible Round Trip Time (RTT) associated with API calls to a remote server. Applications that demand near instantaneous inference can not function properly with the latency.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*WIqaQsKbqWTPlClBqWzHNQ.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Latency and Power consumption stats for Object Detection (DET), Tracking (TRA) and Localization (LOC) on four different edge devices (<a href=\"https://blog.acolyer.org/2018/04/20/the-architectural-implications-of-autonomous-driving-constraints-and-acceleration/\">Source</a>)</span></center>\u00a0</p>\n<p>Take\u00a0<strong>self driving cars</strong>\u00a0for example. A large enough\u00a0<strong>latency</strong>\u00a0could significantly increase the\u00a0<strong>risk\u00a0</strong>of accidents. Moreover, unexpected events such as animal crossing or jay walking can happen over just a few frames. In these cases, response time is extremely critical. This is why Nvidia has their custom\u00a0<a data-href=\"https://www.nvidia.com/en-us/self-driving-cars/drive-platform/\" href=\"https://www.nvidia.com/en-us/self-driving-cars/drive-platform/\">on-board compute devices</a>\u00a0to perform inference on the edge.</p>\n<p>Moreover, when you have a large number of devices connected to the same network, the effective bandwidth is reduced. This is because of the inherent competition to use the communication channel. This can be significantly reduced if computation is done on the edge.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KX645CSfemBCM6mi5xfV1A.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Bandwidth requirement for various applications. (<a href=\"https://siliconupdates.blogspot.com/2017/07/augmented-reality-and-virtual-reality.html\">Source</a>)</span></center>\u00a0</p>\n<p>Take the case of processing 4K HD videos on multiple devices. Processing them locally would heavily save bandwidth usage. This is because we do not need to upload data to the cloud for inference. Due to this, we can scale this network relatively easily.</p>\n<h4>2. Security and Decentralization</h4>\n<p>Commercial servers are prone to attacks and hacks. Of course, the risk is negligible if you use a trusted vendor. But, you are required to trust a third party for the security of the data you collect and your intellectual property (IP). Having devices on the edge gives you\u00a0<strong>absolute control</strong>\u00a0over your IP.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*VwgFhNj-vmbd6VZx-NyKIA.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Centralized vs Decentralized vs Distributed. (<a href=\"https://blog.ethfinex.com/the-significance-of-decentralisation-b7f72655484e\">Source</a>)</span></center>\u00a0</p>\n<p>If you\u2019ve heard about blockchain, decentralization or distribution may be familiar to you. Nonetheless, having several devices on the edge reaps all the benefits of decentralization. It\u2019s\u00a0<strong>harder</strong>\u00a0to bring down an entire network of hidden devices using a\u00a0<strong>single DDoS attack</strong>, than a centralized server. This is especially useful for applications such as using drones for border patrol.</p>\n<h4>3. Job Specific Usage (Customization)</h4>\n<p>Imagine you have a factory that produces toys. It has a couple hundred work stations. You require an image classification service at every work station. Problem is, each work station has a different set of objects, and training a single classifier may not be effective. Moreover, hosting\u00a0<strong>multiple classifiers</strong>on the\u00a0<strong>cloud</strong>\u00a0would be\u00a0<strong>expensive</strong>.</p>\n<p>The cost effective solution is to train classifiers specific to each part on the cloud, and ship the\u00a0<strong>trained models</strong>\u00a0to the\u00a0<strong>edge devices</strong>. Now, these devices are customized to their work station. They would have better performance than a classifier predicting across all work stations.</p>\n<h4>4. Swarm Intelligence</h4>\n<p>Continuing with the idea mentioned above, edge devices can aid in training machine learning models too. This is especially useful for\u00a0<strong>Reinforcement Learning</strong>, for which you could simulate a large number of \u201cepisodes\u201d in\u00a0<strong>parallel</strong>.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KYomzpKV5Ub3zjVB6hNqAg.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Multiple agents trying to grasp objects. (<a href=\"http://robohub.org/deep-learning-in-robotics/\">Source</a>)</span></center>\u00a0</p>\n<p>Moreover, edge devices can be used to collect data for\u00a0<strong>Online Learning</strong>\u00a0(or\u00a0<strong>Continuous Learning</strong>). For instance, we can use multiple drones to survey an area for classification. Using optimization techniques such as Asynchronous SGD, a single model can be\u00a0<strong>trained in parallel</strong>\u00a0among all edge devices. It can also be merely used for aggregating and processing data from various sources.</p>\n<h4>5. Redundancy</h4>\n<p>Redundancy is extremely vital for robust memory and network architectures. Failure of one node in a network could have serious impacts on the other nodes. In our case, edge devices can provide a good level of redundancy. If one of the our edge devices (here, a node) fail, its neighbor can take over temporarily. This greatly ensures reliability and heavily reduces downtime.</p>\n<h4>6. Cost effective in the long\u00a0run</h4>\n<p>In the long run, cloud services will turn out to be more expensive than having a dedicated set of inference devices. This is especially true if your devices have a large duty cycle (that is, they are working most of the time). Moreover, edge devices are much cheaper if they\u2019re fabricated in bulk, reducing the cost significantly.</p>\n<h3>Constraints for Deep Learning on the\u00a0Edge</h3>\n<p><strong>Deep Learning\u00a0</strong>models are known for being\u00a0<strong>large</strong>\u00a0and\u00a0<strong>computationally expensive</strong>. It\u2019s a challenge to fit these models into\u00a0<strong>edge devices</strong>\u00a0which usually have\u00a0<strong>frugal memory</strong>. There are a number of ways by which we can approach these problems.</p>\n<h4>1. Parameter Efficient Neural\u00a0Networks</h4>\n<p>A striking feature about neural networks is their enormous size. Edge devices typically can not handle large neural networks. This motivated researchers to minimize the size of the neural networks, while maintaining accuracy. Two popular parameter efficient neural networks are the\u00a0<a data-href=\"https://arxiv.org/abs/1704.04861\" href=\"https://arxiv.org/abs/1704.04861\">MobileNet</a>\u00a0and the\u00a0<a data-href=\"https://arxiv.org/abs/1602.07360\" href=\"https://arxiv.org/abs/1602.07360\">SqueezeNet</a>.</p>\n<p>The\u00a0<strong>SqueezeNet</strong>\u00a0incorporates a lot of strategies such as late down-sampling and filter count reduction, to get high performance at a low parameter count. They introduce \u201cFire modules\u201d that have \u201csqueeze\u201d and \u201cexpand\u201d layers that optimize the parameter efficiency of the network.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*c5ZTXzakIVkDjC5DGlBhyQ.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Fire module in the SqueezeNet. (<a href=\"https://arxiv.org/pdf/1602.07360.pdf\">Source</a>)</span></center>\u00a0</p>\n<p>The\u00a0<strong>MobileNet</strong>\u00a0factorizes normal convolutions into a combination of depth wise convolutions and 1x1 convolutions. This arrangement greatly reduces the number of parameters involved.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*7EJDG7ypufhx14nIu1Vw9Q.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Top 1 accuracy in the ImageNet dataset with respect to number of Multiply-Accumulates (MACs). (<a href=\"https://ai.googleblog.com/2017/06/mobilenets-open-source-models-for.html\">Source</a>)</span></center></p>\n<h4>2. Pruning and Truncation</h4>\n<p>A large number of neurons in trained networks are\u00a0<strong>benign</strong>\u00a0and do not contribute to the final accuracy. In this case, we can\u00a0<strong>prune</strong>\u00a0such neurons to save some space. Google\u2019s\u00a0<a data-href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\" href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Learn2Compress</a>\u00a0has found that we can obtain a<strong>size</strong>\u00a0<strong>reduction by factor of 2</strong>, while retaining 97% of the accuracy.</p>\n<p>Moreover, most neural network parameters are 32 bit float values. Edge devices on the other hand can be designed to work on 8 bit values, or less. Reducing precision can significantly reduce the model size. For instance, reducing a\u00a0<strong>32 bit model</strong>\u00a0to\u00a0<strong>8 bit model</strong>\u00a0ideally reduces model size by a\u00a0<strong>factor of 4</strong>.</p>\n<h4>3. Distillation</h4>\n<p>Distillation is the process of teaching smaller networks using a larger \u201cteacher\u201d network. Google\u2019s\u00a0<a data-href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\" href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Learn2Compress</a>\u00a0incorporates this in their size reduction process. Combined with transfer learning, this becomes a powerful method to reduce model size without losing much accuracy.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*Id6ZQBu9VgANtd8frCQK-w.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Joint training and distillation approach to learn compact student models. (<a href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Source</a>)</span></center>\u00a0</p>\n<h4>4. Optimized Microprocessor Designs</h4>\n<p>So far we have discussed way to scale down neural networks to fit in our edge devices. An alternate (or complementary) method would be to scale up the performance of the microprocessor.</p>\n<p>The simplest solution would be to have a GPU on a microprocessor, such as the popular\u00a0<a data-href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\" href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\">Nvidia Jetson</a>. However, these devices may not be cost effective when deployed on a large scale.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KlSkL6KOtxml6s5jgqA7Ag.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Nvidia Jetson (<a href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\">Source</a>)</span></center>\u00a0</p>\n<p>A more interesting solution would be to use Vision Processing Units (VPUs). Intel claims that their Movidius VPUs have \u201chigh speed performance at an ultra low power consumption\u201d. Google\u2019s\u00a0<a data-href=\"https://www.movidius.com/news/google-launches-aiy-vision-kit-featuring-intel-movidius-vpu\" href=\"https://www.movidius.com/news/google-launches-aiy-vision-kit-featuring-intel-movidius-vpu\">AIY kits</a>\u00a0and Intel\u2019s\u00a0<a data-href=\"https://www.movidius.com/news/intel-movidius-neural-compute-stick-honored-with-ces-best-of-innovation-award-2018\" href=\"https://www.movidius.com/news/intel-movidius-neural-compute-stick-honored-with-ces-best-of-innovation-award-2018\">Neural Compute Stick\u00a0</a>internally use this VPU.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KSItXzlVVbP37XZ7WW-SJw.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Google AIY\u2019s Vision Bonnet using a Movidius VPU. (<a href=\"https://www.zdnet.com/article/google-offers-raspberry-pi-owners-this-new-ai-vision-kit-to-spot-cats-people-emotions/\">Source</a>)</span></center>\u00a0</p>\n<p>Alternatively, we could use FPGAs. They have low power consumption than GPUs and can accommodate lower bit (&lt; 32 bit) architectures. However, there could be a slight drop in performance compared to GPUs owing to their lower FLOPs rating.</p>\n<p>For large scale deployment, custom ASICs would be the best solution. Fabricating micro-architectures similar to Nvidia\u2019s V100 to accelerate matrix multiplications could greatly boost performance.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*gzozPNb4SFcWPNkOZeNDZw.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Pascal vs Volta architecture; Nvidia. (<a href=\"https://www.nvidia.com/en-us/data-center/tensorcore/\">Source</a>)</span></center></p>\n<p><a href=\"https://towardsdatascience.com/deep-learning-on-the-edge-9181693f466c\">Original</a>. Reposted with permission.</p>\n<p><b>Bio</b>: <a href=\"https://www.linkedin.com/in/bharathrajn/\">Bharath Raj</a> is an undergraduate student at SSN who loves to experiment with Machine Learning and Computer Vision concepts. Bharath writes code and tech blogs. You can check out his projects <a href=\"https://thatbrguy.github.io\">here</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2018/09/top-reddit-machine-learning-august.html\">Top /r/MachineLearning posts, August 2018: Everybody Dance Now; Stanford class Machine Learning cheat sheets; Academic Torrents for sharing enormous datasets</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/09/nvidia-deep-learning-webinar-series.html\">See NVIDIA Deep Learning In Action [Webinar Series]</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/09/machine-learning-cheat-sheets.html\">Machine Learning Cheat Sheets</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/09/data-augmentation-bounding-boxes-image-transforms.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/09/activestate-webinar-mlops-machine-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/opinions-interviews.html\">Opinions</a> \u00bb Deep Learning on the Edge (\u00a0<a href=\"/2018/n36.html\">18:n36</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556342361\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.739 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 01:19:21 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "bharath", "raj", "photo", "alexandr", "debi\u00e8v", "unsplash", "scalabl", "deep", "learn", "servic", "are", "conting", "sever", "constraint", "depend", "target", "applic", "may", "requir", "low", "latenc", "enhanc", "secur", "longterm", "cost", "effect", "host", "deep", "learn", "model", "the", "cloud", "may", "not", "the", "best", "solut", "such", "case", "comput", "the", "edg", "sourc", "deep", "learn", "the", "edg", "allevi", "the", "abov", "issu", "and", "provid", "other", "benefit", "edg", "here", "refer", "the", "comput", "that", "perform", "local", "the", "consum", "product", "this", "blog", "explor", "the", "benefit", "use", "edg", "comput", "for", "deep", "learn", "and", "the", "problem", "associ", "with", "whi", "edg", "whi", "not", "use", "the", "cloud", "there", "plethora", "compel", "reason", "favor", "edg", "comput", "over", "cloud", "comput", "num", "bandwidth", "and", "latenc", "doubt", "that", "there", "tangibl", "round", "trip", "time", "associ", "with", "call", "remot", "server", "applic", "that", "demand", "near", "instantan", "infer", "can", "not", "function", "proper", "with", "the", "latenc", "latenc", "and", "power", "consumpt", "stat", "for", "object", "detect", "track", "and", "local", "four", "differ", "edg", "devic", "sourc", "take", "self", "drive", "car", "for", "exampl", "larg", "enough", "latenc", "could", "signific", "increas", "the", "risk", "accid", "moreov", "unexpect", "event", "such", "anim", "cross", "jay", "walk", "can", "happen", "over", "just", "few", "frame", "these", "case", "respons", "time", "extrem", "critic", "this", "whi", "nvidia", "has", "their", "custom", "onboard", "comput", "devic", "perform", "infer", "the", "edg", "moreov", "when", "have", "larg", "number", "devic", "connect", "the", "same", "network", "the", "effect", "bandwidth", "reduc", "this", "becaus", "the", "inher", "competit", "use", "the", "communic", "channel", "this", "can", "signific", "reduc", "comput", "done", "the", "edg", "bandwidth", "requir", "for", "various", "applic", "sourc", "take", "the", "case", "process", "video", "multipl", "devic", "process", "them", "local", "would", "heavili", "save", "bandwidth", "usag", "this", "becaus", "not", "need", "upload", "data", "the", "cloud", "for", "infer", "due", "this", "can", "scale", "this", "network", "relat", "easili", "num", "secur", "and", "decentr", "commerci", "server", "are", "prone", "attack", "and", "hack", "cours", "the", "risk", "neglig", "use", "trust", "vendor", "but", "are", "requir", "trust", "third", "parti", "for", "the", "secur", "the", "data", "collect", "and", "intellectu", "properti", "have", "devic", "the", "edg", "give", "absolut", "control", "over", "central", "decentr", "distribut", "sourc", "heard", "about", "blockchain", "decentr", "distribut", "may", "familiar", "nonetheless", "have", "sever", "devic", "the", "edg", "reap", "all", "the", "benefit", "decentr", "harder", "bring", "down", "entir", "network", "hidden", "devic", "use", "singl", "ddos", "attack", "than", "central", "server", "this", "especi", "use", "for", "applic", "such", "use", "drone", "for", "border", "patrol", "num", "job", "specif", "usag", "custom", "imagin", "have", "factori", "that", "produc", "toy", "has", "coupl", "hundr", "work", "station", "requir", "imag", "classif", "servic", "everi", "work", "station", "problem", "each", "work", "station", "has", "differ", "set", "object", "and", "train", "singl", "classifi", "may", "not", "effect", "moreov", "host", "multipl", "classifi", "the", "cloud", "would", "expens", "the", "cost", "effect", "solut", "train", "classifi", "specif", "each", "part", "the", "cloud", "and", "ship", "the", "train", "model", "the", "edg", "devic", "now", "these", "devic", "are", "custom", "their", "work", "station", "they", "would", "have", "better", "perform", "than", "classifi", "predict", "across", "all", "work", "station", "num", "swarm", "intellig", "continu", "with", "the", "idea", "mention", "abov", "edg", "devic", "can", "aid", "train", "machin", "learn", "model", "too", "this", "especi", "use", "for", "reinforc", "learn", "for", "which", "could", "simul", "larg", "number", "episod", "parallel", "multipl", "agent", "tri", "grasp", "object", "sourc", "moreov", "edg", "devic", "can", "use", "collect", "data", "for", "onlin", "learn", "continu", "learn", "for", "instanc", "can", "use", "multipl", "drone", "survey", "area", "for", "classif", "use", "optim", "techniqu", "such", "asynchron", "singl", "model", "can", "train", "parallel", "among", "all", "edg", "devic", "can", "also", "mere", "use", "for", "aggreg", "and", "process", "data", "from", "various", "sourc", "num", "redund", "redund", "extrem", "vital", "for", "robust", "memori", "and", "network", "architectur", "failur", "one", "node", "network", "could", "have", "serious", "impact", "the", "other", "node", "our", "case", "edg", "devic", "can", "provid", "good", "level", "redund", "one", "the", "our", "edg", "devic", "here", "node", "fail", "neighbor", "can", "take", "over", "temporarili", "this", "great", "ensur", "reliabl", "and", "heavili", "reduc", "downtim", "num", "cost", "effect", "the", "long", "run", "the", "long", "run", "cloud", "servic", "will", "turn", "out", "more", "expens", "than", "have", "dedic", "set", "infer", "devic", "this", "especi", "true", "devic", "have", "larg", "duti", "cycl", "that", "they", "are", "work", "most", "the", "time", "moreov", "edg", "devic", "are", "much", "cheaper", "they", "fabric", "bulk", "reduc", "the", "cost", "signific", "constraint", "for", "deep", "learn", "the", "edg", "deep", "learn", "model", "are", "known", "for", "larg", "and", "comput", "expens", "challeng", "fit", "these", "model", "into", "edg", "devic", "which", "usual", "have", "frugal", "memori", "there", "are", "number", "way", "which", "can", "approach", "these", "problem", "num", "paramet", "effici", "neural", "network", "strike", "featur", "about", "neural", "network", "their", "enorm", "size", "edg", "devic", "typic", "can", "not", "handl", "larg", "neural", "network", "this", "motiv", "research", "minim", "the", "size", "the", "neural", "network", "while", "maintain", "accuraci", "two", "popular", "paramet", "effici", "neural", "network", "are", "the", "mobilenet", "and", "the", "squeezenet", "the", "squeezenet", "incorpor", "lot", "strategi", "such", "late", "downsampl", "and", "filter", "count", "reduct", "get", "high", "perform", "low", "paramet", "count", "they", "introduc", "fire", "modul", "that", "have", "squeez", "and", "expand", "layer", "that", "optim", "the", "paramet", "effici", "the", "network", "fire", "modul", "the", "squeezenet", "sourc", "the", "mobilenet", "factor", "normal", "convolut", "into", "combin", "depth", "wise", "convolut", "and", "numxnum", "convolut", "this", "arrang", "great", "reduc", "the", "number", "paramet", "involv", "top", "num", "accuraci", "the", "imagenet", "dataset", "with", "respect", "number", "multiplyaccumul", "mac", "sourc", "num", "prune", "and", "truncat", "larg", "number", "neuron", "train", "network", "are", "benign", "and", "not", "contribut", "the", "final", "accuraci", "this", "case", "can", "prune", "such", "neuron", "save", "some", "space", "googl", "learnnumcompress", "has", "found", "that", "can", "obtain", "size", "reduct", "factor", "num", "while", "retain", "num", "the", "accuraci", "moreov", "most", "neural", "network", "paramet", "are", "num", "bit", "float", "valu", "edg", "devic", "the", "other", "hand", "can", "design", "work", "num", "bit", "valu", "less", "reduc", "precis", "can", "signific", "reduc", "the", "model", "size", "for", "instanc", "reduc", "num", "bit", "model", "num", "bit", "model", "ideal", "reduc", "model", "size", "factor", "num", "num", "distil", "distil", "the", "process", "teach", "smaller", "network", "use", "larger", "teacher", "network", "googl", "learnnumcompress", "incorpor", "this", "their", "size", "reduct", "process", "combin", "with", "transfer", "learn", "this", "becom", "power", "method", "reduc", "model", "size", "without", "lose", "much", "accuraci", "joint", "train", "and", "distil", "approach", "learn", "compact", "student", "model", "sourc", "num", "optim", "microprocessor", "design", "far", "have", "discuss", "way", "scale", "down", "neural", "network", "fit", "our", "edg", "devic", "altern", "complementari", "method", "would", "scale", "the", "perform", "the", "microprocessor", "the", "simplest", "solut", "would", "have", "microprocessor", "such", "the", "popular", "nvidia", "jetson", "howev", "these", "devic", "may", "not", "cost", "effect", "when", "deploy", "larg", "scale", "nvidia", "jetson", "sourc", "more", "interest", "solut", "would", "use", "vision", "process", "unit", "vpus", "intel", "claim", "that", "their", "movidius", "vpus", "have", "high", "speed", "perform", "ultra", "low", "power", "consumpt", "googl", "kit", "and", "intel", "neural", "comput", "stick", "intern", "use", "this", "googl", "vision", "bonnet", "use", "movidius", "sourc", "altern", "could", "use", "fpgas", "they", "have", "low", "power", "consumpt", "than", "gpus", "and", "can", "accommod", "lower", "bit", "num", "bit", "architectur", "howev", "there", "could", "slight", "drop", "perform", "compar", "gpus", "owe", "their", "lower", "flop", "rate", "for", "larg", "scale", "deploy", "custom", "asic", "would", "the", "best", "solut", "fabric", "microarchitectur", "similar", "nvidia", "acceler", "matrix", "multipl", "could", "great", "boost", "perform", "pascal", "volta", "architectur", "nvidia", "sourc", "origin", "repost", "with", "permiss", "bio", "bharath", "raj", "undergradu", "student", "who", "love", "experi", "with", "machin", "learn", "and", "comput", "vision", "concept", "bharath", "write", "code", "and", "tech", "blog", "can", "check", "out", "his", "project", "here", "relat", "top", "rmachinelearn", "post", "august", "num", "everybodi", "danc", "now", "stanford", "class", "machin", "learn", "cheat", "sheet", "academ", "torrent", "for", "share", "enorm", "dataset", "see", "deep", "learn", "action", "webinar", "seri", "machin", "learn", "cheat", "sheet"], "timestamp_scraper": 1556363980.720016, "title": "Deep Learning on the Edge", "read_time": 432.29999999999995, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/bharathrajn/\">Bharath Raj</a></b>.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*iuSKK3d30UFIb_vNPdftjQ.jpeg\" width=\"100%\"><br>\n<center><span style=\"color: grey;\">Photo by <a href=\"https://unsplash.com/photos/FO7JIlwjOtU?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Alexandre Debi\u00e8ve</a> on <a href=\"https://unsplash.com/search/photos/electronics?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></center>\u00a0</br></img></p>\n<p>Scalable Deep Learning services are contingent on several constraints. Depending on your target application, you may require low latency, enhanced security or long-term cost effectiveness. Hosting your Deep Learning model on the cloud may not be the best solution in such cases.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*In6L9g43W0RmYOXASC1vtA.jpeg\" width=\"100%\"/><br>\n<center><span style=\"color: grey;\">Computing on the Edge (<a href=\"https://www.ptgrey.com/edge-computing\">Source</a>)</span></center></br></p>\n<p><strong>Deep Learning on the edge</strong>\u00a0alleviates the above issues, and provides other benefits. Edge here refers to the computation that is performed locally on the consumer\u2019s products. This blog explores the\u00a0<strong>benefits</strong>\u00a0of using edge computing for Deep Learning, and the<strong>\u00a0problems</strong>\u00a0associated with it.</p>\n<h3>Why edge? Why not use the\u00a0cloud?</h3>\n<p>There is a plethora of compelling reasons to favor edge computing over cloud computing.</p>\n<h4>1. Bandwidth and\u00a0Latency</h4>\n<p>It\u2019s no doubt that there\u2019s a tangible Round Trip Time (RTT) associated with API calls to a remote server. Applications that demand near instantaneous inference can not function properly with the latency.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*WIqaQsKbqWTPlClBqWzHNQ.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Latency and Power consumption stats for Object Detection (DET), Tracking (TRA) and Localization (LOC) on four different edge devices (<a href=\"https://blog.acolyer.org/2018/04/20/the-architectural-implications-of-autonomous-driving-constraints-and-acceleration/\">Source</a>)</span></center>\u00a0</p>\n<p>Take\u00a0<strong>self driving cars</strong>\u00a0for example. A large enough\u00a0<strong>latency</strong>\u00a0could significantly increase the\u00a0<strong>risk\u00a0</strong>of accidents. Moreover, unexpected events such as animal crossing or jay walking can happen over just a few frames. In these cases, response time is extremely critical. This is why Nvidia has their custom\u00a0<a data-href=\"https://www.nvidia.com/en-us/self-driving-cars/drive-platform/\" href=\"https://www.nvidia.com/en-us/self-driving-cars/drive-platform/\">on-board compute devices</a>\u00a0to perform inference on the edge.</p>\n<p>Moreover, when you have a large number of devices connected to the same network, the effective bandwidth is reduced. This is because of the inherent competition to use the communication channel. This can be significantly reduced if computation is done on the edge.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KX645CSfemBCM6mi5xfV1A.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Bandwidth requirement for various applications. (<a href=\"https://siliconupdates.blogspot.com/2017/07/augmented-reality-and-virtual-reality.html\">Source</a>)</span></center>\u00a0</p>\n<p>Take the case of processing 4K HD videos on multiple devices. Processing them locally would heavily save bandwidth usage. This is because we do not need to upload data to the cloud for inference. Due to this, we can scale this network relatively easily.</p>\n<h4>2. Security and Decentralization</h4>\n<p>Commercial servers are prone to attacks and hacks. Of course, the risk is negligible if you use a trusted vendor. But, you are required to trust a third party for the security of the data you collect and your intellectual property (IP). Having devices on the edge gives you\u00a0<strong>absolute control</strong>\u00a0over your IP.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*VwgFhNj-vmbd6VZx-NyKIA.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Centralized vs Decentralized vs Distributed. (<a href=\"https://blog.ethfinex.com/the-significance-of-decentralisation-b7f72655484e\">Source</a>)</span></center>\u00a0</p>\n<p>If you\u2019ve heard about blockchain, decentralization or distribution may be familiar to you. Nonetheless, having several devices on the edge reaps all the benefits of decentralization. It\u2019s\u00a0<strong>harder</strong>\u00a0to bring down an entire network of hidden devices using a\u00a0<strong>single DDoS attack</strong>, than a centralized server. This is especially useful for applications such as using drones for border patrol.</p>\n<h4>3. Job Specific Usage (Customization)</h4>\n<p>Imagine you have a factory that produces toys. It has a couple hundred work stations. You require an image classification service at every work station. Problem is, each work station has a different set of objects, and training a single classifier may not be effective. Moreover, hosting\u00a0<strong>multiple classifiers</strong>on the\u00a0<strong>cloud</strong>\u00a0would be\u00a0<strong>expensive</strong>.</p>\n<p>The cost effective solution is to train classifiers specific to each part on the cloud, and ship the\u00a0<strong>trained models</strong>\u00a0to the\u00a0<strong>edge devices</strong>. Now, these devices are customized to their work station. They would have better performance than a classifier predicting across all work stations.</p>\n<h4>4. Swarm Intelligence</h4>\n<p>Continuing with the idea mentioned above, edge devices can aid in training machine learning models too. This is especially useful for\u00a0<strong>Reinforcement Learning</strong>, for which you could simulate a large number of \u201cepisodes\u201d in\u00a0<strong>parallel</strong>.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KYomzpKV5Ub3zjVB6hNqAg.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Multiple agents trying to grasp objects. (<a href=\"http://robohub.org/deep-learning-in-robotics/\">Source</a>)</span></center>\u00a0</p>\n<p>Moreover, edge devices can be used to collect data for\u00a0<strong>Online Learning</strong>\u00a0(or\u00a0<strong>Continuous Learning</strong>). For instance, we can use multiple drones to survey an area for classification. Using optimization techniques such as Asynchronous SGD, a single model can be\u00a0<strong>trained in parallel</strong>\u00a0among all edge devices. It can also be merely used for aggregating and processing data from various sources.</p>\n<h4>5. Redundancy</h4>\n<p>Redundancy is extremely vital for robust memory and network architectures. Failure of one node in a network could have serious impacts on the other nodes. In our case, edge devices can provide a good level of redundancy. If one of the our edge devices (here, a node) fail, its neighbor can take over temporarily. This greatly ensures reliability and heavily reduces downtime.</p>\n<h4>6. Cost effective in the long\u00a0run</h4>\n<p>In the long run, cloud services will turn out to be more expensive than having a dedicated set of inference devices. This is especially true if your devices have a large duty cycle (that is, they are working most of the time). Moreover, edge devices are much cheaper if they\u2019re fabricated in bulk, reducing the cost significantly.</p>\n<h3>Constraints for Deep Learning on the\u00a0Edge</h3>\n<p><strong>Deep Learning\u00a0</strong>models are known for being\u00a0<strong>large</strong>\u00a0and\u00a0<strong>computationally expensive</strong>. It\u2019s a challenge to fit these models into\u00a0<strong>edge devices</strong>\u00a0which usually have\u00a0<strong>frugal memory</strong>. There are a number of ways by which we can approach these problems.</p>\n<h4>1. Parameter Efficient Neural\u00a0Networks</h4>\n<p>A striking feature about neural networks is their enormous size. Edge devices typically can not handle large neural networks. This motivated researchers to minimize the size of the neural networks, while maintaining accuracy. Two popular parameter efficient neural networks are the\u00a0<a data-href=\"https://arxiv.org/abs/1704.04861\" href=\"https://arxiv.org/abs/1704.04861\">MobileNet</a>\u00a0and the\u00a0<a data-href=\"https://arxiv.org/abs/1602.07360\" href=\"https://arxiv.org/abs/1602.07360\">SqueezeNet</a>.</p>\n<p>The\u00a0<strong>SqueezeNet</strong>\u00a0incorporates a lot of strategies such as late down-sampling and filter count reduction, to get high performance at a low parameter count. They introduce \u201cFire modules\u201d that have \u201csqueeze\u201d and \u201cexpand\u201d layers that optimize the parameter efficiency of the network.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*c5ZTXzakIVkDjC5DGlBhyQ.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Fire module in the SqueezeNet. (<a href=\"https://arxiv.org/pdf/1602.07360.pdf\">Source</a>)</span></center>\u00a0</p>\n<p>The\u00a0<strong>MobileNet</strong>\u00a0factorizes normal convolutions into a combination of depth wise convolutions and 1x1 convolutions. This arrangement greatly reduces the number of parameters involved.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*7EJDG7ypufhx14nIu1Vw9Q.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Top 1 accuracy in the ImageNet dataset with respect to number of Multiply-Accumulates (MACs). (<a href=\"https://ai.googleblog.com/2017/06/mobilenets-open-source-models-for.html\">Source</a>)</span></center></p>\n<h4>2. Pruning and Truncation</h4>\n<p>A large number of neurons in trained networks are\u00a0<strong>benign</strong>\u00a0and do not contribute to the final accuracy. In this case, we can\u00a0<strong>prune</strong>\u00a0such neurons to save some space. Google\u2019s\u00a0<a data-href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\" href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Learn2Compress</a>\u00a0has found that we can obtain a<strong>size</strong>\u00a0<strong>reduction by factor of 2</strong>, while retaining 97% of the accuracy.</p>\n<p>Moreover, most neural network parameters are 32 bit float values. Edge devices on the other hand can be designed to work on 8 bit values, or less. Reducing precision can significantly reduce the model size. For instance, reducing a\u00a0<strong>32 bit model</strong>\u00a0to\u00a0<strong>8 bit model</strong>\u00a0ideally reduces model size by a\u00a0<strong>factor of 4</strong>.</p>\n<h4>3. Distillation</h4>\n<p>Distillation is the process of teaching smaller networks using a larger \u201cteacher\u201d network. Google\u2019s\u00a0<a data-href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\" href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Learn2Compress</a>\u00a0incorporates this in their size reduction process. Combined with transfer learning, this becomes a powerful method to reduce model size without losing much accuracy.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*Id6ZQBu9VgANtd8frCQK-w.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Joint training and distillation approach to learn compact student models. (<a href=\"https://ai.googleblog.com/2018/05/custom-on-device-ml-models.html\">Source</a>)</span></center>\u00a0</p>\n<h4>4. Optimized Microprocessor Designs</h4>\n<p>So far we have discussed way to scale down neural networks to fit in our edge devices. An alternate (or complementary) method would be to scale up the performance of the microprocessor.</p>\n<p>The simplest solution would be to have a GPU on a microprocessor, such as the popular\u00a0<a data-href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\" href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\">Nvidia Jetson</a>. However, these devices may not be cost effective when deployed on a large scale.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KlSkL6KOtxml6s5jgqA7Ag.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Nvidia Jetson (<a href=\"https://developer.nvidia.com/embedded/buy/jetson-tx2\">Source</a>)</span></center>\u00a0</p>\n<p>A more interesting solution would be to use Vision Processing Units (VPUs). Intel claims that their Movidius VPUs have \u201chigh speed performance at an ultra low power consumption\u201d. Google\u2019s\u00a0<a data-href=\"https://www.movidius.com/news/google-launches-aiy-vision-kit-featuring-intel-movidius-vpu\" href=\"https://www.movidius.com/news/google-launches-aiy-vision-kit-featuring-intel-movidius-vpu\">AIY kits</a>\u00a0and Intel\u2019s\u00a0<a data-href=\"https://www.movidius.com/news/intel-movidius-neural-compute-stick-honored-with-ces-best-of-innovation-award-2018\" href=\"https://www.movidius.com/news/intel-movidius-neural-compute-stick-honored-with-ces-best-of-innovation-award-2018\">Neural Compute Stick\u00a0</a>internally use this VPU.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KSItXzlVVbP37XZ7WW-SJw.jpeg\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Google AIY\u2019s Vision Bonnet using a Movidius VPU. (<a href=\"https://www.zdnet.com/article/google-offers-raspberry-pi-owners-this-new-ai-vision-kit-to-spot-cats-people-emotions/\">Source</a>)</span></center>\u00a0</p>\n<p>Alternatively, we could use FPGAs. They have low power consumption than GPUs and can accommodate lower bit (&lt; 32 bit) architectures. However, there could be a slight drop in performance compared to GPUs owing to their lower FLOPs rating.</p>\n<p>For large scale deployment, custom ASICs would be the best solution. Fabricating micro-architectures similar to Nvidia\u2019s V100 to accelerate matrix multiplications could greatly boost performance.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*gzozPNb4SFcWPNkOZeNDZw.png\" width=\"100%\"/></p>\n<p><center><span style=\"color: grey;\">Pascal vs Volta architecture; Nvidia. (<a href=\"https://www.nvidia.com/en-us/data-center/tensorcore/\">Source</a>)</span></center></p>\n<p><a href=\"https://towardsdatascience.com/deep-learning-on-the-edge-9181693f466c\">Original</a>. Reposted with permission.</p>\n<p><b>Bio</b>: <a href=\"https://www.linkedin.com/in/bharathrajn/\">Bharath Raj</a> is an undergraduate student at SSN who loves to experiment with Machine Learning and Computer Vision concepts. Bharath writes code and tech blogs. You can check out his projects <a href=\"https://thatbrguy.github.io\">here</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2018/09/top-reddit-machine-learning-august.html\">Top /r/MachineLearning posts, August 2018: Everybody Dance Now; Stanford class Machine Learning cheat sheets; Academic Torrents for sharing enormous datasets</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/09/nvidia-deep-learning-webinar-series.html\">See NVIDIA Deep Learning In Action [Webinar Series]</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/09/machine-learning-cheat-sheets.html\">Machine Learning Cheat Sheets</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}