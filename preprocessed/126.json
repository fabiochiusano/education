{"content": "comments By Freya Rajeshwar , Recognant If you had an infinite number of monkeys typing at keyboards, could you produce Shakespeare? Yes, eventually. But how you would know once they\u2019d typed Shakespeare? Now there\u2019s the rub. In this example, monkeys are what are called\u00a0 Generators \u00a0in AI, and the English student who checks their work to see if they have written Shakespeare (or anything good) is called a\u00a0 Discriminator . These are the two components of an\u00a0 Generative \u00a0 Adversarial Neural Network . Adversarial Neural Networks are oddly named since they actually cooperate to make things. Cooks in the Kitchen: I am obsessed with the TV show \u201cThe Great British Bake Off.\u201d Let\u2019s say I made it my life goal to win GBBO (with a little help from my AI) and earn that coveted glass cake stand and flower bouquet. We have a whole week to practice for the first round, and so we are going to develop the greatest cake recipe in the history of the world (I don\u2019t do anything half-assed). We can agree that we intrinsically know what tastes good, or \u201cawful.\u201d\u00a0You bite into a cake and think to yourself, \u201cThat\u2019s really good\u201d or you may spit it out in disgust. Either way you instantly have an opinion. But can everyone make a cake? Can everyone invent a new flavor or recipe for a cake? That requires more skill. Or does it? I mean, there are a lot of people on the show that are pretty clueless, but even they make it past a few rounds. Mechanics of the Problem: Let\u2019s say that for round one of the GBBO competition, our base cake batter must contain Butter, Sugar, Eggs, Flour, Baking Soda, Milk, and Water. You can then add Sour Cream along with Vanilla and Cocoa to change the flavor (let\u2019s call these secondary ingredients). If you add too many secondary ingredients to the base cake batter it changes the texture, so you have limits on the range of what\u2019s possible. For example: 2 teaspoons of Vanilla is fine, but 2 cups is far too much. Given these constraints, there are a few thousand combinations that could be produced. They wouldn\u2019t all make me a GBBO champion, but I could try to bake them. Generative Adversarial Networks don\u2019t have to be a Neural Network. Any system that pairs a \u201ccook\u201d (called a Generator) with a \u201ctaster\u201d (called a Discriminator) is a Generative Adversarial Network. In this example, the cook has a limited range of choices (the aforementioned base ingredients, and 2 cups of any \u201csecondary\u201d ingredients), and is going to try and find the \u201cedges\u201d of what is acceptable to optimize for the \u201cbest\u201d cake. Batter Optimization: In our cake example, a chocolate cake would have the base ingredients, plus Sour Cream, Vanilla, and Cocoa. We would know that the base supports 2 cups of secondary ingredients (Sour Cream, Vanilla, and Cocoa), so the 3 secondary ingredients can\u2019t total more than that. There has to always be some Sour Cream or the Baking Soda won\u2019t work. We\u2019d also use teaspoons (1/48 of a cup) as our minimum unit of measure. The minimum unit determines how many tries there could be. If we were to try at a resolution of quarter teaspoons we\u2019d have to iterate exponentially more times. I\u2019d be spending a lot more time in the kitchen. If you have ever tasted a cake with an entire cup of Vanilla Extract you\u2019d know right away that that is too much. If you ever tried a cake with just 2 teaspoons of Cocoa you wouldn\u2019t even be able to taste it. In the same way that the \u201ccook\u201d in our analogy (called a\u00a0 Generator \u00a0or\u00a0 Generative Network ) is going to create a cake recipe, the \u201ctaster\u201d (called a\u00a0 Discriminator \u00a0if it is simple, and an\u00a0 Evaluation Network \u00a0if it is a complex system) will score it. Reducing Infinity: The result is that the system finds the best result by testing nearly all possible combinations, but once a trend is found that is limiting success, those combinations are \u201cpruned.\u201d In our example, anything with more than 12 teaspoons (1/4 of an 8 oz bottle\u00a0 /2KRzYvo \u00a0) of Vanilla would be eliminated, and anything with less than 1/4 of a cup of Cocoa would also be eliminated. The system would also determine that Vanilla should be tested in teaspoon intervals, but Cocoa should be tested in 8 teaspoon intervals because each \u201cunit\u201d of Cocoa has less incremental impact. The result is that to find the ideal mix there are 12 levels of Vanilla possible, 11 levels of Cocoa, and whatever is left is Sour Cream. So there are 132 combinations to test (12*11), but this may be reduced as the limits of Vanilla and Cocoa are found -- so that there are probably only about 40 combinations that need to be tested. And just like that, suddenly an AI is making me the best baker in Britain. Learning through Adversity: In a Generative Adversarial Network, the two sides don\u2019t necessarily have to be AI. An AI could be generating the recipes and humans could be performing the evaluation. A human could simply bake every possible cake combination, and take them all to the judges of the Great British Bake Off to have them evaluate. In this case, rather than simplifying the problem (pruning out \u201cunacceptable\u201d levels of ingredients), every possible combination would be tested and the evaluation would be a very annoyed human. The output generated during that type of process would just be all possible combinations. It would take a lot longer, but ultimately arrive at the same results. In either scenario, Generative Adversarial Networks are how machine generated content is generally made, and they work not by being \u201cgood\u201d at creation, but by trying lots of combinations and judging them via constant feedback. Generative Adversarial Networks often work best when the Discriminator and the Generator are not the same type of AI, or possibly when the Discriminator is not AI at all. A Few Examples of Real Life Adversarial Networks: Bots in video games: Many video games don\u2019t ask the difficulty you want to play at. They simply ratchet up and down the difficulty based on how well you are doing. This keeps your stress level and addiction balanced. In this example, the AI is adjusting the aggressiveness, accuracy, and possibly damage of the bots in the game in response to the player. The Discriminator is likely a simple rubric of \u201chow long is it taking the player to achieve the objective?\u201d and \u201chow often is the player\u2019s health going down?\u201d Speech Recognition: If you have ever called your bank and shouted \u201cREPRESENTATIVE\u201d ten times into your phone hoping it would get the computer voice on the other end to patch you through to an actual human, it is likely you were training an AI. When Siri or Google\u2019s keyboard mishears you and you repeat a variation on your original input, the retry is flagged, and the system attempts to \u201chear\u201d the original input as the repeated input so that it can ultimately get better at speech recognition. Forecasting: Forecasting anything from weather to the number of attendees at an event to which items will be the most purchased all use a Generator to make those forecasts. How well the system did can be measured by several metrics for success by a Discriminator. That could be accuracy in magnitude, or how close the forecast timing was, or any other determiner of how good the system is -- but in all cases this would be a Generative Adversarial Network. Key Takeaways: Machines make very good revisionist creators. As humans we don\u2019t want to try every combination, but the AI is perfectly happy to loop endlessly making small tweaks to find every optimization possible. AI is the ultimate perfectionist creator. And while there is perfection achieved, there is no creativity -- it is perfection achieved via brute force. It is quite literally monkeys at typewriters, but the efficiency is created by an accompanying Discriminator that says, \u201cThat was close, but it doesn\u2019t rhyme,\u201d or \u201cSilly monkey, it\u2019s a play about Hamlet -- not a Ham Sandwich.\u201d If the Generator simply tries every combination, it is unlikely to ever generate brilliant prose in English (2 million words randomly ordered in a 2,000 word document makes for a lot of random gibberish). If instead the Generator has rules (remember the cake example), it can eliminate many of the iterations. The more variables involved, the more computationally intense generation is. This means that AI for making the winning GBBO cake is likely to be achieved in our lifetime, but AI replicating Hamlet or Macbeth is probably not. \u00a0 Bio: Freya Rajeshwar is the Chief Product Officer (CPO) at Recognant. She has almost a decade of experience in Product Management, DevOps, and Analytics. At Recognant, she works on a number of products, including ones to combat human trafficking. Outside of work, she partners with programs to promote Computer Science education for children. Original . Reposted with permission. Related: Generative Adversarial Networks, an overview GANs in TensorFlow from the Command Line: Creating Your First GitHub Project Overview of GANs (Generative Adversarial Networks) \u2013 Part I", "title_html": "<h1 id=\"title\">Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off</h1> ", "url": "https://www.kdnuggets.com/2018/05/generative-adversarial-neural-networks-infinite-monkeys-great-british-bake-off.html", "tfidf": {"tfidf": {"britain": 3.2255180820800002, "real": 2.28103448276, "googl": 11.388809182200001, "unlik": 2.42529789184, "onc": 2.9949066213999997, "too": 5.44755804645, "new": 1.0178880554, "cook": 26.0262295082, "human": 11.37928562898, "would": 12.994475138159999, "what": 5.01373756512, "addict": 20.0454545455, "number": 3.30428749827, "cup": 40.20937104264, "prose": 23.2785923754, "recogn": 7.64862694716, "eventu": 1.63653231626, "gibberish": 352.8, "hear": 4.17899447223, "well": 2.1311497416, "product": 4.86794766966, "ten": 1.9178545542400003, "creation": 3.0601387818, "water": 2.13157894737, "odd": 8.60021668472, "know": 10.3730806926, "their": 1.01547908405, "unit": 3.46184038377, "devop": 1587.6, "won": 2.31732593782, "chief": 2.41827875095, "measur": 4.82186788154, "ever": 7.8789081886000005, "creat": 3.7478753541, "endless": 25.6893203883, "how": 14.422529524589999, "test": 15.94242677826, "repost": 933.882352941, "million": 1.7279059643, "limit": 6.074612588480001, "discrimin": 85.58490566, "children": 1.91484742492, "had": 1.0475750577399998, "end": 1.10680423871, "found": 2.2277415281, "given": 1.35426085473, "secondari": 21.84369840395, "bouquet": 165.375, "rhyme": 34.1419354839, "will": 2.44962197192, "overview": 25.3610223642, "event": 1.5356935577500002, "recip": 171.6324324324, "difficulti": 7.671418216960001, "accompani": 3.38146964856, "clueless": 360.818181818, "thousand": 2.4767550702000003, "judg": 7.252626770219999, "constraint": 15.0483412322, "perform": 1.5313977042500002, "recognit": 8.80044345898, "need": 1.4372623574099999, "our": 14.14553014554, "longer": 2.02319357716, "object": 2.3488681757700003, "key": 2.28005170185, "word": 3.5930745728199995, "level": 6.617757398919999, "ham": 35.7567567568, "have": 11.163843252539998, "arriv": 2.03173790632, "sugar": 11.8301043219, "tensorflow": 1587.6, "adjust": 7.112903225810001, "champion": 5.03680203046, "experi": 1.87062566278, "chocol": 31.943661971799997, "out": 2.12033388982, "quit": 2.8849718335500003, "alway": 2.06745670009, "hamlet": 61.654368932, "forc": 1.32399299475, "decad": 2.1390460792200003, "taster": 1764.0, "optim": 34.6133720931, "offic": 1.58887109688, "not": 5.07836990595, "far": 1.71022298826, "involv": 1.4498630137000001, "compon": 4.09491875161, "intens": 3.9026548672600003, "disgust": 30.297709923699998, "are": 16.47849497248, "order": 1.24625166811, "typewrit": 78.9850746269, "less": 2.93809567872, "use": 2.0592775147599998, "rub": 43.141304347799995, "infinit": 16.0688259109, "replic": 20.889473684200002, "metric": 22.235294117600002, "combat": 5.01294600568, "then": 1.08657860516, "purchas": 3.08092373375, "let": 10.45849802373, "world": 1.11340206186, "scienc": 2.31969608416, "cream": 118.4776119405, "happi": 6.125, "github": 1587.6, "plus": 4.6914893617, "away": 1.85142857143, "voic": 3.21181468744, "item": 5.07869481766, "practic": 1.70434782609, "respons": 1.5066907089300001, "simpl": 6.7962328767199995, "liter": 5.468825353080001, "phone": 9.118897185529999, "two": 2.0275862069, "either": 3.1660185462199997, "develop": 1.1955719557200002, "accuraci": 25.5241157556, "sever": 1.07241286139, "those": 2.39096385542, "agre": 2.22946215419, "network": 36.31171377232, "lot": 22.0438767009, "some": 1.04036697248, "video": 6.59439252336, "small": 1.3594793629, "resolut": 5.73762197326, "add": 9.22486926206, "whole": 2.29488291414, "soda": 144.9863013698, "result": 4.58446433728, "document": 2.5409731114, "content": 3.5421686747, "whatev": 7.6473988439300005, "brute": 86.28260869569999, "ani": 3.40151406942, "halfass": 1587.6, "from": 3.00170164491, "perfectionist": 200.962025316, "work": 6.69120539478, "num": 19.00598576019, "variabl": 8.747107438019999, "siri": 396.9, "teaspoon": 5051.454545452, "left": 1.4398693996, "balanc": 4.45329593268, "for": 9.00283536009, "output": 7.676982591880001, "simplifi": 12.109839816900001, "with": 10.011982089899998, "written": 1.9573418813999999, "competit": 3.06960556845, "determin": 6.497680763970001, "better": 2.0065722952500002, "revisionist": 69.6315789474, "magnitud": 15.6568047337, "brilliant": 14.7272727273, "feedback": 24.652173913000002, "retri": 294.0, "veri": 2.51760228354, "extract": 7.703056768560001, "cocoa": 978.657534243, "think": 2.90715986083, "trend": 5.43140608963, "combin": 18.67365269462, "english": 3.4865488086000003, "intrins": 25.9836333879, "educ": 2.00733341763, "iter": 74.8867924528, "batter": 120.8832487311, "doe": 1.70581282905, "even": 2.32922535212, "littl": 1.5499365420299998, "damag": 2.7808723068799996, "side": 1.5989525632, "train": 1.9365698950999999, "great": 2.53185551392, "goal": 3.28152128979, "total": 1.5460122699399999, "lifetim": 7.1352808988800005, "ask": 2.1744966443, "type": 8.112416964760001, "invent": 4.604408352669999, "ingredi": 188.7191679048, "accept": 1.7377408056, "probabl": 5.29111814698, "ratchet": 269.084745763, "into": 2.03004922958, "cake": 533.647058824, "via": 4.595744680859999, "yes": 14.1876675603, "through": 2.14149861738, "constant": 3.6589075823900004, "requir": 1.52844902282, "vanilla": 1006.225352109, "spit": 51.5454545455, "student": 2.47174217655, "exponenti": 39.2, "rubric": 162.0, "tast": 27.917936694030004, "help": 1.39962972759, "aggress": 6.25039370079, "minimum": 12.05924800608, "instead": 1.59461631177, "line": 1.4182597820299998, "success": 2.6400598653, "base": 6.8776895307, "relat": 1.23750876919, "infin": 39.5910224439, "weather": 5.3944954128400004, "who": 1.06279287723, "game": 7.739356516079999, "permiss": 6.280063291139999, "ideal": 4.65571847507, "good": 9.11889718554, "covet": 51.3786407767, "were": 2.04917715392, "long": 1.2657259028899999, "annoy": 26.8175675676, "much": 2.3884459154599997, "evalu": 27.803852889679998, "contain": 1.59814777532, "about": 2.12972030318, "problem": 3.53349655018, "bottl": 15.443579766500001, "neural": 178.3820224719, "thing": 2.4065484311099996, "increment": 31.8795180723, "sudden": 5.78993435449, "egg": 14.0123565755, "just": 4.00740429111, "entir": 1.59365589239, "butter": 41.34375, "she": 6.48, "simpli": 7.557600761670001, "dure": 1.0503473370799998, "aforement": 21.8376891334, "check": 6.50655737705, "flag": 5.95275590551, "rememb": 4.88793103448, "complex": 2.34021226415, "keyboard": 37.2676056338, "tweak": 113.4, "rajeshwar": 3175.2, "kitchen": 32.4, "bake": 247.4181818184, "unaccept": 23.075581395300002, "them": 4.39504463976, "they": 7.21121277009, "keep": 2.04245465071, "anyth": 22.9421965318, "health": 2.71570304482, "play": 2.92780082988, "mani": 4.17707031508, "the": 85.0, "creativ": 6.52259654889, "flour": 38.347826087, "adversari": 289.611940299, "same": 3.35573874444, "there": 10.4091266719, "command": 2.66689064337, "prune": 262.41322314, "flavor": 64.66802444, "flower": 8.32511798637, "possibl": 12.7563610392, "way": 2.4381478922, "say": 5.2633440159, "best": 6.331405782640001, "exampl": 12.03867298576, "right": 1.4054532577899999, "spend": 4.15928739848, "textur": 28.5026929982, "baker": 10.5348374253, "take": 3.4188500466600003, "now": 1.160780873, "tri": 14.835650040879997, "name": 1.10211732037, "advers": 14.0994671403, "support": 1.2685577307200002, "than": 4.131147541, "abl": 1.8208510150200001, "monkey": 97.1009174312, "stress": 5.52978056426, "edg": 4.45704660303, "also": 3.04429530201, "mean": 2.89813800658, "scenario": 15.3986420951, "may": 2.10403551786, "past": 2.01702452039, "peopl": 1.21320495186, "stand": 2.0845588235299997, "macbeth": 116.735294118, "freya": 962.1818181819999, "machin": 8.04866920152, "want": 3.99396226416, "system": 9.71178886657, "partner": 4.173501577290001, "attende": 42.223404255300004, "elimin": 11.03010653079, "actual": 3.74964572508, "win": 5.50580891278, "week": 1.80532181033, "histori": 1.20629131525, "that": 26.1035856575, "which": 1.005191845, "like": 4.596742671, "skill": 3.6989748369099997, "sour": 179.1873589165, "milk": 14.8791002812, "mechan": 3.41492794149, "other": 2.01984732824, "one": 2.01254991444, "show": 2.5340782123, "bank": 2.87400434468, "impact": 2.97526236882, "hope": 2.50884955752, "see": 1.27242125511, "becaus": 1.1495184997499999, "earn": 3.3220338983099995, "loop": 13.5114893617, "get": 3.5712518277, "obsess": 17.600886918, "random": 14.3804347826, "mishear": 1587.6, "manag": 1.6448404475799998, "outsid": 1.67450690855, "should": 3.3286508019800003, "opinion": 3.8044572250199997, "part": 1.04330682789, "attempt": 1.4721810088999998, "analyt": 17.256521739100002, "realli": 4.7476076555, "includ": 1.0190641247799999, "rule": 1.7415533128599998, "repeat": 5.754258789419999, "necessarili": 7.33302540416, "pretti": 15.75, "choic": 3.1319786940200003, "rang": 3.5696458684599994, "instant": 11.504347826099998, "time": 4.04509841392, "variat": 4.704, "process": 1.69524826482, "chang": 2.3617970842, "near": 1.28769567686, "project": 1.7534791252500002, "but": 15.244862684849998, "most": 1.02096463023, "interv": 26.5484949832, "player": 10.631250000000001, "creator": 20.5647668394, "along": 1.2973768080399999, "all": 7.080275229370001, "everyon": 12.7929089444, "mix": 2.7852631578900002, "british": 3.56323644934, "program": 2.02139037433, "almost": 1.53584212054, "sandwich": 33.2830188679, "case": 2.96997474512, "produc": 2.73865792652, "silli": 50.5605095541, "pair": 4.36873968079, "gan": 202.242038216, "call": 8.5412239408, "off": 3.0242880274400004, "more": 7.1201947719, "and": 32.00201574816, "while": 1.0441988950299999, "achiev": 7.48867924528, "these": 3.22246278756, "greatest": 3.00738776283, "life": 2.74102209944, "yourself": 26.592964824099997, "general": 1.1218202374200001, "made": 2.14077669902, "could": 9.6349567592, "fine": 4.02229541424, "comment": 3.05954904606, "close": 2.5697636775599997, "patch": 16.764519535399998, "can": 9.41009113136, "comput": 11.783275606140002, "make": 10.762660158600001, "analog": 9.05131128848, "onli": 1.0256476516600002, "each": 1.18974820144, "promot": 2.0172808132099997, "few": 3.95187520743, "this": 8.03034901368, "speech": 7.645557428360001, "find": 6.917647058839999, "bite": 24.3496932515, "shakespear": 52.4537444934, "bot": 341.419354838, "traffick": 37.0934579439, "reduc": 3.97396745932, "shout": 16.746835443, "perfect": 13.458038994059999, "rather": 1.55692850838, "sinc": 1.08368600683, "ultim": 7.75574010747, "bio": 42.336000000000006, "forecast": 87.59172413799999, "must": 1.9220338983099996, "origin": 3.4117478510100003, "numkrzyvo": 1587.6, "cooper": 3.675, "quarter": 3.39013452915, "first": 2.01523229246, "everi": 7.395881859699999, "input": 36.6087624903, "generat": 45.16058960424, "score": 4.2884927066500005, "takeaway": 529.2, "often": 2.5890410959, "glass": 6.2651933701699996, "round": 10.153059049229999, "down": 2.71779508688, "learn": 2.32275054865, "when": 3.0623030926499997, "effici": 5.09335899904, "has": 5.218248751}, "logtfidf": {"britain": 1.17109358295, "real": 0.824629060574, "googl": 2.43263122258, "unlik": 0.885954358842, "onc": 0.80753174471, "too": 1.7896654641659997, "new": 0.0177299468511, "cook": 7.49124198248, "human": 3.840211099458, "would": 0.9554115355763999, "what": 0.903549187308, "addict": 2.99800242209, "number": 0.2898257352558, "cup": 11.41404365844, "prose": 3.14753415606, "recogn": 2.807741577093, "eventu": 0.49257956194200003, "gibberish": 5.86590132413, "hear": 1.43007066072, "well": 0.1270288766312, "product": 1.452180409608, "ten": 0.6512071415940001, "creation": 1.11846026847, "water": 0.756862994946, "odd": 2.1517873988400003, "know": 3.811678777592, "their": 0.015360505122700001, "unit": 0.429564185451, "devop": 7.369978720910001, "won": 0.8404139079, "chief": 0.883056027166, "measur": 1.760028399452, "ever": 2.7115799136080003, "creat": 0.667730455542, "endless": 3.24607535645, "how": 4.244102612370001, "test": 5.863346622618, "repost": 6.83935046985, "million": 0.5469102500940001, "limit": 1.67129541852, "discrimin": 18.96053912144, "children": 0.649637945787, "had": 0.0464780244111, "end": 0.101476798618, "found": 0.215682248096, "given": 0.303255810831, "secondari": 7.37237282475, "bouquet": 5.10821562244, "rhyme": 3.5305264083199996, "will": 0.40557306983, "overview": 5.08013252448, "event": 0.428982108147, "recip": 15.036243233039999, "difficulti": 2.6887086443, "accompani": 1.21831042226, "clueless": 5.8883741799800005, "thousand": 0.906949263988, "judg": 2.57643307164, "constraint": 2.7112677679900004, "perform": 0.42618085058, "recognit": 2.9633098654400003, "need": 0.362740163442, "our": 5.145835285092001, "longer": 0.7046772417749999, "object": 0.853933584803, "key": 0.82419811896, "word": 1.17172216477, "level": 2.013848759772, "ham": 3.5767392514699994, "have": 0.16263502575320002, "arriv": 0.7088915382879999, "sugar": 2.47064749637, "tensorflow": 7.369978720910001, "adjust": 1.9619104904, "champion": 1.6167713629299998, "experi": 0.626272953933, "chocol": 3.4639737878099996, "out": 0.1168527818386, "quit": 1.05951513684, "alway": 0.726319204572, "hamlet": 6.85679382648, "forc": 0.280652166524, "decad": 0.760359972282, "taster": 13.564384112019999, "optim": 7.336883386229999, "offic": 0.463023762098, "not": 0.0777620650375, "far": 0.536623764503, "involv": 0.371469078658, "compon": 1.40974687623, "intens": 1.3616570567299997, "disgust": 3.41107212958, "are": 0.4714795773232, "order": 0.22014038079300002, "typewrit": 4.36925890584, "less": 0.7692289252, "use": 0.0584160394632, "rub": 3.7644808757300003, "infinit": 2.7768811161599998, "replic": 3.03924538062, "metric": 3.1016808515599994, "combat": 1.61202376736, "then": 0.08303386523089999, "purchas": 1.1252294655700001, "let": 3.7464077018399995, "world": 0.107420248621, "scienc": 0.841436178891, "cream": 15.8264305076, "happi": 1.81237875643, "github": 7.369978720910001, "plus": 1.54575009318, "away": 0.615957541869, "voic": 1.1668361006, "item": 1.62505430292, "practic": 0.533182530867, "respons": 0.40991566230300003, "simpl": 2.4464425787799997, "liter": 1.6990638498800001, "phone": 2.2103488741299997, "two": 0.0273976887164, "either": 0.91865527763, "develop": 0.178624694913, "accuraci": 5.0929530812, "sever": 0.06991112039689999, "those": 0.35709878174599996, "agre": 0.801760369921, "network": 13.343162742728, "lot": 7.417984751250001, "some": 0.0395735090645, "video": 2.38614497934, "small": 0.307101805059, "resolut": 1.74704483412, "add": 3.05751167426, "whole": 0.8306818244059999, "soda": 8.566984168180001, "result": 0.545515633524, "document": 0.932547122383, "content": 1.26473915954, "whatev": 2.0343655696200003, "brute": 4.45762805629, "ani": 0.376825075098, "halfass": 7.369978720910001, "from": 0.0017011625065979999, "perfectionist": 5.30311596144, "work": 0.654207403638, "num": 0.005984817512543001, "variabl": 2.1687230672, "siri": 5.98368435979, "teaspoon": 46.07064952378, "left": 0.364552414753, "balanc": 1.4936444810499998, "for": 0.0028349135585730005, "output": 2.03822657827, "simplifi": 2.4940183301400003, "with": 0.0119749171339, "written": 0.671587369833, "competit": 1.12154907401, "determin": 2.318499057066, "better": 0.6964279406, "revisionist": 4.24321818495, "magnitud": 2.75090562975, "brilliant": 2.6897010624299997, "feedback": 3.2048650877999996, "retri": 5.6835797673399995, "veri": 0.460319586476, "extract": 2.04161723301, "cocoa": 42.200614729710004, "think": 1.06717661175, "trend": 1.6921980487900001, "combin": 5.821401418261, "english": 1.11153037267, "intrins": 3.25746685473, "educ": 0.696807183384, "iter": 7.24566071734, "batter": 11.088638713829999, "doe": 0.5340417297169999, "even": 0.304777129668, "littl": 0.438213989466, "damag": 1.02276465794, "side": 0.46934876686899996, "train": 0.660918312839, "great": 0.471610516158, "goal": 1.18830712273, "total": 0.43567888670500005, "lifetim": 1.9650516193, "ask": 0.776797209847, "type": 2.828405941548, "invent": 1.52701418212, "ingredi": 25.28654787408, "accept": 0.552585882007, "probabl": 1.945764825826, "ratchet": 5.59502637, "into": 0.0298257264574, "cake": 56.11433535471999, "via": 1.663967250828, "yes": 2.65237310559, "through": 0.1367173837698, "constant": 1.2971646281, "requir": 0.424253510675, "vanilla": 42.4506308067, "spit": 3.9424640309300005, "student": 0.904923236645, "exponenti": 3.6686767468, "rubric": 5.08759633523, "tast": 6.69197125755, "help": 0.336207721344, "aggress": 1.8326444538900002, "minimum": 3.59336930882, "instead": 0.46663315041500003, "line": 0.349430614452, "success": 0.5553088251839999, "base": 0.8191398137220001, "relat": 0.21310030165399999, "infin": 3.6786023866, "weather": 1.68537906567, "who": 0.0609002329859, "game": 2.843118774063, "permiss": 1.8373800586400002, "ideal": 1.53809624363, "good": 2.5115364294419997, "covet": 3.9392225370099996, "were": 0.048582287362199994, "long": 0.235645793878, "annoy": 3.2890571790200003, "much": 0.35499145860200004, "evalu": 7.755520972519999, "contain": 0.468845318236, "about": 0.1256869549492, "problem": 1.138281448546, "bottl": 2.7371933678900002, "neural": 12.2559454665, "thing": 0.8781935346799999, "increment": 3.46196373688, "sudden": 1.75612095378, "egg": 2.63993955287, "just": 0.868594302327, "entir": 0.46603068026999994, "butter": 3.72192126132, "she": 2.310324665088, "simpli": 2.771824474758, "dure": 0.0491209066894, "aforement": 3.0836373363700003, "check": 1.87281049562, "flag": 1.78385428972, "rememb": 1.5867691126199999, "complex": 0.8502416364309999, "keyboard": 5.849954574140001, "tweak": 4.73092139129, "rajeshwar": 14.739957441820001, "kitchen": 5.570022484480001, "bake": 22.31592287772, "unaccept": 3.13877497597, "them": 0.3767333076372, "they": 0.20808896337320001, "keep": 0.7141523446729999, "anyth": 7.617699729250001, "health": 0.9990508682320001, "play": 0.7622087812839999, "mani": 0.1732630324884, "the": 0.0, "creativ": 1.87527254036, "flour": 3.6466978400800003, "adversari": 35.97711278898, "same": 0.336178948812, "there": 0.400978929255, "command": 0.9809132407500001, "prune": 9.75354653662, "flavor": 6.95223937222, "flower": 2.1192772083, "possibl": 3.139249274019, "way": 0.39618301987000004, "say": 1.6864628416560001, "best": 1.836911731788, "exampl": 3.2694613999919997, "right": 0.34035985417, "spend": 1.42534376116, "textur": 3.3499985739800002, "baker": 2.35468761528, "take": 0.392075886591, "now": 0.149092945021, "tri": 4.94073223328, "name": 0.09723316638430002, "advers": 2.6461370052, "support": 0.237880610037, "than": 0.1290434488728, "abl": 0.599303982475, "monkey": 12.7578258498, "stress": 1.71014813378, "edg": 1.4944863500499999, "also": 0.0439714734, "mean": 0.74184256704, "scenario": 2.73427932989, "may": 0.10141999056880001, "past": 0.7016234157610001, "peopl": 0.193265578473, "stand": 0.7345572374320001, "macbeth": 4.75990892817, "freya": 12.35211250488, "machin": 2.78471916124, "want": 1.3832732125099998, "system": 2.292012419095, "partner": 1.4287553902399999, "attende": 3.74297467051, "elimin": 3.90604860849, "actual": 1.257028363296, "win": 2.02531304058, "week": 0.5907388641619999, "histori": 0.187550624069, "that": 0.10337985787064, "which": 0.00517841384543, "like": 0.55621430618, "skill": 1.30805571015, "sour": 17.8949702193, "milk": 2.6999575626, "mechan": 1.22815639221, "other": 0.01974949583952, "one": 0.012510703291, "show": 0.473365532026, "bank": 1.0557062993700002, "impact": 1.09033222631, "hope": 0.919824304455, "see": 0.240921585492, "becaus": 0.139343158825, "earn": 1.20057721532, "loop": 2.60354038732, "get": 1.159538011564, "obsess": 2.86794929384, "random": 3.9454428130199997, "mishear": 7.369978720910001, "manag": 0.497643387158, "outsid": 0.515518738985, "should": 1.018839753516, "opinion": 1.33617333331, "part": 0.04239531098280001, "attempt": 0.38674498075099994, "analyt": 2.8481901438599997, "realli": 1.5576408397, "includ": 0.0188846813905, "rule": 0.554777423537, "repeat": 2.1135861182599998, "necessarili": 1.99238817347, "pretti": 2.75684036527, "choic": 1.14166497543, "rang": 1.158638427606, "instant": 2.4427250357499997, "time": 0.0448460754504, "variat": 1.5484132106, "process": 0.527829199025, "chang": 0.332551250116, "near": 0.252854324034, "project": 0.561601885907, "but": 0.2428855810785, "most": 0.020747896295599998, "interv": 5.17165175878, "player": 3.79555646547, "creator": 4.660864166640001, "along": 0.260344385917, "all": 0.07981842468459999, "everyon": 3.7114876962800003, "mix": 1.02434236008, "british": 1.1550441325799998, "program": 0.7037855787649999, "almost": 0.42907884333400004, "sandwich": 3.50504732301, "case": 0.790812537778, "produc": 0.628641624006, "silli": 3.9231708279900004, "pair": 1.47447456495, "gan": 9.2326360171, "call": 0.5237021955904, "off": 0.8270570407760001, "more": 0.11917452119999998, "and": 0.0020156845460352, "while": 0.04324998379380001, "achiev": 2.5083923404679997, "these": 0.2146008582024, "greatest": 1.10107184908, "life": 0.630367398554, "yourself": 3.28064670051, "general": 0.114952578063, "made": 0.1360430521946, "could": 1.4876501783200002, "fine": 1.39185273824, "comment": 1.11826753454, "close": 0.501333519728, "patch": 2.81926472072, "can": 1.298728771152, "comput": 4.104206747819999, "make": 0.7349765782289999, "analog": 2.20290964097, "onli": 0.025324268329099998, "each": 0.173741689304, "promot": 0.7017504724920001, "few": 0.826733740959, "this": 0.03029159242, "speech": 2.6819551405400004, "find": 2.191125321152, "bite": 3.1925192519800003, "shakespear": 8.583958305899998, "bot": 10.2799286415, "traffick": 3.6134406183199994, "reduc": 1.373235550286, "shout": 2.81820931165, "perfect": 4.50289300068, "rather": 0.442714975539, "sinc": 0.0803681994577, "ultim": 2.849462818722, "bio": 3.7456377879300002, "forecast": 12.3455686362, "must": 0.653383947388, "origin": 0.385837312761, "numkrzyvo": 7.369978720910001, "cooper": 1.30155313266, "quarter": 1.22086960472, "first": 0.015174579624319999, "everi": 1.957427137105, "input": 7.50502600617, "generat": 15.822011518192001, "score": 1.4559353207700003, "takeaway": 6.27136643224, "often": 0.516280786702, "glass": 1.83500945302, "round": 3.6574882667100006, "down": 0.613347482372, "learn": 0.842752064745, "when": 0.0616649665752, "effici": 1.62793753414, "has": 0.213619724274}, "logidf": {"britain": 1.17109358295, "real": 0.824629060574, "googl": 2.43263122258, "unlik": 0.885954358842, "onc": 0.403765872355, "too": 0.5965551547219999, "new": 0.0177299468511, "cook": 1.87281049562, "human": 0.640035183243, "would": 0.0796176279647, "what": 0.225887296827, "addict": 2.99800242209, "number": 0.0966085784186, "cup": 1.90234060974, "prose": 3.14753415606, "recogn": 0.935913859031, "eventu": 0.49257956194200003, "gibberish": 5.86590132413, "hear": 1.43007066072, "well": 0.0635144383156, "product": 0.484060136536, "ten": 0.6512071415940001, "creation": 1.11846026847, "water": 0.756862994946, "odd": 2.1517873988400003, "know": 0.952919694398, "their": 0.015360505122700001, "unit": 0.143188061817, "devop": 7.369978720910001, "won": 0.8404139079, "chief": 0.883056027166, "measur": 0.880014199726, "ever": 0.6778949784020001, "creat": 0.222576818514, "endless": 3.24607535645, "how": 0.47156695693000006, "test": 0.977224437103, "repost": 6.83935046985, "million": 0.5469102500940001, "limit": 0.41782385463, "discrimin": 2.37006739018, "children": 0.649637945787, "had": 0.0464780244111, "end": 0.101476798618, "found": 0.107841124048, "given": 0.303255810831, "secondari": 1.47447456495, "bouquet": 5.10821562244, "rhyme": 3.5305264083199996, "will": 0.202786534915, "overview": 2.54006626224, "event": 0.428982108147, "recip": 3.7590608082599997, "difficulti": 1.34435432215, "accompani": 1.21831042226, "clueless": 5.8883741799800005, "thousand": 0.906949263988, "judg": 1.28821653582, "constraint": 2.7112677679900004, "perform": 0.42618085058, "recognit": 1.4816549327200002, "need": 0.362740163442, "our": 0.8576392141820001, "longer": 0.7046772417749999, "object": 0.853933584803, "key": 0.82419811896, "word": 0.585861082385, "level": 0.503462189943, "ham": 3.5767392514699994, "have": 0.0147850023412, "arriv": 0.7088915382879999, "sugar": 2.47064749637, "tensorflow": 7.369978720910001, "adjust": 1.9619104904, "champion": 1.6167713629299998, "experi": 0.626272953933, "chocol": 3.4639737878099996, "out": 0.0584263909193, "quit": 1.05951513684, "alway": 0.726319204572, "hamlet": 3.42839691324, "forc": 0.280652166524, "decad": 0.760359972282, "taster": 6.7821920560099995, "optim": 2.4456277954099996, "offic": 0.463023762098, "not": 0.0155524130075, "far": 0.536623764503, "involv": 0.371469078658, "compon": 1.40974687623, "intens": 1.3616570567299997, "disgust": 3.41107212958, "are": 0.0294674735827, "order": 0.22014038079300002, "typewrit": 4.36925890584, "less": 0.3846144626, "use": 0.0292080197316, "rub": 3.7644808757300003, "infinit": 2.7768811161599998, "replic": 3.03924538062, "metric": 3.1016808515599994, "combat": 1.61202376736, "then": 0.08303386523089999, "purchas": 1.1252294655700001, "let": 1.2488025672799998, "world": 0.107420248621, "scienc": 0.841436178891, "cream": 3.16528610152, "happi": 1.81237875643, "github": 7.369978720910001, "plus": 1.54575009318, "away": 0.615957541869, "voic": 1.1668361006, "item": 1.62505430292, "practic": 0.533182530867, "respons": 0.40991566230300003, "simpl": 1.2232212893899999, "liter": 1.6990638498800001, "phone": 2.2103488741299997, "two": 0.0136988443582, "either": 0.459327638815, "develop": 0.178624694913, "accuraci": 2.5464765406, "sever": 0.06991112039689999, "those": 0.17854939087299998, "agre": 0.801760369921, "network": 0.9530830530519999, "lot": 1.4835969502500002, "some": 0.0395735090645, "video": 1.19307248967, "small": 0.307101805059, "resolut": 1.74704483412, "add": 1.52875583713, "whole": 0.8306818244059999, "soda": 4.283492084090001, "result": 0.136378908381, "document": 0.932547122383, "content": 1.26473915954, "whatev": 2.0343655696200003, "brute": 4.45762805629, "ani": 0.125608358366, "halfass": 7.369978720910001, "from": 0.000567054168866, "perfectionist": 5.30311596144, "work": 0.109034567273, "num": 0.00031499039539700004, "variabl": 2.1687230672, "siri": 5.98368435979, "teaspoon": 6.58152136054, "left": 0.364552414753, "balanc": 1.4936444810499998, "for": 0.00031499039539700004, "output": 2.03822657827, "simplifi": 2.4940183301400003, "with": 0.00119749171339, "written": 0.671587369833, "competit": 1.12154907401, "determin": 0.772833019022, "better": 0.6964279406, "revisionist": 4.24321818495, "magnitud": 2.75090562975, "brilliant": 2.6897010624299997, "feedback": 3.2048650877999996, "retri": 5.6835797673399995, "veri": 0.230159793238, "extract": 2.04161723301, "cocoa": 4.68895719219, "think": 1.06717661175, "trend": 1.6921980487900001, "combin": 0.529218310751, "english": 0.555765186335, "intrins": 3.25746685473, "educ": 0.696807183384, "iter": 3.62283035867, "batter": 3.69621290461, "doe": 0.5340417297169999, "even": 0.152388564834, "littl": 0.438213989466, "damag": 1.02276465794, "side": 0.46934876686899996, "train": 0.660918312839, "great": 0.235805258079, "goal": 1.18830712273, "total": 0.43567888670500005, "lifetim": 1.9650516193, "ask": 0.776797209847, "type": 0.707101485387, "invent": 1.52701418212, "ingredi": 3.16081848426, "accept": 0.552585882007, "probabl": 0.972882412913, "ratchet": 5.59502637, "into": 0.0149128632287, "cake": 3.5071459596699994, "via": 0.831983625414, "yes": 2.65237310559, "through": 0.0683586918849, "constant": 1.2971646281, "requir": 0.424253510675, "vanilla": 4.7167367562999996, "spit": 3.9424640309300005, "student": 0.904923236645, "exponenti": 3.6686767468, "rubric": 5.08759633523, "tast": 2.23065708585, "help": 0.336207721344, "aggress": 1.8326444538900002, "minimum": 1.79668465441, "instead": 0.46663315041500003, "line": 0.349430614452, "success": 0.27765441259199997, "base": 0.13652330228700002, "relat": 0.21310030165399999, "infin": 3.6786023866, "weather": 1.68537906567, "who": 0.0609002329859, "game": 0.9477062580210001, "permiss": 1.8373800586400002, "ideal": 1.53809624363, "good": 0.418589404907, "covet": 3.9392225370099996, "were": 0.024291143681099997, "long": 0.235645793878, "annoy": 3.2890571790200003, "much": 0.17749572930100002, "evalu": 1.9388802431299998, "contain": 0.468845318236, "about": 0.0628434774746, "problem": 0.569140724273, "bottl": 2.7371933678900002, "neural": 4.0853151555, "thing": 0.8781935346799999, "increment": 3.46196373688, "sudden": 1.75612095378, "egg": 2.63993955287, "just": 0.289531434109, "entir": 0.46603068026999994, "butter": 3.72192126132, "she": 0.7701082216959999, "simpli": 0.923941491586, "dure": 0.0491209066894, "aforement": 3.0836373363700003, "check": 1.87281049562, "flag": 1.78385428972, "rememb": 1.5867691126199999, "complex": 0.8502416364309999, "keyboard": 2.9249772870700004, "tweak": 4.73092139129, "rajeshwar": 7.369978720910001, "kitchen": 2.7850112422400004, "bake": 3.7193204796199995, "unaccept": 3.13877497597, "them": 0.0941833269093, "they": 0.0297269947676, "keep": 0.7141523446729999, "anyth": 1.52353994585, "health": 0.9990508682320001, "play": 0.38110439064199997, "mani": 0.0433157581221, "the": 0.0, "creativ": 1.87527254036, "flour": 3.6466978400800003, "adversari": 3.27064661718, "same": 0.112059649604, "there": 0.0400978929255, "command": 0.9809132407500001, "prune": 4.87677326831, "flavor": 3.47611968611, "flower": 2.1192772083, "possibl": 0.348805474891, "way": 0.19809150993500002, "say": 0.562154280552, "best": 0.459227932947, "exampl": 0.40868267499899996, "right": 0.34035985417, "spend": 1.42534376116, "textur": 3.3499985739800002, "baker": 2.35468761528, "take": 0.130691962197, "now": 0.149092945021, "tri": 0.61759152916, "name": 0.09723316638430002, "advers": 2.6461370052, "support": 0.237880610037, "than": 0.0322608622182, "abl": 0.599303982475, "monkey": 3.18945646245, "stress": 1.71014813378, "edg": 1.4944863500499999, "also": 0.0146571578, "mean": 0.37092128352, "scenario": 2.73427932989, "may": 0.050709995284400004, "past": 0.7016234157610001, "peopl": 0.193265578473, "stand": 0.7345572374320001, "macbeth": 4.75990892817, "freya": 6.17605625244, "machin": 1.39235958062, "want": 0.6916366062549999, "system": 0.327430345585, "partner": 1.4287553902399999, "attende": 3.74297467051, "elimin": 1.30201620283, "actual": 0.628514181648, "win": 1.01265652029, "week": 0.5907388641619999, "histori": 0.187550624069, "that": 0.00397614837964, "which": 0.00517841384543, "like": 0.139053576545, "skill": 1.30805571015, "sour": 3.57899404386, "milk": 2.6999575626, "mechan": 1.22815639221, "other": 0.00987474791976, "one": 0.0062553516455, "show": 0.236682766013, "bank": 1.0557062993700002, "impact": 1.09033222631, "hope": 0.919824304455, "see": 0.240921585492, "becaus": 0.139343158825, "earn": 1.20057721532, "loop": 2.60354038732, "get": 0.579769005782, "obsess": 2.86794929384, "random": 1.9727214065099998, "mishear": 7.369978720910001, "manag": 0.497643387158, "outsid": 0.515518738985, "should": 0.509419876758, "opinion": 1.33617333331, "part": 0.04239531098280001, "attempt": 0.38674498075099994, "analyt": 2.8481901438599997, "realli": 1.5576408397, "includ": 0.0188846813905, "rule": 0.554777423537, "repeat": 1.0567930591299999, "necessarili": 1.99238817347, "pretti": 2.75684036527, "choic": 1.14166497543, "rang": 0.579319213803, "instant": 2.4427250357499997, "time": 0.0112115188626, "variat": 1.5484132106, "process": 0.527829199025, "chang": 0.166275625058, "near": 0.252854324034, "project": 0.561601885907, "but": 0.0161923720719, "most": 0.020747896295599998, "interv": 2.58582587939, "player": 1.26518548849, "creator": 2.3304320833200003, "along": 0.260344385917, "all": 0.011402632097799998, "everyon": 1.8557438481400002, "mix": 1.02434236008, "british": 0.5775220662899999, "program": 0.7037855787649999, "almost": 0.42907884333400004, "sandwich": 3.50504732301, "case": 0.395406268889, "produc": 0.314320812003, "silli": 3.9231708279900004, "pair": 1.47447456495, "gan": 4.61631800855, "call": 0.0654627744488, "off": 0.41352852038800003, "more": 0.017024931599999998, "and": 6.29901420636e-05, "while": 0.04324998379380001, "achiev": 0.6270980851169999, "these": 0.0715336194008, "greatest": 1.10107184908, "life": 0.315183699277, "yourself": 3.28064670051, "general": 0.114952578063, "made": 0.0680215260973, "could": 0.18595627229000003, "fine": 1.39185273824, "comment": 1.11826753454, "close": 0.250666759864, "patch": 2.81926472072, "can": 0.162341096394, "comput": 1.36806891594, "make": 0.07349765782289999, "analog": 2.20290964097, "onli": 0.025324268329099998, "each": 0.173741689304, "promot": 0.7017504724920001, "few": 0.275577913653, "this": 0.0037864490525, "speech": 1.3409775702700002, "find": 0.547781330288, "bite": 3.1925192519800003, "shakespear": 2.8613194352999995, "bot": 5.13996432075, "traffick": 3.6134406183199994, "reduc": 0.686617775143, "shout": 2.81820931165, "perfect": 1.50096433356, "rather": 0.442714975539, "sinc": 0.0803681994577, "ultim": 0.9498209395739999, "bio": 3.7456377879300002, "forecast": 3.08639215905, "must": 0.653383947388, "origin": 0.128612437587, "numkrzyvo": 7.369978720910001, "cooper": 1.30155313266, "quarter": 1.22086960472, "first": 0.0075872898121599995, "everi": 0.391485427421, "input": 2.50167533539, "generat": 0.719182341736, "score": 1.4559353207700003, "takeaway": 6.27136643224, "often": 0.258140393351, "glass": 1.83500945302, "round": 1.2191627555700002, "down": 0.306673741186, "learn": 0.842752064745, "when": 0.0205549888584, "effici": 1.62793753414, "has": 0.0427239448548}, "freq": {"britain": 1, "real": 1, "googl": 1, "unlik": 1, "onc": 2, "too": 3, "new": 1, "cook": 4, "human": 6, "would": 12, "what": 4, "addict": 1, "number": 3, "cup": 6, "prose": 1, "recogn": 3, "eventu": 1, "gibberish": 1, "hear": 1, "well": 2, "product": 3, "ten": 1, "creation": 1, "water": 1, "odd": 1, "know": 4, "their": 1, "unit": 3, "devop": 1, "won": 1, "chief": 1, "measur": 2, "ever": 4, "creat": 3, "endless": 1, "how": 9, "test": 6, "repost": 1, "million": 1, "limit": 4, "discrimin": 8, "children": 1, "had": 1, "end": 1, "found": 2, "given": 1, "secondari": 5, "bouquet": 1, "rhyme": 1, "will": 2, "overview": 2, "event": 1, "recip": 4, "difficulti": 2, "accompani": 1, "clueless": 1, "thousand": 1, "judg": 2, "constraint": 1, "perform": 1, "recognit": 2, "need": 1, "our": 6, "longer": 1, "object": 1, "key": 1, "word": 2, "level": 4, "ham": 1, "have": 11, "arriv": 1, "sugar": 1, "tensorflow": 1, "adjust": 1, "champion": 1, "experi": 1, "chocol": 1, "out": 2, "quit": 1, "alway": 1, "hamlet": 2, "forc": 1, "decad": 1, "taster": 2, "optim": 3, "offic": 1, "not": 5, "far": 1, "involv": 1, "compon": 1, "intens": 1, "disgust": 1, "are": 16, "order": 1, "typewrit": 1, "less": 2, "use": 2, "rub": 1, "infinit": 1, "replic": 1, "metric": 1, "combat": 1, "then": 1, "purchas": 1, "let": 3, "world": 1, "scienc": 1, "cream": 5, "happi": 1, "github": 1, "plus": 1, "away": 1, "voic": 1, "item": 1, "practic": 1, "respons": 1, "simpl": 2, "liter": 1, "phone": 1, "two": 2, "either": 2, "develop": 1, "accuraci": 2, "sever": 1, "those": 2, "agre": 1, "network": 14, "lot": 5, "some": 1, "video": 2, "small": 1, "resolut": 1, "add": 2, "whole": 1, "soda": 2, "result": 4, "document": 1, "content": 1, "whatev": 1, "brute": 1, "ani": 3, "halfass": 1, "from": 3, "perfectionist": 1, "work": 6, "num": 19, "variabl": 1, "siri": 1, "teaspoon": 7, "left": 1, "balanc": 1, "for": 9, "output": 1, "simplifi": 1, "with": 10, "written": 1, "competit": 1, "determin": 3, "better": 1, "revisionist": 1, "magnitud": 1, "brilliant": 1, "feedback": 1, "retri": 1, "veri": 2, "extract": 1, "cocoa": 9, "think": 1, "trend": 1, "combin": 11, "english": 2, "intrins": 1, "educ": 1, "iter": 2, "batter": 3, "doe": 1, "even": 2, "littl": 1, "damag": 1, "side": 1, "train": 1, "great": 2, "goal": 1, "total": 1, "lifetim": 1, "ask": 1, "type": 4, "invent": 1, "ingredi": 8, "accept": 1, "probabl": 2, "ratchet": 1, "into": 2, "cake": 16, "via": 2, "yes": 1, "through": 2, "constant": 1, "requir": 1, "vanilla": 9, "spit": 1, "student": 1, "exponenti": 1, "rubric": 1, "tast": 3, "help": 1, "aggress": 1, "minimum": 2, "instead": 1, "line": 1, "success": 2, "base": 6, "relat": 1, "infin": 1, "weather": 1, "who": 1, "game": 3, "permiss": 1, "ideal": 1, "good": 6, "covet": 1, "were": 2, "long": 1, "annoy": 1, "much": 2, "evalu": 4, "contain": 1, "about": 2, "problem": 2, "bottl": 1, "neural": 3, "thing": 1, "increment": 1, "sudden": 1, "egg": 1, "just": 3, "entir": 1, "butter": 1, "she": 3, "simpli": 3, "dure": 1, "aforement": 1, "check": 1, "flag": 1, "rememb": 1, "complex": 1, "keyboard": 2, "tweak": 1, "rajeshwar": 2, "kitchen": 2, "bake": 6, "unaccept": 1, "them": 4, "they": 7, "keep": 1, "anyth": 5, "health": 1, "play": 2, "mani": 4, "the": 85, "creativ": 1, "flour": 1, "adversari": 11, "same": 3, "there": 10, "command": 1, "prune": 2, "flavor": 2, "flower": 1, "possibl": 9, "way": 2, "say": 3, "best": 4, "exampl": 8, "right": 1, "spend": 1, "textur": 1, "baker": 1, "take": 3, "now": 1, "tri": 8, "name": 1, "advers": 1, "support": 1, "than": 4, "abl": 1, "monkey": 4, "stress": 1, "edg": 1, "also": 3, "mean": 2, "scenario": 1, "may": 2, "past": 1, "peopl": 1, "stand": 1, "macbeth": 1, "freya": 2, "machin": 2, "want": 2, "system": 7, "partner": 1, "attende": 1, "elimin": 3, "actual": 2, "win": 2, "week": 1, "histori": 1, "that": 26, "which": 1, "like": 4, "skill": 1, "sour": 5, "milk": 1, "mechan": 1, "other": 2, "one": 2, "show": 2, "bank": 1, "impact": 1, "hope": 1, "see": 1, "becaus": 1, "earn": 1, "loop": 1, "get": 2, "obsess": 1, "random": 2, "mishear": 1, "manag": 1, "outsid": 1, "should": 2, "opinion": 1, "part": 1, "attempt": 1, "analyt": 1, "realli": 1, "includ": 1, "rule": 1, "repeat": 2, "necessarili": 1, "pretti": 1, "choic": 1, "rang": 2, "instant": 1, "time": 4, "variat": 1, "process": 1, "chang": 2, "near": 1, "project": 1, "but": 15, "most": 1, "interv": 2, "player": 3, "creator": 2, "along": 1, "all": 7, "everyon": 2, "mix": 1, "british": 2, "program": 1, "almost": 1, "sandwich": 1, "case": 2, "produc": 2, "silli": 1, "pair": 1, "gan": 2, "call": 8, "off": 2, "more": 7, "and": 32, "while": 1, "achiev": 4, "these": 3, "greatest": 1, "life": 2, "yourself": 1, "general": 1, "made": 2, "could": 8, "fine": 1, "comment": 1, "close": 2, "patch": 1, "can": 8, "comput": 3, "make": 10, "analog": 1, "onli": 1, "each": 1, "promot": 1, "few": 3, "this": 8, "speech": 2, "find": 4, "bite": 1, "shakespear": 3, "bot": 2, "traffick": 1, "reduc": 2, "shout": 1, "perfect": 3, "rather": 1, "sinc": 1, "ultim": 3, "bio": 1, "forecast": 4, "must": 1, "origin": 3, "numkrzyvo": 1, "cooper": 1, "quarter": 1, "first": 2, "everi": 5, "input": 3, "generat": 22, "score": 1, "takeaway": 1, "often": 2, "glass": 1, "round": 3, "down": 2, "learn": 1, "when": 3, "effici": 1, "has": 5}, "idf": {"britain": 3.2255180820800002, "real": 2.28103448276, "googl": 11.388809182200001, "unlik": 2.42529789184, "onc": 1.4974533106999999, "too": 1.81585268215, "new": 1.0178880554, "cook": 6.50655737705, "human": 1.8965476048299998, "would": 1.0828729281799998, "what": 1.25343439128, "addict": 20.0454545455, "number": 1.10142916609, "cup": 6.70156184044, "prose": 23.2785923754, "recogn": 2.54954231572, "eventu": 1.63653231626, "gibberish": 352.8, "hear": 4.17899447223, "well": 1.0655748708, "product": 1.62264922322, "ten": 1.9178545542400003, "creation": 3.0601387818, "water": 2.13157894737, "odd": 8.60021668472, "know": 2.59327017315, "their": 1.01547908405, "unit": 1.15394679459, "devop": 1587.6, "won": 2.31732593782, "chief": 2.41827875095, "measur": 2.41093394077, "ever": 1.9697270471500001, "creat": 1.2492917847, "endless": 25.6893203883, "how": 1.60250328051, "test": 2.65707112971, "repost": 933.882352941, "million": 1.7279059643, "limit": 1.5186531471200002, "discrimin": 10.6981132075, "children": 1.91484742492, "had": 1.0475750577399998, "end": 1.10680423871, "found": 1.11387076405, "given": 1.35426085473, "secondari": 4.36873968079, "bouquet": 165.375, "rhyme": 34.1419354839, "will": 1.22481098596, "overview": 12.6805111821, "event": 1.5356935577500002, "recip": 42.9081081081, "difficulti": 3.8357091084800006, "accompani": 3.38146964856, "clueless": 360.818181818, "thousand": 2.4767550702000003, "judg": 3.6263133851099996, "constraint": 15.0483412322, "perform": 1.5313977042500002, "recognit": 4.40022172949, "need": 1.4372623574099999, "our": 2.35758835759, "longer": 2.02319357716, "object": 2.3488681757700003, "key": 2.28005170185, "word": 1.7965372864099998, "level": 1.6544393497299998, "ham": 35.7567567568, "have": 1.0148948411399998, "arriv": 2.03173790632, "sugar": 11.8301043219, "tensorflow": 1587.6, "adjust": 7.112903225810001, "champion": 5.03680203046, "experi": 1.87062566278, "chocol": 31.943661971799997, "out": 1.06016694491, "quit": 2.8849718335500003, "alway": 2.06745670009, "hamlet": 30.827184466, "forc": 1.32399299475, "decad": 2.1390460792200003, "taster": 882.0, "optim": 11.5377906977, "offic": 1.58887109688, "not": 1.01567398119, "far": 1.71022298826, "involv": 1.4498630137000001, "compon": 4.09491875161, "intens": 3.9026548672600003, "disgust": 30.297709923699998, "are": 1.02990593578, "order": 1.24625166811, "typewrit": 78.9850746269, "less": 1.46904783936, "use": 1.0296387573799999, "rub": 43.141304347799995, "infinit": 16.0688259109, "replic": 20.889473684200002, "metric": 22.235294117600002, "combat": 5.01294600568, "then": 1.08657860516, "purchas": 3.08092373375, "let": 3.48616600791, "world": 1.11340206186, "scienc": 2.31969608416, "cream": 23.6955223881, "happi": 6.125, "github": 1587.6, "plus": 4.6914893617, "away": 1.85142857143, "voic": 3.21181468744, "item": 5.07869481766, "practic": 1.70434782609, "respons": 1.5066907089300001, "simpl": 3.3981164383599998, "liter": 5.468825353080001, "phone": 9.118897185529999, "two": 1.01379310345, "either": 1.5830092731099998, "develop": 1.1955719557200002, "accuraci": 12.7620578778, "sever": 1.07241286139, "those": 1.19548192771, "agre": 2.22946215419, "network": 2.59369384088, "lot": 4.40877534018, "some": 1.04036697248, "video": 3.29719626168, "small": 1.3594793629, "resolut": 5.73762197326, "add": 4.61243463103, "whole": 2.29488291414, "soda": 72.4931506849, "result": 1.14611608432, "document": 2.5409731114, "content": 3.5421686747, "whatev": 7.6473988439300005, "brute": 86.28260869569999, "ani": 1.13383802314, "halfass": 1587.6, "from": 1.00056721497, "perfectionist": 200.962025316, "work": 1.11520089913, "num": 1.00031504001, "variabl": 8.747107438019999, "siri": 396.9, "teaspoon": 721.636363636, "left": 1.4398693996, "balanc": 4.45329593268, "for": 1.00031504001, "output": 7.676982591880001, "simplifi": 12.109839816900001, "with": 1.0011982089899998, "written": 1.9573418813999999, "competit": 3.06960556845, "determin": 2.1658935879900003, "better": 2.0065722952500002, "revisionist": 69.6315789474, "magnitud": 15.6568047337, "brilliant": 14.7272727273, "feedback": 24.652173913000002, "retri": 294.0, "veri": 1.25880114177, "extract": 7.703056768560001, "cocoa": 108.739726027, "think": 2.90715986083, "trend": 5.43140608963, "combin": 1.69760479042, "english": 1.7432744043000001, "intrins": 25.9836333879, "educ": 2.00733341763, "iter": 37.4433962264, "batter": 40.2944162437, "doe": 1.70581282905, "even": 1.16461267606, "littl": 1.5499365420299998, "damag": 2.7808723068799996, "side": 1.5989525632, "train": 1.9365698950999999, "great": 1.26592775696, "goal": 3.28152128979, "total": 1.5460122699399999, "lifetim": 7.1352808988800005, "ask": 2.1744966443, "type": 2.0281042411900003, "invent": 4.604408352669999, "ingredi": 23.5898959881, "accept": 1.7377408056, "probabl": 2.64555907349, "ratchet": 269.084745763, "into": 1.01502461479, "cake": 33.3529411765, "via": 2.2978723404299997, "yes": 14.1876675603, "through": 1.07074930869, "constant": 3.6589075823900004, "requir": 1.52844902282, "vanilla": 111.802816901, "spit": 51.5454545455, "student": 2.47174217655, "exponenti": 39.2, "rubric": 162.0, "tast": 9.305978898010002, "help": 1.39962972759, "aggress": 6.25039370079, "minimum": 6.02962400304, "instead": 1.59461631177, "line": 1.4182597820299998, "success": 1.32002993265, "base": 1.14628158845, "relat": 1.23750876919, "infin": 39.5910224439, "weather": 5.3944954128400004, "who": 1.06279287723, "game": 2.57978550536, "permiss": 6.280063291139999, "ideal": 4.65571847507, "good": 1.51981619759, "covet": 51.3786407767, "were": 1.02458857696, "long": 1.2657259028899999, "annoy": 26.8175675676, "much": 1.1942229577299999, "evalu": 6.9509632224199995, "contain": 1.59814777532, "about": 1.06486015159, "problem": 1.76674827509, "bottl": 15.443579766500001, "neural": 59.4606741573, "thing": 2.4065484311099996, "increment": 31.8795180723, "sudden": 5.78993435449, "egg": 14.0123565755, "just": 1.33580143037, "entir": 1.59365589239, "butter": 41.34375, "she": 2.16, "simpli": 2.5192002538900002, "dure": 1.0503473370799998, "aforement": 21.8376891334, "check": 6.50655737705, "flag": 5.95275590551, "rememb": 4.88793103448, "complex": 2.34021226415, "keyboard": 18.6338028169, "tweak": 113.4, "rajeshwar": 1587.6, "kitchen": 16.2, "bake": 41.2363636364, "unaccept": 23.075581395300002, "them": 1.09876115994, "they": 1.03017325287, "keep": 2.04245465071, "anyth": 4.58843930636, "health": 2.71570304482, "play": 1.46390041494, "mani": 1.04426757877, "the": 1.0, "creativ": 6.52259654889, "flour": 38.347826087, "adversari": 26.328358209, "same": 1.11857958148, "there": 1.04091266719, "command": 2.66689064337, "prune": 131.20661157, "flavor": 32.33401222, "flower": 8.32511798637, "possibl": 1.4173734488, "way": 1.2190739461, "say": 1.7544480053, "best": 1.5828514456600002, "exampl": 1.50483412322, "right": 1.4054532577899999, "spend": 4.15928739848, "textur": 28.5026929982, "baker": 10.5348374253, "take": 1.13961668222, "now": 1.160780873, "tri": 1.8544562551099997, "name": 1.10211732037, "advers": 14.0994671403, "support": 1.2685577307200002, "than": 1.03278688525, "abl": 1.8208510150200001, "monkey": 24.2752293578, "stress": 5.52978056426, "edg": 4.45704660303, "also": 1.01476510067, "mean": 1.44906900329, "scenario": 15.3986420951, "may": 1.05201775893, "past": 2.01702452039, "peopl": 1.21320495186, "stand": 2.0845588235299997, "macbeth": 116.735294118, "freya": 481.09090909099996, "machin": 4.02433460076, "want": 1.99698113208, "system": 1.38739840951, "partner": 4.173501577290001, "attende": 42.223404255300004, "elimin": 3.67670217693, "actual": 1.87482286254, "win": 2.75290445639, "week": 1.80532181033, "histori": 1.20629131525, "that": 1.00398406375, "which": 1.005191845, "like": 1.14918566775, "skill": 3.6989748369099997, "sour": 35.837471783299996, "milk": 14.8791002812, "mechan": 3.41492794149, "other": 1.00992366412, "one": 1.00627495722, "show": 1.26703910615, "bank": 2.87400434468, "impact": 2.97526236882, "hope": 2.50884955752, "see": 1.27242125511, "becaus": 1.1495184997499999, "earn": 3.3220338983099995, "loop": 13.5114893617, "get": 1.78562591385, "obsess": 17.600886918, "random": 7.1902173913, "mishear": 1587.6, "manag": 1.6448404475799998, "outsid": 1.67450690855, "should": 1.6643254009900001, "opinion": 3.8044572250199997, "part": 1.04330682789, "attempt": 1.4721810088999998, "analyt": 17.256521739100002, "realli": 4.7476076555, "includ": 1.0190641247799999, "rule": 1.7415533128599998, "repeat": 2.8771293947099994, "necessarili": 7.33302540416, "pretti": 15.75, "choic": 3.1319786940200003, "rang": 1.7848229342299997, "instant": 11.504347826099998, "time": 1.01127460348, "variat": 4.704, "process": 1.69524826482, "chang": 1.1808985421, "near": 1.28769567686, "project": 1.7534791252500002, "but": 1.01632417899, "most": 1.02096463023, "interv": 13.2742474916, "player": 3.54375, "creator": 10.2823834197, "along": 1.2973768080399999, "all": 1.01146788991, "everyon": 6.3964544722, "mix": 2.7852631578900002, "british": 1.78161822467, "program": 2.02139037433, "almost": 1.53584212054, "sandwich": 33.2830188679, "case": 1.48498737256, "produc": 1.36932896326, "silli": 50.5605095541, "pair": 4.36873968079, "gan": 101.121019108, "call": 1.0676529926, "off": 1.5121440137200002, "more": 1.0171706817, "and": 1.00006299213, "while": 1.0441988950299999, "achiev": 1.87216981132, "these": 1.07415426252, "greatest": 3.00738776283, "life": 1.37051104972, "yourself": 26.592964824099997, "general": 1.1218202374200001, "made": 1.07038834951, "could": 1.2043695949, "fine": 4.02229541424, "comment": 3.05954904606, "close": 1.2848818387799998, "patch": 16.764519535399998, "can": 1.17626139142, "comput": 3.9277585353800006, "make": 1.0762660158600001, "analog": 9.05131128848, "onli": 1.0256476516600002, "each": 1.18974820144, "promot": 2.0172808132099997, "few": 1.31729173581, "this": 1.00379362671, "speech": 3.8227787141800005, "find": 1.7294117647099998, "bite": 24.3496932515, "shakespear": 17.4845814978, "bot": 170.709677419, "traffick": 37.0934579439, "reduc": 1.98698372966, "shout": 16.746835443, "perfect": 4.48601299802, "rather": 1.55692850838, "sinc": 1.08368600683, "ultim": 2.58524670249, "bio": 42.336000000000006, "forecast": 21.897931034499997, "must": 1.9220338983099996, "origin": 1.13724928367, "numkrzyvo": 1587.6, "cooper": 3.675, "quarter": 3.39013452915, "first": 1.00761614623, "everi": 1.47917637194, "input": 12.2029208301, "generat": 2.05275407292, "score": 4.2884927066500005, "takeaway": 529.2, "often": 1.29452054795, "glass": 6.2651933701699996, "round": 3.3843530164099995, "down": 1.35889754344, "learn": 2.32275054865, "when": 1.02076769755, "effici": 5.09335899904, "has": 1.0436497502}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/generative-adversarial-neural-networks-infinite-monkeys-great-british-bake-off.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/etl-vs-elt-considering-advancement-data-warehouses.html\" rel=\"prev\" title=\"ETL vs ELT: Considering the Advancement of Data Warehouses\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/chatbots-succeed-need-logic.html\" rel=\"next\" title=\"If chatbots are to succeed, they need this\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/05/generative-adversarial-neural-networks-infinite-monkeys-great-british-bake-off.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=81269\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/generative-adversarial-neural-networks-infinite-monkeys-great-british-bake-off.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-81269 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 22-May, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/index.html\">May</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/tutorials.html\">Tutorials, Overviews</a> \u00bb Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off (\u00a0<a href=\"/2018/n21.html\">18:n21</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/05/etl-vs-elt-considering-advancement-data-warehouses.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/05/chatbots-succeed-need-logic.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/gans\" rel=\"tag\">GANs</a>, <a href=\"https://www.kdnuggets.com/tag/generative-adversarial-network\" rel=\"tag\">Generative Adversarial Network</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a></div>\n<br/>\n<p class=\"excerpt\">\n     Adversarial Neural Networks are oddly named since they actually cooperate to make things.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/frajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Freya Rajeshwar</a>, Recognant</b></p>\n<p><img alt=\"Header image\" class=\"aligncenter\" src=\"https://media.licdn.com/media/gcrc/dms/image/C5612AQHT7dIvtLZvyA/article-cover_image-shrink_720_1280/0?e=2126476800&amp;v=beta&amp;t=wkCH9j-onLqXwmesi7heEgFgYMiz6VqDZoBBwjb7Tck\" width=\"99%\"/></p>\n<p>If you had an infinite number of monkeys typing at keyboards, could you produce Shakespeare? Yes, eventually. But how you would know once they\u2019d typed Shakespeare? Now there\u2019s the rub.</p>\n<p>In this example, monkeys are what are called\u00a0<strong>Generators</strong>\u00a0in AI, and the English student who checks their work to see if they have written Shakespeare (or anything good) is called a\u00a0<strong>Discriminator</strong>. These are the two components of an\u00a0<strong>Generative</strong>\u00a0<strong>Adversarial Neural Network</strong>.</p>\n<p>Adversarial Neural Networks are oddly named since they actually cooperate to make things.</p>\n<p><strong>Cooks in the Kitchen:</strong></p>\n<p>I am obsessed with the TV show \u201cThe Great British Bake Off.\u201d Let\u2019s say I made it my life goal to win GBBO (with a little help from my AI) and earn that coveted glass cake stand and flower bouquet. We have a whole week to practice for the first round, and so we are going to develop the greatest cake recipe in the history of the world (I don\u2019t do anything half-assed).</p>\n<p>We can agree that we intrinsically know what tastes good, or \u201cawful.\u201d\u00a0You bite into a cake and think to yourself, \u201cThat\u2019s really good\u201d or you may spit it out in disgust. Either way you instantly have an opinion. But can everyone make a cake? Can everyone invent a new flavor or recipe for a cake? That requires more skill. Or does it? I mean, there are a lot of people on the show that are pretty clueless, but even they make it past a few rounds.</p>\n<p><strong>Mechanics of the Problem:</strong></p>\n<p>Let\u2019s say that for round one of the GBBO competition, our base cake batter must contain Butter, Sugar, Eggs, Flour, Baking Soda, Milk, and Water. You can then add Sour Cream along with Vanilla and Cocoa to change the flavor (let\u2019s call these secondary ingredients). If you add too many secondary ingredients to the base cake batter it changes the texture, so you have limits on the range of what\u2019s possible. For example: 2 teaspoons of Vanilla is fine, but 2 cups is far too much.</p>\n<p>Given these constraints, there are a few thousand combinations that could be produced. They wouldn\u2019t all make me a GBBO champion, but I could try to bake them.</p>\n<p>Generative Adversarial Networks don\u2019t have to be a Neural Network. Any system that pairs a \u201ccook\u201d (called a Generator) with a \u201ctaster\u201d (called a Discriminator) is a Generative Adversarial Network. In this example, the cook has a limited range of choices (the aforementioned base ingredients, and 2 cups of any \u201csecondary\u201d ingredients), and is going to try and find the \u201cedges\u201d of what is acceptable to optimize for the \u201cbest\u201d cake.</p>\n<p><strong>Batter Optimization:</strong></p>\n<p>In our cake example, a chocolate cake would have the base ingredients, plus Sour Cream, Vanilla, and Cocoa. We would know that the base supports 2 cups of secondary ingredients (Sour Cream, Vanilla, and Cocoa), so the 3 secondary ingredients can\u2019t total more than that. There has to always be some Sour Cream or the Baking Soda won\u2019t work. We\u2019d also use teaspoons (1/48 of a cup) as our minimum unit of measure. The minimum unit determines how many tries there could be. If we were to try at a resolution of quarter teaspoons we\u2019d have to iterate exponentially more times. I\u2019d be spending a lot more time in the kitchen.</p>\n<p>If you have ever tasted a cake with an entire cup of Vanilla Extract you\u2019d know right away that that is too much. If you ever tried a cake with just 2 teaspoons of Cocoa you wouldn\u2019t even be able to taste it.</p>\n<p>In the same way that the \u201ccook\u201d in our analogy (called a\u00a0<strong>Generator</strong>\u00a0or\u00a0<strong>Generative Network</strong>) is going to create a cake recipe, the \u201ctaster\u201d (called a\u00a0<strong>Discriminator</strong>\u00a0if it is simple, and an\u00a0<strong>Evaluation Network</strong>\u00a0if it is a complex system) will score it.</p>\n<p><strong>Reducing Infinity:</strong></p>\n<p>The result is that the system finds the best result by testing nearly all possible combinations, but once a trend is found that is limiting success, those combinations are \u201cpruned.\u201d In our example, anything with more than 12 teaspoons (1/4 of an 8 oz bottle\u00a0<a href=\"https://amzn.to/2KRzYvo\" rel=\"noopener noreferrer\" target=\"_blank\">https://amzn.to/2KRzYvo</a>\u00a0) of Vanilla would be eliminated, and anything with less than 1/4 of a cup of Cocoa would also be eliminated. The system would also determine that Vanilla should be tested in teaspoon intervals, but Cocoa should be tested in 8 teaspoon intervals because each \u201cunit\u201d of Cocoa has less incremental impact.</p>\n<p>The result is that to find the ideal mix there are 12 levels of Vanilla possible, 11 levels of Cocoa, and whatever is left is Sour Cream. So there are 132 combinations to test (12*11), but this may be reduced as the limits of Vanilla and Cocoa are found -- so that there are probably only about 40 combinations that need to be tested.</p>\n<p>And just like that, suddenly an AI is making me the best baker in Britain.</p>\n<p><strong>Learning through Adversity:</strong></p>\n<p>In a Generative Adversarial Network, the two sides don\u2019t necessarily have to be AI. An AI could be generating the recipes and humans could be performing the evaluation.</p>\n<p>A human could simply bake every possible cake combination, and take them all to the judges of the Great British Bake Off to have them evaluate. In this case, rather than simplifying the problem (pruning out \u201cunacceptable\u201d levels of ingredients), every possible combination would be tested and the evaluation would be a very annoyed human. The output generated during that type of process would just be all possible combinations. It would take a lot longer, but ultimately arrive at the same results.</p>\n<p>In either scenario, Generative Adversarial Networks are how machine generated content is generally made, and they work not by being \u201cgood\u201d at creation, but by trying lots of combinations and judging them via constant feedback.</p>\n<p>Generative Adversarial Networks often work best when the Discriminator and the Generator are not the same type of AI, or possibly when the Discriminator is not AI at all.</p>\n<p><strong>A Few Examples of Real Life Adversarial Networks:</strong></p>\n<p><strong>Bots in video games:</strong></p>\n<p>Many video games don\u2019t ask the difficulty you want to play at. They simply ratchet up and down the difficulty based on how well you are doing. This keeps your stress level and addiction balanced. In this example, the AI is adjusting the aggressiveness, accuracy, and possibly damage of the bots in the game in response to the player. The Discriminator is likely a simple rubric of \u201chow long is it taking the player to achieve the objective?\u201d and \u201chow often is the player\u2019s health going down?\u201d</p>\n<p><strong>Speech Recognition:</strong></p>\n<p>If you have ever called your bank and shouted \u201cREPRESENTATIVE\u201d ten times into your phone hoping it would get the computer voice on the other end to patch you through to an actual human, it is likely you were training an AI. When Siri or Google\u2019s keyboard mishears you and you repeat a variation on your original input, the retry is flagged, and the system attempts to \u201chear\u201d the original input as the repeated input so that it can ultimately get better at speech recognition.</p>\n<p><strong>Forecasting:</strong></p>\n<p>Forecasting anything from weather to the number of attendees at an event to which items will be the most purchased all use a Generator to make those forecasts. How well the system did can be measured by several metrics for success by a Discriminator. That could be accuracy in magnitude, or how close the forecast timing was, or any other determiner of how good the system is -- but in all cases this would be a Generative Adversarial Network.</p>\n<p><strong>Key Takeaways:</strong></p>\n<p>Machines make very good revisionist creators. As humans we don\u2019t want to try every combination, but the AI is perfectly happy to loop endlessly making small tweaks to find every optimization possible. AI is the ultimate perfectionist creator. And while there is perfection achieved, there is no creativity -- it is perfection achieved via brute force. It is quite literally monkeys at typewriters, but the efficiency is created by an accompanying Discriminator that says, \u201cThat was close, but it doesn\u2019t rhyme,\u201d or \u201cSilly monkey, it\u2019s a play about Hamlet -- not a Ham Sandwich.\u201d</p>\n<p>If the Generator simply tries every combination, it is unlikely to ever generate brilliant prose in English (2 million words randomly ordered in a 2,000 word document makes for a lot of random gibberish). If instead the Generator has rules (remember the cake example), it can eliminate many of the iterations. The more variables involved, the more computationally intense generation is. This means that AI for making the winning GBBO cake is likely to be achieved in our lifetime, but AI replicating Hamlet or Macbeth is probably not.</p>\n<p>\u00a0<br>\n<b>Bio: <a href=\"https://www.linkedin.com/in/frajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Freya Rajeshwar</a></b> is the Chief Product Officer (CPO) at Recognant. She has almost a decade of experience in Product Management, DevOps, and Analytics. At Recognant, she works on a number of products, including ones to combat human trafficking. Outside of work, she partners with programs to promote Computer Science education for children.</br></p>\n<p><a href=\"https://www.linkedin.com/pulse/adversarial-neural-networks-infinite-monkeys-great-bake-rajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2018/01/generative-adversarial-networks-overview.html\">Generative Adversarial Networks, an overview</a>\n<li><a href=\"/2018/05/zimbres-first-github-project-gans.html\">GANs in TensorFlow from the Command Line: Creating Your First GitHub Project</a>\n<li><a href=\"/2017/11/overview-gans-generative-adversarial-networks-part1.html\">Overview of GANs (Generative Adversarial Networks) \u2013 Part I</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/05/etl-vs-elt-considering-advancement-data-warehouses.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/05/chatbots-succeed-need-logic.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/index.html\">May</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/tutorials.html\">Tutorials, Overviews</a> \u00bb Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off (\u00a0<a href=\"/2018/n21.html\">18:n21</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556362835\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.696 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 07:00:35 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "freya", "rajeshwar", "recogn", "had", "infinit", "number", "monkey", "type", "keyboard", "could", "produc", "shakespear", "yes", "eventu", "but", "how", "would", "know", "onc", "they", "type", "shakespear", "now", "there", "the", "rub", "this", "exampl", "monkey", "are", "what", "are", "call", "generat", "and", "the", "english", "student", "who", "check", "their", "work", "see", "they", "have", "written", "shakespear", "anyth", "good", "call", "discrimin", "these", "are", "the", "two", "compon", "generat", "adversari", "neural", "network", "adversari", "neural", "network", "are", "odd", "name", "sinc", "they", "actual", "cooper", "make", "thing", "cook", "the", "kitchen", "obsess", "with", "the", "show", "the", "great", "british", "bake", "off", "let", "say", "made", "life", "goal", "win", "with", "littl", "help", "from", "and", "earn", "that", "covet", "glass", "cake", "stand", "and", "flower", "bouquet", "have", "whole", "week", "practic", "for", "the", "first", "round", "and", "are", "develop", "the", "greatest", "cake", "recip", "the", "histori", "the", "world", "anyth", "halfass", "can", "agre", "that", "intrins", "know", "what", "tast", "good", "bite", "into", "cake", "and", "think", "yourself", "that", "realli", "good", "may", "spit", "out", "disgust", "either", "way", "instant", "have", "opinion", "but", "can", "everyon", "make", "cake", "can", "everyon", "invent", "new", "flavor", "recip", "for", "cake", "that", "requir", "more", "skill", "doe", "mean", "there", "are", "lot", "peopl", "the", "show", "that", "are", "pretti", "clueless", "but", "even", "they", "make", "past", "few", "round", "mechan", "the", "problem", "let", "say", "that", "for", "round", "one", "the", "competit", "our", "base", "cake", "batter", "must", "contain", "butter", "sugar", "egg", "flour", "bake", "soda", "milk", "and", "water", "can", "then", "add", "sour", "cream", "along", "with", "vanilla", "and", "cocoa", "chang", "the", "flavor", "let", "call", "these", "secondari", "ingredi", "add", "too", "mani", "secondari", "ingredi", "the", "base", "cake", "batter", "chang", "the", "textur", "have", "limit", "the", "rang", "what", "possibl", "for", "exampl", "num", "teaspoon", "vanilla", "fine", "but", "num", "cup", "far", "too", "much", "given", "these", "constraint", "there", "are", "few", "thousand", "combin", "that", "could", "produc", "they", "all", "make", "champion", "but", "could", "tri", "bake", "them", "generat", "adversari", "network", "have", "neural", "network", "ani", "system", "that", "pair", "cook", "call", "generat", "with", "taster", "call", "discrimin", "generat", "adversari", "network", "this", "exampl", "the", "cook", "has", "limit", "rang", "choic", "the", "aforement", "base", "ingredi", "and", "num", "cup", "ani", "secondari", "ingredi", "and", "tri", "and", "find", "the", "edg", "what", "accept", "optim", "for", "the", "best", "cake", "batter", "optim", "our", "cake", "exampl", "chocol", "cake", "would", "have", "the", "base", "ingredi", "plus", "sour", "cream", "vanilla", "and", "cocoa", "would", "know", "that", "the", "base", "support", "num", "cup", "secondari", "ingredi", "sour", "cream", "vanilla", "and", "cocoa", "the", "num", "secondari", "ingredi", "can", "total", "more", "than", "that", "there", "has", "alway", "some", "sour", "cream", "the", "bake", "soda", "won", "work", "also", "use", "teaspoon", "num", "cup", "our", "minimum", "unit", "measur", "the", "minimum", "unit", "determin", "how", "mani", "tri", "there", "could", "were", "tri", "resolut", "quarter", "teaspoon", "have", "iter", "exponenti", "more", "time", "spend", "lot", "more", "time", "the", "kitchen", "have", "ever", "tast", "cake", "with", "entir", "cup", "vanilla", "extract", "know", "right", "away", "that", "that", "too", "much", "ever", "tri", "cake", "with", "just", "num", "teaspoon", "cocoa", "even", "abl", "tast", "the", "same", "way", "that", "the", "cook", "our", "analog", "call", "generat", "generat", "network", "creat", "cake", "recip", "the", "taster", "call", "discrimin", "simpl", "and", "evalu", "network", "complex", "system", "will", "score", "reduc", "infin", "the", "result", "that", "the", "system", "find", "the", "best", "result", "test", "near", "all", "possibl", "combin", "but", "onc", "trend", "found", "that", "limit", "success", "those", "combin", "are", "prune", "our", "exampl", "anyth", "with", "more", "than", "num", "teaspoon", "num", "num", "bottl", "numkrzyvo", "vanilla", "would", "elimin", "and", "anyth", "with", "less", "than", "num", "cup", "cocoa", "would", "also", "elimin", "the", "system", "would", "also", "determin", "that", "vanilla", "should", "test", "teaspoon", "interv", "but", "cocoa", "should", "test", "num", "teaspoon", "interv", "becaus", "each", "unit", "cocoa", "has", "less", "increment", "impact", "the", "result", "that", "find", "the", "ideal", "mix", "there", "are", "num", "level", "vanilla", "possibl", "num", "level", "cocoa", "and", "whatev", "left", "sour", "cream", "there", "are", "num", "combin", "test", "num", "but", "this", "may", "reduc", "the", "limit", "vanilla", "and", "cocoa", "are", "found", "that", "there", "are", "probabl", "onli", "about", "num", "combin", "that", "need", "test", "and", "just", "like", "that", "sudden", "make", "the", "best", "baker", "britain", "learn", "through", "advers", "generat", "adversari", "network", "the", "two", "side", "necessarili", "have", "could", "generat", "the", "recip", "and", "human", "could", "perform", "the", "evalu", "human", "could", "simpli", "bake", "everi", "possibl", "cake", "combin", "and", "take", "them", "all", "the", "judg", "the", "great", "british", "bake", "off", "have", "them", "evalu", "this", "case", "rather", "than", "simplifi", "the", "problem", "prune", "out", "unaccept", "level", "ingredi", "everi", "possibl", "combin", "would", "test", "and", "the", "evalu", "would", "veri", "annoy", "human", "the", "output", "generat", "dure", "that", "type", "process", "would", "just", "all", "possibl", "combin", "would", "take", "lot", "longer", "but", "ultim", "arriv", "the", "same", "result", "either", "scenario", "generat", "adversari", "network", "are", "how", "machin", "generat", "content", "general", "made", "and", "they", "work", "not", "good", "creation", "but", "tri", "lot", "combin", "and", "judg", "them", "via", "constant", "feedback", "generat", "adversari", "network", "often", "work", "best", "when", "the", "discrimin", "and", "the", "generat", "are", "not", "the", "same", "type", "possibl", "when", "the", "discrimin", "not", "all", "few", "exampl", "real", "life", "adversari", "network", "bot", "video", "game", "mani", "video", "game", "ask", "the", "difficulti", "want", "play", "they", "simpli", "ratchet", "and", "down", "the", "difficulti", "base", "how", "well", "are", "this", "keep", "stress", "level", "and", "addict", "balanc", "this", "exampl", "the", "adjust", "the", "aggress", "accuraci", "and", "possibl", "damag", "the", "bot", "the", "game", "respons", "the", "player", "the", "discrimin", "like", "simpl", "rubric", "how", "long", "take", "the", "player", "achiev", "the", "object", "and", "how", "often", "the", "player", "health", "down", "speech", "recognit", "have", "ever", "call", "bank", "and", "shout", "ten", "time", "into", "phone", "hope", "would", "get", "the", "comput", "voic", "the", "other", "end", "patch", "through", "actual", "human", "like", "were", "train", "when", "siri", "googl", "keyboard", "mishear", "and", "repeat", "variat", "origin", "input", "the", "retri", "flag", "and", "the", "system", "attempt", "hear", "the", "origin", "input", "the", "repeat", "input", "that", "can", "ultim", "get", "better", "speech", "recognit", "forecast", "forecast", "anyth", "from", "weather", "the", "number", "attende", "event", "which", "item", "will", "the", "most", "purchas", "all", "use", "generat", "make", "those", "forecast", "how", "well", "the", "system", "can", "measur", "sever", "metric", "for", "success", "discrimin", "that", "could", "accuraci", "magnitud", "how", "close", "the", "forecast", "time", "ani", "other", "determin", "how", "good", "the", "system", "but", "all", "case", "this", "would", "generat", "adversari", "network", "key", "takeaway", "machin", "make", "veri", "good", "revisionist", "creator", "human", "want", "tri", "everi", "combin", "but", "the", "perfect", "happi", "loop", "endless", "make", "small", "tweak", "find", "everi", "optim", "possibl", "the", "ultim", "perfectionist", "creator", "and", "while", "there", "perfect", "achiev", "there", "creativ", "perfect", "achiev", "via", "brute", "forc", "quit", "liter", "monkey", "typewrit", "but", "the", "effici", "creat", "accompani", "discrimin", "that", "say", "that", "close", "but", "rhyme", "silli", "monkey", "play", "about", "hamlet", "not", "ham", "sandwich", "the", "generat", "simpli", "tri", "everi", "combin", "unlik", "ever", "generat", "brilliant", "prose", "english", "num", "million", "word", "random", "order", "num", "word", "document", "make", "for", "lot", "random", "gibberish", "instead", "the", "generat", "has", "rule", "rememb", "the", "cake", "exampl", "can", "elimin", "mani", "the", "iter", "the", "more", "variabl", "involv", "the", "more", "comput", "intens", "generat", "this", "mean", "that", "for", "make", "the", "win", "cake", "like", "achiev", "our", "lifetim", "but", "replic", "hamlet", "macbeth", "probabl", "not", "bio", "freya", "rajeshwar", "the", "chief", "product", "offic", "recogn", "she", "has", "almost", "decad", "experi", "product", "manag", "devop", "and", "analyt", "recogn", "she", "work", "number", "product", "includ", "one", "combat", "human", "traffick", "outsid", "work", "she", "partner", "with", "program", "promot", "comput", "scienc", "educ", "for", "children", "origin", "repost", "with", "permiss", "relat", "generat", "adversari", "network", "overview", "gan", "tensorflow", "from", "the", "command", "line", "creat", "first", "github", "project", "overview", "gan", "generat", "adversari", "network", "part"], "timestamp_scraper": 1556362835.618063, "title": "Generative Adversarial Neural Networks: Infinite Monkeys and The Great British Bake Off", "read_time": 462.59999999999997, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/frajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Freya Rajeshwar</a>, Recognant</b></p>\n<p><img alt=\"Header image\" class=\"aligncenter\" src=\"https://media.licdn.com/media/gcrc/dms/image/C5612AQHT7dIvtLZvyA/article-cover_image-shrink_720_1280/0?e=2126476800&amp;v=beta&amp;t=wkCH9j-onLqXwmesi7heEgFgYMiz6VqDZoBBwjb7Tck\" width=\"99%\"/></p>\n<p>If you had an infinite number of monkeys typing at keyboards, could you produce Shakespeare? Yes, eventually. But how you would know once they\u2019d typed Shakespeare? Now there\u2019s the rub.</p>\n<p>In this example, monkeys are what are called\u00a0<strong>Generators</strong>\u00a0in AI, and the English student who checks their work to see if they have written Shakespeare (or anything good) is called a\u00a0<strong>Discriminator</strong>. These are the two components of an\u00a0<strong>Generative</strong>\u00a0<strong>Adversarial Neural Network</strong>.</p>\n<p>Adversarial Neural Networks are oddly named since they actually cooperate to make things.</p>\n<p><strong>Cooks in the Kitchen:</strong></p>\n<p>I am obsessed with the TV show \u201cThe Great British Bake Off.\u201d Let\u2019s say I made it my life goal to win GBBO (with a little help from my AI) and earn that coveted glass cake stand and flower bouquet. We have a whole week to practice for the first round, and so we are going to develop the greatest cake recipe in the history of the world (I don\u2019t do anything half-assed).</p>\n<p>We can agree that we intrinsically know what tastes good, or \u201cawful.\u201d\u00a0You bite into a cake and think to yourself, \u201cThat\u2019s really good\u201d or you may spit it out in disgust. Either way you instantly have an opinion. But can everyone make a cake? Can everyone invent a new flavor or recipe for a cake? That requires more skill. Or does it? I mean, there are a lot of people on the show that are pretty clueless, but even they make it past a few rounds.</p>\n<p><strong>Mechanics of the Problem:</strong></p>\n<p>Let\u2019s say that for round one of the GBBO competition, our base cake batter must contain Butter, Sugar, Eggs, Flour, Baking Soda, Milk, and Water. You can then add Sour Cream along with Vanilla and Cocoa to change the flavor (let\u2019s call these secondary ingredients). If you add too many secondary ingredients to the base cake batter it changes the texture, so you have limits on the range of what\u2019s possible. For example: 2 teaspoons of Vanilla is fine, but 2 cups is far too much.</p>\n<p>Given these constraints, there are a few thousand combinations that could be produced. They wouldn\u2019t all make me a GBBO champion, but I could try to bake them.</p>\n<p>Generative Adversarial Networks don\u2019t have to be a Neural Network. Any system that pairs a \u201ccook\u201d (called a Generator) with a \u201ctaster\u201d (called a Discriminator) is a Generative Adversarial Network. In this example, the cook has a limited range of choices (the aforementioned base ingredients, and 2 cups of any \u201csecondary\u201d ingredients), and is going to try and find the \u201cedges\u201d of what is acceptable to optimize for the \u201cbest\u201d cake.</p>\n<p><strong>Batter Optimization:</strong></p>\n<p>In our cake example, a chocolate cake would have the base ingredients, plus Sour Cream, Vanilla, and Cocoa. We would know that the base supports 2 cups of secondary ingredients (Sour Cream, Vanilla, and Cocoa), so the 3 secondary ingredients can\u2019t total more than that. There has to always be some Sour Cream or the Baking Soda won\u2019t work. We\u2019d also use teaspoons (1/48 of a cup) as our minimum unit of measure. The minimum unit determines how many tries there could be. If we were to try at a resolution of quarter teaspoons we\u2019d have to iterate exponentially more times. I\u2019d be spending a lot more time in the kitchen.</p>\n<p>If you have ever tasted a cake with an entire cup of Vanilla Extract you\u2019d know right away that that is too much. If you ever tried a cake with just 2 teaspoons of Cocoa you wouldn\u2019t even be able to taste it.</p>\n<p>In the same way that the \u201ccook\u201d in our analogy (called a\u00a0<strong>Generator</strong>\u00a0or\u00a0<strong>Generative Network</strong>) is going to create a cake recipe, the \u201ctaster\u201d (called a\u00a0<strong>Discriminator</strong>\u00a0if it is simple, and an\u00a0<strong>Evaluation Network</strong>\u00a0if it is a complex system) will score it.</p>\n<p><strong>Reducing Infinity:</strong></p>\n<p>The result is that the system finds the best result by testing nearly all possible combinations, but once a trend is found that is limiting success, those combinations are \u201cpruned.\u201d In our example, anything with more than 12 teaspoons (1/4 of an 8 oz bottle\u00a0<a href=\"https://amzn.to/2KRzYvo\" rel=\"noopener noreferrer\" target=\"_blank\">https://amzn.to/2KRzYvo</a>\u00a0) of Vanilla would be eliminated, and anything with less than 1/4 of a cup of Cocoa would also be eliminated. The system would also determine that Vanilla should be tested in teaspoon intervals, but Cocoa should be tested in 8 teaspoon intervals because each \u201cunit\u201d of Cocoa has less incremental impact.</p>\n<p>The result is that to find the ideal mix there are 12 levels of Vanilla possible, 11 levels of Cocoa, and whatever is left is Sour Cream. So there are 132 combinations to test (12*11), but this may be reduced as the limits of Vanilla and Cocoa are found -- so that there are probably only about 40 combinations that need to be tested.</p>\n<p>And just like that, suddenly an AI is making me the best baker in Britain.</p>\n<p><strong>Learning through Adversity:</strong></p>\n<p>In a Generative Adversarial Network, the two sides don\u2019t necessarily have to be AI. An AI could be generating the recipes and humans could be performing the evaluation.</p>\n<p>A human could simply bake every possible cake combination, and take them all to the judges of the Great British Bake Off to have them evaluate. In this case, rather than simplifying the problem (pruning out \u201cunacceptable\u201d levels of ingredients), every possible combination would be tested and the evaluation would be a very annoyed human. The output generated during that type of process would just be all possible combinations. It would take a lot longer, but ultimately arrive at the same results.</p>\n<p>In either scenario, Generative Adversarial Networks are how machine generated content is generally made, and they work not by being \u201cgood\u201d at creation, but by trying lots of combinations and judging them via constant feedback.</p>\n<p>Generative Adversarial Networks often work best when the Discriminator and the Generator are not the same type of AI, or possibly when the Discriminator is not AI at all.</p>\n<p><strong>A Few Examples of Real Life Adversarial Networks:</strong></p>\n<p><strong>Bots in video games:</strong></p>\n<p>Many video games don\u2019t ask the difficulty you want to play at. They simply ratchet up and down the difficulty based on how well you are doing. This keeps your stress level and addiction balanced. In this example, the AI is adjusting the aggressiveness, accuracy, and possibly damage of the bots in the game in response to the player. The Discriminator is likely a simple rubric of \u201chow long is it taking the player to achieve the objective?\u201d and \u201chow often is the player\u2019s health going down?\u201d</p>\n<p><strong>Speech Recognition:</strong></p>\n<p>If you have ever called your bank and shouted \u201cREPRESENTATIVE\u201d ten times into your phone hoping it would get the computer voice on the other end to patch you through to an actual human, it is likely you were training an AI. When Siri or Google\u2019s keyboard mishears you and you repeat a variation on your original input, the retry is flagged, and the system attempts to \u201chear\u201d the original input as the repeated input so that it can ultimately get better at speech recognition.</p>\n<p><strong>Forecasting:</strong></p>\n<p>Forecasting anything from weather to the number of attendees at an event to which items will be the most purchased all use a Generator to make those forecasts. How well the system did can be measured by several metrics for success by a Discriminator. That could be accuracy in magnitude, or how close the forecast timing was, or any other determiner of how good the system is -- but in all cases this would be a Generative Adversarial Network.</p>\n<p><strong>Key Takeaways:</strong></p>\n<p>Machines make very good revisionist creators. As humans we don\u2019t want to try every combination, but the AI is perfectly happy to loop endlessly making small tweaks to find every optimization possible. AI is the ultimate perfectionist creator. And while there is perfection achieved, there is no creativity -- it is perfection achieved via brute force. It is quite literally monkeys at typewriters, but the efficiency is created by an accompanying Discriminator that says, \u201cThat was close, but it doesn\u2019t rhyme,\u201d or \u201cSilly monkey, it\u2019s a play about Hamlet -- not a Ham Sandwich.\u201d</p>\n<p>If the Generator simply tries every combination, it is unlikely to ever generate brilliant prose in English (2 million words randomly ordered in a 2,000 word document makes for a lot of random gibberish). If instead the Generator has rules (remember the cake example), it can eliminate many of the iterations. The more variables involved, the more computationally intense generation is. This means that AI for making the winning GBBO cake is likely to be achieved in our lifetime, but AI replicating Hamlet or Macbeth is probably not.</p>\n<p>\u00a0<br>\n<b>Bio: <a href=\"https://www.linkedin.com/in/frajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Freya Rajeshwar</a></b> is the Chief Product Officer (CPO) at Recognant. She has almost a decade of experience in Product Management, DevOps, and Analytics. At Recognant, she works on a number of products, including ones to combat human trafficking. Outside of work, she partners with programs to promote Computer Science education for children.</br></p>\n<p><a href=\"https://www.linkedin.com/pulse/adversarial-neural-networks-infinite-monkeys-great-bake-rajeshwar/\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2018/01/generative-adversarial-networks-overview.html\">Generative Adversarial Networks, an overview</a>\n<li><a href=\"/2018/05/zimbres-first-github-project-gans.html\">GANs in TensorFlow from the Command Line: Creating Your First GitHub Project</a>\n<li><a href=\"/2017/11/overview-gans-generative-adversarial-networks-part1.html\">Overview of GANs (Generative Adversarial Networks) \u2013 Part I</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}