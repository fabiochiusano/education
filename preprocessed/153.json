{"content": "By Favio Vazquez , Founder at Ciencia y Datos. comments By my sister /heizelvazquez/ Hi everyone and welcome back to learning\u00a0:). In this article I\u2019ll continue the discussion on Deep Learning with Apache Spark. You can see the first part\u00a0 here . In this part I will focus entirely on the DL pipelines library and how to use it from scratch. \u00a0 Apache Spark\u00a0Timeline \u00a0 The continuous improvements on Apache Spark lead us to this discussion on how to do Deep Learning with it. I created a detailed timeline of the development of Apache Spark until now to see how we got here. Soon I\u2019ll create an article with descriptions for this timeline but if you think there\u2019s something missing please let me know\u00a0:) \u00a0 Deep Learning Pipelines \u00a0 Databricks Deep Learning Pipelines is an open source library created by Databricks that provides high-level APIs for scalable deep learning in Python with Apache Spark. databricks/spark-deep-learning spark-deep-learning\u200a\u2014\u200aDeep Learning Pipelines for Apache Spark github.com It is an awesome effort and it won\u2019t be long until is merged into the official API, so is worth taking a look of it. Some of the advantages of this library compared to the ones that joins Spark with DL are: In the spirit of Spark and\u00a0 Spark MLlib , it provides easy-to-use APIs that enable deep learning in very few lines of code. It focuses on ease of use and integration, without sacrificing performace. It\u2019s build by the creators of Apache Spark (which are also the main contributors) so it\u2019s more likely for it to be merged as an official API than others. It is written in Python, so it will integrate with all of its famous libraries, and right now it uses the power of TensorFlow and Keras, the two main libraries of the moment to do DL. Deep Learning Pipelines builds on Apache Spark\u2019s\u00a0 ML Pipelines \u00a0for training, and with Spark DataFrames and SQL for deploying models. It includes high-level APIs for common aspects of deep learning so they can be done efficiently in a few lines of code: Image loading Applying pre-trained models as transformers in a Spark ML pipeline Transfer learning Applying Deep Learning models at scale Distributed hyperparameter tuning\u00a0 (next part) Deploying models in DataFrames and SQL I will describe each of these features in detail with examples. These examples comes from the official\u00a0 notebook \u00a0by Databricks. \u00a0 Apache Spark on Deep Cognition \u00a0 To run and test the codes in this article you will need to create an account in\u00a0 Deep Cognition . Is very easy and then you can access all of their features. When you log in this is what you should be seeing: Now just click on the left part, the Notebook button: And you will be on the Jupyter Notebook with all the installed packages\u00a0:). Oh! A note here: The Spark Notebook (DLS SPARK) is an upcoming feature which will be released to public sometime next month and tell that it is still in private beta (just for this post). You can download the full Notebook here to see all the code: /FavioVazquez/deep-learning-pyspark Image Loading The first step to applying deep learning on images is the ability to load the images. Deep Learning Pipelines includes utility functions that can load millions of images into a DataFrame and decode them automatically in a distributed fashion, allowing manipulation at scale. The new version of spark (2.3.0) has this ability too but we will be using the sparkdl library. We will be using the archive of creative-commons licensed flower photos curated by TensorFlow to test this out. To get the set of flower photos, run these commands from the notebook (we will also create a sample folder): /FavioVazquez/33350294e31213ff761bf2ff51e25c4a \u00a0 Let\u2019s copy some photos from the tulips and daisy folders to create a small sample of the photos. /FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0 \u00a0 To take a look at these images on the notebook you can run this: /FavioVazquez/efaa901f85b51c77d520595136a2cb52 \u00a0 You should be seeing this Now let\u2019s use Spark to load this images as a DataFrame. The method\u00a0 spark.readImage \u00a0lets you read images in common formats (jpg, png, etc.) from HDFS storage into DataFrame. Each image is stored as a row in the imageSchema format. The recursive option allows you to read images from subfolders, for example for positive and negative labeled samples. The sampleRatio parameter allows you to experiment with a smaller sample of images before training a model with full data. /FavioVazquez/85266329b7ef31411600f33c3b9eee1e \u00a0 If we take a look at this dataframe we see that it spark created one column, called \u201cimage\u201d. \r \r +--------------------+\r | image|\r +--------------------+\r |[file:/Users/favi...|\r |[file:/Users/favi...|\r |[file:/Users/favi...|\r +--------------------+ The image column contains a string column contains an image struct with schema == ImageSchema. Transfer learning Databricks Deep Learning Pipelines provides utilities to perform\u00a0 transfer learning \u00a0on images, which is one of the fastest (code and run-time -wise) ways to start using deep learning. Using Deep Learning Pipelines, it can be done in just several lines of code. Deep Learning Pipelines enables fast transfer learning with the concept of a\u00a0 Featurizer . The following example combines the InceptionV3 model and logistic regression in Spark to adapt InceptionV3 to our specific domain.\u00a0 The DeepImageFeaturizer automatically peels off the last layer of a pre-trained neural network and uses the output from all the previous layers as features for the logistic regression algorithm . Since logistic regression is a simple and fast algorithm, this transfer learning training can converge quickly using far fewer images than are typically required to train a deep learning model from ground-up. Firstly, we need to create training & test DataFrames for transfer learning. /FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5 \u00a0 And now let\u2019s train the model /FavioVazquez/96e13301b6286eb7b52f34faedce4c24 \u00a0 Let\u2019s see how well the model does: /FavioVazquez/27fa7de28011d41b192d723a185a9b87 \u00a0 Test set accuracy = 0.9753086419753086 Not so bad for an example and with no tunning at all! We can take look at where we are making mistakes: /FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97", "title_html": "<h1 id=\"title\">Deep Learning With Apache Spark:\u200aPart 2</h1> ", "url": "https://www.kdnuggets.com/2018/05/deep-learning-apache-spark-part-2.html", "tfidf": {"tfidf": {"label": 4.47715736041, "githubcom": 1587.6, "spark": 158.84360189574002, "still": 1.1866357724799999, "experi": 1.87062566278, "too": 1.81585268215, "the": 50.0, "post": 2.23826307627, "here": 9.69230769232, "sparkdeeplearn": 1587.6, "performac": 1587.6, "new": 1.0178880554, "long": 1.2657259028899999, "datafram": 11113.199999999999, "layer": 16.28307692308, "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum": 1587.6, "contain": 3.19629555064, "etc": 4.2066772655, "specif": 1.8719490626099997, "vazquez": 610.615384615, "function": 2.495441685, "deploy": 14.83738317758, "which": 3.015575535, "faviovazquezdeeplearningpyspark": 1587.6, "neural": 59.4606741573, "log": 13.6744186047, "python": 112.5957446808, "just": 4.00740429111, "entir": 1.59365589239, "adapt": 3.32272917539, "join": 1.7922781666299998, "done": 4.6605019814999995, "folder": 337.787234042, "know": 2.59327017315, "them": 1.09876115994, "fastest": 14.4065335753, "out": 1.06016694491, "scale": 7.493981590739999, "automat": 13.575032064980002, "sampleratio": 1587.6, "where": 1.06715063521, "upcom": 13.853403141400001, "creat": 9.9943342776, "eas": 9.04615384615, "articl": 6.054150247859999, "how": 6.41001312204, "enabl": 7.0843373494, "million": 1.7279059643, "faviovazqueznumbnumefnumfnumcnumbnumeeenum": 1587.6, "load": 34.024860694400004, "faviovazqueznumenumffnumbfnumffnumenumcnuma": 1587.6, "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum": 1587.6, "bad": 3.3944836433599996, "domain": 9.39408284024, "distribut": 5.479206212259999, "converg": 15.2947976879, "soon": 1.9817750592900003, "until": 2.29704116328, "deep": 68.93144424126, "databrick": 6350.4, "will": 11.02329887364, "string": 8.37783641161, "schema": 111.802816901, "regress": 153.6387096774, "open": 1.24556723678, "build": 3.2683479156, "full": 3.33459357278, "tun": 167.115789474, "provid": 3.64658142561, "power": 1.3396337861799998, "next": 2.9901120632800002, "sister": 3.75852272727, "perform": 1.5313977042500002, "but": 2.03264835798, "notebook": 281.3468354431, "need": 2.8745247148199997, "curat": 28.0991150442, "there": 1.04091266719, "groundup": 1587.6, "off": 1.5121440137200002, "tune": 10.4173228346, "apach": 605.4406779663, "flower": 16.65023597274, "wise": 15.5494613124, "paramet": 17.256521739100002, "way": 1.2190739461, "lead": 1.2664326739, "exampl": 7.5241706161, "right": 1.4054532577899999, "has": 1.0436497502, "founder": 4.033536585369999, "integr": 5.650827549380001, "think": 2.90715986083, "tensorflow": 3175.2, "take": 4.55846672888, "advantag": 3.32412060302, "follow": 1.04640126549, "now": 5.803904365, "famous": 2.28201811125, "then": 1.08657860516, "code": 23.28428257152, "mistak": 8.71350164654, "model": 18.8153805636, "format": 5.0625, "scalabl": 186.776470588, "concept": 2.65707112971, "output": 7.676982591880001, "abil": 5.41750554512, "ciencia": 236.955223881, "welcom": 6.05723006486, "sparkreadimag": 1587.6, "hyperparamet": 1587.6, "also": 2.02953020134, "databrickssparkdeeplearn": 1587.6, "start": 1.26673581744, "sourc": 1.69760479042, "sparkdl": 1587.6, "typic": 2.2541530597799997, "fashion": 4.85207823961, "far": 1.71022298826, "storag": 8.623574144489998, "row": 5.549108703250001, "imageschema": 3175.2, "merg": 10.56638935108, "run": 4.6707855251399995, "not": 1.01567398119, "read": 4.629921259840001, "logist": 42.2984014209, "quick": 2.205, "pleas": 9.12938470385, "easi": 5.2937645882, "jupyt": 1587.6, "test": 10.62828451884, "dato": 278.526315789, "util": 9.31963604344, "than": 2.0655737705, "peel": 36.8352668213, "sinc": 1.08368600683, "they": 1.03017325287, "instal": 3.78721374046, "last": 1.2117234010100002, "let": 20.91699604746, "cognit": 42.908108108200004, "archiv": 3.3451327433599998, "network": 2.59369384088, "contributor": 14.4721969006, "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum": 1587.6, "featur": 7.6356290881, "simpl": 3.3981164383599998, "other": 1.00992366412, "appli": 6.8916220518, "algorithm": 55.9014084508, "one": 3.01882487166, "two": 1.01379310345, "easytous": 1587.6, "got": 3.61969904241, "develop": 1.1955719557200002, "pretrain": 3175.2, "accuraci": 12.7620578778, "imag": 45.92343032157, "sever": 1.07241286139, "highlevel": 3175.2, "worth": 5.210370856580001, "get": 1.78562591385, "deepimagefeatur": 1587.6, "like": 1.14918566775, "without": 1.29547123623, "fast": 9.7458563536, "some": 2.08073394496, "moment": 4.262013422819999, "small": 1.3594793629, "should": 3.3286508019800003, "file": 11.313064133009998, "tell": 3.36142282448, "part": 4.17322731156, "transform": 3.42007755278, "version": 2.0083491461099996, "includ": 2.0381282495599997, "kera": 835.5789473680001, "spirit": 4.1451697127900005, "miss": 3.53664513255, "click": 34.7396061269, "access": 1.8734953976900002, "this": 15.056904400650001, "transfer": 16.35296137338, "licens": 5.79839298758, "png": 417.78947368400003, "and": 23.00144881899, "api": 253.3404255318, "back": 1.26070038911, "awesom": 108.0, "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum": 1587.6, "privat": 2.02396736359, "smaller": 2.59369384088, "detail": 4.52372132782, "num": 2.00063008002, "previous": 1.42846859816, "left": 1.4398693996, "recurs": 91.2413793103, "creator": 10.2823834197, "for": 13.00409552013, "manipul": 9.145161290319999, "button": 21.027814569500002, "usersfavi": 4762.799999999999, "all": 6.06880733946, "everyon": 6.3964544722, "releas": 1.8377126982299998, "our": 2.35758835759, "with": 14.016774925859997, "written": 1.9573418813999999, "won": 2.31732593782, "store": 3.44680851064, "someth": 3.28152128979, "these": 4.29661705008, "are": 4.11962374312, "command": 2.66689064337, "effort": 1.89247824532, "month": 1.5079787234, "that": 6.0239043825, "look": 7.634527530639999, "option": 4.04896710023, "call": 1.0676529926, "public": 1.22424429365, "more": 1.0171706817, "improv": 2.04376930999, "veri": 2.51760228354, "download": 14.6457564576, "struct": 1058.4, "discuss": 4.39352428394, "sacrif": 28.7608695652, "timelin": 32.7340206186, "negat": 3.75852272727, "combin": 1.69760479042, "posit": 1.37252528746, "focus": 4.02025829324, "column": 21.234061524750004, "librari": 16.0959783711, "faviovazquezefaanumfnumbnumcnumdnumanumcbnum": 1587.6, "inceptionvnum": 3175.2, "decod": 51.713355048900006, "main": 2.50607734806, "doe": 1.70581282905, "can": 10.58635252278, "describ": 1.47027227264, "make": 1.0762660158600001, "set": 2.37415881562, "photo": 25.67893247068, "runtim": 158.76, "each": 2.37949640288, "their": 1.01547908405, "train": 11.6194193706, "few": 2.63458347162, "beta": 25.0410094637, "well": 1.0655748708, "step": 2.8279301745599996, "scratch": 25.8146341463, "befor": 1.10036041031, "packag": 7.828402366860001, "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum": 1587.6, "common": 2.8051948051999998, "continu": 2.27857911734, "comment": 3.05954904606, "data": 3.37643555934, "sampl": 28.93120728928, "subfold": 1587.6, "note": 1.42449528937, "method": 2.5714285714300003, "creativecommon": 1587.6, "into": 3.04507384437, "sometim": 1.7126213592200001, "come": 1.32831325301, "compar": 1.8662278123900002, "fewer": 5.94829524166, "aspect": 3.0893169877399997, "tulip": 132.3, "learn": 55.746013167600005, "daisi": 62.015625, "requir": 1.52844902282, "from": 8.00453771976, "descript": 4.00504540868, "jpg": 1587.6, "first": 3.0228484386899996, "what": 1.25343439128, "copi": 3.8375634517800004, "allow": 3.8148177813300004, "use": 10.296387573799999, "offici": 4.21449429255, "mllib": 1587.6, "favio": 1587.6, "when": 1.02076769755, "account": 1.94463498285, "see": 8.90694878577, "heizelvazquez": 1587.6, "line": 4.254779346089999, "pipelin": 353.5141700409, "effici": 5.09335899904}, "logtfidf": {"label": 1.49898832727, "githubcom": 7.369978720910001, "spark": 40.34614095871, "still": 0.17112222142900002, "experi": 0.626272953933, "too": 0.5965551547219999, "the": 0.0, "post": 0.8057001527009999, "here": 3.5401527534800006, "sparkdeeplearn": 7.369978720910001, "performac": 7.369978720910001, "new": 0.0177299468511, "long": 0.235645793878, "datafram": 51.58985104637001, "layer": 4.1939583247000005, "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum": 7.369978720910001, "contain": 0.937690636472, "etc": 1.4366730879700003, "specif": 0.626980167541, "vazquez": 6.414467275880001, "function": 0.914465741594, "deploy": 4.00800541178, "which": 0.01553524153629, "faviovazquezdeeplearningpyspark": 7.369978720910001, "neural": 4.0853151555, "log": 2.61552683221, "python": 8.06131348592, "just": 0.868594302327, "entir": 0.46603068026999994, "adapt": 1.2007864860200002, "join": 0.58348752942, "done": 1.691951966258, "folder": 10.258538063260001, "know": 0.952919694398, "them": 0.0941833269093, "fastest": 2.66768182419, "out": 0.0584263909193, "scale": 2.64190612656, "automat": 3.8301700946399997, "sampleratio": 7.369978720910001, "where": 0.0649921387457, "upcom": 2.62853091663, "creat": 1.780614548112, "eas": 2.202339678, "articl": 2.106395218722, "how": 1.8862678277200002, "enabl": 2.52947831908, "million": 0.5469102500940001, "faviovazqueznumbnumefnumfnumcnumbnumeeenum": 7.369978720910001, "load": 9.5882677094, "faviovazqueznumenumffnumbfnumffnumenumcnuma": 7.369978720910001, "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum": 7.369978720910001, "bad": 1.2221516561799999, "domain": 2.24008000599, "distribut": 2.01562611626, "converg": 2.7275127501800003, "soon": 0.6839929376880001, "until": 0.276949326878, "deep": 24.4847959262, "databrick": 29.479914883640003, "will": 1.825078814235, "string": 2.1255896963900005, "schema": 4.7167367562999996, "regress": 11.807974549259999, "open": 0.219591038029, "build": 0.982274904182, "full": 1.022407248296, "tun": 5.1186869223, "provid": 0.585533532975, "power": 0.292396282715, "next": 0.804327370998, "sister": 1.32402598852, "perform": 0.42618085058, "but": 0.0323847441438, "notebook": 25.855746343, "need": 0.725480326884, "curat": 3.33573808276, "there": 0.0400978929255, "groundup": 7.369978720910001, "off": 0.41352852038800003, "tune": 2.3434700776599997, "apach": 37.87858807992, "flower": 4.2385544166, "wise": 2.74402599574, "paramet": 2.8481901438599997, "way": 0.19809150993500002, "lead": 0.23620402986699998, "exampl": 2.0434133749949996, "right": 0.34035985417, "has": 0.0427239448548, "founder": 1.3946435557299999, "integr": 2.07730964558, "think": 1.06717661175, "tensorflow": 14.739957441820001, "take": 0.522767848788, "advantag": 1.20120515883, "follow": 0.045356911094199995, "now": 0.7454647251050001, "famous": 0.825060187979, "then": 0.08303386523089999, "code": 8.13611457582, "mistak": 2.1648737360799997, "model": 6.6370506579990005, "format": 1.8574265037459998, "scalabl": 5.22991255741, "concept": 0.977224437103, "output": 2.03822657827, "abil": 1.992976594854, "ciencia": 5.46787119451, "welcom": 1.80125261058, "sparkreadimag": 7.369978720910001, "hyperparamet": 7.369978720910001, "also": 0.0293143156, "databrickssparkdeeplearn": 7.369978720910001, "start": 0.236443369291, "sourc": 0.529218310751, "sparkdl": 7.369978720910001, "typic": 0.812774319158, "fashion": 1.57940711618, "far": 0.536623764503, "storag": 2.1544996326700003, "row": 1.71363732085, "imageschema": 14.739957441820001, "merg": 3.32906193386, "run": 1.328144926617, "not": 0.0155524130075, "read": 1.67878536176, "logist": 7.9384110156, "quick": 0.790727508899, "pleas": 2.21149829955, "easi": 1.6665296351499999, "jupyt": 7.369978720910001, "test": 3.908897748412, "dato": 5.62951254607, "util": 3.0779527924799996, "than": 0.0645217244364, "peel": 3.6064557238, "sinc": 0.0803681994577, "they": 0.0297269947676, "instal": 1.3316305879, "last": 0.19204364461100001, "let": 7.492815403679999, "cognit": 6.131827255399999, "archiv": 1.20750637691, "network": 0.9530830530519999, "contributor": 2.67222935363, "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum": 7.369978720910001, "featur": 2.11693709071, "simpl": 1.2232212893899999, "other": 0.00987474791976, "appli": 2.4950825694359997, "algorithm": 6.66088479036, "one": 0.0187660549365, "two": 0.0136988443582, "easytous": 7.369978720910001, "got": 1.2863908849299999, "develop": 0.178624694913, "pretrain": 14.739957441820001, "accuraci": 2.5464765406, "imag": 16.89395582393, "sever": 0.06991112039689999, "highlevel": 14.739957441820001, "worth": 1.65065103492, "get": 0.579769005782, "deepimagefeatur": 7.369978720910001, "like": 0.139053576545, "without": 0.258874517941, "fast": 3.1673900494800002, "some": 0.079147018129, "moment": 1.4497416830899998, "small": 0.307101805059, "should": 1.018839753516, "file": 3.9820376616899997, "tell": 1.21236434401, "part": 0.16958124393120003, "transform": 1.22966322707, "version": 0.697313064259, "includ": 0.037769362781, "kera": 6.72812483474, "spirit": 1.4219437317299999, "miss": 1.2631785751200002, "click": 3.54788042301, "access": 0.627805882716, "this": 0.0567967357875, "transfer": 6.015897212820001, "licens": 1.7575808080500002, "png": 6.0349776541799995, "and": 0.0014487732674628, "api": 13.30836555321, "back": 0.23166743089699998, "awesom": 4.682131227119999, "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum": 7.369978720910001, "privat": 0.705059626587, "smaller": 0.9530830530519999, "detail": 1.632375554346, "num": 0.0006299807907940001, "previous": 0.356602960063, "left": 0.364552414753, "recurs": 4.513508514690001, "creator": 2.3304320833200003, "for": 0.004094875140161, "manipul": 2.21322491868, "button": 3.0458460646499996, "usersfavi": 22.10993616273, "all": 0.06841579258679999, "everyon": 1.8557438481400002, "releas": 0.608521699544, "our": 0.8576392141820001, "with": 0.01676488398746, "written": 0.671587369833, "won": 0.8404139079, "store": 1.2374487335200002, "someth": 1.18830712273, "these": 0.2861344776032, "are": 0.1178698943308, "command": 0.9809132407500001, "effort": 0.637887211057, "month": 0.410770160338, "that": 0.02385689027784, "look": 2.5855467744, "option": 1.39846181161, "call": 0.0654627744488, "public": 0.20232375048700002, "more": 0.017024931599999998, "improv": 0.7147958039319999, "veri": 0.460319586476, "download": 2.6841506319, "struct": 6.964513612799999, "discuss": 1.57396904524, "sacrif": 3.3590157676300003, "timelin": 7.1694079029, "negat": 1.32402598852, "combin": 0.529218310751, "posit": 0.316652318608, "focus": 1.3963979441119998, "column": 5.87098283814, "librari": 5.920859885658, "faviovazquezefaanumfnumbnumcnumdnumanumcbnum": 7.369978720910001, "inceptionvnum": 14.739957441820001, "decod": 3.9457160663199997, "main": 0.451143081176, "doe": 0.5340417297169999, "can": 1.4610698675459999, "describ": 0.385447603125, "make": 0.07349765782289999, "set": 0.342992022578, "photo": 7.437506185519999, "runtim": 5.0673936279100005, "each": 0.347483378608, "their": 0.015360505122700001, "train": 3.965509877034, "few": 0.551155827306, "beta": 3.22051485947, "well": 0.0635144383156, "step": 1.03954505698, "scratch": 3.2509415461, "befor": 0.0956377718795, "packag": 2.0577584491900005, "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum": 7.369978720910001, "common": 0.676651610542, "continu": 0.26080974797400003, "comment": 1.11826753454, "data": 1.2168205848, "sampl": 7.914505953560001, "subfold": 7.369978720910001, "note": 0.353817568083, "method": 0.944461608841, "creativecommon": 7.369978720910001, "into": 0.0447385896861, "sometim": 0.538025155343, "come": 0.28390990653000003, "compar": 0.6239191809269999, "fewer": 1.7831046645, "aspect": 1.12795002691, "tulip": 4.88507207112, "learn": 20.22604955388, "daisi": 4.12738636942, "requir": 0.424253510675, "from": 0.004536433350928, "descript": 1.38755491845, "jpg": 7.369978720910001, "first": 0.02276186943648, "what": 0.225887296827, "copi": 1.34483764744, "allow": 0.720841833567, "use": 0.292080197316, "offici": 1.019751952629, "mllib": 7.369978720910001, "favio": 7.369978720910001, "when": 0.0205549888584, "account": 0.665074289973, "see": 1.686451098444, "heizelvazquez": 7.369978720910001, "line": 1.048291843356, "pipelin": 38.17031126392, "effici": 1.62793753414}, "logidf": {"label": 1.49898832727, "githubcom": 7.369978720910001, "spark": 2.12348110309, "still": 0.17112222142900002, "experi": 0.626272953933, "too": 0.5965551547219999, "the": 0.0, "post": 0.8057001527009999, "here": 0.8850381883700001, "sparkdeeplearn": 7.369978720910001, "performac": 7.369978720910001, "new": 0.0177299468511, "long": 0.235645793878, "datafram": 7.369978720910001, "layer": 2.0969791623500003, "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum": 7.369978720910001, "contain": 0.468845318236, "etc": 1.4366730879700003, "specif": 0.626980167541, "vazquez": 6.414467275880001, "function": 0.914465741594, "deploy": 2.00400270589, "which": 0.00517841384543, "faviovazquezdeeplearningpyspark": 7.369978720910001, "neural": 4.0853151555, "log": 2.61552683221, "python": 4.03065674296, "just": 0.289531434109, "entir": 0.46603068026999994, "adapt": 1.2007864860200002, "join": 0.58348752942, "done": 0.845975983129, "folder": 5.129269031630001, "know": 0.952919694398, "them": 0.0941833269093, "fastest": 2.66768182419, "out": 0.0584263909193, "scale": 1.32095306328, "automat": 1.9150850473199998, "sampleratio": 7.369978720910001, "where": 0.0649921387457, "upcom": 2.62853091663, "creat": 0.222576818514, "eas": 2.202339678, "articl": 0.702131739574, "how": 0.47156695693000006, "enabl": 1.26473915954, "million": 0.5469102500940001, "faviovazqueznumbnumefnumfnumcnumbnumeeenum": 7.369978720910001, "load": 1.91765354188, "faviovazqueznumenumffnumbfnumffnumenumcnuma": 7.369978720910001, "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum": 7.369978720910001, "bad": 1.2221516561799999, "domain": 2.24008000599, "distribut": 1.00781305813, "converg": 2.7275127501800003, "soon": 0.6839929376880001, "until": 0.138474663439, "deep": 1.2886734698, "databrick": 7.369978720910001, "will": 0.202786534915, "string": 2.1255896963900005, "schema": 4.7167367562999996, "regress": 3.9359915164199997, "open": 0.219591038029, "build": 0.491137452091, "full": 0.511203624148, "tun": 5.1186869223, "provid": 0.19517784432500002, "power": 0.292396282715, "next": 0.402163685499, "sister": 1.32402598852, "perform": 0.42618085058, "but": 0.0161923720719, "notebook": 3.693678049, "need": 0.362740163442, "curat": 3.33573808276, "there": 0.0400978929255, "groundup": 7.369978720910001, "off": 0.41352852038800003, "tune": 2.3434700776599997, "apach": 4.20873200888, "flower": 2.1192772083, "wise": 2.74402599574, "paramet": 2.8481901438599997, "way": 0.19809150993500002, "lead": 0.23620402986699998, "exampl": 0.40868267499899996, "right": 0.34035985417, "has": 0.0427239448548, "founder": 1.3946435557299999, "integr": 1.03865482279, "think": 1.06717661175, "tensorflow": 7.369978720910001, "take": 0.130691962197, "advantag": 1.20120515883, "follow": 0.045356911094199995, "now": 0.149092945021, "famous": 0.825060187979, "then": 0.08303386523089999, "code": 1.35601909597, "mistak": 2.1648737360799997, "model": 0.7374500731110001, "format": 0.9287132518729999, "scalabl": 5.22991255741, "concept": 0.977224437103, "output": 2.03822657827, "abil": 0.996488297427, "ciencia": 5.46787119451, "welcom": 1.80125261058, "sparkreadimag": 7.369978720910001, "hyperparamet": 7.369978720910001, "also": 0.0146571578, "databrickssparkdeeplearn": 7.369978720910001, "start": 0.236443369291, "sourc": 0.529218310751, "sparkdl": 7.369978720910001, "typic": 0.812774319158, "fashion": 1.57940711618, "far": 0.536623764503, "storag": 2.1544996326700003, "row": 1.71363732085, "imageschema": 7.369978720910001, "merg": 1.66453096693, "run": 0.442714975539, "not": 0.0155524130075, "read": 0.83939268088, "logist": 2.6461370052, "quick": 0.790727508899, "pleas": 2.21149829955, "easi": 1.6665296351499999, "jupyt": 7.369978720910001, "test": 0.977224437103, "dato": 5.62951254607, "util": 1.5389763962399998, "than": 0.0322608622182, "peel": 3.6064557238, "sinc": 0.0803681994577, "they": 0.0297269947676, "instal": 1.3316305879, "last": 0.19204364461100001, "let": 1.2488025672799998, "cognit": 3.0659136276999996, "archiv": 1.20750637691, "network": 0.9530830530519999, "contributor": 2.67222935363, "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum": 7.369978720910001, "featur": 0.423387418142, "simpl": 1.2232212893899999, "other": 0.00987474791976, "appli": 0.8316941898119999, "algorithm": 3.33044239518, "one": 0.0062553516455, "two": 0.0136988443582, "easytous": 7.369978720910001, "got": 1.2863908849299999, "develop": 0.178624694913, "pretrain": 7.369978720910001, "accuraci": 2.5464765406, "imag": 0.99376210729, "sever": 0.06991112039689999, "highlevel": 7.369978720910001, "worth": 1.65065103492, "get": 0.579769005782, "deepimagefeatur": 7.369978720910001, "like": 0.139053576545, "without": 0.258874517941, "fast": 1.5836950247400001, "some": 0.0395735090645, "moment": 1.4497416830899998, "small": 0.307101805059, "should": 0.509419876758, "file": 1.32734588723, "tell": 1.21236434401, "part": 0.04239531098280001, "transform": 1.22966322707, "version": 0.697313064259, "includ": 0.0188846813905, "kera": 6.72812483474, "spirit": 1.4219437317299999, "miss": 1.2631785751200002, "click": 3.54788042301, "access": 0.627805882716, "this": 0.0037864490525, "transfer": 1.00264953547, "licens": 1.7575808080500002, "png": 6.0349776541799995, "and": 6.29901420636e-05, "api": 4.43612185107, "back": 0.23166743089699998, "awesom": 4.682131227119999, "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum": 7.369978720910001, "privat": 0.705059626587, "smaller": 0.9530830530519999, "detail": 0.816187777173, "num": 0.00031499039539700004, "previous": 0.356602960063, "left": 0.364552414753, "recurs": 4.513508514690001, "creator": 2.3304320833200003, "for": 0.00031499039539700004, "manipul": 2.21322491868, "button": 3.0458460646499996, "usersfavi": 7.369978720910001, "all": 0.011402632097799998, "everyon": 1.8557438481400002, "releas": 0.608521699544, "our": 0.8576392141820001, "with": 0.00119749171339, "written": 0.671587369833, "won": 0.8404139079, "store": 1.2374487335200002, "someth": 1.18830712273, "these": 0.0715336194008, "are": 0.0294674735827, "command": 0.9809132407500001, "effort": 0.637887211057, "month": 0.410770160338, "that": 0.00397614837964, "look": 0.6463866936, "option": 1.39846181161, "call": 0.0654627744488, "public": 0.20232375048700002, "more": 0.017024931599999998, "improv": 0.7147958039319999, "veri": 0.230159793238, "download": 2.6841506319, "struct": 6.964513612799999, "discuss": 0.78698452262, "sacrif": 3.3590157676300003, "timelin": 2.3898026343, "negat": 1.32402598852, "combin": 0.529218310751, "posit": 0.316652318608, "focus": 0.6981989720559999, "column": 1.95699427938, "librari": 0.986809980943, "faviovazquezefaanumfnumbnumcnumdnumanumcbnum": 7.369978720910001, "inceptionvnum": 7.369978720910001, "decod": 3.9457160663199997, "main": 0.225571540588, "doe": 0.5340417297169999, "can": 0.162341096394, "describ": 0.385447603125, "make": 0.07349765782289999, "set": 0.171496011289, "photo": 1.8593765463799998, "runtim": 5.0673936279100005, "each": 0.173741689304, "their": 0.015360505122700001, "train": 0.660918312839, "few": 0.275577913653, "beta": 3.22051485947, "well": 0.0635144383156, "step": 1.03954505698, "scratch": 3.2509415461, "befor": 0.0956377718795, "packag": 2.0577584491900005, "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum": 7.369978720910001, "common": 0.338325805271, "continu": 0.13040487398700001, "comment": 1.11826753454, "data": 1.2168205848, "sampl": 1.9786264883900002, "subfold": 7.369978720910001, "note": 0.353817568083, "method": 0.944461608841, "creativecommon": 7.369978720910001, "into": 0.0149128632287, "sometim": 0.538025155343, "come": 0.28390990653000003, "compar": 0.6239191809269999, "fewer": 1.7831046645, "aspect": 1.12795002691, "tulip": 4.88507207112, "learn": 0.842752064745, "daisi": 4.12738636942, "requir": 0.424253510675, "from": 0.000567054168866, "descript": 1.38755491845, "jpg": 7.369978720910001, "first": 0.0075872898121599995, "what": 0.225887296827, "copi": 1.34483764744, "allow": 0.24028061118900002, "use": 0.0292080197316, "offici": 0.339917317543, "mllib": 7.369978720910001, "favio": 7.369978720910001, "when": 0.0205549888584, "account": 0.665074289973, "see": 0.240921585492, "heizelvazquez": 7.369978720910001, "line": 0.349430614452, "pipelin": 3.47002829672, "effici": 1.62793753414}, "freq": {"label": 1, "githubcom": 1, "spark": 19, "still": 1, "experi": 1, "too": 1, "the": 50, "post": 1, "here": 4, "sparkdeeplearn": 1, "performac": 1, "new": 1, "long": 1, "datafram": 7, "layer": 2, "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum": 1, "contain": 2, "etc": 1, "specif": 1, "vazquez": 1, "function": 1, "deploy": 2, "which": 3, "faviovazquezdeeplearningpyspark": 1, "neural": 1, "log": 1, "python": 2, "just": 3, "entir": 1, "adapt": 1, "join": 1, "done": 2, "folder": 2, "know": 1, "them": 1, "fastest": 1, "out": 1, "scale": 2, "automat": 2, "sampleratio": 1, "where": 1, "upcom": 1, "creat": 8, "eas": 1, "articl": 3, "how": 4, "enabl": 2, "million": 1, "faviovazqueznumbnumefnumfnumcnumbnumeeenum": 1, "load": 5, "faviovazqueznumenumffnumbfnumffnumenumcnuma": 1, "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum": 1, "bad": 1, "domain": 1, "distribut": 2, "converg": 1, "soon": 1, "until": 2, "deep": 19, "databrick": 4, "will": 9, "string": 1, "schema": 1, "regress": 3, "open": 1, "build": 2, "full": 2, "tun": 1, "provid": 3, "power": 1, "next": 2, "sister": 1, "perform": 1, "but": 2, "notebook": 7, "need": 2, "curat": 1, "there": 1, "groundup": 1, "off": 1, "tune": 1, "apach": 9, "flower": 2, "wise": 1, "paramet": 1, "way": 1, "lead": 1, "exampl": 5, "right": 1, "has": 1, "founder": 1, "integr": 2, "think": 1, "tensorflow": 2, "take": 4, "advantag": 1, "follow": 1, "now": 5, "famous": 1, "then": 1, "code": 6, "mistak": 1, "model": 9, "format": 2, "scalabl": 1, "concept": 1, "output": 1, "abil": 2, "ciencia": 1, "welcom": 1, "sparkreadimag": 1, "hyperparamet": 1, "also": 2, "databrickssparkdeeplearn": 1, "start": 1, "sourc": 1, "sparkdl": 1, "typic": 1, "fashion": 1, "far": 1, "storag": 1, "row": 1, "imageschema": 2, "merg": 2, "run": 3, "not": 1, "read": 2, "logist": 3, "quick": 1, "pleas": 1, "easi": 1, "jupyt": 1, "test": 4, "dato": 1, "util": 2, "than": 2, "peel": 1, "sinc": 1, "they": 1, "instal": 1, "last": 1, "let": 6, "cognit": 2, "archiv": 1, "network": 1, "contributor": 1, "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum": 1, "featur": 5, "simpl": 1, "other": 1, "appli": 3, "algorithm": 2, "one": 3, "two": 1, "easytous": 1, "got": 1, "develop": 1, "pretrain": 2, "accuraci": 1, "imag": 17, "sever": 1, "highlevel": 2, "worth": 1, "get": 1, "deepimagefeatur": 1, "like": 1, "without": 1, "fast": 2, "some": 2, "moment": 1, "small": 1, "should": 2, "file": 3, "tell": 1, "part": 4, "transform": 1, "version": 1, "includ": 2, "kera": 1, "spirit": 1, "miss": 1, "click": 1, "access": 1, "this": 15, "transfer": 6, "licens": 1, "png": 1, "and": 23, "api": 3, "back": 1, "awesom": 1, "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum": 1, "privat": 1, "smaller": 1, "detail": 2, "num": 2, "previous": 1, "left": 1, "recurs": 1, "creator": 1, "for": 13, "manipul": 1, "button": 1, "usersfavi": 3, "all": 6, "everyon": 1, "releas": 1, "our": 1, "with": 14, "written": 1, "won": 1, "store": 1, "someth": 1, "these": 4, "are": 4, "command": 1, "effort": 1, "month": 1, "that": 6, "look": 4, "option": 1, "call": 1, "public": 1, "more": 1, "improv": 1, "veri": 2, "download": 1, "struct": 1, "discuss": 2, "sacrif": 1, "timelin": 3, "negat": 1, "combin": 1, "posit": 1, "focus": 2, "column": 3, "librari": 6, "faviovazquezefaanumfnumbnumcnumdnumanumcbnum": 1, "inceptionvnum": 2, "decod": 1, "main": 2, "doe": 1, "can": 9, "describ": 1, "make": 1, "set": 2, "photo": 4, "runtim": 1, "each": 2, "their": 1, "train": 6, "few": 2, "beta": 1, "well": 1, "step": 1, "scratch": 1, "befor": 1, "packag": 1, "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum": 1, "common": 2, "continu": 2, "comment": 1, "data": 1, "sampl": 4, "subfold": 1, "note": 1, "method": 1, "creativecommon": 1, "into": 3, "sometim": 1, "come": 1, "compar": 1, "fewer": 1, "aspect": 1, "tulip": 1, "learn": 24, "daisi": 1, "requir": 1, "from": 8, "descript": 1, "jpg": 1, "first": 3, "what": 1, "copi": 1, "allow": 3, "use": 10, "offici": 3, "mllib": 1, "favio": 1, "when": 1, "account": 1, "see": 7, "heizelvazquez": 1, "line": 3, "pipelin": 11, "effici": 1}, "idf": {"label": 4.47715736041, "githubcom": 1587.6, "spark": 8.360189573460001, "still": 1.1866357724799999, "experi": 1.87062566278, "too": 1.81585268215, "the": 1.0, "post": 2.23826307627, "here": 2.42307692308, "sparkdeeplearn": 1587.6, "performac": 1587.6, "new": 1.0178880554, "long": 1.2657259028899999, "datafram": 1587.6, "layer": 8.14153846154, "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum": 1587.6, "contain": 1.59814777532, "etc": 4.2066772655, "specif": 1.8719490626099997, "vazquez": 610.615384615, "function": 2.495441685, "deploy": 7.41869158879, "which": 1.005191845, "faviovazquezdeeplearningpyspark": 1587.6, "neural": 59.4606741573, "log": 13.6744186047, "python": 56.2978723404, "just": 1.33580143037, "entir": 1.59365589239, "adapt": 3.32272917539, "join": 1.7922781666299998, "done": 2.3302509907499998, "folder": 168.893617021, "know": 2.59327017315, "them": 1.09876115994, "fastest": 14.4065335753, "out": 1.06016694491, "scale": 3.7469907953699995, "automat": 6.787516032490001, "sampleratio": 1587.6, "where": 1.06715063521, "upcom": 13.853403141400001, "creat": 1.2492917847, "eas": 9.04615384615, "articl": 2.01805008262, "how": 1.60250328051, "enabl": 3.5421686747, "million": 1.7279059643, "faviovazqueznumbnumefnumfnumcnumbnumeeenum": 1587.6, "load": 6.80497213888, "faviovazqueznumenumffnumbfnumffnumenumcnuma": 1587.6, "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum": 1587.6, "bad": 3.3944836433599996, "domain": 9.39408284024, "distribut": 2.7396031061299997, "converg": 15.2947976879, "soon": 1.9817750592900003, "until": 1.14852058164, "deep": 3.6279707495399998, "databrick": 1587.6, "will": 1.22481098596, "string": 8.37783641161, "schema": 111.802816901, "regress": 51.2129032258, "open": 1.24556723678, "build": 1.6341739578, "full": 1.66729678639, "tun": 167.115789474, "provid": 1.21552714187, "power": 1.3396337861799998, "next": 1.4950560316400001, "sister": 3.75852272727, "perform": 1.5313977042500002, "but": 1.01632417899, "notebook": 40.1924050633, "need": 1.4372623574099999, "curat": 28.0991150442, "there": 1.04091266719, "groundup": 1587.6, "off": 1.5121440137200002, "tune": 10.4173228346, "apach": 67.27118644069999, "flower": 8.32511798637, "wise": 15.5494613124, "paramet": 17.256521739100002, "way": 1.2190739461, "lead": 1.2664326739, "exampl": 1.50483412322, "right": 1.4054532577899999, "has": 1.0436497502, "founder": 4.033536585369999, "integr": 2.8254137746900003, "think": 2.90715986083, "tensorflow": 1587.6, "take": 1.13961668222, "advantag": 3.32412060302, "follow": 1.04640126549, "now": 1.160780873, "famous": 2.28201811125, "then": 1.08657860516, "code": 3.8807137619199996, "mistak": 8.71350164654, "model": 2.0905978404, "format": 2.53125, "scalabl": 186.776470588, "concept": 2.65707112971, "output": 7.676982591880001, "abil": 2.70875277256, "ciencia": 236.955223881, "welcom": 6.05723006486, "sparkreadimag": 1587.6, "hyperparamet": 1587.6, "also": 1.01476510067, "databrickssparkdeeplearn": 1587.6, "start": 1.26673581744, "sourc": 1.69760479042, "sparkdl": 1587.6, "typic": 2.2541530597799997, "fashion": 4.85207823961, "far": 1.71022298826, "storag": 8.623574144489998, "row": 5.549108703250001, "imageschema": 1587.6, "merg": 5.28319467554, "run": 1.55692850838, "not": 1.01567398119, "read": 2.3149606299200003, "logist": 14.0994671403, "quick": 2.205, "pleas": 9.12938470385, "easi": 5.2937645882, "jupyt": 1587.6, "test": 2.65707112971, "dato": 278.526315789, "util": 4.65981802172, "than": 1.03278688525, "peel": 36.8352668213, "sinc": 1.08368600683, "they": 1.03017325287, "instal": 3.78721374046, "last": 1.2117234010100002, "let": 3.48616600791, "cognit": 21.454054054100002, "archiv": 3.3451327433599998, "network": 2.59369384088, "contributor": 14.4721969006, "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum": 1587.6, "featur": 1.52712581762, "simpl": 3.3981164383599998, "other": 1.00992366412, "appli": 2.2972073506, "algorithm": 27.9507042254, "one": 1.00627495722, "two": 1.01379310345, "easytous": 1587.6, "got": 3.61969904241, "develop": 1.1955719557200002, "pretrain": 1587.6, "accuraci": 12.7620578778, "imag": 2.70137825421, "sever": 1.07241286139, "highlevel": 1587.6, "worth": 5.210370856580001, "get": 1.78562591385, "deepimagefeatur": 1587.6, "like": 1.14918566775, "without": 1.29547123623, "fast": 4.8729281768, "some": 1.04036697248, "moment": 4.262013422819999, "small": 1.3594793629, "should": 1.6643254009900001, "file": 3.7710213776699995, "tell": 3.36142282448, "part": 1.04330682789, "transform": 3.42007755278, "version": 2.0083491461099996, "includ": 1.0190641247799999, "kera": 835.5789473680001, "spirit": 4.1451697127900005, "miss": 3.53664513255, "click": 34.7396061269, "access": 1.8734953976900002, "this": 1.00379362671, "transfer": 2.72549356223, "licens": 5.79839298758, "png": 417.78947368400003, "and": 1.00006299213, "api": 84.44680851060001, "back": 1.26070038911, "awesom": 108.0, "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum": 1587.6, "privat": 2.02396736359, "smaller": 2.59369384088, "detail": 2.26186066391, "num": 1.00031504001, "previous": 1.42846859816, "left": 1.4398693996, "recurs": 91.2413793103, "creator": 10.2823834197, "for": 1.00031504001, "manipul": 9.145161290319999, "button": 21.027814569500002, "usersfavi": 1587.6, "all": 1.01146788991, "everyon": 6.3964544722, "releas": 1.8377126982299998, "our": 2.35758835759, "with": 1.0011982089899998, "written": 1.9573418813999999, "won": 2.31732593782, "store": 3.44680851064, "someth": 3.28152128979, "these": 1.07415426252, "are": 1.02990593578, "command": 2.66689064337, "effort": 1.89247824532, "month": 1.5079787234, "that": 1.00398406375, "look": 1.9086318826599997, "option": 4.04896710023, "call": 1.0676529926, "public": 1.22424429365, "more": 1.0171706817, "improv": 2.04376930999, "veri": 1.25880114177, "download": 14.6457564576, "struct": 1058.4, "discuss": 2.19676214197, "sacrif": 28.7608695652, "timelin": 10.911340206199998, "negat": 3.75852272727, "combin": 1.69760479042, "posit": 1.37252528746, "focus": 2.01012914662, "column": 7.078020508250001, "librari": 2.68266306185, "faviovazquezefaanumfnumbnumcnumdnumanumcbnum": 1587.6, "inceptionvnum": 1587.6, "decod": 51.713355048900006, "main": 1.25303867403, "doe": 1.70581282905, "can": 1.17626139142, "describ": 1.47027227264, "make": 1.0762660158600001, "set": 1.18707940781, "photo": 6.41973311767, "runtim": 158.76, "each": 1.18974820144, "their": 1.01547908405, "train": 1.9365698950999999, "few": 1.31729173581, "beta": 25.0410094637, "well": 1.0655748708, "step": 2.8279301745599996, "scratch": 25.8146341463, "befor": 1.10036041031, "packag": 7.828402366860001, "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum": 1587.6, "common": 1.4025974025999999, "continu": 1.13928955867, "comment": 3.05954904606, "data": 3.37643555934, "sampl": 7.23280182232, "subfold": 1587.6, "note": 1.42449528937, "method": 2.5714285714300003, "creativecommon": 1587.6, "into": 1.01502461479, "sometim": 1.7126213592200001, "come": 1.32831325301, "compar": 1.8662278123900002, "fewer": 5.94829524166, "aspect": 3.0893169877399997, "tulip": 132.3, "learn": 2.32275054865, "daisi": 62.015625, "requir": 1.52844902282, "from": 1.00056721497, "descript": 4.00504540868, "jpg": 1587.6, "first": 1.00761614623, "what": 1.25343439128, "copi": 3.8375634517800004, "allow": 1.2716059271100002, "use": 1.0296387573799999, "offici": 1.40483143085, "mllib": 1587.6, "favio": 1587.6, "when": 1.02076769755, "account": 1.94463498285, "see": 1.27242125511, "heizelvazquez": 1587.6, "line": 1.4182597820299998, "pipelin": 32.1376518219, "effici": 5.09335899904}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Deep Learning With Apache Spark:\u200aPart 2</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/deep-learning-apache-spark-part-2.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Deep Learning With Apache Spark:\u200aPart 2 Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/jobs/18/05-23-analysis-group-data-scientist.html\" rel=\"prev\" title=\"Analysis Group: Data Scientist\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/scientific-debt.html\" rel=\"next\" title=\"Scientific debt \u2013 what does it mean for Data Science?\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/05/deep-learning-apache-spark-part-2.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=81267\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/05/deep-learning-apache-spark-part-2.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-81267 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 23-May, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/index.html\">May</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/tutorials.html\">Tutorials, Overviews</a> \u00bb Deep Learning With Apache Spark:\u200aPart 2 (\u00a0<a href=\"/2018/n22.html\">18:n22</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Deep Learning With Apache Spark:\u200aPart 2</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/jobs/18/05-23-analysis-group-data-scientist.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/05/scientific-debt.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/apache-spark\" rel=\"tag\">Apache Spark</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/keras\" rel=\"tag\">Keras</a>, <a href=\"https://www.kdnuggets.com/tag/sql\" rel=\"tag\">SQL</a>, <a href=\"https://www.kdnuggets.com/tag/tensorflow\" rel=\"tag\">TensorFlow</a></div>\n<br/>\n<p class=\"excerpt\">\n     In this article I\u2019ll continue the discussion on Deep Learning with Apache Spark. I will focus entirely on the DL pipelines library and how to use it from scratch.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/favio-vazquez\" rel=\"author\" title=\"Posts by Favio Vazquez\">Favio Vazquez</a>, Founder at Ciencia y Datos.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"/2018/05/deep-learning-apache-spark-part-2.html?page=2#comments\">comments</a></div>\n<p><center><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/2000/1*DLDddze-fQTKzG0CZt3i1A.jpeg\" width=\"99%\"><br>\n<font size=\"-1\">By my sister <a href=\"https://www.instagram.com/heizelvazquez/\" rel=\"noopener\" target=\"_blank\">https://www.instagram.com/heizelvazquez/</a></font></br></img></center></p>\n<p>Hi everyone and welcome back to learning\u00a0:). In this article I\u2019ll continue the discussion on Deep Learning with Apache Spark. You can see the first part\u00a0<a href=\"https://towardsdatascience.com/deep-learning-with-apache-spark-part-1-6d397c16abd\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>In this part I will focus entirely on the DL pipelines library and how to use it from scratch.</p>\n<p>\u00a0</p>\n<h3>Apache Spark\u00a0Timeline</h3>\n<p>\u00a0<br>\nThe continuous improvements on Apache Spark lead us to this discussion on how to do Deep Learning with it. I created a detailed timeline of the development of Apache Spark until now to see how we got here.</br></p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/2000/1*dtLoj7pHnbT_rVmv5Y6yFA.png\" width=\"99%\"/></p>\n<p>Soon I\u2019ll create an article with descriptions for this timeline but if you think there\u2019s something missing please let me know\u00a0:)</p>\n<p>\u00a0</p>\n<h3>Deep Learning Pipelines</h3>\n<p>\u00a0</p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*6gBbuSw5qH34uI7GF4p97A.png\" width=\"80%\"/><br>\n<font size=\"-1\">Databricks</font></br></center></p>\n<p>Deep Learning Pipelines is an open source library created by Databricks that provides high-level APIs for scalable deep learning in Python with Apache Spark.</p>\n<p><a href=\"https://github.com/databricks/spark-deep-learning\" rel=\"noopener noreferrer\" target=\"_blank\"><strong>databricks/spark-deep-learning</strong><br>\n<em>spark-deep-learning\u200a\u2014\u200aDeep Learning Pipelines for Apache Spark</em>github.com</br></a></p>\n<p>It is an awesome effort and it won\u2019t be long until is merged into the official API, so is worth taking a look of it.</p>\n<p>Some of the advantages of this library compared to the ones that joins Spark with DL are:</p>\n<ul>\n<li>In the spirit of Spark and\u00a0<a href=\"https://spark.apache.org/mllib/\" rel=\"noopener noreferrer\" target=\"_blank\">Spark MLlib</a>, it provides easy-to-use APIs that enable deep learning in very few lines of code.\n<li>It focuses on ease of use and integration, without sacrificing performace.\n<li>It\u2019s build by the creators of Apache Spark (which are also the main contributors) so it\u2019s more likely for it to be merged as an official API than others.\n<li>It is written in Python, so it will integrate with all of its famous libraries, and right now it uses the power of TensorFlow and Keras, the two main libraries of the moment to do DL.\n</li></li></li></li></ul>\n<p>Deep Learning Pipelines builds on Apache Spark\u2019s\u00a0<a href=\"https://spark.apache.org/docs/latest/ml-pipeline.html\" rel=\"noopener noreferrer\" target=\"_blank\">ML Pipelines</a>\u00a0for training, and with Spark DataFrames and SQL for deploying models. It includes high-level APIs for common aspects of deep learning so they can be done efficiently in a few lines of code:</p>\n<ul>\n<li>Image loading\n<li>Applying pre-trained models as transformers in a Spark ML pipeline\n<li>Transfer learning\n<li>Applying Deep Learning models at scale\n<li>Distributed hyperparameter tuning\u00a0<strong>(next part)</strong>\n<li>Deploying models in DataFrames and SQL\n</li></li></li></li></li></li></ul>\n<p>I will describe each of these features in detail with examples. These examples comes from the official\u00a0<a href=\"https://databricks-prod-cloudfront.cloud.databricks.com/public/4027ec902e239c93eaaa8714f173bcfc/5669198905533692/3647723071348946/3983381308530741/latest.html\" rel=\"noopener noreferrer\" target=\"_blank\">notebook</a>\u00a0by Databricks.</p>\n<p>\u00a0</p>\n<h3>Apache Spark on Deep Cognition</h3>\n<p>\u00a0<br/>\nTo run and test the codes in this article you will need to create an account in\u00a0<a href=\"http://deepcognition.ai/register/\" rel=\"noopener noreferrer\" target=\"_blank\">Deep Cognition</a>.</p>\n<p>Is very easy and then you can access all of their features. When you log in this is what you should be seeing:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/2000/1*8ijqj85Tjscv9xpXjHfEFA.png\" width=\"99%\"/></p>\n<p>Now just click on the left part, the Notebook button:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*mnMlcYuO2U-KzRvYSuj-Cw.png\" width=\"250\"/></p>\n<p>And you will be on the Jupyter Notebook with all the installed packages\u00a0:). Oh! A note here: The Spark Notebook (DLS SPARK) is an upcoming feature which will be released to public sometime next month and tell that it is still in private beta (just for this post).</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*cbQSGKgPDBNoBfGdDJqESg.png\" width=\"75%\"/></p>\n<p>You can download the full Notebook here to see all the code:</p>\n<p><a href=\"https://github.com/FavioVazquez/deep-learning-pyspark\" rel=\"noopener noreferrer\" target=\"_blank\">https://github.com/FavioVazquez/deep-learning-pyspark</a></p>\n<p><b>Image Loading</b></p>\n<p>The first step to applying deep learning on images is the ability to load the images. Deep Learning Pipelines includes utility functions that can load millions of images into a DataFrame and decode them automatically in a distributed fashion, allowing manipulation at scale. The new version of spark (2.3.0) has this ability too but we will be using the sparkdl library.</p>\n<p>We will be using the archive of creative-commons licensed flower photos curated by TensorFlow to test this out. To get the set of flower photos, run these commands from the notebook (we will also create a sample folder):</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a</a></font></center><br/>\n\u00a0</p>\n<p>Let\u2019s copy some photos from the tulips and daisy folders to create a small sample of the photos.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0</a></font></center><br/>\n\u00a0</p>\n<p>To take a look at these images on the notebook you can run this:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52.js\"></script><br/>\n<center><font><a href=\"https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52</a></font></center><br/>\n\u00a0</p>\n<p>You should be seeing this</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*qVp67i3d_qUIWwzE5PNyCQ.png\" width=\"50%\"/></p>\n<p>Now let\u2019s use Spark to load this images as a DataFrame. The method\u00a0<code>spark.readImage</code>\u00a0lets you read images in common formats (jpg, png, etc.) from HDFS storage into DataFrame. Each image is stored as a row in the imageSchema format. The recursive option allows you to read images from subfolders, for example for positive and negative labeled samples. The sampleRatio parameter allows you to experiment with a smaller sample of images before training a model with full data.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e</a></font></center><br/>\n\u00a0</p>\n<p>If we take a look at this dataframe we see that it spark created one column, called \u201cimage\u201d.</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>image_df.show()\r\n\r\n+--------------------+\r\n|               image|\r\n+--------------------+\r\n|[file:/Users/favi...|\r\n|[file:/Users/favi...|\r\n|[file:/Users/favi...|\r\n+--------------------+</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>The image column contains a string column contains an image struct with schema == ImageSchema.</p>\n<p><b>Transfer learning</b></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*6eDLqIz2sOtdI-6X87Ervg.png\" width=\"99%\"/><br/>\n<font size=\"-1\">Databricks</font></center></p>\n<p>Deep Learning Pipelines provides utilities to perform\u00a0<a href=\"https://en.wikipedia.org/wiki/Transfer_learning\" rel=\"noopener noreferrer\" target=\"_blank\">transfer learning</a>\u00a0on images, which is one of the fastest (code and run-time -wise) ways to start using deep learning. Using Deep Learning Pipelines, it can be done in just several lines of code.</p>\n<p>Deep Learning Pipelines enables fast transfer learning with the concept of a\u00a0<em>Featurizer</em>. The following example combines the InceptionV3 model and logistic regression in Spark to adapt InceptionV3 to our specific domain.\u00a0<strong>The DeepImageFeaturizer automatically peels off the last layer of a pre-trained neural network and uses the output from all the previous layers as features for the logistic regression algorithm</strong>. Since logistic regression is a simple and fast algorithm, this transfer learning training can converge quickly using far fewer images than are typically required to train a deep learning model from ground-up.</p>\n<p>Firstly, we need to create training &amp; test DataFrames for transfer learning.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5</a></font></center><br/>\n\u00a0</p>\n<p>And now let\u2019s train the model</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24</a></font></center><br/>\n\u00a0</p>\n<p>Let\u2019s see how well the model does:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87</a></font></center><br/>\n\u00a0</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>Test set accuracy = 0.9753086419753086</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>Not so bad for an example and with no tunning at all!</p>\n<p>We can take look at where we are making mistakes:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97</a></font></center><br/>\n\u00a0</p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2018/05/deep-learning-apache-spark-part-2.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/jobs/18/05-23-analysis-group-data-scientist.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/05/scientific-debt.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/index.html\">May</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/05/tutorials.html\">Tutorials, Overviews</a> \u00bb Deep Learning With Apache Spark:\u200aPart 2 (\u00a0<a href=\"/2018/n22.html\">18:n22</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556331687\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.791 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 22:21:27 -->\n<!-- Compression = gzip -->", "content_tokenized": ["favio", "vazquez", "founder", "ciencia", "dato", "comment", "sister", "heizelvazquez", "everyon", "and", "welcom", "back", "learn", "this", "articl", "continu", "the", "discuss", "deep", "learn", "with", "apach", "spark", "can", "see", "the", "first", "part", "here", "this", "part", "will", "focus", "entir", "the", "pipelin", "librari", "and", "how", "use", "from", "scratch", "apach", "spark", "timelin", "the", "continu", "improv", "apach", "spark", "lead", "this", "discuss", "how", "deep", "learn", "with", "creat", "detail", "timelin", "the", "develop", "apach", "spark", "until", "now", "see", "how", "got", "here", "soon", "creat", "articl", "with", "descript", "for", "this", "timelin", "but", "think", "there", "someth", "miss", "pleas", "let", "know", "deep", "learn", "pipelin", "databrick", "deep", "learn", "pipelin", "open", "sourc", "librari", "creat", "databrick", "that", "provid", "highlevel", "api", "for", "scalabl", "deep", "learn", "python", "with", "apach", "spark", "databrickssparkdeeplearn", "sparkdeeplearn", "deep", "learn", "pipelin", "for", "apach", "spark", "githubcom", "awesom", "effort", "and", "won", "long", "until", "merg", "into", "the", "offici", "worth", "take", "look", "some", "the", "advantag", "this", "librari", "compar", "the", "one", "that", "join", "spark", "with", "are", "the", "spirit", "spark", "and", "spark", "mllib", "provid", "easytous", "api", "that", "enabl", "deep", "learn", "veri", "few", "line", "code", "focus", "eas", "use", "and", "integr", "without", "sacrif", "performac", "build", "the", "creator", "apach", "spark", "which", "are", "also", "the", "main", "contributor", "more", "like", "for", "merg", "offici", "than", "other", "written", "python", "will", "integr", "with", "all", "famous", "librari", "and", "right", "now", "use", "the", "power", "tensorflow", "and", "kera", "the", "two", "main", "librari", "the", "moment", "deep", "learn", "pipelin", "build", "apach", "spark", "pipelin", "for", "train", "and", "with", "spark", "datafram", "and", "for", "deploy", "model", "includ", "highlevel", "api", "for", "common", "aspect", "deep", "learn", "they", "can", "done", "effici", "few", "line", "code", "imag", "load", "appli", "pretrain", "model", "transform", "spark", "pipelin", "transfer", "learn", "appli", "deep", "learn", "model", "scale", "distribut", "hyperparamet", "tune", "next", "part", "deploy", "model", "datafram", "and", "will", "describ", "each", "these", "featur", "detail", "with", "exampl", "these", "exampl", "come", "from", "the", "offici", "notebook", "databrick", "apach", "spark", "deep", "cognit", "run", "and", "test", "the", "code", "this", "articl", "will", "need", "creat", "account", "deep", "cognit", "veri", "easi", "and", "then", "can", "access", "all", "their", "featur", "when", "log", "this", "what", "should", "see", "now", "just", "click", "the", "left", "part", "the", "notebook", "button", "and", "will", "the", "jupyt", "notebook", "with", "all", "the", "instal", "packag", "note", "here", "the", "spark", "notebook", "upcom", "featur", "which", "will", "releas", "public", "sometim", "next", "month", "and", "tell", "that", "still", "privat", "beta", "just", "for", "this", "post", "can", "download", "the", "full", "notebook", "here", "see", "all", "the", "code", "faviovazquezdeeplearningpyspark", "imag", "load", "the", "first", "step", "appli", "deep", "learn", "imag", "the", "abil", "load", "the", "imag", "deep", "learn", "pipelin", "includ", "util", "function", "that", "can", "load", "million", "imag", "into", "datafram", "and", "decod", "them", "automat", "distribut", "fashion", "allow", "manipul", "scale", "the", "new", "version", "spark", "num", "has", "this", "abil", "too", "but", "will", "use", "the", "sparkdl", "librari", "will", "use", "the", "archiv", "creativecommon", "licens", "flower", "photo", "curat", "tensorflow", "test", "this", "out", "get", "the", "set", "flower", "photo", "run", "these", "command", "from", "the", "notebook", "will", "also", "creat", "sampl", "folder", "faviovazqueznumenumffnumbfnumffnumenumcnuma", "let", "copi", "some", "photo", "from", "the", "tulip", "and", "daisi", "folder", "creat", "small", "sampl", "the", "photo", "faviovazqueznumcenumfnumcnumanumeenumenumenumanumdnum", "take", "look", "these", "imag", "the", "notebook", "can", "run", "this", "faviovazquezefaanumfnumbnumcnumdnumanumcbnum", "should", "see", "this", "now", "let", "use", "spark", "load", "this", "imag", "datafram", "the", "method", "sparkreadimag", "let", "read", "imag", "common", "format", "jpg", "png", "etc", "from", "storag", "into", "datafram", "each", "imag", "store", "row", "the", "imageschema", "format", "the", "recurs", "option", "allow", "read", "imag", "from", "subfold", "for", "exampl", "for", "posit", "and", "negat", "label", "sampl", "the", "sampleratio", "paramet", "allow", "experi", "with", "smaller", "sampl", "imag", "befor", "train", "model", "with", "full", "data", "faviovazqueznumbnumefnumfnumcnumbnumeeenum", "take", "look", "this", "datafram", "see", "that", "spark", "creat", "one", "column", "call", "imag", "imag", "file", "usersfavi", "file", "usersfavi", "file", "usersfavi", "the", "imag", "column", "contain", "string", "column", "contain", "imag", "struct", "with", "schema", "imageschema", "transfer", "learn", "databrick", "deep", "learn", "pipelin", "provid", "util", "perform", "transfer", "learn", "imag", "which", "one", "the", "fastest", "code", "and", "runtim", "wise", "way", "start", "use", "deep", "learn", "use", "deep", "learn", "pipelin", "can", "done", "just", "sever", "line", "code", "deep", "learn", "pipelin", "enabl", "fast", "transfer", "learn", "with", "the", "concept", "featur", "the", "follow", "exampl", "combin", "the", "inceptionvnum", "model", "and", "logist", "regress", "spark", "adapt", "inceptionvnum", "our", "specif", "domain", "the", "deepimagefeatur", "automat", "peel", "off", "the", "last", "layer", "pretrain", "neural", "network", "and", "use", "the", "output", "from", "all", "the", "previous", "layer", "featur", "for", "the", "logist", "regress", "algorithm", "sinc", "logist", "regress", "simpl", "and", "fast", "algorithm", "this", "transfer", "learn", "train", "can", "converg", "quick", "use", "far", "fewer", "imag", "than", "are", "typic", "requir", "train", "deep", "learn", "model", "from", "groundup", "first", "need", "creat", "train", "test", "datafram", "for", "transfer", "learn", "faviovazqueznumbnumfnumecnumcbfcnumfanumbcnumanumbnum", "and", "now", "let", "train", "the", "model", "faviovazqueznumenumbnumebnumbnumfnumfaedcenumcnum", "let", "see", "how", "well", "the", "model", "doe", "faviovazqueznumfanumdenumdnumbnumdnumanumanumbnum", "test", "set", "accuraci", "num", "not", "bad", "for", "exampl", "and", "with", "tun", "all", "can", "take", "look", "where", "are", "make", "mistak", "faviovazquezdcdnumfenumfnumfnumdnumbanumcbnum"], "timestamp_scraper": 1556363882.366398, "title": "Deep Learning With Apache Spark:\u200aPart 2", "read_time": 294.59999999999997, "content_html": "<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/favio-vazquez\" rel=\"author\" title=\"Posts by Favio Vazquez\">Favio Vazquez</a>, Founder at Ciencia y Datos.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"/2018/05/deep-learning-apache-spark-part-2.html?page=2#comments\">comments</a></div>\n<p><center><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/2000/1*DLDddze-fQTKzG0CZt3i1A.jpeg\" width=\"99%\"><br>\n<font size=\"-1\">By my sister <a href=\"https://www.instagram.com/heizelvazquez/\" rel=\"noopener\" target=\"_blank\">https://www.instagram.com/heizelvazquez/</a></font></br></img></center></p>\n<p>Hi everyone and welcome back to learning\u00a0:). In this article I\u2019ll continue the discussion on Deep Learning with Apache Spark. You can see the first part\u00a0<a href=\"https://towardsdatascience.com/deep-learning-with-apache-spark-part-1-6d397c16abd\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>In this part I will focus entirely on the DL pipelines library and how to use it from scratch.</p>\n<p>\u00a0</p>\n<h3>Apache Spark\u00a0Timeline</h3>\n<p>\u00a0<br>\nThe continuous improvements on Apache Spark lead us to this discussion on how to do Deep Learning with it. I created a detailed timeline of the development of Apache Spark until now to see how we got here.</br></p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/2000/1*dtLoj7pHnbT_rVmv5Y6yFA.png\" width=\"99%\"/></p>\n<p>Soon I\u2019ll create an article with descriptions for this timeline but if you think there\u2019s something missing please let me know\u00a0:)</p>\n<p>\u00a0</p>\n<h3>Deep Learning Pipelines</h3>\n<p>\u00a0</p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*6gBbuSw5qH34uI7GF4p97A.png\" width=\"80%\"/><br>\n<font size=\"-1\">Databricks</font></br></center></p>\n<p>Deep Learning Pipelines is an open source library created by Databricks that provides high-level APIs for scalable deep learning in Python with Apache Spark.</p>\n<p><a href=\"https://github.com/databricks/spark-deep-learning\" rel=\"noopener noreferrer\" target=\"_blank\"><strong>databricks/spark-deep-learning</strong><br>\n<em>spark-deep-learning\u200a\u2014\u200aDeep Learning Pipelines for Apache Spark</em>github.com</br></a></p>\n<p>It is an awesome effort and it won\u2019t be long until is merged into the official API, so is worth taking a look of it.</p>\n<p>Some of the advantages of this library compared to the ones that joins Spark with DL are:</p>\n<ul>\n<li>In the spirit of Spark and\u00a0<a href=\"https://spark.apache.org/mllib/\" rel=\"noopener noreferrer\" target=\"_blank\">Spark MLlib</a>, it provides easy-to-use APIs that enable deep learning in very few lines of code.\n<li>It focuses on ease of use and integration, without sacrificing performace.\n<li>It\u2019s build by the creators of Apache Spark (which are also the main contributors) so it\u2019s more likely for it to be merged as an official API than others.\n<li>It is written in Python, so it will integrate with all of its famous libraries, and right now it uses the power of TensorFlow and Keras, the two main libraries of the moment to do DL.\n</li></li></li></li></ul>\n<p>Deep Learning Pipelines builds on Apache Spark\u2019s\u00a0<a href=\"https://spark.apache.org/docs/latest/ml-pipeline.html\" rel=\"noopener noreferrer\" target=\"_blank\">ML Pipelines</a>\u00a0for training, and with Spark DataFrames and SQL for deploying models. It includes high-level APIs for common aspects of deep learning so they can be done efficiently in a few lines of code:</p>\n<ul>\n<li>Image loading\n<li>Applying pre-trained models as transformers in a Spark ML pipeline\n<li>Transfer learning\n<li>Applying Deep Learning models at scale\n<li>Distributed hyperparameter tuning\u00a0<strong>(next part)</strong>\n<li>Deploying models in DataFrames and SQL\n</li></li></li></li></li></li></ul>\n<p>I will describe each of these features in detail with examples. These examples comes from the official\u00a0<a href=\"https://databricks-prod-cloudfront.cloud.databricks.com/public/4027ec902e239c93eaaa8714f173bcfc/5669198905533692/3647723071348946/3983381308530741/latest.html\" rel=\"noopener noreferrer\" target=\"_blank\">notebook</a>\u00a0by Databricks.</p>\n<p>\u00a0</p>\n<h3>Apache Spark on Deep Cognition</h3>\n<p>\u00a0<br/>\nTo run and test the codes in this article you will need to create an account in\u00a0<a href=\"http://deepcognition.ai/register/\" rel=\"noopener noreferrer\" target=\"_blank\">Deep Cognition</a>.</p>\n<p>Is very easy and then you can access all of their features. When you log in this is what you should be seeing:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/2000/1*8ijqj85Tjscv9xpXjHfEFA.png\" width=\"99%\"/></p>\n<p>Now just click on the left part, the Notebook button:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*mnMlcYuO2U-KzRvYSuj-Cw.png\" width=\"250\"/></p>\n<p>And you will be on the Jupyter Notebook with all the installed packages\u00a0:). Oh! A note here: The Spark Notebook (DLS SPARK) is an upcoming feature which will be released to public sometime next month and tell that it is still in private beta (just for this post).</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*cbQSGKgPDBNoBfGdDJqESg.png\" width=\"75%\"/></p>\n<p>You can download the full Notebook here to see all the code:</p>\n<p><a href=\"https://github.com/FavioVazquez/deep-learning-pyspark\" rel=\"noopener noreferrer\" target=\"_blank\">https://github.com/FavioVazquez/deep-learning-pyspark</a></p>\n<p><b>Image Loading</b></p>\n<p>The first step to applying deep learning on images is the ability to load the images. Deep Learning Pipelines includes utility functions that can load millions of images into a DataFrame and decode them automatically in a distributed fashion, allowing manipulation at scale. The new version of spark (2.3.0) has this ability too but we will be using the sparkdl library.</p>\n<p>We will be using the archive of creative-commons licensed flower photos curated by TensorFlow to test this out. To get the set of flower photos, run these commands from the notebook (we will also create a sample folder):</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/33350294e31213ff761bf2ff51e25c4a</a></font></center><br/>\n\u00a0</p>\n<p>Let\u2019s copy some photos from the tulips and daisy folders to create a small sample of the photos.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/8ce726807f6074c05a779ee4e5e3a4d0</a></font></center><br/>\n\u00a0</p>\n<p>To take a look at these images on the notebook you can run this:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52.js\"></script><br/>\n<center><font><a href=\"https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/efaa901f85b51c77d520595136a2cb52</a></font></center><br/>\n\u00a0</p>\n<p>You should be seeing this</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*qVp67i3d_qUIWwzE5PNyCQ.png\" width=\"50%\"/></p>\n<p>Now let\u2019s use Spark to load this images as a DataFrame. The method\u00a0<code>spark.readImage</code>\u00a0lets you read images in common formats (jpg, png, etc.) from HDFS storage into DataFrame. Each image is stored as a row in the imageSchema format. The recursive option allows you to read images from subfolders, for example for positive and negative labeled samples. The sampleRatio parameter allows you to experiment with a smaller sample of images before training a model with full data.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/85266329b7ef31411600f33c3b9eee1e</a></font></center><br/>\n\u00a0</p>\n<p>If we take a look at this dataframe we see that it spark created one column, called \u201cimage\u201d.</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>image_df.show()\r\n\r\n+--------------------+\r\n|               image|\r\n+--------------------+\r\n|[file:/Users/favi...|\r\n|[file:/Users/favi...|\r\n|[file:/Users/favi...|\r\n+--------------------+</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>The image column contains a string column contains an image struct with schema == ImageSchema.</p>\n<p><b>Transfer learning</b></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*6eDLqIz2sOtdI-6X87Ervg.png\" width=\"99%\"/><br/>\n<font size=\"-1\">Databricks</font></center></p>\n<p>Deep Learning Pipelines provides utilities to perform\u00a0<a href=\"https://en.wikipedia.org/wiki/Transfer_learning\" rel=\"noopener noreferrer\" target=\"_blank\">transfer learning</a>\u00a0on images, which is one of the fastest (code and run-time -wise) ways to start using deep learning. Using Deep Learning Pipelines, it can be done in just several lines of code.</p>\n<p>Deep Learning Pipelines enables fast transfer learning with the concept of a\u00a0<em>Featurizer</em>. The following example combines the InceptionV3 model and logistic regression in Spark to adapt InceptionV3 to our specific domain.\u00a0<strong>The DeepImageFeaturizer automatically peels off the last layer of a pre-trained neural network and uses the output from all the previous layers as features for the logistic regression algorithm</strong>. Since logistic regression is a simple and fast algorithm, this transfer learning training can converge quickly using far fewer images than are typically required to train a deep learning model from ground-up.</p>\n<p>Firstly, we need to create training &amp; test DataFrames for transfer learning.</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/84b0201f2ec0cbfc64fa3736bc7a76b5</a></font></center><br/>\n\u00a0</p>\n<p>And now let\u2019s train the model</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/96e13301b6286eb7b52f34faedce4c24</a></font></center><br/>\n\u00a0</p>\n<p>Let\u2019s see how well the model does:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/27fa7de28011d41b192d723a185a9b87</a></font></center><br/>\n\u00a0</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>Test set accuracy = 0.9753086419753086</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>Not so bad for an example and with no tunning at all!</p>\n<p>We can take look at where we are making mistakes:</p>\n<p><script src=\"https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97.js\"></script><br/>\n<center><font size=\"-1\"><a href=\"https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97\" rel=\"noopener noreferrer\" target=\"_blank\">https://gist.github.com/FavioVazquez/dcd72fe4f0f4204736d46ba57112cb97</a></font></center><br/>\n\u00a0</p>\n</div> ", "website": "kdnuggets"}