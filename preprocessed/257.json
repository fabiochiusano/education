{"content": "By Devendra Desale , KDnuggets. comments Machine learning engineers are part of the engineering team who\u00a0build the product and the algorithms, making sure that it works reliably, quickly, and at-scale. They work closely with data scientist to understand the theoretical and business aspect of it.\u00a0In the context of machine learning, the main summary of the differences is the following: Machine learning engineers build, implement, and maintain production machine learning systems. Data scientists conduct research to generate ideas about machine learning projects, and perform analysis to understand the metrics impact of machine learning systems. Below is a list of frameworks for machine learning engineers: Apache Singa \u00a0is a general distributed deep learning platform for training big deep learning models over large datasets. It is designed with an intuitive programming model based on the layer abstraction. A variety of popular deep learning models are supported, namely feed-forward models including convolutional neural networks (CNN), energy models like restricted Boltzmann machine (RBM), and recurrent neural networks (RNN). Many built-in layers are provided for users. Amazon Machine Learning \u00a0\u00a0is a service that makes it easy for developers of all skill levels to use machine learning technology. Amazon Machine Learning provides visualization tools and wizards that guide you through the process of creating machine learning (ML) models without having to learn complex ML algorithms and technology.\u00a0\u00a0It connects to data stored in Amazon S3, Redshift, or RDS, and can run binary classification, multiclass categorization, or regression on said data to create a model. Azure ML Studio \u00a0allows Microsoft Azure users to create and train models, then turn them into APIs that can be consumed by other services. Users get up to 10GB of storage per account for model data, although you can also connect your own Azure storage to the service for larger models. A wide range of algorithms are available, courtesy of both Microsoft and third parties. You don\u2019t even need an account to try out the service; you can log in anonymously and use Azure ML Studio for up to eight hours. Caffe \u00a0is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center ( BVLC ) and by community contributors. Yangqing Jia \u00a0created the project during his PhD at UC Berkeley. Caffe is released under the\u00a0 BSD 2-Clause license . \u00a0Models and optimization are defined by configuration without hard-coding & user can switch between CPU and GPU.\u00a0Speed\u00a0makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day\u00a0with a single NVIDIA K40 GPU. H2O \u00a0makes it possible for anyone to easily apply math and predictive analytics to solve today\u2019s most challenging business problems. It intelligently combines unique features not currently found in other machine learning platforms including:\u00a0Best of Breed Open Source Technology,\u00a0Easy-to-use WebUI and Familiar Interfaces,\u00a0Data Agnostic Support for all Common Database and File Types.\u00a0With H2O, you can work with your existing languages and tools. Further, you can extend the platform seamlessly into your Hadoop environments. Massive Online Analysis (MOA) is the most popular open source framework for data stream mining, with a very active growing community. It includes a collection of machine learning algorithms ( classification, regression ,\u00a0 clustering ,\u00a0 outlier detection , concept drift detection and\u00a0 recommender systems ) and tools for evaluation. Related to the WEKA project, MOA is also written in Java, while scaling to more demanding problems. MLlib (Spark) \u00a0is Apache Spark\u2019s machine learning library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs. mlpack ,\u00a0a C++-based machine learning library originally rolled out in 2011 and designed for \u201cscalability, speed, and ease-of-use,\u201d according to the library\u2019s creators. Implementing mlpack can be done through a cache of command-line executables for quick-and-dirty, \u201cblack box\u201d operations, or with a C++ API for more sophisticated work. Mlpack\u00a0provides these algorithms as simple command-line programs and C++ classes which can then be integrated into larger-scale machine learning solutions. Pattern \u00a0is a web mining module for the Python programming language. It has tools for data mining (Google, Twitter and Wikipedia API, a web crawler, a HTML DOM parser), natural language processing (part-of-speech taggers, n-gram search, sentiment analysis, WordNet), machine learning (vector space model, clustering, SVM), network analysis and visualization. Scikit-Learn \u00a0leverages Python\u2019s breadth by building on top of several existing Python packages \u2014 NumPy, SciPy, and matplotlib \u2014 for math and science work. The resulting libraries can be used either for interactive \u201cworkbench\u201d applications or be embedded into other software and reused. The kit is available under a BSD license, so it\u2019s fully open and reusable. Scikit-learn\u00a0includes tools for many of the standard\u00a0 machine-learning\u00a0 tasks \u00a0(such as clustering, classification, regression, etc.). And since scikit-learn is developed by a\u00a0 large community of developers and machine-learning experts , promising new techniques tend to be included in fairly short order. Shogun \u00a0is among the oldest, most venerable of machine learning libraries, Shogun was created in 1999 and written in C++, but isn\u2019t limited to working in C++. Thanks to the\u00a0 SWIG library , Shogun can be used transparently in such languages and environments: as Java, Python, C#, Ruby, R, Lua, Octave, and Matlab.\u00a0Shogun is designed for unified large-scale learning for a broad range of feature types and learning settings, like classification, regression, or explorative data analysis. TensorFlow \u00a0is an open source software library for numerical computation using data flow graphs.\u00a0TensorFlow implements what are called data flow graphs, where batches of data (\u201ctensors\u201d) can be processed by a series of algorithms described by a graph. The movements of the data through the system are called \u201cflows\u201d \u2014 hence, the name. Graphs can be assembled with C++ or Python and can be processed on CPUs or GPUs. Theano \u00a0is a Python library that lets you to define, optimize, and evaluate mathematical expressions, especially ones with multi-dimensional arrays (numpy.ndarray). Using Theano it is possible to attain speeds rivaling hand-crafted C implementations for problems involving large amounts of data.\u00a0It was written at the\u00a0 LISA \u00a0lab to support rapid development of efficient machine learning algorithms. Theano is named after the\u00a0 Greek mathematician , who may have been Pythagoras\u2019 wife. Theano is released under a BSD license. Torch \u00a0is a scientific computing framework with wide support for machine learning algorithms that puts GPUs first. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation.\u00a0The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a\u00a0 large ecosystem of community-driven packages \u00a0in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community. Veles \u00a0is a distributed platform for deep-learning applications, and it\u2019s written in C++, although it uses Python to perform automation and coordination between nodes. Datasets can be analyzed and automatically normalized before being fed to the cluster, and a REST API allows the trained model to be used in production immediately. It\u00a0focuses on performance and flexibility. It has little hard-coded entities and enables training of all the widely recognized topologies, such as fully connected nets, convolutional nets, recurent nets etc. Tell us more about your favorate machine learning framework in comments. Bio:\u00a0 Devendra Desale ( @DevendraDesale ) \u00a0is a data science graduate student currently working on text mining and big data technologies. He is also interested in enterprise architectures and data-driven business.\u00a0When away from the computer, he also enjoys attending meetups and venturing into the unknown. Related : Top 10 Data Science Resources on Github Top 10 Data Visualization Projects on Github Data Science Tools \u2013 Are Proprietary Vendors Still Relevant?", "title_html": "<h1 id=\"title\">Top 15 Frameworks for Machine Learning Experts</h1> ", "url": "https://www.kdnuggets.com/2016/04/top-15-frameworks-machine-learning-experts.html", "tfidf": {"tfidf": {"after": 1.02070207021, "yangq": 1587.6, "googl": 11.388809182200001, "oldest": 3.96107784431, "tensorflow": 3175.2, "relat": 2.47501753838, "vector": 25.898858075, "thank": 12.01362088536, "signal": 5.12459651388, "immedi": 2.02862254025, "breed": 15.5647058824, "space": 2.39818731118, "web": 10.34267100978, "grow": 2.27287043665, "workbench": 1134.0, "berkeley": 23.3470588236, "azur": 453.6, "audio": 9.05647461495, "recogn": 2.54954231572, "etc": 8.413354531, "dataset": 387.219512196, "wikipedia": 40.5, "class": 2.11651779763, "log": 13.6744186047, "python": 394.0851063828, "well": 1.0655748708, "product": 4.86794766966, "done": 2.3302509907499998, "assembl": 3.0011342155, "meetup": 1587.6, "octav": 66.42677824270001, "scale": 3.7469907953699995, "automat": 6.787516032490001, "tri": 1.8544562551099997, "run": 1.55692850838, "creat": 6.2464589235000005, "enjoy": 3.3269069572500003, "breadth": 49.9245283019, "express": 3.8241599421800005, "extend": 1.9604840701400004, "interact": 4.4185917061, "fair": 3.20533010297, "maintain": 1.77306231852, "especi": 1.66712170534, "expert": 5.36713995943, "distribut": 5.479206212259999, "found": 1.11387076405, "interest": 1.60331246213, "deep": 14.511882998159999, "shogun": 401.924050632, "datadriven": 1587.6, "open": 4.98226894712, "atscal": 1587.6, "wide": 4.6795048143, "vendor": 27.2783505155, "builtin": 1587.6, "new": 1.0178880554, "below": 2.25607503197, "perform": 4.59419311275, "but": 1.01632417899, "maximum": 4.80072573329, "need": 1.4372623574099999, "classif": 40.33536585365, "parti": 2.06369426752, "studio": 9.854748603360001, "caff": 3969.0, "applic": 6.85344269372, "integr": 2.8254137746900003, "lab": 14.4327272727, "level": 1.6544393497299998, "has": 2.0872995004, "generat": 2.05275407292, "crawler": 387.219512195, "collabor": 4.45454545455, "reduct": 6.320063694269999, "use": 9.266748816419998, "experi": 1.87062566278, "cpus": 174.46153846200002, "resourc": 2.9487369985100003, "script": 8.299006795610001, "out": 2.12033388982, "model": 27.177771925200002, "sure": 7.453521126760001, "concept": 2.65707112971, "under": 4.3126655348, "numer": 1.83325635104, "optim": 34.6133720931, "wizard": 25.7309562399, "store": 3.44680851064, "cbase": 1587.6, "not": 1.01567398119, "involv": 1.4498630137000001, "storag": 17.247148288979997, "short": 1.41295834817, "are": 8.23924748624, "such": 3.18454132122, "rival": 4.4235162998, "unifi": 7.60709151893, "quick": 2.205, "easi": 21.1750583528, "metric": 22.235294117600002, "said": 1.54751925139, "then": 2.17315721032, "they": 1.03017325287, "design": 4.37475888675, "stream": 6.5118949959000005, "scientif": 8.30551922574, "recurr": 35.5964125561, "primit": 13.7573656846, "allow": 2.5432118542200004, "higherlevel": 1587.6, "scienc": 9.27878433664, "kdnugget": 1587.6, "spark": 16.720379146920003, "larger": 2.2407904022599996, "github": 3175.2, "away": 1.85142857143, "node": 44.3463687151, "featur": 3.05425163524, "tensor": 152.653846154, "practic": 1.70434782609, "simpl": 6.7962328767199995, "day": 1.18371607516, "provid": 3.64658142561, "twitter": 33.213389121300004, "array": 10.1444089457, "coordin": 5.65586034913, "either": 1.5830092731099998, "accord": 1.27589809531, "develop": 5.977859778600001, "pattern": 3.79173632673, "hardcod": 3175.2, "explor": 3.39593582888, "network": 10.37477536352, "math": 44.1613351878, "without": 2.59094247246, "fast": 4.8729281768, "box": 4.12685209254, "phd": 22.3605633803, "collect": 1.64109985528, "both": 1.05215720061, "commandlin": 3175.2, "result": 1.14611608432, "turn": 1.3838912133899999, "varieti": 2.2972073506, "filter": 16.8893617021, "platform": 24.932862190799998, "set": 1.18707940781, "more": 3.0515120451, "licens": 17.395178962739998, "fed": 12.5402843602, "modul": 16.9434364995, "ecosystem": 26.111842105300003, "account": 3.8892699657, "limit": 1.5186531471200002, "jia": 230.086956522, "matlab": 417.78947368400003, "num": 4.00126016004, "technolog": 10.413906198760001, "idea": 2.0930784443, "environ": 6.87123999134, "for": 26.00819104026, "sentiment": 9.9225, "predict": 5.18484650555, "proprietari": 41.2363636364, "releas": 3.6754253964599997, "fulli": 5.58031634446, "roll": 4.27578777269, "with": 12.014378507879997, "written": 7.8293675255999995, "drift": 18.144000000000002, "theano": 6350.4, "handcraft": 233.470588235, "solut": 4.7278141751, "current": 3.0651607298, "team": 2.2748244734200003, "popular": 3.01538461538, "video": 3.29719626168, "summari": 7.80147420147, "numpi": 1587.6, "communitydriven": 1587.6, "veri": 1.25880114177, "eight": 2.15706521739, "center": 1.7423178226499998, "combin": 1.69760479042, "net": 20.88947368422, "promis": 3.5030891438699996, "focus": 2.01012914662, "familiar": 6.86381322957, "tend": 3.3735656608599998, "redshift": 441.0, "littl": 1.5499365420299998, "topolog": 70.875, "scipi": 1587.6, "train": 7.7462795803999995, "torch": 90.5475285171, "search": 3.2539454806299997, "goal": 6.56304257958, "framework": 41.00206611569999, "extrem": 2.36602086438, "his": 1.0943682360200002, "big": 5.480151881259999, "comment": 6.11909809212, "switch": 4.97368421053, "demand": 2.34159292035, "analyz": 9.68639414277, "scientist": 9.38852749852, "machin": 96.58403041823999, "pythagora": 158.76, "relev": 6.938811188810001, "mlpack": 4762.799999999999, "ngram": 1587.6, "conduct": 2.2637958077900002, "rapid": 2.62586834271, "servic": 6.0520346898, "close": 1.2848818387799998, "what": 1.25343439128, "let": 3.48616600791, "largescal": 1587.6, "flexibl": 19.37278828554, "mllib": 1587.6, "main": 1.25303867403, "type": 4.056208482380001, "larg": 4.7429979834, "speed": 19.351535836200004, "own": 1.17844418052, "base": 1.14628158845, "natur": 1.5392670157100001, "even": 1.16461267606, "tagger": 1587.6, "hour": 2.25960717336, "who": 2.12558575446, "unknown": 3.77281368821, "flow": 13.23, "greek": 3.90649606299, "wordnet": 1221.23076923, "machinelearn": 3175.2, "lowerlevel": 1587.6, "microsoft": 49.690140845, "black": 1.94917127072, "through": 3.21224792607, "comput": 15.711034141520003, "onlin": 2.6051854282900004, "layer": 16.28307692308, "evalu": 13.901926444839999, "henc": 5.390831918509999, "parallel": 4.57917507932, "about": 2.12972030318, "problem": 5.30024482527, "deploy": 7.41869158879, "communiti": 7.84484249536, "neural": 118.9213483146, "mind": 3.5918552036199998, "context": 4.25972632144, "favor": 3.1332149200700004, "enabl": 3.5421686747, "understand": 5.93717277486, "deeplearn": 1587.6, "standard": 1.8915763135900003, "dure": 1.0503473370799998, "them": 1.09876115994, "defin": 5.45660766454, "multidimension": 160.363636364, "recommend": 3.9142011834300003, "where": 1.06715063521, "devendradesal": 1587.6, "complex": 2.34021226415, "categor": 15.0198675497, "massiv": 4.22571200426, "among": 2.51341724056, "intuit": 27.7068062827, "lua": 774.43902439, "numclaus": 1587.6, "guid": 2.49113447356, "seri": 1.46511627907, "energi": 3.66566612792, "multiclass": 1587.6, "execut": 2.2363713199, "order": 1.24625166811, "numpyndarray": 1587.6, "autom": 19.8202247191, "support": 5.074230922880001, "attend": 2.3055474876599997, "uniqu": 3.01595744681, "over": 2.05050048434, "theoret": 7.83613030602, "build": 8.170869789000001, "analysi": 17.3926380368, "scikitlearn": 4762.799999999999, "mine": 19.503685503679996, "broad": 4.27693965517, "consum": 4.93043478261, "singl": 1.60948905109, "graph": 150.8408551068, "exist": 2.9294215333599998, "connect": 5.653175074170001, "interfac": 20.9169960474, "possibl": 2.8347468976, "industri": 2.02319357716, "vele": 1134.0, "best": 1.5828514456600002, "origin": 1.13724928367, "softwar": 20.5248868778, "visual": 15.68258149491, "follow": 1.04640126549, "further": 1.3618116315, "configur": 11.504347826099998, "name": 3.3063519611100003, "feedforward": 1443.27272727, "per": 3.9195161091199995, "luajit": 1587.6, "scalabl": 373.552941176, "regress": 256.06451612899997, "leverag": 35.7567567568, "also": 4.05906040268, "third": 1.4195278969999998, "mani": 2.08853515754, "seamless": 70.875, "user": 30.8421563866, "modular": 49.9245283019, "task": 3.88641370869, "batch": 35.6764044944, "research": 3.8840366972400004, "imag": 5.40275650842, "mathematician": 16.1014198783, "the": 40.0, "may": 1.05201775893, "attain": 7.6363636363600005, "boltzmann": 233.470588235, "sever": 1.07241286139, "singa": 1443.27272727, "challeng": 2.55816951337, "util": 4.65981802172, "which": 1.005191845, "into": 5.0751230739499995, "system": 5.54959363804, "parser": 512.129032258, "although": 2.2993699761, "easeofus": 1587.6, "work": 7.806406293909999, "webui": 1587.6, "entiti": 6.89361702128, "contributor": 14.4721969006, "databas": 8.24727272727, "intellig": 4.19334389857, "skill": 3.6989748369099997, "activ": 1.46403541129, "abstract": 9.966101694919999, "other": 4.03969465648, "appli": 2.2972073506, "techniqu": 3.7293868921800004, "one": 1.00627495722, "restrict": 3.1062414400300002, "impact": 2.97526236882, "easytous": 1587.6, "algorithm": 279.507042254, "mathemat": 7.391061452510001, "outlier": 269.084745763, "cach": 49.0, "sourc": 5.09281437126, "get": 1.78562591385, "still": 1.1866357724799999, "like": 2.2983713355, "implement": 17.8824059473, "text": 3.12827586207, "file": 3.7710213776699995, "detect": 10.82577565632, "process": 13.56198611856, "put": 1.65806788512, "analyt": 17.256521739100002, "that": 6.0239043825, "languag": 11.4744145707, "includ": 6.114384748679999, "reliabl": 6.681818181819999, "anyon": 5.37440758294, "top": 7.355107713680001, "rang": 3.5696458684599994, "api": 168.89361702120001, "part": 1.04330682789, "graduat": 4.60173913043, "project": 7.013916501000001, "differ": 1.23654490225, "embed": 16.835630965, "been": 1.0239277652399998, "binari": 32.4, "most": 3.06289389069, "between": 2.06907337416, "creator": 10.2823834197, "java": 63.250996016, "vision": 9.76083615124, "all": 3.03440366973, "apach": 134.54237288139998, "ventur": 7.73684210526, "today": 1.74961428257, "program": 6.06417112299, "solv": 7.26923076923, "wife": 2.8646697943, "normal": 2.61075481006, "architectur": 5.12790697674, "call": 2.1353059852, "cluster": 62.503937008, "recur": 14.8791002812, "and": 59.003716535669994, "partofspeech": 1587.6, "list": 1.36321483771, "consist": 1.4901445466499998, "these": 1.07415426252, "rubi": 41.2363636364, "amount": 2.27027027027, "general": 1.1218202374200001, "made": 1.07038834951, "reus": 29.7861163227, "reusabl": 158.76, "befor": 1.10036041031, "librari": 21.4613044948, "hadoop": 1587.6, "quickanddirti": 1587.6, "can": 18.82018226272, "avail": 3.4576935642, "describ": 1.47027227264, "make": 6.457596095160001, "kit": 17.542541436500002, "amazon": 99.4321503132, "student": 2.47174217655, "courtesi": 38.255421686700004, "packag": 15.656804733720001, "desal": 3175.2, "devendra": 1867.764705882, "common": 2.8051948051999998, "enterpris": 6.414545454550001, "data": 64.15227562746, "sophist": 10.0037807183, "oper": 1.55479384977, "transpar": 15.876, "perfect": 4.48601299802, "sinc": 1.08368600683, "convolut": 202.242038216, "bio": 42.336000000000006, "come": 1.32831325301, "matplotlib": 1587.6, "aspect": 3.0893169877399997, "tell": 3.36142282448, "dimension": 54.1843003413, "gpus": 2116.8, "from": 1.00056721497, "first": 1.00761614623, "engin": 9.88542963884, "busi": 6.16623511134, "when": 1.02076769755, "have": 3.0446845234199995, "tool": 29.983002832860002, "while": 2.0883977900599997, "movement": 2.10976744186, "anonym": 12.6501992032, "easili": 3.6938110749199997, "largerscal": 1587.6, "agnost": 63.504, "vener": 23.042089985500002, "learn": 74.3280175568, "pipelin": 32.1376518219, "effici": 10.18671799808}, "logtfidf": {"after": 0.020490694648099998, "yangq": 7.369978720910001, "googl": 2.43263122258, "oldest": 1.37651617114, "tensorflow": 14.739957441820001, "relat": 0.42620060330799997, "vector": 3.25419887797, "thank": 3.5857877986, "signal": 1.6340517929299998, "immedi": 0.707357011133, "breed": 2.7450059076200004, "space": 0.874713164972, "web": 3.2862619466400003, "grow": 0.821043542212, "workbench": 7.033506484289999, "berkeley": 4.914647670340001, "azur": 18.92368556516, "audio": 2.2034799289800002, "recogn": 0.935913859031, "etc": 2.8733461759400005, "dataset": 10.53168913328, "wikipedia": 3.70130197411, "class": 0.7497721899330001, "log": 2.61552683221, "python": 28.21459720072, "well": 0.0635144383156, "product": 1.452180409608, "done": 0.845975983129, "assembl": 1.09899028905, "meetup": 7.369978720910001, "octav": 4.19610026197, "scale": 1.32095306328, "automat": 1.9150850473199998, "tri": 0.61759152916, "run": 0.442714975539, "creat": 1.1128840925699999, "enjoy": 1.2020430306899998, "breadth": 3.91051243112, "express": 1.296383279282, "extend": 0.673191417311, "interact": 1.4858210267899998, "fair": 1.16481508131, "maintain": 0.572708175102, "especi": 0.511098609709, "expert": 1.68029517063, "distribut": 2.01562611626, "found": 0.107841124048, "interest": 0.47207177798199995, "deep": 5.1546938792, "shogun": 18.439875123520004, "datadriven": 7.369978720910001, "open": 0.878364152116, "atscal": 7.369978720910001, "wide": 1.3337400202619998, "vendor": 3.30609336617, "builtin": 7.369978720910001, "new": 0.0177299468511, "below": 0.813626591936, "perform": 1.27854255174, "but": 0.0161923720719, "maximum": 1.5687671009200002, "need": 0.362740163442, "classif": 10.43895368145, "parti": 0.724497710444, "studio": 3.1896125003400004, "caff": 27.59990036664, "applic": 2.46320785698, "integr": 1.03865482279, "lab": 2.66949835512, "level": 0.503462189943, "has": 0.0854478897096, "generat": 0.719182341736, "crawler": 5.958991747200001, "collabor": 1.4939250253100003, "reduct": 1.8437292863099999, "use": 0.2628721775844, "experi": 0.626272953933, "cpus": 5.16170430739, "resourc": 1.08137694258, "script": 2.1161358444599996, "out": 0.1168527818386, "model": 9.586850950443, "sure": 2.0086865552, "concept": 0.977224437103, "under": 0.30104722153279995, "numer": 0.606093812346, "optim": 7.336883386229999, "wizard": 3.24769479, "store": 1.2374487335200002, "cbase": 7.369978720910001, "not": 0.0155524130075, "involv": 0.371469078658, "storag": 4.308999265340001, "short": 0.345685625679, "are": 0.2357397886616, "such": 0.179087933418, "rival": 1.48693492276, "unifi": 2.02908090683, "quick": 0.790727508899, "easi": 6.666118540599999, "metric": 3.1016808515599994, "said": 0.436653165815, "then": 0.16606773046179998, "they": 0.0297269947676, "design": 1.131717354066, "stream": 1.8736305038599999, "scientif": 2.84754616042, "recurr": 3.5722448618800002, "primit": 2.62157436683, "allow": 0.48056122237800003, "higherlevel": 7.369978720910001, "scienc": 3.365744715564, "kdnugget": 7.369978720910001, "spark": 4.24696220618, "larger": 0.806828661778, "github": 14.739957441820001, "away": 0.615957541869, "node": 3.7920308275, "featur": 0.846774836284, "tensor": 5.02817291476, "practic": 0.533182530867, "simpl": 2.4464425787799997, "day": 0.16865870631700003, "provid": 0.585533532975, "twitter": 3.50295308141, "array": 2.31692271093, "coordin": 1.73269223754, "either": 0.459327638815, "accord": 0.243650319127, "develop": 0.8931234745650001, "pattern": 1.33282404788, "hardcod": 14.739957441820001, "explor": 1.22257937218, "network": 3.8123322122079997, "math": 6.18940491236, "without": 0.517749035882, "fast": 1.5836950247400001, "box": 1.41751491115, "phd": 3.10729884387, "collect": 0.49536666052, "both": 0.050842533389300004, "commandlin": 14.739957441820001, "result": 0.136378908381, "turn": 0.324899251064, "varieti": 0.8316941898119999, "filter": 2.82668393864, "platform": 7.3195693556800006, "set": 0.171496011289, "more": 0.05107479479999999, "licens": 5.2727424241500005, "fed": 2.5289462112, "modul": 2.82988053166, "ecosystem": 3.26238893194, "account": 1.330148579946, "limit": 0.41782385463, "jia": 5.43845730931, "matlab": 6.0349776541799995, "num": 0.0012599615815880002, "technolog": 3.82739074542, "idea": 0.73863592212, "environ": 2.4683948060599996, "for": 0.008189750280322, "sentiment": 2.29480490568, "predict": 1.6457402376899999, "proprietari": 3.7193204796199995, "releas": 1.217043399088, "fulli": 2.05219657356, "roll": 1.4529683597299998, "with": 0.01436990056068, "written": 2.686349479332, "drift": 2.89833992755, "theano": 29.479914883640003, "handcraft": 5.45305610873, "solut": 1.55346297627, "current": 0.8539056556900001, "team": 0.821902894886, "popular": 0.8211604175499999, "video": 1.19307248967, "summari": 2.0543127160299997, "numpi": 7.369978720910001, "communitydriven": 7.369978720910001, "veri": 0.230159793238, "eight": 0.76874860218, "center": 0.555216308776, "combin": 0.529218310751, "net": 5.82189927585, "promis": 1.25364519176, "focus": 0.6981989720559999, "familiar": 1.92626315167, "tend": 1.21597024462, "redshift": 6.08904487545, "littl": 0.438213989466, "topolog": 4.26091776205, "scipi": 7.369978720910001, "train": 2.643673251356, "torch": 10.221787803509999, "search": 1.1798682540899998, "goal": 2.37661424546, "framework": 10.52092273035, "extrem": 0.8612095839370001, "his": 0.0901772433641, "big": 2.01597127114, "comment": 2.23653506908, "switch": 1.60416085533, "demand": 0.850831432969, "analyz": 2.2707222351599996, "scientist": 3.09268256888, "machin": 33.41662993488, "pythagora": 5.0673936279100005, "relev": 1.9371304613999998, "mlpack": 22.10993616273, "ngram": 7.369978720910001, "conduct": 0.817042965366, "rapid": 0.965411638564, "servic": 1.6564006669800002, "close": 0.250666759864, "what": 0.225887296827, "let": 1.2488025672799998, "largescal": 7.369978720910001, "flexibl": 4.541444470319999, "mllib": 7.369978720910001, "main": 0.225571540588, "type": 1.414202970774, "larg": 0.6815002424240001, "speed": 6.76666937635, "own": 0.164195077421, "base": 0.13652330228700002, "natur": 0.431306339292, "even": 0.152388564834, "tagger": 7.369978720910001, "hour": 0.815190981077, "who": 0.1218004659718, "unknown": 1.32782105949, "flow": 4.45162406838, "greek": 1.36264082464, "wordnet": 7.1076144564399995, "machinelearn": 14.739957441820001, "lowerlevel": 7.369978720910001, "microsoft": 6.42531871906, "black": 0.667404292867, "through": 0.20507607565469999, "comput": 5.47227566376, "onlin": 0.957503854357, "layer": 4.1939583247000005, "evalu": 3.8777604862599997, "henc": 1.68469971782, "parallel": 1.52151886822, "about": 0.1256869549492, "problem": 1.707422172819, "deploy": 2.00400270589, "communiti": 2.694247791164, "neural": 8.170630311, "mind": 1.2786688388299998, "context": 1.44920491442, "favor": 1.1420596084299999, "enabl": 1.26473915954, "understand": 2.1761717513599996, "deeplearn": 7.369978720910001, "standard": 0.63741050982, "dure": 0.0491209066894, "them": 0.0941833269093, "defin": 2.0073602185, "multidimension": 5.0774439637699995, "recommend": 1.36461126863, "where": 0.0649921387457, "devendradesal": 7.369978720910001, "complex": 0.8502416364309999, "categor": 2.70937382803, "massiv": 1.44118776833, "among": 0.456992194146, "intuit": 3.3216780971900004, "lua": 11.917983494400001, "numclaus": 7.369978720910001, "guid": 0.912738218589, "seri": 0.38193461069799994, "energi": 1.29901007269, "multiclass": 7.369978720910001, "execut": 0.804854605864, "order": 0.22014038079300002, "numpyndarray": 7.369978720910001, "autom": 2.9867028668299995, "support": 0.951522440148, "attend": 0.8353181700040001, "uniqu": 1.1039173409, "over": 0.0498734429914, "theoret": 2.05874512909, "build": 2.455687260455, "analysi": 6.233045514600001, "scikitlearn": 22.10993616273, "mine": 6.33723634712, "broad": 1.45323772, "consum": 1.5954271753600002, "singl": 0.475916769059, "graph": 14.519723920879999, "exist": 0.7633155881739999, "connect": 1.9008151760460001, "interfac": 3.0405620365099995, "possibl": 0.697610949782, "industri": 0.7046772417749999, "vele": 7.033506484289999, "best": 0.459227932947, "origin": 0.128612437587, "softwar": 4.65698192666, "visual": 4.96181504658, "follow": 0.045356911094199995, "further": 0.308815895297, "configur": 2.4427250357499997, "name": 0.29169949915290005, "feedforward": 7.2746685411000005, "per": 1.345642048144, "luajit": 7.369978720910001, "scalabl": 10.45982511482, "regress": 19.6799575821, "leverag": 3.5767392514699994, "also": 0.0586286312, "third": 0.35032434942900004, "mani": 0.0866315162442, "seamless": 4.26091776205, "user": 8.17035242752, "modular": 3.91051243112, "task": 1.35748680661, "batch": 3.5744895317400003, "research": 1.327455636276, "imag": 1.98752421458, "mathematician": 2.7789074593, "the": 0.0, "may": 0.050709995284400004, "attain": 2.03292152604, "boltzmann": 5.45305610873, "sever": 0.06991112039689999, "singa": 7.2746685411000005, "challeng": 0.9392919688950001, "util": 1.5389763962399998, "which": 0.00517841384543, "into": 0.0745643161435, "system": 1.30972138234, "parser": 6.238576609419999, "although": 0.278975962836, "easeofus": 7.369978720910001, "work": 0.763241970911, "webui": 7.369978720910001, "entiti": 1.93059591408, "contributor": 2.67222935363, "databas": 2.10988256718, "intellig": 1.43349848213, "skill": 1.30805571015, "activ": 0.381196603284, "abstract": 2.29918950399, "other": 0.03949899167904, "appli": 0.8316941898119999, "techniqu": 1.31624384807, "one": 0.0062553516455, "restrict": 1.13341345513, "impact": 1.09033222631, "easytous": 7.369978720910001, "algorithm": 33.3044239518, "mathemat": 2.00027135827, "outlier": 5.59502637, "cach": 3.89182029811, "sourc": 1.587654932253, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.27810715309, "implement": 6.37189704535, "text": 1.14048200999, "file": 1.32734588723, "detect": 3.37756548986, "process": 4.2226335922, "put": 0.505652999854, "analyt": 2.8481901438599997, "that": 0.02385689027784, "languag": 4.153409122029999, "includ": 0.113308088343, "reliabl": 1.89939013342, "anyon": 1.68164835081, "top": 2.436402551152, "rang": 1.158638427606, "api": 8.87224370214, "part": 0.04239531098280001, "graduat": 1.52643430388, "project": 2.246407543628, "differ": 0.212321121312, "embed": 2.82349753127, "been": 0.023645982368400004, "binari": 3.4781584227999995, "most": 0.06224368888679999, "between": 0.06790736233059999, "creator": 2.3304320833200003, "java": 6.90792738842, "vision": 3.17046177486, "all": 0.03420789629339999, "apach": 8.41746401776, "ventur": 2.04599360761, "today": 0.559395353679, "program": 2.111356736295, "solv": 1.9836504770400003, "wife": 1.0524530884799999, "normal": 0.959639378783, "architectur": 1.63469757919, "call": 0.1309255488976, "cluster": 12.62895817225, "recur": 2.6999575626, "and": 0.0037164183817523996, "partofspeech": 7.369978720910001, "list": 0.309845761506, "consist": 0.398873126426, "these": 0.0715336194008, "rubi": 3.7193204796199995, "amount": 0.819898886199, "general": 0.114952578063, "made": 0.0680215260973, "reus": 3.3940423897400005, "reusabl": 5.0673936279100005, "befor": 0.0956377718795, "librari": 7.894479847544, "hadoop": 7.369978720910001, "quickanddirti": 7.369978720910001, "can": 2.597457542304, "avail": 1.094909172578, "describ": 0.385447603125, "make": 0.44098594693739995, "kit": 2.8646288702, "amazon": 10.50258964947, "student": 0.904923236645, "courtesi": 3.64428529367, "packag": 4.115516898380001, "desal": 14.739957441820001, "devendra": 13.6787009397, "common": 0.676651610542, "enterpris": 1.8585681389, "data": 23.1195911112, "sophist": 2.30296309338, "oper": 0.441342964347, "transpar": 2.76480853492, "perfect": 1.50096433356, "sinc": 0.0803681994577, "convolut": 9.2326360171, "bio": 3.7456377879300002, "come": 0.28390990653000003, "matplotlib": 7.369978720910001, "aspect": 1.12795002691, "tell": 1.21236434401, "dimension": 3.99239120489, "gpus": 13.929027225599999, "from": 0.000567054168866, "first": 0.0075872898121599995, "engin": 3.619070233104, "busi": 2.161428511065, "when": 0.0205549888584, "have": 0.0443550070236, "tool": 9.653227077779999, "while": 0.08649996758760002, "movement": 0.746577724286, "anonym": 2.5376729623400003, "easili": 1.3066587367, "largerscal": 7.369978720910001, "agnost": 4.15110289604, "vener": 3.1373225428900002, "learn": 26.96806607184, "pipelin": 3.47002829672, "effici": 3.25587506828}, "logidf": {"after": 0.020490694648099998, "yangq": 7.369978720910001, "googl": 2.43263122258, "oldest": 1.37651617114, "tensorflow": 7.369978720910001, "relat": 0.21310030165399999, "vector": 3.25419887797, "thank": 1.7928938993, "signal": 1.6340517929299998, "immedi": 0.707357011133, "breed": 2.7450059076200004, "space": 0.874713164972, "web": 1.6431309733200001, "grow": 0.821043542212, "workbench": 7.033506484289999, "berkeley": 2.4573238351700004, "azur": 4.73092139129, "audio": 2.2034799289800002, "recogn": 0.935913859031, "etc": 1.4366730879700003, "dataset": 5.26584456664, "wikipedia": 3.70130197411, "class": 0.7497721899330001, "log": 2.61552683221, "python": 4.03065674296, "well": 0.0635144383156, "product": 0.484060136536, "done": 0.845975983129, "assembl": 1.09899028905, "meetup": 7.369978720910001, "octav": 4.19610026197, "scale": 1.32095306328, "automat": 1.9150850473199998, "tri": 0.61759152916, "run": 0.442714975539, "creat": 0.222576818514, "enjoy": 1.2020430306899998, "breadth": 3.91051243112, "express": 0.648191639641, "extend": 0.673191417311, "interact": 1.4858210267899998, "fair": 1.16481508131, "maintain": 0.572708175102, "especi": 0.511098609709, "expert": 1.68029517063, "distribut": 1.00781305813, "found": 0.107841124048, "interest": 0.47207177798199995, "deep": 1.2886734698, "shogun": 4.609968780880001, "datadriven": 7.369978720910001, "open": 0.219591038029, "atscal": 7.369978720910001, "wide": 0.44458000675399995, "vendor": 3.30609336617, "builtin": 7.369978720910001, "new": 0.0177299468511, "below": 0.813626591936, "perform": 0.42618085058, "but": 0.0161923720719, "maximum": 1.5687671009200002, "need": 0.362740163442, "classif": 2.08779073629, "parti": 0.724497710444, "studio": 1.5948062501700002, "caff": 6.89997509166, "applic": 1.23160392849, "integr": 1.03865482279, "lab": 2.66949835512, "level": 0.503462189943, "has": 0.0427239448548, "generat": 0.719182341736, "crawler": 5.958991747200001, "collabor": 1.4939250253100003, "reduct": 1.8437292863099999, "use": 0.0292080197316, "experi": 0.626272953933, "cpus": 5.16170430739, "resourc": 1.08137694258, "script": 2.1161358444599996, "out": 0.0584263909193, "model": 0.7374500731110001, "sure": 2.0086865552, "concept": 0.977224437103, "under": 0.07526180538319999, "numer": 0.606093812346, "optim": 2.4456277954099996, "wizard": 3.24769479, "store": 1.2374487335200002, "cbase": 7.369978720910001, "not": 0.0155524130075, "involv": 0.371469078658, "storag": 2.1544996326700003, "short": 0.345685625679, "are": 0.0294674735827, "such": 0.059695977806, "rival": 1.48693492276, "unifi": 2.02908090683, "quick": 0.790727508899, "easi": 1.6665296351499999, "metric": 3.1016808515599994, "said": 0.436653165815, "then": 0.08303386523089999, "they": 0.0297269947676, "design": 0.377239118022, "stream": 1.8736305038599999, "scientif": 1.42377308021, "recurr": 3.5722448618800002, "primit": 2.62157436683, "allow": 0.24028061118900002, "higherlevel": 7.369978720910001, "scienc": 0.841436178891, "kdnugget": 7.369978720910001, "spark": 2.12348110309, "larger": 0.806828661778, "github": 7.369978720910001, "away": 0.615957541869, "node": 3.7920308275, "featur": 0.423387418142, "tensor": 5.02817291476, "practic": 0.533182530867, "simpl": 1.2232212893899999, "day": 0.16865870631700003, "provid": 0.19517784432500002, "twitter": 3.50295308141, "array": 2.31692271093, "coordin": 1.73269223754, "either": 0.459327638815, "accord": 0.243650319127, "develop": 0.178624694913, "pattern": 1.33282404788, "hardcod": 7.369978720910001, "explor": 1.22257937218, "network": 0.9530830530519999, "math": 3.09470245618, "without": 0.258874517941, "fast": 1.5836950247400001, "box": 1.41751491115, "phd": 3.10729884387, "collect": 0.49536666052, "both": 0.050842533389300004, "commandlin": 7.369978720910001, "result": 0.136378908381, "turn": 0.324899251064, "varieti": 0.8316941898119999, "filter": 2.82668393864, "platform": 1.8298923389200001, "set": 0.171496011289, "more": 0.017024931599999998, "licens": 1.7575808080500002, "fed": 2.5289462112, "modul": 2.82988053166, "ecosystem": 3.26238893194, "account": 0.665074289973, "limit": 0.41782385463, "jia": 5.43845730931, "matlab": 6.0349776541799995, "num": 0.00031499039539700004, "technolog": 0.956847686355, "idea": 0.73863592212, "environ": 1.2341974030299998, "for": 0.00031499039539700004, "sentiment": 2.29480490568, "predict": 1.6457402376899999, "proprietari": 3.7193204796199995, "releas": 0.608521699544, "fulli": 1.02609828678, "roll": 1.4529683597299998, "with": 0.00119749171339, "written": 0.671587369833, "drift": 2.89833992755, "theano": 7.369978720910001, "handcraft": 5.45305610873, "solut": 1.55346297627, "current": 0.42695282784500005, "team": 0.821902894886, "popular": 0.41058020877499996, "video": 1.19307248967, "summari": 2.0543127160299997, "numpi": 7.369978720910001, "communitydriven": 7.369978720910001, "veri": 0.230159793238, "eight": 0.76874860218, "center": 0.555216308776, "combin": 0.529218310751, "net": 1.9406330919499999, "promis": 1.25364519176, "focus": 0.6981989720559999, "familiar": 1.92626315167, "tend": 1.21597024462, "redshift": 6.08904487545, "littl": 0.438213989466, "topolog": 4.26091776205, "scipi": 7.369978720910001, "train": 0.660918312839, "torch": 3.40726260117, "search": 1.1798682540899998, "goal": 1.18830712273, "framework": 2.10418454607, "extrem": 0.8612095839370001, "his": 0.0901772433641, "big": 1.00798563557, "comment": 1.11826753454, "switch": 1.60416085533, "demand": 0.850831432969, "analyz": 2.2707222351599996, "scientist": 1.54634128444, "machin": 1.39235958062, "pythagora": 5.0673936279100005, "relev": 1.9371304613999998, "mlpack": 7.369978720910001, "ngram": 7.369978720910001, "conduct": 0.817042965366, "rapid": 0.965411638564, "servic": 0.41410016674500005, "close": 0.250666759864, "what": 0.225887296827, "let": 1.2488025672799998, "largescal": 7.369978720910001, "flexibl": 2.2707222351599996, "mllib": 7.369978720910001, "main": 0.225571540588, "type": 0.707101485387, "larg": 0.17037506060600002, "speed": 1.3533338752700002, "own": 0.164195077421, "base": 0.13652330228700002, "natur": 0.431306339292, "even": 0.152388564834, "tagger": 7.369978720910001, "hour": 0.815190981077, "who": 0.0609002329859, "unknown": 1.32782105949, "flow": 1.4838746894600001, "greek": 1.36264082464, "wordnet": 7.1076144564399995, "machinelearn": 7.369978720910001, "lowerlevel": 7.369978720910001, "microsoft": 3.21265935953, "black": 0.667404292867, "through": 0.0683586918849, "comput": 1.36806891594, "onlin": 0.957503854357, "layer": 2.0969791623500003, "evalu": 1.9388802431299998, "henc": 1.68469971782, "parallel": 1.52151886822, "about": 0.0628434774746, "problem": 0.569140724273, "deploy": 2.00400270589, "communiti": 0.673561947791, "neural": 4.0853151555, "mind": 1.2786688388299998, "context": 1.44920491442, "favor": 1.1420596084299999, "enabl": 1.26473915954, "understand": 1.0880858756799998, "deeplearn": 7.369978720910001, "standard": 0.63741050982, "dure": 0.0491209066894, "them": 0.0941833269093, "defin": 1.00368010925, "multidimension": 5.0774439637699995, "recommend": 1.36461126863, "where": 0.0649921387457, "devendradesal": 7.369978720910001, "complex": 0.8502416364309999, "categor": 2.70937382803, "massiv": 1.44118776833, "among": 0.228496097073, "intuit": 3.3216780971900004, "lua": 5.958991747200001, "numclaus": 7.369978720910001, "guid": 0.912738218589, "seri": 0.38193461069799994, "energi": 1.29901007269, "multiclass": 7.369978720910001, "execut": 0.804854605864, "order": 0.22014038079300002, "numpyndarray": 7.369978720910001, "autom": 2.9867028668299995, "support": 0.237880610037, "attend": 0.8353181700040001, "uniqu": 1.1039173409, "over": 0.0249367214957, "theoret": 2.05874512909, "build": 0.491137452091, "analysi": 1.2466091029200002, "scikitlearn": 7.369978720910001, "mine": 1.58430908678, "broad": 1.45323772, "consum": 1.5954271753600002, "singl": 0.475916769059, "graph": 3.6299309802199997, "exist": 0.38165779408699996, "connect": 0.633605058682, "interfac": 3.0405620365099995, "possibl": 0.348805474891, "industri": 0.7046772417749999, "vele": 7.033506484289999, "best": 0.459227932947, "origin": 0.128612437587, "softwar": 2.32849096333, "visual": 1.6539383488600001, "follow": 0.045356911094199995, "further": 0.308815895297, "configur": 2.4427250357499997, "name": 0.09723316638430002, "feedforward": 7.2746685411000005, "per": 0.672821024072, "luajit": 7.369978720910001, "scalabl": 5.22991255741, "regress": 3.9359915164199997, "leverag": 3.5767392514699994, "also": 0.0146571578, "third": 0.35032434942900004, "mani": 0.0433157581221, "seamless": 4.26091776205, "user": 2.04258810688, "modular": 3.91051243112, "task": 1.35748680661, "batch": 3.5744895317400003, "research": 0.663727818138, "imag": 0.99376210729, "mathematician": 2.7789074593, "the": 0.0, "may": 0.050709995284400004, "attain": 2.03292152604, "boltzmann": 5.45305610873, "sever": 0.06991112039689999, "singa": 7.2746685411000005, "challeng": 0.9392919688950001, "util": 1.5389763962399998, "which": 0.00517841384543, "into": 0.0149128632287, "system": 0.327430345585, "parser": 6.238576609419999, "although": 0.139487981418, "easeofus": 7.369978720910001, "work": 0.109034567273, "webui": 7.369978720910001, "entiti": 1.93059591408, "contributor": 2.67222935363, "databas": 2.10988256718, "intellig": 1.43349848213, "skill": 1.30805571015, "activ": 0.381196603284, "abstract": 2.29918950399, "other": 0.00987474791976, "appli": 0.8316941898119999, "techniqu": 1.31624384807, "one": 0.0062553516455, "restrict": 1.13341345513, "impact": 1.09033222631, "easytous": 7.369978720910001, "algorithm": 3.33044239518, "mathemat": 2.00027135827, "outlier": 5.59502637, "cach": 3.89182029811, "sourc": 0.529218310751, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.139053576545, "implement": 1.27437940907, "text": 1.14048200999, "file": 1.32734588723, "detect": 1.68878274493, "process": 0.527829199025, "put": 0.505652999854, "analyt": 2.8481901438599997, "that": 0.00397614837964, "languag": 0.8306818244059999, "includ": 0.0188846813905, "reliabl": 1.89939013342, "anyon": 1.68164835081, "top": 0.609100637788, "rang": 0.579319213803, "api": 4.43612185107, "part": 0.04239531098280001, "graduat": 1.52643430388, "project": 0.561601885907, "differ": 0.212321121312, "embed": 2.82349753127, "been": 0.023645982368400004, "binari": 3.4781584227999995, "most": 0.020747896295599998, "between": 0.033953681165299995, "creator": 2.3304320833200003, "java": 3.45396369421, "vision": 1.58523088743, "all": 0.011402632097799998, "apach": 4.20873200888, "ventur": 2.04599360761, "today": 0.559395353679, "program": 0.7037855787649999, "solv": 1.9836504770400003, "wife": 1.0524530884799999, "normal": 0.959639378783, "architectur": 1.63469757919, "call": 0.0654627744488, "cluster": 2.52579163445, "recur": 2.6999575626, "and": 6.29901420636e-05, "partofspeech": 7.369978720910001, "list": 0.309845761506, "consist": 0.398873126426, "these": 0.0715336194008, "rubi": 3.7193204796199995, "amount": 0.819898886199, "general": 0.114952578063, "made": 0.0680215260973, "reus": 3.3940423897400005, "reusabl": 5.0673936279100005, "befor": 0.0956377718795, "librari": 0.986809980943, "hadoop": 7.369978720910001, "quickanddirti": 7.369978720910001, "can": 0.162341096394, "avail": 0.547454586289, "describ": 0.385447603125, "make": 0.07349765782289999, "kit": 2.8646288702, "amazon": 3.50086321649, "student": 0.904923236645, "courtesi": 3.64428529367, "packag": 2.0577584491900005, "desal": 7.369978720910001, "devendra": 6.83935046985, "common": 0.338325805271, "enterpris": 1.8585681389, "data": 1.2168205848, "sophist": 2.30296309338, "oper": 0.441342964347, "transpar": 2.76480853492, "perfect": 1.50096433356, "sinc": 0.0803681994577, "convolut": 4.61631800855, "bio": 3.7456377879300002, "come": 0.28390990653000003, "matplotlib": 7.369978720910001, "aspect": 1.12795002691, "tell": 1.21236434401, "dimension": 3.99239120489, "gpus": 6.964513612799999, "from": 0.000567054168866, "first": 0.0075872898121599995, "engin": 0.904767558276, "busi": 0.720476170355, "when": 0.0205549888584, "have": 0.0147850023412, "tool": 1.60887117963, "while": 0.04324998379380001, "movement": 0.746577724286, "anonym": 2.5376729623400003, "easili": 1.3066587367, "largerscal": 7.369978720910001, "agnost": 4.15110289604, "vener": 3.1373225428900002, "learn": 0.842752064745, "pipelin": 3.47002829672, "effici": 1.62793753414}, "freq": {"after": 1, "yangq": 1, "googl": 1, "oldest": 1, "tensorflow": 2, "relat": 2, "vector": 1, "thank": 2, "signal": 1, "immedi": 1, "breed": 1, "space": 1, "web": 2, "grow": 1, "workbench": 1, "berkeley": 2, "azur": 4, "audio": 1, "recogn": 1, "etc": 2, "dataset": 2, "wikipedia": 1, "class": 1, "log": 1, "python": 7, "well": 1, "product": 3, "done": 1, "assembl": 1, "meetup": 1, "octav": 1, "scale": 1, "automat": 1, "tri": 1, "run": 1, "creat": 5, "enjoy": 1, "breadth": 1, "express": 2, "extend": 1, "interact": 1, "fair": 1, "maintain": 1, "especi": 1, "expert": 1, "distribut": 2, "found": 1, "interest": 1, "deep": 4, "shogun": 4, "datadriven": 1, "open": 4, "atscal": 1, "wide": 3, "vendor": 1, "builtin": 1, "new": 1, "below": 1, "perform": 3, "but": 1, "maximum": 1, "need": 1, "classif": 5, "parti": 1, "studio": 2, "caff": 4, "applic": 2, "integr": 1, "lab": 1, "level": 1, "has": 2, "generat": 1, "crawler": 1, "collabor": 1, "reduct": 1, "use": 9, "experi": 1, "cpus": 1, "resourc": 1, "script": 1, "out": 2, "model": 13, "sure": 1, "concept": 1, "under": 4, "numer": 1, "optim": 3, "wizard": 1, "store": 1, "cbase": 1, "not": 1, "involv": 1, "storag": 2, "short": 1, "are": 8, "such": 3, "rival": 1, "unifi": 1, "quick": 1, "easi": 4, "metric": 1, "said": 1, "then": 2, "they": 1, "design": 3, "stream": 1, "scientif": 2, "recurr": 1, "primit": 1, "allow": 2, "higherlevel": 1, "scienc": 4, "kdnugget": 1, "spark": 2, "larger": 1, "github": 2, "away": 1, "node": 1, "featur": 2, "tensor": 1, "practic": 1, "simpl": 2, "day": 1, "provid": 3, "twitter": 1, "array": 1, "coordin": 1, "either": 1, "accord": 1, "develop": 5, "pattern": 1, "hardcod": 2, "explor": 1, "network": 4, "math": 2, "without": 2, "fast": 1, "box": 1, "phd": 1, "collect": 1, "both": 1, "commandlin": 2, "result": 1, "turn": 1, "varieti": 1, "filter": 1, "platform": 4, "set": 1, "more": 3, "licens": 3, "fed": 1, "modul": 1, "ecosystem": 1, "account": 2, "limit": 1, "jia": 1, "matlab": 1, "num": 4, "technolog": 4, "idea": 1, "environ": 2, "for": 26, "sentiment": 1, "predict": 1, "proprietari": 1, "releas": 2, "fulli": 2, "roll": 1, "with": 12, "written": 4, "drift": 1, "theano": 4, "handcraft": 1, "solut": 1, "current": 2, "team": 1, "popular": 2, "video": 1, "summari": 1, "numpi": 1, "communitydriven": 1, "veri": 1, "eight": 1, "center": 1, "combin": 1, "net": 3, "promis": 1, "focus": 1, "familiar": 1, "tend": 1, "redshift": 1, "littl": 1, "topolog": 1, "scipi": 1, "train": 4, "torch": 3, "search": 1, "goal": 2, "framework": 5, "extrem": 1, "his": 1, "big": 2, "comment": 2, "switch": 1, "demand": 1, "analyz": 1, "scientist": 2, "machin": 24, "pythagora": 1, "relev": 1, "mlpack": 3, "ngram": 1, "conduct": 1, "rapid": 1, "servic": 4, "close": 1, "what": 1, "let": 1, "largescal": 1, "flexibl": 2, "mllib": 1, "main": 1, "type": 2, "larg": 4, "speed": 5, "own": 1, "base": 1, "natur": 1, "even": 1, "tagger": 1, "hour": 1, "who": 2, "unknown": 1, "flow": 3, "greek": 1, "wordnet": 1, "machinelearn": 2, "lowerlevel": 1, "microsoft": 2, "black": 1, "through": 3, "comput": 4, "onlin": 1, "layer": 2, "evalu": 2, "henc": 1, "parallel": 1, "about": 2, "problem": 3, "deploy": 1, "communiti": 4, "neural": 2, "mind": 1, "context": 1, "favor": 1, "enabl": 1, "understand": 2, "deeplearn": 1, "standard": 1, "dure": 1, "them": 1, "defin": 2, "multidimension": 1, "recommend": 1, "where": 1, "devendradesal": 1, "complex": 1, "categor": 1, "massiv": 1, "among": 2, "intuit": 1, "lua": 2, "numclaus": 1, "guid": 1, "seri": 1, "energi": 1, "multiclass": 1, "execut": 1, "order": 1, "numpyndarray": 1, "autom": 1, "support": 4, "attend": 1, "uniqu": 1, "over": 2, "theoret": 1, "build": 5, "analysi": 5, "scikitlearn": 3, "mine": 4, "broad": 1, "consum": 1, "singl": 1, "graph": 4, "exist": 2, "connect": 3, "interfac": 1, "possibl": 2, "industri": 1, "vele": 1, "best": 1, "origin": 1, "softwar": 2, "visual": 3, "follow": 1, "further": 1, "configur": 1, "name": 3, "feedforward": 1, "per": 2, "luajit": 1, "scalabl": 2, "regress": 5, "leverag": 1, "also": 4, "third": 1, "mani": 2, "seamless": 1, "user": 4, "modular": 1, "task": 1, "batch": 1, "research": 2, "imag": 2, "mathematician": 1, "the": 40, "may": 1, "attain": 1, "boltzmann": 1, "sever": 1, "singa": 1, "challeng": 1, "util": 1, "which": 1, "into": 5, "system": 4, "parser": 1, "although": 2, "easeofus": 1, "work": 7, "webui": 1, "entiti": 1, "contributor": 1, "databas": 1, "intellig": 1, "skill": 1, "activ": 1, "abstract": 1, "other": 4, "appli": 1, "techniqu": 1, "one": 1, "restrict": 1, "impact": 1, "easytous": 1, "algorithm": 10, "mathemat": 1, "outlier": 1, "cach": 1, "sourc": 3, "get": 1, "still": 1, "like": 2, "implement": 5, "text": 1, "file": 1, "detect": 2, "process": 8, "put": 1, "analyt": 1, "that": 6, "languag": 5, "includ": 6, "reliabl": 1, "anyon": 1, "top": 4, "rang": 2, "api": 2, "part": 1, "graduat": 1, "project": 4, "differ": 1, "embed": 1, "been": 1, "binari": 1, "most": 3, "between": 2, "creator": 1, "java": 2, "vision": 2, "all": 3, "apach": 2, "ventur": 1, "today": 1, "program": 3, "solv": 1, "wife": 1, "normal": 1, "architectur": 1, "call": 2, "cluster": 5, "recur": 1, "and": 59, "partofspeech": 1, "list": 1, "consist": 1, "these": 1, "rubi": 1, "amount": 1, "general": 1, "made": 1, "reus": 1, "reusabl": 1, "befor": 1, "librari": 8, "hadoop": 1, "quickanddirti": 1, "can": 16, "avail": 2, "describ": 1, "make": 6, "kit": 1, "amazon": 3, "student": 1, "courtesi": 1, "packag": 2, "desal": 2, "devendra": 2, "common": 2, "enterpris": 1, "data": 19, "sophist": 1, "oper": 1, "transpar": 1, "perfect": 1, "sinc": 1, "convolut": 2, "bio": 1, "come": 1, "matplotlib": 1, "aspect": 1, "tell": 1, "dimension": 1, "gpus": 2, "from": 1, "first": 1, "engin": 4, "busi": 3, "when": 1, "have": 3, "tool": 6, "while": 2, "movement": 1, "anonym": 1, "easili": 1, "largerscal": 1, "agnost": 1, "vener": 1, "learn": 32, "pipelin": 1, "effici": 2}, "idf": {"after": 1.02070207021, "yangq": 1587.6, "googl": 11.388809182200001, "oldest": 3.96107784431, "tensorflow": 1587.6, "relat": 1.23750876919, "vector": 25.898858075, "thank": 6.00681044268, "signal": 5.12459651388, "immedi": 2.02862254025, "breed": 15.5647058824, "space": 2.39818731118, "web": 5.17133550489, "grow": 2.27287043665, "workbench": 1134.0, "berkeley": 11.6735294118, "azur": 113.4, "audio": 9.05647461495, "recogn": 2.54954231572, "etc": 4.2066772655, "dataset": 193.609756098, "wikipedia": 40.5, "class": 2.11651779763, "log": 13.6744186047, "python": 56.2978723404, "well": 1.0655748708, "product": 1.62264922322, "done": 2.3302509907499998, "assembl": 3.0011342155, "meetup": 1587.6, "octav": 66.42677824270001, "scale": 3.7469907953699995, "automat": 6.787516032490001, "tri": 1.8544562551099997, "run": 1.55692850838, "creat": 1.2492917847, "enjoy": 3.3269069572500003, "breadth": 49.9245283019, "express": 1.9120799710900003, "extend": 1.9604840701400004, "interact": 4.4185917061, "fair": 3.20533010297, "maintain": 1.77306231852, "especi": 1.66712170534, "expert": 5.36713995943, "distribut": 2.7396031061299997, "found": 1.11387076405, "interest": 1.60331246213, "deep": 3.6279707495399998, "shogun": 100.481012658, "datadriven": 1587.6, "open": 1.24556723678, "atscal": 1587.6, "wide": 1.5598349381, "vendor": 27.2783505155, "builtin": 1587.6, "new": 1.0178880554, "below": 2.25607503197, "perform": 1.5313977042500002, "but": 1.01632417899, "maximum": 4.80072573329, "need": 1.4372623574099999, "classif": 8.067073170730001, "parti": 2.06369426752, "studio": 4.9273743016800005, "caff": 992.25, "applic": 3.42672134686, "integr": 2.8254137746900003, "lab": 14.4327272727, "level": 1.6544393497299998, "has": 1.0436497502, "generat": 2.05275407292, "crawler": 387.219512195, "collabor": 4.45454545455, "reduct": 6.320063694269999, "use": 1.0296387573799999, "experi": 1.87062566278, "cpus": 174.46153846200002, "resourc": 2.9487369985100003, "script": 8.299006795610001, "out": 1.06016694491, "model": 2.0905978404, "sure": 7.453521126760001, "concept": 2.65707112971, "under": 1.0781663837, "numer": 1.83325635104, "optim": 11.5377906977, "wizard": 25.7309562399, "store": 3.44680851064, "cbase": 1587.6, "not": 1.01567398119, "involv": 1.4498630137000001, "storag": 8.623574144489998, "short": 1.41295834817, "are": 1.02990593578, "such": 1.06151377374, "rival": 4.4235162998, "unifi": 7.60709151893, "quick": 2.205, "easi": 5.2937645882, "metric": 22.235294117600002, "said": 1.54751925139, "then": 1.08657860516, "they": 1.03017325287, "design": 1.45825296225, "stream": 6.5118949959000005, "scientif": 4.15275961287, "recurr": 35.5964125561, "primit": 13.7573656846, "allow": 1.2716059271100002, "higherlevel": 1587.6, "scienc": 2.31969608416, "kdnugget": 1587.6, "spark": 8.360189573460001, "larger": 2.2407904022599996, "github": 1587.6, "away": 1.85142857143, "node": 44.3463687151, "featur": 1.52712581762, "tensor": 152.653846154, "practic": 1.70434782609, "simpl": 3.3981164383599998, "day": 1.18371607516, "provid": 1.21552714187, "twitter": 33.213389121300004, "array": 10.1444089457, "coordin": 5.65586034913, "either": 1.5830092731099998, "accord": 1.27589809531, "develop": 1.1955719557200002, "pattern": 3.79173632673, "hardcod": 1587.6, "explor": 3.39593582888, "network": 2.59369384088, "math": 22.0806675939, "without": 1.29547123623, "fast": 4.8729281768, "box": 4.12685209254, "phd": 22.3605633803, "collect": 1.64109985528, "both": 1.05215720061, "commandlin": 1587.6, "result": 1.14611608432, "turn": 1.3838912133899999, "varieti": 2.2972073506, "filter": 16.8893617021, "platform": 6.2332155476999995, "set": 1.18707940781, "more": 1.0171706817, "licens": 5.79839298758, "fed": 12.5402843602, "modul": 16.9434364995, "ecosystem": 26.111842105300003, "account": 1.94463498285, "limit": 1.5186531471200002, "jia": 230.086956522, "matlab": 417.78947368400003, "num": 1.00031504001, "technolog": 2.6034765496900003, "idea": 2.0930784443, "environ": 3.43561999567, "for": 1.00031504001, "sentiment": 9.9225, "predict": 5.18484650555, "proprietari": 41.2363636364, "releas": 1.8377126982299998, "fulli": 2.79015817223, "roll": 4.27578777269, "with": 1.0011982089899998, "written": 1.9573418813999999, "drift": 18.144000000000002, "theano": 1587.6, "handcraft": 233.470588235, "solut": 4.7278141751, "current": 1.5325803649, "team": 2.2748244734200003, "popular": 1.50769230769, "video": 3.29719626168, "summari": 7.80147420147, "numpi": 1587.6, "communitydriven": 1587.6, "veri": 1.25880114177, "eight": 2.15706521739, "center": 1.7423178226499998, "combin": 1.69760479042, "net": 6.96315789474, "promis": 3.5030891438699996, "focus": 2.01012914662, "familiar": 6.86381322957, "tend": 3.3735656608599998, "redshift": 441.0, "littl": 1.5499365420299998, "topolog": 70.875, "scipi": 1587.6, "train": 1.9365698950999999, "torch": 30.1825095057, "search": 3.2539454806299997, "goal": 3.28152128979, "framework": 8.200413223139998, "extrem": 2.36602086438, "his": 1.0943682360200002, "big": 2.7400759406299997, "comment": 3.05954904606, "switch": 4.97368421053, "demand": 2.34159292035, "analyz": 9.68639414277, "scientist": 4.69426374926, "machin": 4.02433460076, "pythagora": 158.76, "relev": 6.938811188810001, "mlpack": 1587.6, "ngram": 1587.6, "conduct": 2.2637958077900002, "rapid": 2.62586834271, "servic": 1.51300867245, "close": 1.2848818387799998, "what": 1.25343439128, "let": 3.48616600791, "largescal": 1587.6, "flexibl": 9.68639414277, "mllib": 1587.6, "main": 1.25303867403, "type": 2.0281042411900003, "larg": 1.18574949585, "speed": 3.8703071672400005, "own": 1.17844418052, "base": 1.14628158845, "natur": 1.5392670157100001, "even": 1.16461267606, "tagger": 1587.6, "hour": 2.25960717336, "who": 1.06279287723, "unknown": 3.77281368821, "flow": 4.41, "greek": 3.90649606299, "wordnet": 1221.23076923, "machinelearn": 1587.6, "lowerlevel": 1587.6, "microsoft": 24.8450704225, "black": 1.94917127072, "through": 1.07074930869, "comput": 3.9277585353800006, "onlin": 2.6051854282900004, "layer": 8.14153846154, "evalu": 6.9509632224199995, "henc": 5.390831918509999, "parallel": 4.57917507932, "about": 1.06486015159, "problem": 1.76674827509, "deploy": 7.41869158879, "communiti": 1.96121062384, "neural": 59.4606741573, "mind": 3.5918552036199998, "context": 4.25972632144, "favor": 3.1332149200700004, "enabl": 3.5421686747, "understand": 2.96858638743, "deeplearn": 1587.6, "standard": 1.8915763135900003, "dure": 1.0503473370799998, "them": 1.09876115994, "defin": 2.72830383227, "multidimension": 160.363636364, "recommend": 3.9142011834300003, "where": 1.06715063521, "devendradesal": 1587.6, "complex": 2.34021226415, "categor": 15.0198675497, "massiv": 4.22571200426, "among": 1.25670862028, "intuit": 27.7068062827, "lua": 387.219512195, "numclaus": 1587.6, "guid": 2.49113447356, "seri": 1.46511627907, "energi": 3.66566612792, "multiclass": 1587.6, "execut": 2.2363713199, "order": 1.24625166811, "numpyndarray": 1587.6, "autom": 19.8202247191, "support": 1.2685577307200002, "attend": 2.3055474876599997, "uniqu": 3.01595744681, "over": 1.02525024217, "theoret": 7.83613030602, "build": 1.6341739578, "analysi": 3.47852760736, "scikitlearn": 1587.6, "mine": 4.875921375919999, "broad": 4.27693965517, "consum": 4.93043478261, "singl": 1.60948905109, "graph": 37.7102137767, "exist": 1.4647107666799999, "connect": 1.8843916913900003, "interfac": 20.9169960474, "possibl": 1.4173734488, "industri": 2.02319357716, "vele": 1134.0, "best": 1.5828514456600002, "origin": 1.13724928367, "softwar": 10.2624434389, "visual": 5.22752716497, "follow": 1.04640126549, "further": 1.3618116315, "configur": 11.504347826099998, "name": 1.10211732037, "feedforward": 1443.27272727, "per": 1.9597580545599997, "luajit": 1587.6, "scalabl": 186.776470588, "regress": 51.2129032258, "leverag": 35.7567567568, "also": 1.01476510067, "third": 1.4195278969999998, "mani": 1.04426757877, "seamless": 70.875, "user": 7.71053909665, "modular": 49.9245283019, "task": 3.88641370869, "batch": 35.6764044944, "research": 1.9420183486200002, "imag": 2.70137825421, "mathematician": 16.1014198783, "the": 1.0, "may": 1.05201775893, "attain": 7.6363636363600005, "boltzmann": 233.470588235, "sever": 1.07241286139, "singa": 1443.27272727, "challeng": 2.55816951337, "util": 4.65981802172, "which": 1.005191845, "into": 1.01502461479, "system": 1.38739840951, "parser": 512.129032258, "although": 1.14968498805, "easeofus": 1587.6, "work": 1.11520089913, "webui": 1587.6, "entiti": 6.89361702128, "contributor": 14.4721969006, "databas": 8.24727272727, "intellig": 4.19334389857, "skill": 3.6989748369099997, "activ": 1.46403541129, "abstract": 9.966101694919999, "other": 1.00992366412, "appli": 2.2972073506, "techniqu": 3.7293868921800004, "one": 1.00627495722, "restrict": 3.1062414400300002, "impact": 2.97526236882, "easytous": 1587.6, "algorithm": 27.9507042254, "mathemat": 7.391061452510001, "outlier": 269.084745763, "cach": 49.0, "sourc": 1.69760479042, "get": 1.78562591385, "still": 1.1866357724799999, "like": 1.14918566775, "implement": 3.57648118946, "text": 3.12827586207, "file": 3.7710213776699995, "detect": 5.41288782816, "process": 1.69524826482, "put": 1.65806788512, "analyt": 17.256521739100002, "that": 1.00398406375, "languag": 2.29488291414, "includ": 1.0190641247799999, "reliabl": 6.681818181819999, "anyon": 5.37440758294, "top": 1.8387769284200002, "rang": 1.7848229342299997, "api": 84.44680851060001, "part": 1.04330682789, "graduat": 4.60173913043, "project": 1.7534791252500002, "differ": 1.23654490225, "embed": 16.835630965, "been": 1.0239277652399998, "binari": 32.4, "most": 1.02096463023, "between": 1.03453668708, "creator": 10.2823834197, "java": 31.625498008, "vision": 4.88041807562, "all": 1.01146788991, "apach": 67.27118644069999, "ventur": 7.73684210526, "today": 1.74961428257, "program": 2.02139037433, "solv": 7.26923076923, "wife": 2.8646697943, "normal": 2.61075481006, "architectur": 5.12790697674, "call": 1.0676529926, "cluster": 12.5007874016, "recur": 14.8791002812, "and": 1.00006299213, "partofspeech": 1587.6, "list": 1.36321483771, "consist": 1.4901445466499998, "these": 1.07415426252, "rubi": 41.2363636364, "amount": 2.27027027027, "general": 1.1218202374200001, "made": 1.07038834951, "reus": 29.7861163227, "reusabl": 158.76, "befor": 1.10036041031, "librari": 2.68266306185, "hadoop": 1587.6, "quickanddirti": 1587.6, "can": 1.17626139142, "avail": 1.7288467821, "describ": 1.47027227264, "make": 1.0762660158600001, "kit": 17.542541436500002, "amazon": 33.1440501044, "student": 2.47174217655, "courtesi": 38.255421686700004, "packag": 7.828402366860001, "desal": 1587.6, "devendra": 933.882352941, "common": 1.4025974025999999, "enterpris": 6.414545454550001, "data": 3.37643555934, "sophist": 10.0037807183, "oper": 1.55479384977, "transpar": 15.876, "perfect": 4.48601299802, "sinc": 1.08368600683, "convolut": 101.121019108, "bio": 42.336000000000006, "come": 1.32831325301, "matplotlib": 1587.6, "aspect": 3.0893169877399997, "tell": 3.36142282448, "dimension": 54.1843003413, "gpus": 1058.4, "from": 1.00056721497, "first": 1.00761614623, "engin": 2.47135740971, "busi": 2.05541170378, "when": 1.02076769755, "have": 1.0148948411399998, "tool": 4.99716713881, "while": 1.0441988950299999, "movement": 2.10976744186, "anonym": 12.6501992032, "easili": 3.6938110749199997, "largerscal": 1587.6, "agnost": 63.504, "vener": 23.042089985500002, "learn": 2.32275054865, "pipelin": 32.1376518219, "effici": 5.09335899904}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Top 15 Frameworks for Machine Learning Experts</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/mba-data-science-toolkit.html\" rel=\"prev\" title=\"The MBA Data Science Toolkit: 8 resources to go from the spreadsheet to the command line\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/uplift-modeling-opportunities-paw-chicago.html\" rel=\"next\" title=\"Uplift Modeling Opportunities at PAW Chicago, June 20-23, 2016, and PAW New York\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/04/top-15-frameworks-machine-learning-experts.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=47273\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/top-15-frameworks-machine-learning-experts.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-47273 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 19-Apr, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/opinions-interviews.html\">Opinions, Interviews, Reports</a> \u00bb Top 15 Frameworks for Machine Learning Experts (\u00a0<a href=\"/2016/n14.html\">16:n14</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Top 15 Frameworks for Machine Learning Experts</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/mba-data-science-toolkit.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/uplift-modeling-opportunities-paw-chicago.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <span class=\"http-likes\" style=\"float: left; font-size:14px\">http likes 532</span> <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/data-science-tools\" rel=\"tag\">Data Science Tools</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/devendra-desale\" rel=\"tag\">Devendra Desale</a>, <a href=\"https://www.kdnuggets.com/tag/machine-learning\" rel=\"tag\">Machine Learning</a>, <a href=\"https://www.kdnuggets.com/tag/mllib\" rel=\"tag\">MLlib</a></div>\n<br/>\n<p class=\"excerpt\">\n     Either you are a researcher, start-up or big organization who wants to use machine learning, you will need the right tools to make it happen. Here is a list of the most popular frameworks for machine learning.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/devendra-desale\" rel=\"author\" title=\"Posts by Devendra Desale\">Devendra Desale</a>, KDnuggets.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p style=\"text-align: center;\"><img alt=\"machine-learning-frameworks\" class=\"wp-image-48034 aligncenter\" sizes=\"(max-width: 450px) 100vw, 450px\" src=\"/wp-content/uploads/machine-learning-frameworks.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/machine-learning-frameworks.jpg 450w, https://www.kdnuggets.com/wp-content/uploads/machine-learning-frameworks-300x234.jpg 300w\" width=\"90%\"/></p>\n<p>Machine learning engineers are part of the engineering team who\u00a0build the product and the algorithms, making sure that it works reliably, quickly, and at-scale. They work closely with data scientist to understand the theoretical and business aspect of it.\u00a0In the context of machine learning, the main summary of the differences is the following:</p>\n<ul class=\"three_ul\">\n<li>Machine learning engineers build, implement, and maintain production machine learning systems.</li>\n<li>Data scientists conduct research to generate ideas about machine learning projects, and perform analysis to understand the metrics impact of machine learning systems.</li>\n</ul>\n<p>Below is a list of frameworks for machine learning engineers:</p>\n<ul class=\"three_ul\">\n<li><a href=\"http://singa.apache.org/docs/overview.html\" target=\"_blank\">Apache Singa</a>\u00a0is a general distributed deep learning platform for training big deep learning models over large datasets. It is designed with an intuitive programming model based on the layer abstraction. A variety of popular deep learning models are supported, namely feed-forward models including convolutional neural networks (CNN), energy models like restricted Boltzmann machine (RBM), and recurrent neural networks (RNN). Many built-in layers are provided for users.</li>\n<li><a href=\"https://aws.amazon.com/machine-learning/\" target=\"_blank\">Amazon Machine Learning</a>\u00a0\u00a0is a service that makes it easy for developers of all skill levels to use machine learning technology. Amazon Machine Learning provides visualization tools and wizards that guide you through the process of creating machine learning (ML) models without having to learn complex ML algorithms and technology.\u00a0\u00a0It connects to data stored in Amazon S3, Redshift, or RDS, and can run binary classification, multiclass categorization, or regression on said data to create a model.</li>\n<li><a href=\"https://studio.azureml.net/\" target=\"_blank\">Azure ML Studio</a>\u00a0allows Microsoft Azure users to create and train models, then turn them into APIs that can be consumed by other services. Users get up to 10GB of storage per account for model data, although you can also connect your own Azure storage to the service for larger models. A wide range of algorithms are available, courtesy of both Microsoft and third parties. You don\u2019t even need an account to try out the service; you can log in anonymously and use Azure ML Studio for up to eight hours.</li>\n<li><a href=\"http://caffe.berkeleyvision.org/\" target=\"_blank\">Caffe</a>\u00a0is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (<a href=\"http://bvlc.eecs.berkeley.edu/\">BVLC</a>) and by community contributors. <a href=\"http://daggerfs.com/\">Yangqing Jia</a>\u00a0created the project during his PhD at UC Berkeley. Caffe is released under the\u00a0<a href=\"https://github.com/BVLC/caffe/blob/master/LICENSE\">BSD 2-Clause license</a>. \u00a0Models and optimization are defined by configuration without hard-coding &amp; user can switch between CPU and GPU.\u00a0Speed\u00a0makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day\u00a0with a single NVIDIA K40 GPU.</li>\n<li><a href=\"http://www.h2o.ai/\" target=\"_blank\">H2O</a>\u00a0makes it possible for anyone to easily apply math and predictive analytics to solve today\u2019s most challenging business problems. It intelligently combines unique features not currently found in other machine learning platforms including:\u00a0Best of Breed Open Source Technology,\u00a0Easy-to-use WebUI and Familiar Interfaces,\u00a0Data Agnostic Support for all Common Database and File Types.\u00a0With H2O, you can work with your existing languages and tools. Further, you can extend the platform seamlessly into your Hadoop environments.</li>\n<li><a href=\"http://moa.cms.waikato.ac.nz/\" target=\"_blank\">Massive Online Analysis (MOA)</a> is the most popular open source framework for data stream mining, with a very active growing community. It includes a collection of machine learning algorithms (<a href=\"http://moa.cms.waikato.ac.nz/details/classification/\">classification, regression</a>,\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/stream-clustering/\">clustering</a>,\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/outlier-detection/\">outlier detection</a>, concept drift detection and\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/recommender-systems/\">recommender systems</a>) and tools for evaluation. Related to the WEKA project, MOA is also written in Java, while scaling to more demanding problems.</li>\n<li><a href=\"http://spark.apache.org/mllib/\">MLlib (Spark)</a>\u00a0is Apache Spark\u2019s machine learning library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.</li>\n<li><a href=\"http://mlpack.org/\" target=\"_blank\">mlpack</a>,\u00a0a C++-based machine learning library originally rolled out in 2011 and designed for \u201cscalability, speed, and ease-of-use,\u201d according to the library\u2019s creators. Implementing mlpack can be done through a cache of command-line executables for quick-and-dirty, \u201cblack box\u201d operations, or with a C++ API for more sophisticated work. Mlpack\u00a0provides these algorithms as simple command-line programs and C++ classes which can then be integrated into larger-scale machine learning solutions.</li>\n<li><a href=\"http://www.clips.ua.ac.be/pattern\" target=\"_blank\">Pattern</a>\u00a0is a web mining module for the Python programming language. It has tools for data mining (Google, Twitter and Wikipedia API, a web crawler, a HTML DOM parser), natural language processing (part-of-speech taggers, n-gram search, sentiment analysis, WordNet), machine learning (vector space model, clustering, SVM), network analysis and &lt;canvas&gt; visualization.</li>\n<li><a href=\"http://scikit-learn.org/stable/\" target=\"_blank\">Scikit-Learn</a>\u00a0leverages Python\u2019s breadth by building on top of several existing Python packages \u2014 NumPy, SciPy, and matplotlib \u2014 for math and science work. The resulting libraries can be used either for interactive \u201cworkbench\u201d applications or be embedded into other software and reused. The kit is available under a BSD license, so it\u2019s fully open and reusable. Scikit-learn\u00a0includes tools for many of the standard\u00a0<a href=\"http://strata.oreilly.com/2013/09/gaining-access-to-the-best-machine-learning-methods.html\">machine-learning\u00a0<i>tasks</i></a>\u00a0(such as clustering, classification, regression, etc.). And since scikit-learn is developed by a\u00a0<a href=\"https://github.com/scikit-learn/scikit-learn/graphs/contributors\">large community of developers and machine-learning experts</a>, promising new techniques tend to be included in fairly short order.</li>\n<li><a href=\"http://www.shogun-toolbox.org/\" target=\"_blank\">Shogun</a>\u00a0is among the oldest, most venerable of machine learning libraries, Shogun was created in 1999 and written in C++, but isn\u2019t limited to working in C++. Thanks to the\u00a0<a href=\"http://www.swig.org/\" target=\"_blank\">SWIG library</a>, Shogun can be used transparently in such languages and environments: as Java, Python, C#, Ruby, R, Lua, Octave, and Matlab.\u00a0Shogun is designed for unified large-scale learning for a broad range of feature types and learning settings, like classification, regression, or explorative data analysis.</li>\n<li><a href=\"https://www.tensorflow.org/\" target=\"_blank\">TensorFlow</a>\u00a0is an open source software library for numerical computation using data flow graphs.\u00a0TensorFlow implements what are called data flow graphs, where batches of data (\u201ctensors\u201d) can be processed by a series of algorithms described by a graph. The movements of the data through the system are called \u201cflows\u201d \u2014 hence, the name. Graphs can be assembled with C++ or Python and can be processed on CPUs or GPUs.</li>\n<li><a href=\"http://deeplearning.net/software/theano/\" target=\"_blank\">Theano</a>\u00a0is a Python library that lets you to define, optimize, and evaluate mathematical expressions, especially ones with multi-dimensional arrays (numpy.ndarray). Using Theano it is possible to attain speeds rivaling hand-crafted C implementations for problems involving large amounts of data.\u00a0It was written at the\u00a0<a href=\"http://www.iro.umontreal.ca/rubrique.php3?id_rubrique=27\">LISA</a>\u00a0lab to support rapid development of efficient machine learning algorithms. Theano is named after the\u00a0<a href=\"http://en.wikipedia.org/wiki/Theano_(mathematician)\">Greek mathematician</a>, who may have been Pythagoras\u2019 wife. Theano is released under a BSD license.</li>\n<li><a href=\"http://torch.ch/\" target=\"_blank\">Torch</a>\u00a0is a scientific computing framework with wide support for machine learning algorithms that puts GPUs first. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation.\u00a0The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a\u00a0<strong><a href=\"https://github.com/torch/torch7/wiki/Cheatsheet\">large ecosystem of community-driven packages</a></strong>\u00a0in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community.</li>\n<li><a href=\"https://velesnet.ml/\" target=\"_blank\">Veles</a>\u00a0is a distributed platform for deep-learning applications, and it\u2019s written in C++, although it uses Python to perform automation and coordination between nodes. Datasets can be analyzed and automatically normalized before being fed to the cluster, and a REST API allows the trained model to be used in production immediately. It\u00a0focuses on performance and flexibility. It has little hard-coded entities and enables training of all the widely recognized topologies, such as fully connected nets, convolutional nets, recurent nets etc.</li>\n</ul>\n<p>Tell us more about your favorate machine learning framework in comments.</p>\n<p><strong>Bio:\u00a0<a href=\"https://www.linkedin.com/in/devendra-desale-91872847\">Devendra Desale</a>(<a href=\"https://twitter.com/DevendraDesale\">@DevendraDesale</a>)</strong>\u00a0is a data science graduate student currently working on text mining and big data technologies. He is also interested in enterprise architectures and data-driven business.\u00a0When away from the computer, he also enjoys attending meetups and venturing into the unknown.</p>\n<p><b>Related</b>:</p>\n<ul class=\"three_ul\">\n<li><a href=\"/2016/03/top-10-data-science-github.html\" target=\"_blank\">Top 10 Data Science Resources on Github</a></li>\n<li><a href=\"/2016/02/top-10-data-visualization-github.html\" target=\"_blank\">Top 10 Data Visualization Projects on Github</a></li>\n<li><a href=\"/2016/03/data-science-tools-proprietary-vendors-vs-open-source.html\" target=\"_blank\">Data Science Tools \u2013 Are Proprietary Vendors Still Relevant?</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p><script type=\"text/javascript\">// <![CDATA[\nvar disqus_shortname = 'kdnuggets';   (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n// ]]&gt;</script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/mba-data-science-toolkit.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/uplift-modeling-opportunities-paw-chicago.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/opinions-interviews.html\">Opinions, Interviews, Reports</a> \u00bb Top 15 Frameworks for Machine Learning Experts (\u00a0<a href=\"/2016/n14.html\">16:n14</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556329114\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.706 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 21:38:34 -->\n<!-- Compression = gzip -->", "content_tokenized": ["devendra", "desal", "kdnugget", "comment", "machin", "learn", "engin", "are", "part", "the", "engin", "team", "who", "build", "the", "product", "and", "the", "algorithm", "make", "sure", "that", "work", "reliabl", "quick", "and", "atscal", "they", "work", "close", "with", "data", "scientist", "understand", "the", "theoret", "and", "busi", "aspect", "the", "context", "machin", "learn", "the", "main", "summari", "the", "differ", "the", "follow", "machin", "learn", "engin", "build", "implement", "and", "maintain", "product", "machin", "learn", "system", "data", "scientist", "conduct", "research", "generat", "idea", "about", "machin", "learn", "project", "and", "perform", "analysi", "understand", "the", "metric", "impact", "machin", "learn", "system", "below", "list", "framework", "for", "machin", "learn", "engin", "apach", "singa", "general", "distribut", "deep", "learn", "platform", "for", "train", "big", "deep", "learn", "model", "over", "larg", "dataset", "design", "with", "intuit", "program", "model", "base", "the", "layer", "abstract", "varieti", "popular", "deep", "learn", "model", "are", "support", "name", "feedforward", "model", "includ", "convolut", "neural", "network", "energi", "model", "like", "restrict", "boltzmann", "machin", "and", "recurr", "neural", "network", "mani", "builtin", "layer", "are", "provid", "for", "user", "amazon", "machin", "learn", "servic", "that", "make", "easi", "for", "develop", "all", "skill", "level", "use", "machin", "learn", "technolog", "amazon", "machin", "learn", "provid", "visual", "tool", "and", "wizard", "that", "guid", "through", "the", "process", "creat", "machin", "learn", "model", "without", "have", "learn", "complex", "algorithm", "and", "technolog", "connect", "data", "store", "amazon", "redshift", "and", "can", "run", "binari", "classif", "multiclass", "categor", "regress", "said", "data", "creat", "model", "azur", "studio", "allow", "microsoft", "azur", "user", "creat", "and", "train", "model", "then", "turn", "them", "into", "api", "that", "can", "consum", "other", "servic", "user", "get", "storag", "per", "account", "for", "model", "data", "although", "can", "also", "connect", "own", "azur", "storag", "the", "servic", "for", "larger", "model", "wide", "rang", "algorithm", "are", "avail", "courtesi", "both", "microsoft", "and", "third", "parti", "even", "need", "account", "tri", "out", "the", "servic", "can", "log", "anonym", "and", "use", "azur", "studio", "for", "eight", "hour", "caff", "deep", "learn", "framework", "made", "with", "express", "speed", "and", "modular", "mind", "develop", "the", "berkeley", "vision", "and", "learn", "center", "and", "communiti", "contributor", "yangq", "jia", "creat", "the", "project", "dure", "his", "phd", "berkeley", "caff", "releas", "under", "the", "numclaus", "licens", "model", "and", "optim", "are", "defin", "configur", "without", "hardcod", "user", "can", "switch", "between", "and", "speed", "make", "caff", "perfect", "for", "research", "experi", "and", "industri", "deploy", "caff", "can", "process", "over", "imag", "per", "day", "with", "singl", "make", "possibl", "for", "anyon", "easili", "appli", "math", "and", "predict", "analyt", "solv", "today", "most", "challeng", "busi", "problem", "intellig", "combin", "uniqu", "featur", "not", "current", "found", "other", "machin", "learn", "platform", "includ", "best", "breed", "open", "sourc", "technolog", "easytous", "webui", "and", "familiar", "interfac", "data", "agnost", "support", "for", "all", "common", "databas", "and", "file", "type", "with", "can", "work", "with", "exist", "languag", "and", "tool", "further", "can", "extend", "the", "platform", "seamless", "into", "hadoop", "environ", "massiv", "onlin", "analysi", "the", "most", "popular", "open", "sourc", "framework", "for", "data", "stream", "mine", "with", "veri", "activ", "grow", "communiti", "includ", "collect", "machin", "learn", "algorithm", "classif", "regress", "cluster", "outlier", "detect", "concept", "drift", "detect", "and", "recommend", "system", "and", "tool", "for", "evalu", "relat", "the", "project", "also", "written", "java", "while", "scale", "more", "demand", "problem", "mllib", "spark", "apach", "spark", "machin", "learn", "librari", "goal", "make", "practic", "machin", "learn", "scalabl", "and", "easi", "consist", "common", "learn", "algorithm", "and", "util", "includ", "classif", "regress", "cluster", "collabor", "filter", "dimension", "reduct", "well", "lowerlevel", "optim", "primit", "and", "higherlevel", "pipelin", "api", "mlpack", "cbase", "machin", "learn", "librari", "origin", "roll", "out", "num", "and", "design", "for", "scalabl", "speed", "and", "easeofus", "accord", "the", "librari", "creator", "implement", "mlpack", "can", "done", "through", "cach", "commandlin", "execut", "for", "quickanddirti", "black", "box", "oper", "with", "for", "more", "sophist", "work", "mlpack", "provid", "these", "algorithm", "simpl", "commandlin", "program", "and", "class", "which", "can", "then", "integr", "into", "largerscal", "machin", "learn", "solut", "pattern", "web", "mine", "modul", "for", "the", "python", "program", "languag", "has", "tool", "for", "data", "mine", "googl", "twitter", "and", "wikipedia", "web", "crawler", "parser", "natur", "languag", "process", "partofspeech", "tagger", "ngram", "search", "sentiment", "analysi", "wordnet", "machin", "learn", "vector", "space", "model", "cluster", "network", "analysi", "and", "visual", "scikitlearn", "leverag", "python", "breadth", "build", "top", "sever", "exist", "python", "packag", "numpi", "scipi", "and", "matplotlib", "for", "math", "and", "scienc", "work", "the", "result", "librari", "can", "use", "either", "for", "interact", "workbench", "applic", "embed", "into", "other", "softwar", "and", "reus", "the", "kit", "avail", "under", "licens", "fulli", "open", "and", "reusabl", "scikitlearn", "includ", "tool", "for", "mani", "the", "standard", "machinelearn", "task", "such", "cluster", "classif", "regress", "etc", "and", "sinc", "scikitlearn", "develop", "larg", "communiti", "develop", "and", "machinelearn", "expert", "promis", "new", "techniqu", "tend", "includ", "fair", "short", "order", "shogun", "among", "the", "oldest", "most", "vener", "machin", "learn", "librari", "shogun", "creat", "num", "and", "written", "but", "limit", "work", "thank", "the", "librari", "shogun", "can", "use", "transpar", "such", "languag", "and", "environ", "java", "python", "rubi", "lua", "octav", "and", "matlab", "shogun", "design", "for", "unifi", "largescal", "learn", "for", "broad", "rang", "featur", "type", "and", "learn", "set", "like", "classif", "regress", "explor", "data", "analysi", "tensorflow", "open", "sourc", "softwar", "librari", "for", "numer", "comput", "use", "data", "flow", "graph", "tensorflow", "implement", "what", "are", "call", "data", "flow", "graph", "where", "batch", "data", "tensor", "can", "process", "seri", "algorithm", "describ", "graph", "the", "movement", "the", "data", "through", "the", "system", "are", "call", "flow", "henc", "the", "name", "graph", "can", "assembl", "with", "python", "and", "can", "process", "cpus", "gpus", "theano", "python", "librari", "that", "let", "defin", "optim", "and", "evalu", "mathemat", "express", "especi", "one", "with", "multidimension", "array", "numpyndarray", "use", "theano", "possibl", "attain", "speed", "rival", "handcraft", "implement", "for", "problem", "involv", "larg", "amount", "data", "written", "the", "lab", "support", "rapid", "develop", "effici", "machin", "learn", "algorithm", "theano", "name", "after", "the", "greek", "mathematician", "who", "may", "have", "been", "pythagora", "wife", "theano", "releas", "under", "licens", "torch", "scientif", "comput", "framework", "with", "wide", "support", "for", "machin", "learn", "algorithm", "that", "put", "gpus", "first", "easi", "use", "and", "effici", "thank", "easi", "and", "fast", "script", "languag", "luajit", "and", "under", "implement", "the", "goal", "torch", "have", "maximum", "flexibl", "and", "speed", "build", "scientif", "algorithm", "while", "make", "the", "process", "extrem", "simpl", "torch", "come", "with", "larg", "ecosystem", "communitydriven", "packag", "machin", "learn", "comput", "vision", "signal", "process", "parallel", "process", "imag", "video", "audio", "and", "network", "among", "other", "and", "build", "top", "the", "lua", "communiti", "vele", "distribut", "platform", "for", "deeplearn", "applic", "and", "written", "although", "use", "python", "perform", "autom", "and", "coordin", "between", "node", "dataset", "can", "analyz", "and", "automat", "normal", "befor", "fed", "the", "cluster", "and", "allow", "the", "train", "model", "use", "product", "immedi", "focus", "perform", "and", "flexibl", "has", "littl", "hardcod", "entiti", "and", "enabl", "train", "all", "the", "wide", "recogn", "topolog", "such", "fulli", "connect", "net", "convolut", "net", "recur", "net", "etc", "tell", "more", "about", "favor", "machin", "learn", "framework", "comment", "bio", "devendra", "desal", "devendradesal", "data", "scienc", "graduat", "student", "current", "work", "text", "mine", "and", "big", "data", "technolog", "also", "interest", "enterpris", "architectur", "and", "datadriven", "busi", "when", "away", "from", "the", "comput", "also", "enjoy", "attend", "meetup", "and", "ventur", "into", "the", "unknown", "relat", "top", "num", "data", "scienc", "resourc", "github", "top", "num", "data", "visual", "project", "github", "data", "scienc", "tool", "are", "proprietari", "vendor", "still", "relev"], "timestamp_scraper": 1556366140.605482, "title": "Top 15 Frameworks for Machine Learning Experts", "read_time": 390.0, "content_html": "<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/devendra-desale\" rel=\"author\" title=\"Posts by Devendra Desale\">Devendra Desale</a>, KDnuggets.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p style=\"text-align: center;\"><img alt=\"machine-learning-frameworks\" class=\"wp-image-48034 aligncenter\" sizes=\"(max-width: 450px) 100vw, 450px\" src=\"/wp-content/uploads/machine-learning-frameworks.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/machine-learning-frameworks.jpg 450w, https://www.kdnuggets.com/wp-content/uploads/machine-learning-frameworks-300x234.jpg 300w\" width=\"90%\"/></p>\n<p>Machine learning engineers are part of the engineering team who\u00a0build the product and the algorithms, making sure that it works reliably, quickly, and at-scale. They work closely with data scientist to understand the theoretical and business aspect of it.\u00a0In the context of machine learning, the main summary of the differences is the following:</p>\n<ul class=\"three_ul\">\n<li>Machine learning engineers build, implement, and maintain production machine learning systems.</li>\n<li>Data scientists conduct research to generate ideas about machine learning projects, and perform analysis to understand the metrics impact of machine learning systems.</li>\n</ul>\n<p>Below is a list of frameworks for machine learning engineers:</p>\n<ul class=\"three_ul\">\n<li><a href=\"http://singa.apache.org/docs/overview.html\" target=\"_blank\">Apache Singa</a>\u00a0is a general distributed deep learning platform for training big deep learning models over large datasets. It is designed with an intuitive programming model based on the layer abstraction. A variety of popular deep learning models are supported, namely feed-forward models including convolutional neural networks (CNN), energy models like restricted Boltzmann machine (RBM), and recurrent neural networks (RNN). Many built-in layers are provided for users.</li>\n<li><a href=\"https://aws.amazon.com/machine-learning/\" target=\"_blank\">Amazon Machine Learning</a>\u00a0\u00a0is a service that makes it easy for developers of all skill levels to use machine learning technology. Amazon Machine Learning provides visualization tools and wizards that guide you through the process of creating machine learning (ML) models without having to learn complex ML algorithms and technology.\u00a0\u00a0It connects to data stored in Amazon S3, Redshift, or RDS, and can run binary classification, multiclass categorization, or regression on said data to create a model.</li>\n<li><a href=\"https://studio.azureml.net/\" target=\"_blank\">Azure ML Studio</a>\u00a0allows Microsoft Azure users to create and train models, then turn them into APIs that can be consumed by other services. Users get up to 10GB of storage per account for model data, although you can also connect your own Azure storage to the service for larger models. A wide range of algorithms are available, courtesy of both Microsoft and third parties. You don\u2019t even need an account to try out the service; you can log in anonymously and use Azure ML Studio for up to eight hours.</li>\n<li><a href=\"http://caffe.berkeleyvision.org/\" target=\"_blank\">Caffe</a>\u00a0is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (<a href=\"http://bvlc.eecs.berkeley.edu/\">BVLC</a>) and by community contributors. <a href=\"http://daggerfs.com/\">Yangqing Jia</a>\u00a0created the project during his PhD at UC Berkeley. Caffe is released under the\u00a0<a href=\"https://github.com/BVLC/caffe/blob/master/LICENSE\">BSD 2-Clause license</a>. \u00a0Models and optimization are defined by configuration without hard-coding &amp; user can switch between CPU and GPU.\u00a0Speed\u00a0makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day\u00a0with a single NVIDIA K40 GPU.</li>\n<li><a href=\"http://www.h2o.ai/\" target=\"_blank\">H2O</a>\u00a0makes it possible for anyone to easily apply math and predictive analytics to solve today\u2019s most challenging business problems. It intelligently combines unique features not currently found in other machine learning platforms including:\u00a0Best of Breed Open Source Technology,\u00a0Easy-to-use WebUI and Familiar Interfaces,\u00a0Data Agnostic Support for all Common Database and File Types.\u00a0With H2O, you can work with your existing languages and tools. Further, you can extend the platform seamlessly into your Hadoop environments.</li>\n<li><a href=\"http://moa.cms.waikato.ac.nz/\" target=\"_blank\">Massive Online Analysis (MOA)</a> is the most popular open source framework for data stream mining, with a very active growing community. It includes a collection of machine learning algorithms (<a href=\"http://moa.cms.waikato.ac.nz/details/classification/\">classification, regression</a>,\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/stream-clustering/\">clustering</a>,\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/outlier-detection/\">outlier detection</a>, concept drift detection and\u00a0<a href=\"http://moa.cms.waikato.ac.nz/details/recommender-systems/\">recommender systems</a>) and tools for evaluation. Related to the WEKA project, MOA is also written in Java, while scaling to more demanding problems.</li>\n<li><a href=\"http://spark.apache.org/mllib/\">MLlib (Spark)</a>\u00a0is Apache Spark\u2019s machine learning library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.</li>\n<li><a href=\"http://mlpack.org/\" target=\"_blank\">mlpack</a>,\u00a0a C++-based machine learning library originally rolled out in 2011 and designed for \u201cscalability, speed, and ease-of-use,\u201d according to the library\u2019s creators. Implementing mlpack can be done through a cache of command-line executables for quick-and-dirty, \u201cblack box\u201d operations, or with a C++ API for more sophisticated work. Mlpack\u00a0provides these algorithms as simple command-line programs and C++ classes which can then be integrated into larger-scale machine learning solutions.</li>\n<li><a href=\"http://www.clips.ua.ac.be/pattern\" target=\"_blank\">Pattern</a>\u00a0is a web mining module for the Python programming language. It has tools for data mining (Google, Twitter and Wikipedia API, a web crawler, a HTML DOM parser), natural language processing (part-of-speech taggers, n-gram search, sentiment analysis, WordNet), machine learning (vector space model, clustering, SVM), network analysis and &lt;canvas&gt; visualization.</li>\n<li><a href=\"http://scikit-learn.org/stable/\" target=\"_blank\">Scikit-Learn</a>\u00a0leverages Python\u2019s breadth by building on top of several existing Python packages \u2014 NumPy, SciPy, and matplotlib \u2014 for math and science work. The resulting libraries can be used either for interactive \u201cworkbench\u201d applications or be embedded into other software and reused. The kit is available under a BSD license, so it\u2019s fully open and reusable. Scikit-learn\u00a0includes tools for many of the standard\u00a0<a href=\"http://strata.oreilly.com/2013/09/gaining-access-to-the-best-machine-learning-methods.html\">machine-learning\u00a0<i>tasks</i></a>\u00a0(such as clustering, classification, regression, etc.). And since scikit-learn is developed by a\u00a0<a href=\"https://github.com/scikit-learn/scikit-learn/graphs/contributors\">large community of developers and machine-learning experts</a>, promising new techniques tend to be included in fairly short order.</li>\n<li><a href=\"http://www.shogun-toolbox.org/\" target=\"_blank\">Shogun</a>\u00a0is among the oldest, most venerable of machine learning libraries, Shogun was created in 1999 and written in C++, but isn\u2019t limited to working in C++. Thanks to the\u00a0<a href=\"http://www.swig.org/\" target=\"_blank\">SWIG library</a>, Shogun can be used transparently in such languages and environments: as Java, Python, C#, Ruby, R, Lua, Octave, and Matlab.\u00a0Shogun is designed for unified large-scale learning for a broad range of feature types and learning settings, like classification, regression, or explorative data analysis.</li>\n<li><a href=\"https://www.tensorflow.org/\" target=\"_blank\">TensorFlow</a>\u00a0is an open source software library for numerical computation using data flow graphs.\u00a0TensorFlow implements what are called data flow graphs, where batches of data (\u201ctensors\u201d) can be processed by a series of algorithms described by a graph. The movements of the data through the system are called \u201cflows\u201d \u2014 hence, the name. Graphs can be assembled with C++ or Python and can be processed on CPUs or GPUs.</li>\n<li><a href=\"http://deeplearning.net/software/theano/\" target=\"_blank\">Theano</a>\u00a0is a Python library that lets you to define, optimize, and evaluate mathematical expressions, especially ones with multi-dimensional arrays (numpy.ndarray). Using Theano it is possible to attain speeds rivaling hand-crafted C implementations for problems involving large amounts of data.\u00a0It was written at the\u00a0<a href=\"http://www.iro.umontreal.ca/rubrique.php3?id_rubrique=27\">LISA</a>\u00a0lab to support rapid development of efficient machine learning algorithms. Theano is named after the\u00a0<a href=\"http://en.wikipedia.org/wiki/Theano_(mathematician)\">Greek mathematician</a>, who may have been Pythagoras\u2019 wife. Theano is released under a BSD license.</li>\n<li><a href=\"http://torch.ch/\" target=\"_blank\">Torch</a>\u00a0is a scientific computing framework with wide support for machine learning algorithms that puts GPUs first. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation.\u00a0The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a\u00a0<strong><a href=\"https://github.com/torch/torch7/wiki/Cheatsheet\">large ecosystem of community-driven packages</a></strong>\u00a0in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community.</li>\n<li><a href=\"https://velesnet.ml/\" target=\"_blank\">Veles</a>\u00a0is a distributed platform for deep-learning applications, and it\u2019s written in C++, although it uses Python to perform automation and coordination between nodes. Datasets can be analyzed and automatically normalized before being fed to the cluster, and a REST API allows the trained model to be used in production immediately. It\u00a0focuses on performance and flexibility. It has little hard-coded entities and enables training of all the widely recognized topologies, such as fully connected nets, convolutional nets, recurent nets etc.</li>\n</ul>\n<p>Tell us more about your favorate machine learning framework in comments.</p>\n<p><strong>Bio:\u00a0<a href=\"https://www.linkedin.com/in/devendra-desale-91872847\">Devendra Desale</a>(<a href=\"https://twitter.com/DevendraDesale\">@DevendraDesale</a>)</strong>\u00a0is a data science graduate student currently working on text mining and big data technologies. He is also interested in enterprise architectures and data-driven business.\u00a0When away from the computer, he also enjoys attending meetups and venturing into the unknown.</p>\n<p><b>Related</b>:</p>\n<ul class=\"three_ul\">\n<li><a href=\"/2016/03/top-10-data-science-github.html\" target=\"_blank\">Top 10 Data Science Resources on Github</a></li>\n<li><a href=\"/2016/02/top-10-data-visualization-github.html\" target=\"_blank\">Top 10 Data Visualization Projects on Github</a></li>\n<li><a href=\"/2016/03/data-science-tools-proprietary-vendors-vs-open-source.html\" target=\"_blank\">Data Science Tools \u2013 Are Proprietary Vendors Still Relevant?</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p><script type=\"text/javascript\">// <![CDATA[\nvar disqus_shortname = 'kdnuggets';   (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n// ]]&gt;</script></p>\n</div> ", "website": "kdnuggets"}