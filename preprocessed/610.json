{"content": "By Jasmeet Bhatia, Microsoft. Disclaimer: Jasmeet Bhatia is a Data & AI Solution Architect currently working for Microsoft. Opinions expressed in this post are his own. If there are any doubts in regards to the popularity of Keras among the Data Scientist/Engineer community and the mindshare it commands, you just need to look at the support it has been receiving from all major AI and Cloud players. Currently the official Keras release already supports Google's TensorFlow and Microsoft's CNTK deep learning libraries besides supporting other popular libraries like Theano. Last year Amazon Web Services announced its support for Apache MXNet, another powerful Deep Learning library and few weeks ago support for Keras was added to the MXNet's next release candidate. As of now MXNet only seems to support Keras v1.2.2 and not the current Keras release 2.0.5. \u00a0 Although it is possible to deploy Keras models in production with any of the supported backends, developers and solution architects should keep in mind that Keras, by nature of being a high-level API for the different DL frameworks, doesn't yet support tweaking of all underlying parameters offered by the individual libraries. So in use cases where you would want to fine tune all parameters offered by the backend frameworks, you might be better off using one of the deep learning frameworks directly instead of using Keras as the top layer. This of course might change in future as additional functionalities are added to both Keras and the backend libraries. But having said that, Keras still remains an excellent tool that can fit into earlier stages of most deep learning development projects as it enables data scientists and engineers to quickly build and test complex deep learning models. Keras also enables developers to quickly test relative performance across multiple supported deep learning frameworks. A single parameter in Keras configuration file dictates what deep learning framework would be used as the backend. So, you can build a single model and without changing any code at all, you can run it on TensorFlow, CNTK and Theano. As for MXNet, since it only supports Keras ver1.2.2 right now, some minimal changes in code are required but this might change soon. These individual frameworks can obviously be fine-tuned further using features present in the individual libraries but Keras still provides an excellent opportunity to compare the base performance between these libraries. There have already been a few articles comparing the relative performance of backends supported by Keras but with each new release for Keras or the individual deep learning libraries, we are seeing drastic improvements in performance. So let\u2019s see how did the recent releases for the different deep learning frameworks performed in the recent matchup. Let\u2019s first go over the setup used for the tests. All performance tests were executed on Azure NC6 VM with Nvidia Tesla K80 GPU. The VM image used was Azure DSVM (Data Science Virtual Machine) on Ubuntu. The image comes pre-installed with Keras, TensorFlow, Theano and MXNet besides other data science tools. For tests, all packages were updated to recent releases. To use MXNet, older Keras package 1.2.2 was used. Additional details on Azure DSVM: /en-us/azure/machine-learning/machine-learning-data-science-virtual-machine-overview \u00a0 Configuration: \u00a0 Due to dependencies for each framework, I had to run the tests in three configurations, as shown below: For all frameworks latest available stable releases were used for testing. All frameworks have their next beta versions available which claim to improve performance and are probably good to use for research purpose, but for production applications, preference is to use the stable releases. Hence these beta versions are not included in the performance tests. \u00a0 Performance Tests: \u00a0 To compare the performance of the DL frameworks, I used 5 different test models described below. To ensure no particular framework got any special treatment, all models were sourced from Keras/examples repository maintained on GitHub. The test code/notebooks are available in my GitHub repo - /jasmeetsb/deep-learning-keras-projects Note: In two of the tests, MXNet was left out. This is because MXNet doesn\u2019t yet support newer Keras functions and scripts would have needed significant changes before running on MXNet. This would have defeated the purpose of this exercise. Even the 3 tests that were run on MXNet needed some minimal changes to the script, mostly due to renaming of some of the Keras functions in their recent releases. \u00a0 1. Test - CIFAR10 CNN Learning Model Type: Convolutional Neural Network (CNN) Datasets/Tasks: \u00a0CIFAR10 small images dataset Objective: Classify images into 10 classes In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet. In terms of accuracy/convergence speed CNTK seems to have a slight edge till 25 th iteration but by 50 th iteration all frameworks display similar accuracy. In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet. In terms of accuracy/convergence speed CNTK seems to have a slight edge till 25th iteration but by 50th iteration all frameworks display similar accuracy. \u00a0 2. Test - MNIST CNN Learning Model Type: CNN Datasets/Tasks: MNIST handwritten digit dataset Description: Classify images into 10 classes/digits In this test TensorFlow is the winner in terms of training speed followed closely by Theano but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics. In this test TensorFlow is a clear winner in terms of training speed but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics.", "title_html": "<h1 id=\"title\">The Search for the Fastest Keras Deep Learning Backend</h1> ", "url": "https://www.kdnuggets.com/2017/09/search-fastest-keras-deep-learning-backend.html", "tfidf": {"tfidf": {"base": 1.14628158845, "natur": 1.5392670157100001, "can": 4.70504556568, "googl": 11.388809182200001, "web": 5.17133550489, "slight": 13.01311475408, "relat": 2.47501753838, "fit": 3.37070063694, "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview": 1587.6, "project": 1.7534791252500002, "tensorflow": 11113.199999999999, "repo": 369.209302326, "express": 1.9120799710900003, "speed": 30.962457337920004, "addit": 2.49269901084, "numth": 2.3502590673599997, "would": 4.331491712719999, "script": 16.598013591220003, "layer": 8.14153846154, "azur": 340.20000000000005, "henc": 5.390831918509999, "dataset": 387.219512196, "function": 7.486325055, "class": 2.11651779763, "epoch": 76.695652174, "communiti": 1.96121062384, "neural": 59.4606741573, "mind": 3.5918552036199998, "just": 1.33580143037, "test": 45.170209205069995, "product": 3.24529844644, "work": 1.11520089913, "treatment": 3.87125091441, "featur": 1.52712581762, "exercis": 4.73627684964, "classifi": 10.5875291764, "renam": 3.98994722292, "finetun": 1587.6, "out": 1.06016694491, "announc": 2.02940048575, "across": 1.7318642958400001, "particular": 1.3814827706200001, "complex": 2.34021226415, "instead": 1.59461631177, "post": 2.23826307627, "tool": 9.99433427762, "one": 1.00627495722, "multipl": 2.74813917258, "among": 1.25670862028, "stage": 2.0831911822599998, "articl": 2.01805008262, "how": 1.60250328051, "enabl": 7.0843373494, "present": 1.25551601423, "maintain": 1.77306231852, "keep": 2.04245465071, "had": 1.0475750577399998, "special": 1.4881889763799998, "execut": 2.2363713199, "singl": 3.21897810218, "due": 2.47578947368, "paramet": 51.769565217300006, "for": 14.00441056014, "vnum": 29.291512915100004, "support": 15.222692768640002, "deep": 32.65173674586, "over": 3.07575072651, "showcas": 27.6585365854, "build": 3.2683479156, "purpos": 4.46833661694, "display": 5.86913123844, "updat": 5.56466876972, "new": 1.0178880554, "below": 4.51215006394, "claim": 1.52697893623, "perform": 15.313977042500003, "but": 9.14691761091, "were": 5.1229428848000005, "need": 4.31178707223, "there": 2.08182533438, "command": 2.66689064337, "off": 1.5121440137200002, "week": 1.80532181033, "descript": 4.00504540868, "apach": 67.27118644069999, "num": 10.003150400100001, "applic": 3.42672134686, "top": 1.8387769284200002, "datasetstask": 3175.2, "architect": 13.58083832336, "jasmeetsbdeeplearningkerasproject": 1587.6, "accuraci": 25.5241157556, "besid": 10.272403752839999, "cloud": 10.6193979933, "setup": 34.1419354839, "use": 13.385303845939998, "follow": 1.04640126549, "now": 2.321561746, "handwritten": 60.3650190114, "further": 1.3618116315, "configur": 34.51304347829999, "defeat": 2.87869446963, "code": 7.761427523839999, "model": 14.6341848828, "per": 3.9195161091199995, "see": 2.54484251022, "good": 1.51981619759, "possibl": 1.4173734488, "power": 1.3396337861799998, "under": 1.0781663837, "edg": 8.91409320606, "cours": 2.15092805853, "deploy": 7.41869158879, "classesdigit": 1587.6, "also": 1.01476510067, "not": 2.03134796238, "matchup": 115.043478261, "version": 4.016698292219999, "major": 1.14852058164, "research": 1.9420183486200002, "signific": 1.4529147982100001, "the": 38.0, "minim": 12.21700654098, "run": 6.22771403352, "candid": 4.51279135873, "solut": 9.4556283502, "regard": 1.78944995491, "yet": 4.251740760580001, "till": 23.126001456599997, "quick": 4.41, "theano": 6350.4, "tweak": 113.4, "shown": 2.76923076923, "said": 1.54751925139, "which": 1.005191845, "into": 3.04507384437, "individu": 7.201633023360001, "anoth": 1.13643521832, "last": 1.2117234010100002, "let": 6.97233201582, "jasmeet": 3175.2, "scienc": 4.63939216832, "win": 5.50580891278, "disclaim": 98.6086956522, "still": 2.3732715449599997, "github": 3175.2, "current": 4.5977410947, "what": 1.25343439128, "ensur": 3.4127257093700005, "term": 11.16161349856, "alreadi": 3.9103448275800003, "other": 2.01984732824, "without": 1.29547123623, "provid": 1.21552714187, "digit": 4.416133518780001, "offer": 3.07793718496, "prefer": 3.0216977540900003, "these": 3.22246278756, "got": 3.61969904241, "develop": 3.5867158671600006, "margin": 12.33566433566, "becaus": 1.1495184997499999, "imag": 13.506891271050002, "highlevel": 1587.6, "network": 2.59369384088, "like": 1.14918566775, "three": 1.06621893889, "some": 3.1211009174399997, "sourc": 1.69760479042, "small": 1.3594793629, "should": 1.6643254009900001, "both": 1.05215720061, "file": 3.7710213776699995, "dictat": 9.28964306612, "stabl": 13.40312368088, "servic": 1.51300867245, "that": 4.015936255, "codenotebook": 1587.6, "includ": 1.0190641247799999, "packag": 15.656804733720001, "repositori": 44.974504249300004, "older": 2.71523858389, "next": 2.9901120632800002, "kera": 16711.57894736, "receiv": 1.3054847463200001, "kerasexampl": 1587.6, "ani": 4.53535209256, "two": 1.01379310345, "virtual": 4.11295336788, "and": 14.000881889819999, "from": 2.00113442994, "engin": 2.47135740971, "ubuntu": 529.2, "chang": 7.0853912526, "similar": 5.50056301428, "winner": 10.40366972478, "detail": 2.26186066391, "differ": 3.7096347067499997, "been": 2.0478555304799997, "mxnet": 19051.199999999997, "seem": 6.87371915139, "most": 2.04192926046, "between": 1.03453668708, "left": 1.4398693996, "microsoft": 74.5352112675, "player": 3.54375, "excel": 9.68935001526, "depend": 2.2411067193700003, "obvious": 6.44841592201, "all": 13.14908256883, "accuracyconverg": 6350.4, "releas": 16.53941428407, "soon": 1.9817750592900003, "with": 4.004792835959999, "scientistengin": 1587.6, "characterist": 7.344899375439999, "are": 8.23924748624, "recent": 6.1762303054, "better": 2.0065722952500002, "case": 1.48498737256, "mindshar": 1587.6, "latest": 7.078020508250001, "look": 1.9086318826599997, "popular": 3.01538461538, "backend": 4669.411764705, "preinstal": 1587.6, "object": 2.3488681757700003, "futur": 1.8577112099200002, "improv": 4.08753861998, "newer": 9.9225, "ago": 6.05954198473, "want": 1.99698113208, "tune": 10.4173228346, "fine": 4.02229541424, "befor": 1.10036041031, "librari": 21.4613044948, "doubt": 5.31325301205, "compar": 5.598683437170001, "close": 1.2848818387799998, "drastic": 14.0620017715, "even": 1.16461267606, "avail": 5.1865403463, "describ": 1.47027227264, "vernum": 1587.6, "onli": 2.0512953033200003, "each": 2.37949640288, "their": 2.0309581681, "train": 7.7462795803999995, "few": 2.63458347162, "beta": 50.0820189274, "amazon": 33.1440501044, "this": 8.03034901368, "framework": 131.20661157023997, "remain": 1.16598119859, "his": 1.0943682360200002, "type": 4.056208482380001, "data": 16.8821777967, "note": 1.42449528937, "probabl": 2.64555907349, "scientist": 4.69426374926, "machin": 4.02433460076, "iter": 149.7735849056, "convolut": 101.121019108, "come": 1.32831325301, "might": 6.468559011270001, "offici": 1.40483143085, "nvidia": 453.6, "sinc": 1.08368600683, "right": 1.4054532577899999, "requir": 1.52844902282, "where": 1.06715063521, "direct": 1.22226499346, "first": 1.00761614623, "earlier": 1.86776470588, "bhatia": 1867.764705882, "have": 7.104263887979998, "although": 1.14968498805, "year": 1.0485436893200002, "opportun": 3.0119521912400002, "clear": 1.85423966363, "opinion": 3.8044572250199997, "tesla": 108.739726027, "learn": 25.550256035150003, "own": 1.17844418052, "doe": 1.70581282905, "has": 1.0436497502}, "logtfidf": {"base": 0.13652330228700002, "natur": 0.431306339292, "can": 0.649364385576, "googl": 2.43263122258, "web": 1.6431309733200001, "slight": 4.71865326024, "relat": 0.42620060330799997, "fit": 1.2151206268899999, "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview": 7.369978720910001, "project": 0.561601885907, "tensorflow": 51.58985104637001, "repo": 5.91136369821, "express": 0.648191639641, "speed": 10.826671002160001, "addit": 0.440437765944, "numth": 0.322756765898, "would": 0.3184705118588, "script": 4.232271688919999, "layer": 2.0969791623500003, "azur": 14.19276417387, "henc": 1.68469971782, "dataset": 10.53168913328, "function": 2.743397224782, "class": 0.7497721899330001, "epoch": 7.293395680160001, "communiti": 0.673561947791, "neural": 4.0853151555, "mind": 1.2786688388299998, "just": 0.289531434109, "test": 16.612815430751, "product": 0.968120273072, "work": 0.109034567273, "treatment": 1.3535776885100002, "featur": 0.423387418142, "exercis": 1.5552513523, "classifi": 3.3330592702999997, "renam": 1.3837780034799998, "finetun": 7.369978720910001, "out": 0.0584263909193, "announc": 0.707740422218, "across": 0.549198455941, "particular": 0.323157393804, "complex": 0.8502416364309999, "instead": 0.46663315041500003, "post": 0.8057001527009999, "tool": 3.21774235926, "one": 0.0062553516455, "multipl": 1.01092401812, "among": 0.228496097073, "stage": 0.733900940237, "articl": 0.702131739574, "how": 0.47156695693000006, "enabl": 2.52947831908, "present": 0.227546654799, "maintain": 0.572708175102, "keep": 0.7141523446729999, "had": 0.0464780244111, "special": 0.39755992860100003, "execut": 0.804854605864, "singl": 0.951833538118, "due": 0.42682428772799996, "paramet": 8.544570431579999, "for": 0.0044098655355580005, "vnum": 3.3772978124599997, "support": 2.854567320444, "deep": 11.598061228199999, "over": 0.0748101644871, "showcas": 5.2535744740400006, "build": 0.982274904182, "purpos": 1.607738074644, "display": 2.15311888412, "updat": 1.7164374626899999, "new": 0.0177299468511, "below": 1.627253183872, "claim": 0.423291231925, "perform": 4.2618085057999995, "but": 0.1457313486471, "were": 0.12145571840549998, "need": 1.088220490326, "there": 0.080195785851, "command": 0.9809132407500001, "off": 0.41352852038800003, "week": 0.5907388641619999, "descript": 1.38755491845, "apach": 4.20873200888, "num": 0.0031499039539700006, "applic": 1.23160392849, "top": 0.609100637788, "datasetstask": 14.739957441820001, "architect": 3.83102534374, "jasmeetsbdeeplearningkerasproject": 7.369978720910001, "accuraci": 5.0929530812, "besid": 3.27262774354, "cloud": 2.36268232808, "setup": 3.5305264083199996, "use": 0.37970425651080003, "follow": 0.045356911094199995, "now": 0.298185890042, "handwritten": 4.100409781730001, "further": 0.308815895297, "configur": 7.328175107249999, "defeat": 1.05733688222, "code": 2.71203819194, "model": 5.162150511777001, "per": 1.345642048144, "see": 0.481843170984, "good": 0.418589404907, "possibl": 0.348805474891, "power": 0.292396282715, "under": 0.07526180538319999, "edg": 2.9889727000999997, "cours": 0.765899404133, "deploy": 2.00400270589, "classesdigit": 7.369978720910001, "also": 0.0146571578, "not": 0.031104826015, "matchup": 4.74531012875, "version": 1.394626128518, "major": 0.138474663439, "research": 0.663727818138, "signific": 0.373571744332, "the": 0.0, "minim": 3.61936355852, "run": 1.770859902156, "candid": 1.50691588861, "solut": 3.10692595254, "regard": 0.5819082848730001, "yet": 1.508362618482, "till": 4.89562081626, "quick": 1.581455017798, "theano": 29.479914883640003, "tweak": 4.73092139129, "shown": 1.01856958099, "said": 0.436653165815, "which": 0.00517841384543, "into": 0.0447385896861, "individu": 2.35205379194, "anoth": 0.127896361652, "last": 0.19204364461100001, "let": 2.4976051345599997, "jasmeet": 14.739957441820001, "scienc": 1.682872357782, "win": 2.02531304058, "disclaim": 4.591159448919999, "still": 0.34224444285800004, "github": 14.739957441820001, "current": 1.280858483535, "what": 0.225887296827, "ensur": 1.22751130026, "term": 2.6643118683680003, "alreadi": 1.340956761494, "other": 0.01974949583952, "without": 0.258874517941, "provid": 0.19517784432500002, "digit": 1.48526454375, "offer": 0.862224893804, "prefer": 1.10581884366, "these": 0.2146008582024, "got": 1.2863908849299999, "develop": 0.535874084739, "margin": 3.6386948515, "becaus": 0.139343158825, "imag": 4.96881053645, "highlevel": 7.369978720910001, "network": 0.9530830530519999, "like": 0.139053576545, "three": 0.06411868822490001, "some": 0.11872052719350001, "sourc": 0.529218310751, "small": 0.307101805059, "should": 0.509419876758, "both": 0.050842533389300004, "file": 1.32734588723, "dictat": 2.22890013079, "stabl": 3.80468121948, "servic": 0.41410016674500005, "that": 0.01590459351856, "codenotebook": 7.369978720910001, "includ": 0.0188846813905, "packag": 4.115516898380001, "repositori": 3.8060957569699996, "older": 0.998879825727, "next": 0.804327370998, "kera": 134.5624966948, "receiv": 0.266574424922, "kerasexampl": 7.369978720910001, "ani": 0.502433433464, "two": 0.0136988443582, "virtual": 1.4141413514399999, "and": 0.0008818619888904, "from": 0.001134108337732, "engin": 0.904767558276, "ubuntu": 6.27136643224, "chang": 0.9976537503480001, "similar": 1.274224368456, "winner": 3.298022843, "detail": 0.816187777173, "differ": 0.6369633639360001, "been": 0.04729196473680001, "mxnet": 88.43974465092, "seem": 2.487279096828, "most": 0.041495792591199995, "between": 0.033953681165299995, "left": 0.364552414753, "microsoft": 9.637978078589999, "player": 1.26518548849, "excel": 3.1557603304, "depend": 0.806969815, "obvious": 1.86383450716, "all": 0.1482342172714, "accuracyconverg": 29.479914883640003, "releas": 5.4766952958960005, "soon": 0.6839929376880001, "with": 0.00478996685356, "scientistengin": 7.369978720910001, "characterist": 2.60171785848, "are": 0.2357397886616, "recent": 1.737654965152, "better": 0.6964279406, "case": 0.395406268889, "mindshar": 7.369978720910001, "latest": 1.95699427938, "look": 0.6463866936, "popular": 0.8211604175499999, "backend": 34.196752349250005, "preinstal": 7.369978720910001, "object": 0.853933584803, "futur": 0.619345197699, "improv": 1.4295916078639999, "newer": 2.29480490568, "ago": 1.80163421715, "want": 0.6916366062549999, "tune": 2.3434700776599997, "fine": 1.39185273824, "befor": 0.0956377718795, "librari": 7.894479847544, "doubt": 1.67020426765, "compar": 1.8717575427809998, "close": 0.250666759864, "drastic": 2.64347624975, "even": 0.152388564834, "avail": 1.642363758867, "describ": 0.385447603125, "vernum": 7.369978720910001, "onli": 0.050648536658199995, "each": 0.347483378608, "their": 0.030721010245400002, "train": 2.643673251356, "few": 0.551155827306, "beta": 6.44102971894, "amazon": 3.50086321649, "this": 0.03029159242, "framework": 33.66695273712, "remain": 0.15356296309, "his": 0.0901772433641, "type": 1.414202970774, "data": 6.084102924, "note": 0.353817568083, "probabl": 0.972882412913, "scientist": 1.54634128444, "machin": 1.39235958062, "iter": 14.49132143468, "convolut": 4.61631800855, "come": 0.28390990653000003, "might": 2.3050232296020003, "offici": 0.339917317543, "nvidia": 6.117215752409999, "sinc": 0.0803681994577, "right": 0.34035985417, "requir": 0.424253510675, "where": 0.0649921387457, "direct": 0.200705689496, "first": 0.0075872898121599995, "earlier": 0.624742371425, "bhatia": 13.6787009397, "have": 0.1034950163884, "although": 0.139487981418, "year": 0.047402238894600005, "opportun": 1.10258843705, "clear": 0.617474727198, "opinion": 1.33617333331, "tesla": 4.68895719219, "learn": 9.270272712195, "own": 0.164195077421, "doe": 0.5340417297169999, "has": 0.0427239448548}, "logidf": {"base": 0.13652330228700002, "natur": 0.431306339292, "can": 0.162341096394, "googl": 2.43263122258, "web": 1.6431309733200001, "slight": 1.17966331506, "relat": 0.21310030165399999, "fit": 1.2151206268899999, "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview": 7.369978720910001, "project": 0.561601885907, "tensorflow": 7.369978720910001, "repo": 5.91136369821, "express": 0.648191639641, "speed": 1.3533338752700002, "addit": 0.220218882972, "numth": 0.161378382949, "would": 0.0796176279647, "script": 2.1161358444599996, "layer": 2.0969791623500003, "azur": 4.73092139129, "henc": 1.68469971782, "dataset": 5.26584456664, "function": 0.914465741594, "class": 0.7497721899330001, "epoch": 3.6466978400800003, "communiti": 0.673561947791, "neural": 4.0853151555, "mind": 1.2786688388299998, "just": 0.289531434109, "test": 0.977224437103, "product": 0.484060136536, "work": 0.109034567273, "treatment": 1.3535776885100002, "featur": 0.423387418142, "exercis": 1.5552513523, "classifi": 1.6665296351499999, "renam": 1.3837780034799998, "finetun": 7.369978720910001, "out": 0.0584263909193, "announc": 0.707740422218, "across": 0.549198455941, "particular": 0.323157393804, "complex": 0.8502416364309999, "instead": 0.46663315041500003, "post": 0.8057001527009999, "tool": 1.60887117963, "one": 0.0062553516455, "multipl": 1.01092401812, "among": 0.228496097073, "stage": 0.733900940237, "articl": 0.702131739574, "how": 0.47156695693000006, "enabl": 1.26473915954, "present": 0.227546654799, "maintain": 0.572708175102, "keep": 0.7141523446729999, "had": 0.0464780244111, "special": 0.39755992860100003, "execut": 0.804854605864, "singl": 0.475916769059, "due": 0.21341214386399998, "paramet": 2.8481901438599997, "for": 0.00031499039539700004, "vnum": 3.3772978124599997, "support": 0.237880610037, "deep": 1.2886734698, "over": 0.0249367214957, "showcas": 2.6267872370200003, "build": 0.491137452091, "purpos": 0.803869037322, "display": 1.07655944206, "updat": 1.7164374626899999, "new": 0.0177299468511, "below": 0.813626591936, "claim": 0.423291231925, "perform": 0.42618085058, "but": 0.0161923720719, "were": 0.024291143681099997, "need": 0.362740163442, "there": 0.0400978929255, "command": 0.9809132407500001, "off": 0.41352852038800003, "week": 0.5907388641619999, "descript": 1.38755491845, "apach": 4.20873200888, "num": 0.00031499039539700004, "applic": 1.23160392849, "top": 0.609100637788, "datasetstask": 7.369978720910001, "architect": 1.91551267187, "jasmeetsbdeeplearningkerasproject": 7.369978720910001, "accuraci": 2.5464765406, "besid": 1.63631387177, "cloud": 2.36268232808, "setup": 3.5305264083199996, "use": 0.0292080197316, "follow": 0.045356911094199995, "now": 0.149092945021, "handwritten": 4.100409781730001, "further": 0.308815895297, "configur": 2.4427250357499997, "defeat": 1.05733688222, "code": 1.35601909597, "model": 0.7374500731110001, "per": 0.672821024072, "see": 0.240921585492, "good": 0.418589404907, "possibl": 0.348805474891, "power": 0.292396282715, "under": 0.07526180538319999, "edg": 1.4944863500499999, "cours": 0.765899404133, "deploy": 2.00400270589, "classesdigit": 7.369978720910001, "also": 0.0146571578, "not": 0.0155524130075, "matchup": 4.74531012875, "version": 0.697313064259, "major": 0.138474663439, "research": 0.663727818138, "signific": 0.373571744332, "the": 0.0, "minim": 1.80968177926, "run": 0.442714975539, "candid": 1.50691588861, "solut": 1.55346297627, "regard": 0.5819082848730001, "yet": 0.754181309241, "till": 2.44781040813, "quick": 0.790727508899, "theano": 7.369978720910001, "tweak": 4.73092139129, "shown": 1.01856958099, "said": 0.436653165815, "which": 0.00517841384543, "into": 0.0149128632287, "individu": 0.588013447985, "anoth": 0.127896361652, "last": 0.19204364461100001, "let": 1.2488025672799998, "jasmeet": 7.369978720910001, "scienc": 0.841436178891, "win": 1.01265652029, "disclaim": 4.591159448919999, "still": 0.17112222142900002, "github": 7.369978720910001, "current": 0.42695282784500005, "what": 0.225887296827, "ensur": 1.22751130026, "term": 0.33303898354600003, "alreadi": 0.670478380747, "other": 0.00987474791976, "without": 0.258874517941, "provid": 0.19517784432500002, "digit": 1.48526454375, "offer": 0.431112446902, "prefer": 1.10581884366, "these": 0.0715336194008, "got": 1.2863908849299999, "develop": 0.178624694913, "margin": 1.81934742575, "becaus": 0.139343158825, "imag": 0.99376210729, "highlevel": 7.369978720910001, "network": 0.9530830530519999, "like": 0.139053576545, "three": 0.06411868822490001, "some": 0.0395735090645, "sourc": 0.529218310751, "small": 0.307101805059, "should": 0.509419876758, "both": 0.050842533389300004, "file": 1.32734588723, "dictat": 2.22890013079, "stabl": 1.90234060974, "servic": 0.41410016674500005, "that": 0.00397614837964, "codenotebook": 7.369978720910001, "includ": 0.0188846813905, "packag": 2.0577584491900005, "repositori": 3.8060957569699996, "older": 0.998879825727, "next": 0.402163685499, "kera": 6.72812483474, "receiv": 0.266574424922, "kerasexampl": 7.369978720910001, "ani": 0.125608358366, "two": 0.0136988443582, "virtual": 1.4141413514399999, "and": 6.29901420636e-05, "from": 0.000567054168866, "engin": 0.904767558276, "ubuntu": 6.27136643224, "chang": 0.166275625058, "similar": 0.318556092114, "winner": 1.6490114215, "detail": 0.816187777173, "differ": 0.212321121312, "been": 0.023645982368400004, "mxnet": 7.369978720910001, "seem": 0.829093032276, "most": 0.020747896295599998, "between": 0.033953681165299995, "left": 0.364552414753, "microsoft": 3.21265935953, "player": 1.26518548849, "excel": 1.5778801652, "depend": 0.806969815, "obvious": 1.86383450716, "all": 0.011402632097799998, "accuracyconverg": 7.369978720910001, "releas": 0.608521699544, "soon": 0.6839929376880001, "with": 0.00119749171339, "scientistengin": 7.369978720910001, "characterist": 1.30085892924, "are": 0.0294674735827, "recent": 0.434413741288, "better": 0.6964279406, "case": 0.395406268889, "mindshar": 7.369978720910001, "latest": 1.95699427938, "look": 0.6463866936, "popular": 0.41058020877499996, "backend": 6.83935046985, "preinstal": 7.369978720910001, "object": 0.853933584803, "futur": 0.619345197699, "improv": 0.7147958039319999, "newer": 2.29480490568, "ago": 1.80163421715, "want": 0.6916366062549999, "tune": 2.3434700776599997, "fine": 1.39185273824, "befor": 0.0956377718795, "librari": 0.986809980943, "doubt": 1.67020426765, "compar": 0.6239191809269999, "close": 0.250666759864, "drastic": 2.64347624975, "even": 0.152388564834, "avail": 0.547454586289, "describ": 0.385447603125, "vernum": 7.369978720910001, "onli": 0.025324268329099998, "each": 0.173741689304, "their": 0.015360505122700001, "train": 0.660918312839, "few": 0.275577913653, "beta": 3.22051485947, "amazon": 3.50086321649, "this": 0.0037864490525, "framework": 2.10418454607, "remain": 0.15356296309, "his": 0.0901772433641, "type": 0.707101485387, "data": 1.2168205848, "note": 0.353817568083, "probabl": 0.972882412913, "scientist": 1.54634128444, "machin": 1.39235958062, "iter": 3.62283035867, "convolut": 4.61631800855, "come": 0.28390990653000003, "might": 0.7683410765340001, "offici": 0.339917317543, "nvidia": 6.117215752409999, "sinc": 0.0803681994577, "right": 0.34035985417, "requir": 0.424253510675, "where": 0.0649921387457, "direct": 0.200705689496, "first": 0.0075872898121599995, "earlier": 0.624742371425, "bhatia": 6.83935046985, "have": 0.0147850023412, "although": 0.139487981418, "year": 0.047402238894600005, "opportun": 1.10258843705, "clear": 0.617474727198, "opinion": 1.33617333331, "tesla": 4.68895719219, "learn": 0.842752064745, "own": 0.164195077421, "doe": 0.5340417297169999, "has": 0.0427239448548}, "freq": {"base": 1, "natur": 1, "can": 4, "googl": 1, "web": 1, "slight": 4, "relat": 2, "fit": 1, "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview": 1, "project": 1, "tensorflow": 7, "repo": 1, "express": 1, "speed": 8, "addit": 2, "numth": 2, "would": 4, "script": 2, "layer": 1, "azur": 3, "henc": 1, "dataset": 2, "function": 3, "class": 1, "epoch": 2, "communiti": 1, "neural": 1, "mind": 1, "just": 1, "test": 17, "product": 2, "work": 1, "treatment": 1, "featur": 1, "exercis": 1, "classifi": 2, "renam": 1, "finetun": 1, "out": 1, "announc": 1, "across": 1, "particular": 1, "complex": 1, "instead": 1, "post": 1, "tool": 2, "one": 1, "multipl": 1, "among": 1, "stage": 1, "articl": 1, "how": 1, "enabl": 2, "present": 1, "maintain": 1, "keep": 1, "had": 1, "special": 1, "execut": 1, "singl": 2, "due": 2, "paramet": 3, "for": 14, "vnum": 1, "support": 12, "deep": 9, "over": 3, "showcas": 2, "build": 2, "purpos": 2, "display": 2, "updat": 1, "new": 1, "below": 2, "claim": 1, "perform": 10, "but": 9, "were": 5, "need": 3, "there": 2, "command": 1, "off": 1, "week": 1, "descript": 1, "apach": 1, "num": 10, "applic": 1, "top": 1, "datasetstask": 2, "architect": 2, "jasmeetsbdeeplearningkerasproject": 1, "accuraci": 2, "besid": 2, "cloud": 1, "setup": 1, "use": 13, "follow": 1, "now": 2, "handwritten": 1, "further": 1, "configur": 3, "defeat": 1, "code": 2, "model": 7, "per": 2, "see": 2, "good": 1, "possibl": 1, "power": 1, "under": 1, "edg": 2, "cours": 1, "deploy": 1, "classesdigit": 1, "also": 1, "not": 2, "matchup": 1, "version": 2, "major": 1, "research": 1, "signific": 1, "the": 38, "minim": 2, "run": 4, "candid": 1, "solut": 2, "regard": 1, "yet": 2, "till": 2, "quick": 2, "theano": 4, "tweak": 1, "shown": 1, "said": 1, "which": 1, "into": 3, "individu": 4, "anoth": 1, "last": 1, "let": 2, "jasmeet": 2, "scienc": 2, "win": 2, "disclaim": 1, "still": 2, "github": 2, "current": 3, "what": 1, "ensur": 1, "term": 8, "alreadi": 2, "other": 2, "without": 1, "provid": 1, "digit": 1, "offer": 2, "prefer": 1, "these": 3, "got": 1, "develop": 3, "margin": 2, "becaus": 1, "imag": 5, "highlevel": 1, "network": 1, "like": 1, "three": 1, "some": 3, "sourc": 1, "small": 1, "should": 1, "both": 1, "file": 1, "dictat": 1, "stabl": 2, "servic": 1, "that": 4, "codenotebook": 1, "includ": 1, "packag": 2, "repositori": 1, "older": 1, "next": 2, "kera": 20, "receiv": 1, "kerasexampl": 1, "ani": 4, "two": 1, "virtual": 1, "and": 14, "from": 2, "engin": 1, "ubuntu": 1, "chang": 6, "similar": 4, "winner": 2, "detail": 1, "differ": 3, "been": 2, "mxnet": 12, "seem": 3, "most": 2, "between": 1, "left": 1, "microsoft": 3, "player": 1, "excel": 2, "depend": 1, "obvious": 1, "all": 13, "accuracyconverg": 4, "releas": 9, "soon": 1, "with": 4, "scientistengin": 1, "characterist": 2, "are": 8, "recent": 4, "better": 1, "case": 1, "mindshar": 1, "latest": 1, "look": 1, "popular": 2, "backend": 5, "preinstal": 1, "object": 1, "futur": 1, "improv": 2, "newer": 1, "ago": 1, "want": 1, "tune": 1, "fine": 1, "befor": 1, "librari": 8, "doubt": 1, "compar": 3, "close": 1, "drastic": 1, "even": 1, "avail": 3, "describ": 1, "vernum": 1, "onli": 2, "each": 2, "their": 2, "train": 4, "few": 2, "beta": 2, "amazon": 1, "this": 8, "framework": 16, "remain": 1, "his": 1, "type": 2, "data": 5, "note": 1, "probabl": 1, "scientist": 1, "machin": 1, "iter": 4, "convolut": 1, "come": 1, "might": 3, "offici": 1, "nvidia": 1, "sinc": 1, "right": 1, "requir": 1, "where": 1, "direct": 1, "first": 1, "earlier": 1, "bhatia": 2, "have": 7, "although": 1, "year": 1, "opportun": 1, "clear": 1, "opinion": 1, "tesla": 1, "learn": 11, "own": 1, "doe": 1, "has": 1}, "idf": {"base": 1.14628158845, "natur": 1.5392670157100001, "can": 1.17626139142, "googl": 11.388809182200001, "web": 5.17133550489, "slight": 3.25327868852, "relat": 1.23750876919, "fit": 3.37070063694, "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview": 1587.6, "project": 1.7534791252500002, "tensorflow": 1587.6, "repo": 369.209302326, "express": 1.9120799710900003, "speed": 3.8703071672400005, "addit": 1.24634950542, "numth": 1.1751295336799998, "would": 1.0828729281799998, "script": 8.299006795610001, "layer": 8.14153846154, "azur": 113.4, "henc": 5.390831918509999, "dataset": 193.609756098, "function": 2.495441685, "class": 2.11651779763, "epoch": 38.347826087, "communiti": 1.96121062384, "neural": 59.4606741573, "mind": 3.5918552036199998, "just": 1.33580143037, "test": 2.65707112971, "product": 1.62264922322, "work": 1.11520089913, "treatment": 3.87125091441, "featur": 1.52712581762, "exercis": 4.73627684964, "classifi": 5.2937645882, "renam": 3.98994722292, "finetun": 1587.6, "out": 1.06016694491, "announc": 2.02940048575, "across": 1.7318642958400001, "particular": 1.3814827706200001, "complex": 2.34021226415, "instead": 1.59461631177, "post": 2.23826307627, "tool": 4.99716713881, "one": 1.00627495722, "multipl": 2.74813917258, "among": 1.25670862028, "stage": 2.0831911822599998, "articl": 2.01805008262, "how": 1.60250328051, "enabl": 3.5421686747, "present": 1.25551601423, "maintain": 1.77306231852, "keep": 2.04245465071, "had": 1.0475750577399998, "special": 1.4881889763799998, "execut": 2.2363713199, "singl": 1.60948905109, "due": 1.23789473684, "paramet": 17.256521739100002, "for": 1.00031504001, "vnum": 29.291512915100004, "support": 1.2685577307200002, "deep": 3.6279707495399998, "over": 1.02525024217, "showcas": 13.8292682927, "build": 1.6341739578, "purpos": 2.23416830847, "display": 2.93456561922, "updat": 5.56466876972, "new": 1.0178880554, "below": 2.25607503197, "claim": 1.52697893623, "perform": 1.5313977042500002, "but": 1.01632417899, "were": 1.02458857696, "need": 1.4372623574099999, "there": 1.04091266719, "command": 2.66689064337, "off": 1.5121440137200002, "week": 1.80532181033, "descript": 4.00504540868, "apach": 67.27118644069999, "num": 1.00031504001, "applic": 3.42672134686, "top": 1.8387769284200002, "datasetstask": 1587.6, "architect": 6.79041916168, "jasmeetsbdeeplearningkerasproject": 1587.6, "accuraci": 12.7620578778, "besid": 5.1362018764199995, "cloud": 10.6193979933, "setup": 34.1419354839, "use": 1.0296387573799999, "follow": 1.04640126549, "now": 1.160780873, "handwritten": 60.3650190114, "further": 1.3618116315, "configur": 11.504347826099998, "defeat": 2.87869446963, "code": 3.8807137619199996, "model": 2.0905978404, "per": 1.9597580545599997, "see": 1.27242125511, "good": 1.51981619759, "possibl": 1.4173734488, "power": 1.3396337861799998, "under": 1.0781663837, "edg": 4.45704660303, "cours": 2.15092805853, "deploy": 7.41869158879, "classesdigit": 1587.6, "also": 1.01476510067, "not": 1.01567398119, "matchup": 115.043478261, "version": 2.0083491461099996, "major": 1.14852058164, "research": 1.9420183486200002, "signific": 1.4529147982100001, "the": 1.0, "minim": 6.10850327049, "run": 1.55692850838, "candid": 4.51279135873, "solut": 4.7278141751, "regard": 1.78944995491, "yet": 2.1258703802900003, "till": 11.563000728299999, "quick": 2.205, "theano": 1587.6, "tweak": 113.4, "shown": 2.76923076923, "said": 1.54751925139, "which": 1.005191845, "into": 1.01502461479, "individu": 1.8004082558400003, "anoth": 1.13643521832, "last": 1.2117234010100002, "let": 3.48616600791, "jasmeet": 1587.6, "scienc": 2.31969608416, "win": 2.75290445639, "disclaim": 98.6086956522, "still": 1.1866357724799999, "github": 1587.6, "current": 1.5325803649, "what": 1.25343439128, "ensur": 3.4127257093700005, "term": 1.39520168732, "alreadi": 1.9551724137900002, "other": 1.00992366412, "without": 1.29547123623, "provid": 1.21552714187, "digit": 4.416133518780001, "offer": 1.53896859248, "prefer": 3.0216977540900003, "these": 1.07415426252, "got": 3.61969904241, "develop": 1.1955719557200002, "margin": 6.16783216783, "becaus": 1.1495184997499999, "imag": 2.70137825421, "highlevel": 1587.6, "network": 2.59369384088, "like": 1.14918566775, "three": 1.06621893889, "some": 1.04036697248, "sourc": 1.69760479042, "small": 1.3594793629, "should": 1.6643254009900001, "both": 1.05215720061, "file": 3.7710213776699995, "dictat": 9.28964306612, "stabl": 6.70156184044, "servic": 1.51300867245, "that": 1.00398406375, "codenotebook": 1587.6, "includ": 1.0190641247799999, "packag": 7.828402366860001, "repositori": 44.974504249300004, "older": 2.71523858389, "next": 1.4950560316400001, "kera": 835.5789473680001, "receiv": 1.3054847463200001, "kerasexampl": 1587.6, "ani": 1.13383802314, "two": 1.01379310345, "virtual": 4.11295336788, "and": 1.00006299213, "from": 1.00056721497, "engin": 2.47135740971, "ubuntu": 529.2, "chang": 1.1808985421, "similar": 1.37514075357, "winner": 5.20183486239, "detail": 2.26186066391, "differ": 1.23654490225, "been": 1.0239277652399998, "mxnet": 1587.6, "seem": 2.29123971713, "most": 1.02096463023, "between": 1.03453668708, "left": 1.4398693996, "microsoft": 24.8450704225, "player": 3.54375, "excel": 4.84467500763, "depend": 2.2411067193700003, "obvious": 6.44841592201, "all": 1.01146788991, "accuracyconverg": 1587.6, "releas": 1.8377126982299998, "soon": 1.9817750592900003, "with": 1.0011982089899998, "scientistengin": 1587.6, "characterist": 3.6724496877199995, "are": 1.02990593578, "recent": 1.54405757635, "better": 2.0065722952500002, "case": 1.48498737256, "mindshar": 1587.6, "latest": 7.078020508250001, "look": 1.9086318826599997, "popular": 1.50769230769, "backend": 933.882352941, "preinstal": 1587.6, "object": 2.3488681757700003, "futur": 1.8577112099200002, "improv": 2.04376930999, "newer": 9.9225, "ago": 6.05954198473, "want": 1.99698113208, "tune": 10.4173228346, "fine": 4.02229541424, "befor": 1.10036041031, "librari": 2.68266306185, "doubt": 5.31325301205, "compar": 1.8662278123900002, "close": 1.2848818387799998, "drastic": 14.0620017715, "even": 1.16461267606, "avail": 1.7288467821, "describ": 1.47027227264, "vernum": 1587.6, "onli": 1.0256476516600002, "each": 1.18974820144, "their": 1.01547908405, "train": 1.9365698950999999, "few": 1.31729173581, "beta": 25.0410094637, "amazon": 33.1440501044, "this": 1.00379362671, "framework": 8.200413223139998, "remain": 1.16598119859, "his": 1.0943682360200002, "type": 2.0281042411900003, "data": 3.37643555934, "note": 1.42449528937, "probabl": 2.64555907349, "scientist": 4.69426374926, "machin": 4.02433460076, "iter": 37.4433962264, "convolut": 101.121019108, "come": 1.32831325301, "might": 2.1561863370900003, "offici": 1.40483143085, "nvidia": 453.6, "sinc": 1.08368600683, "right": 1.4054532577899999, "requir": 1.52844902282, "where": 1.06715063521, "direct": 1.22226499346, "first": 1.00761614623, "earlier": 1.86776470588, "bhatia": 933.882352941, "have": 1.0148948411399998, "although": 1.14968498805, "year": 1.0485436893200002, "opportun": 3.0119521912400002, "clear": 1.85423966363, "opinion": 3.8044572250199997, "tesla": 108.739726027, "learn": 2.32275054865, "own": 1.17844418052, "doe": 1.70581282905, "has": 1.0436497502}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  The Search for the Fastest Keras Deep Learning Backend</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/09/search-fastest-keras-deep-learning-backend.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb The Search for the Fastest Keras Deep Learning Backend Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/jobs/17/09-26-apple-data-science-engineer.html\" rel=\"prev\" title=\"Apple: Data Science Engineer\"/>\n<link href=\"https://www.kdnuggets.com/2017/09/10-things-everyone-know-machine-learning.html\" rel=\"next\" title=\"10 Things Everyone Should Know About Machine Learning\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2017/09/search-fastest-keras-deep-learning-backend.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=72001\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2017/09/search-fastest-keras-deep-learning-backend.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-72001 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 26-Sep, 2017  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/09/tutorials.html\">Tutorials, Overviews</a> \u00bb The Search for the Fastest Keras Deep Learning Backend (\u00a0<a href=\"/2017/n37.html\">17:n37</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">The Search for the Fastest Keras Deep Learning Backend</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/jobs/17/09-26-apple-data-science-engineer.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/09/10-things-everyone-know-machine-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <span class=\"http-likes\" style=\"float: left; font-size:14px\">http likes 67</span> <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/cntk\" rel=\"tag\">CNTK</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/keras\" rel=\"tag\">Keras</a>, <a href=\"https://www.kdnuggets.com/tag/machine-learning\" rel=\"tag\">Machine Learning</a>, <a href=\"https://www.kdnuggets.com/tag/mxnet\" rel=\"tag\">MXNet</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/tensorflow\" rel=\"tag\">TensorFlow</a>, <a href=\"https://www.kdnuggets.com/tag/theano\" rel=\"tag\">Theano</a></div>\n<br/>\n<p class=\"excerpt\">\n     This is an overview of the performance comparison for the popular Deep Learning frameworks supported by Keras \u2013 TensorFlow, CNTK, MXNet and Theano.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><b>By Jasmeet Bhatia, Microsoft.</b></p>\n<p><b>Disclaimer:</b> Jasmeet Bhatia is a Data &amp; AI Solution Architect currently working for Microsoft. Opinions expressed in this post are his own.</p>\n<p>If there are any doubts in regards to the popularity of Keras among the Data Scientist/Engineer community and the mindshare it commands, you just need to look at the support it has been receiving from all major AI and Cloud players. Currently the official Keras release already supports Google's TensorFlow and Microsoft's CNTK deep learning libraries besides supporting other popular libraries like Theano. Last year Amazon Web Services announced its support for Apache MXNet, another powerful Deep Learning library and few weeks ago support for Keras was added to the MXNet's next release candidate. As of now MXNet only seems to support Keras v1.2.2 and not the current Keras release 2.0.5. \u00a0</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-3.png\" width=\"99%\"/></p>\n<p>Although it is possible to deploy Keras models in production with any of the supported backends, developers and solution architects should keep in mind that Keras, by nature of being a high-level API for the different DL frameworks, doesn't yet support tweaking of all underlying parameters offered by the individual libraries. So in use cases where you would want to fine tune all parameters offered by the backend frameworks, you might be better off using one of the deep learning frameworks directly instead of using Keras as the top layer. This of course might change in future as additional functionalities are added to both Keras and the backend libraries. But having said that, Keras still remains an excellent tool that can fit into earlier stages of most deep learning development projects as it enables data scientists and engineers to quickly build and test complex deep learning models.</p>\n<p>Keras also enables developers to quickly test relative performance across multiple supported deep learning frameworks. A single parameter in Keras configuration file dictates what deep learning framework would be used as the backend. So, you can build a single model and without changing any code at all, you can run it on TensorFlow, CNTK and Theano. As for MXNet, since it only supports Keras ver1.2.2 right now, some minimal changes in code are required but this might change soon. These individual frameworks can obviously be fine-tuned further using features present in the individual libraries but Keras still provides an excellent opportunity to compare the base performance between these libraries.</p>\n<p>There have already been a few articles comparing the relative performance of backends supported by Keras but with each new release for Keras or the individual deep learning libraries, we are seeing drastic improvements in performance. </p>\n<p>So let\u2019s see how did the recent releases for the different deep learning frameworks performed in the recent matchup.</p>\n<p>Let\u2019s first go over the setup used for the tests. </p>\n<p>All performance tests were executed on Azure NC6 VM with Nvidia Tesla K80 GPU. The VM image used was Azure DSVM (Data Science Virtual Machine) on Ubuntu. The image comes pre-installed with Keras, TensorFlow, Theano and MXNet besides other data science tools. For tests, all packages were updated to recent releases. To use MXNet, older Keras package 1.2.2 was used. Additional details on Azure DSVM: <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-data-science-virtual-machine-overview\" target=\"_blank\">https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-data-science-virtual-machine-overview</a></p>\n<p>\u00a0</p>\n<h3>Configuration:</h3>\n<p>\u00a0<br>\nDue to dependencies for each framework, I had to run the tests in three configurations, as shown below:</br></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-1-update.jpg\" width=\"60%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-2.png\" width=\"80%\"/></p>\n<p>For all frameworks latest available stable releases were used for testing. All frameworks have their next beta versions available which claim to improve performance and are probably good to use for research purpose, but for production applications, preference is to use the stable releases. Hence these beta versions are not included in the performance tests.</p>\n<p>\u00a0</p>\n<h3>Performance Tests:</h3>\n<p>\u00a0<br>\nTo compare the performance of the DL frameworks, I used 5 different test models described below. To ensure no particular framework got any special treatment, all models were sourced from <a href=\"https://github.com/fchollet/keras/tree/master/examples\" target=\"_blank\">Keras/examples</a> repository maintained on GitHub.</br></p>\n<p>The test code/notebooks are available in my GitHub repo - <a href=\"https://github.com/jasmeetsb/deep-learning-keras-projects\" target=\"_blank\">https://github.com/jasmeetsb/deep-learning-keras-projects</a></p>\n<p>Note: In two of the tests, MXNet was left out. This is because MXNet doesn\u2019t yet support newer Keras functions and scripts would have needed significant changes before running on MXNet. This would have defeated the purpose of this exercise. Even the 3 tests that were run on MXNet needed some minimal changes to the script, mostly due to renaming of some of the Keras functions in their recent releases.</p>\n<p>\u00a0<br>\n<b>1. Test - CIFAR10 CNN</b></br></p>\n<p><b>Learning Model Type:</b> Convolutional Neural Network (CNN)<br>\n<b>Datasets/Tasks:</b> \u00a0CIFAR10 small images dataset</br></p>\n<p><b>Objective: </b>Classify images into 10 classes</p>\n<p>In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet.<br/>\nIn terms of accuracy/convergence speed CNTK seems to have a slight edge till 25<sup>th</sup> iteration but by 50<sup>th</sup> iteration all frameworks display similar accuracy.</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-5-update.png\" width=\"99%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-4.png\" width=\"99%\"/></p>\n<p>In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet.</p>\n<p>In terms of accuracy/convergence speed CNTK seems to have a slight edge till 25th iteration but by 50th iteration all frameworks display similar accuracy.</p>\n<p>\u00a0<br/>\n<b>2. Test - MNIST CNN</b></p>\n<p><b>Learning Model Type: </b>CNN<br/>\n<b>Datasets/Tasks:</b> MNIST handwritten digit dataset</p>\n<p><b>Description:</b> Classify images into 10 classes/digits</p>\n<p>In this test TensorFlow is the winner in terms of training speed followed closely by Theano but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics.</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-7-update.png\" width=\"99%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-6.png\" width=\"99%\"/></p>\n<p>In this test TensorFlow is a clear winner in terms of training speed but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics.</p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2017/09/search-fastest-keras-deep-learning-backend.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/jobs/17/09-26-apple-data-science-engineer.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/09/10-things-everyone-know-machine-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/09/tutorials.html\">Tutorials, Overviews</a> \u00bb The Search for the Fastest Keras Deep Learning Backend (\u00a0<a href=\"/2017/n37.html\">17:n37</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556324819\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.708 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 20:26:59 -->\n<!-- Compression = gzip -->", "content_tokenized": ["jasmeet", "bhatia", "microsoft", "disclaim", "jasmeet", "bhatia", "data", "solut", "architect", "current", "work", "for", "microsoft", "opinion", "express", "this", "post", "are", "his", "own", "there", "are", "ani", "doubt", "regard", "the", "popular", "kera", "among", "the", "data", "scientistengin", "communiti", "and", "the", "mindshar", "command", "just", "need", "look", "the", "support", "has", "been", "receiv", "from", "all", "major", "and", "cloud", "player", "current", "the", "offici", "kera", "releas", "alreadi", "support", "googl", "tensorflow", "and", "microsoft", "deep", "learn", "librari", "besid", "support", "other", "popular", "librari", "like", "theano", "last", "year", "amazon", "web", "servic", "announc", "support", "for", "apach", "mxnet", "anoth", "power", "deep", "learn", "librari", "and", "few", "week", "ago", "support", "for", "kera", "the", "mxnet", "next", "releas", "candid", "now", "mxnet", "onli", "seem", "support", "kera", "vnum", "and", "not", "the", "current", "kera", "releas", "num", "although", "possibl", "deploy", "kera", "model", "product", "with", "ani", "the", "support", "backend", "develop", "and", "solut", "architect", "should", "keep", "mind", "that", "kera", "natur", "highlevel", "for", "the", "differ", "framework", "doe", "yet", "support", "tweak", "all", "under", "paramet", "offer", "the", "individu", "librari", "use", "case", "where", "would", "want", "fine", "tune", "all", "paramet", "offer", "the", "backend", "framework", "might", "better", "off", "use", "one", "the", "deep", "learn", "framework", "direct", "instead", "use", "kera", "the", "top", "layer", "this", "cours", "might", "chang", "futur", "addit", "function", "are", "both", "kera", "and", "the", "backend", "librari", "but", "have", "said", "that", "kera", "still", "remain", "excel", "tool", "that", "can", "fit", "into", "earlier", "stage", "most", "deep", "learn", "develop", "project", "enabl", "data", "scientist", "and", "engin", "quick", "build", "and", "test", "complex", "deep", "learn", "model", "kera", "also", "enabl", "develop", "quick", "test", "relat", "perform", "across", "multipl", "support", "deep", "learn", "framework", "singl", "paramet", "kera", "configur", "file", "dictat", "what", "deep", "learn", "framework", "would", "use", "the", "backend", "can", "build", "singl", "model", "and", "without", "chang", "ani", "code", "all", "can", "run", "tensorflow", "and", "theano", "for", "mxnet", "sinc", "onli", "support", "kera", "vernum", "right", "now", "some", "minim", "chang", "code", "are", "requir", "but", "this", "might", "chang", "soon", "these", "individu", "framework", "can", "obvious", "finetun", "further", "use", "featur", "present", "the", "individu", "librari", "but", "kera", "still", "provid", "excel", "opportun", "compar", "the", "base", "perform", "between", "these", "librari", "there", "have", "alreadi", "been", "few", "articl", "compar", "the", "relat", "perform", "backend", "support", "kera", "but", "with", "each", "new", "releas", "for", "kera", "the", "individu", "deep", "learn", "librari", "are", "see", "drastic", "improv", "perform", "let", "see", "how", "the", "recent", "releas", "for", "the", "differ", "deep", "learn", "framework", "perform", "the", "recent", "matchup", "let", "first", "over", "the", "setup", "use", "for", "the", "test", "all", "perform", "test", "were", "execut", "azur", "with", "nvidia", "tesla", "the", "imag", "use", "azur", "data", "scienc", "virtual", "machin", "ubuntu", "the", "imag", "come", "preinstal", "with", "kera", "tensorflow", "theano", "and", "mxnet", "besid", "other", "data", "scienc", "tool", "for", "test", "all", "packag", "were", "updat", "recent", "releas", "use", "mxnet", "older", "kera", "packag", "num", "use", "addit", "detail", "azur", "enusazuremachinelearningmachinelearningdatasciencevirtualmachineoverview", "configur", "due", "depend", "for", "each", "framework", "had", "run", "the", "test", "three", "configur", "shown", "below", "for", "all", "framework", "latest", "avail", "stabl", "releas", "were", "use", "for", "test", "all", "framework", "have", "their", "next", "beta", "version", "avail", "which", "claim", "improv", "perform", "and", "are", "probabl", "good", "use", "for", "research", "purpos", "but", "for", "product", "applic", "prefer", "use", "the", "stabl", "releas", "henc", "these", "beta", "version", "are", "not", "includ", "the", "perform", "test", "perform", "test", "compar", "the", "perform", "the", "framework", "use", "num", "differ", "test", "model", "describ", "below", "ensur", "particular", "framework", "got", "ani", "special", "treatment", "all", "model", "were", "sourc", "from", "kerasexampl", "repositori", "maintain", "github", "the", "test", "codenotebook", "are", "avail", "github", "repo", "jasmeetsbdeeplearningkerasproject", "note", "two", "the", "test", "mxnet", "left", "out", "this", "becaus", "mxnet", "yet", "support", "newer", "kera", "function", "and", "script", "would", "have", "need", "signific", "chang", "befor", "run", "mxnet", "this", "would", "have", "defeat", "the", "purpos", "this", "exercis", "even", "the", "num", "test", "that", "were", "run", "mxnet", "need", "some", "minim", "chang", "the", "script", "most", "due", "renam", "some", "the", "kera", "function", "their", "recent", "releas", "num", "test", "learn", "model", "type", "convolut", "neural", "network", "datasetstask", "small", "imag", "dataset", "object", "classifi", "imag", "into", "num", "class", "term", "train", "speed", "per", "epoch", "tensorflow", "win", "slight", "margin", "over", "mxnet", "term", "accuracyconverg", "speed", "seem", "have", "slight", "edg", "till", "num", "iter", "but", "num", "iter", "all", "framework", "display", "similar", "accuraci", "term", "train", "speed", "per", "epoch", "tensorflow", "win", "slight", "margin", "over", "mxnet", "term", "accuracyconverg", "speed", "seem", "have", "slight", "edg", "till", "numth", "iter", "but", "numth", "iter", "all", "framework", "display", "similar", "accuraci", "num", "test", "learn", "model", "type", "datasetstask", "handwritten", "digit", "dataset", "descript", "classifi", "imag", "into", "num", "classesdigit", "this", "test", "tensorflow", "the", "winner", "term", "train", "speed", "follow", "close", "theano", "but", "term", "accuracyconverg", "speed", "all", "framework", "showcas", "similar", "characterist", "this", "test", "tensorflow", "clear", "winner", "term", "train", "speed", "but", "term", "accuracyconverg", "speed", "all", "framework", "showcas", "similar", "characterist"], "timestamp_scraper": 1556373956.922242, "title": "The Search for the Fastest Keras Deep Learning Backend", "read_time": 269.09999999999997, "content_html": "<div class=\"post\" id=\"post-\">\n<p><b>By Jasmeet Bhatia, Microsoft.</b></p>\n<p><b>Disclaimer:</b> Jasmeet Bhatia is a Data &amp; AI Solution Architect currently working for Microsoft. Opinions expressed in this post are his own.</p>\n<p>If there are any doubts in regards to the popularity of Keras among the Data Scientist/Engineer community and the mindshare it commands, you just need to look at the support it has been receiving from all major AI and Cloud players. Currently the official Keras release already supports Google's TensorFlow and Microsoft's CNTK deep learning libraries besides supporting other popular libraries like Theano. Last year Amazon Web Services announced its support for Apache MXNet, another powerful Deep Learning library and few weeks ago support for Keras was added to the MXNet's next release candidate. As of now MXNet only seems to support Keras v1.2.2 and not the current Keras release 2.0.5. \u00a0</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-3.png\" width=\"99%\"/></p>\n<p>Although it is possible to deploy Keras models in production with any of the supported backends, developers and solution architects should keep in mind that Keras, by nature of being a high-level API for the different DL frameworks, doesn't yet support tweaking of all underlying parameters offered by the individual libraries. So in use cases where you would want to fine tune all parameters offered by the backend frameworks, you might be better off using one of the deep learning frameworks directly instead of using Keras as the top layer. This of course might change in future as additional functionalities are added to both Keras and the backend libraries. But having said that, Keras still remains an excellent tool that can fit into earlier stages of most deep learning development projects as it enables data scientists and engineers to quickly build and test complex deep learning models.</p>\n<p>Keras also enables developers to quickly test relative performance across multiple supported deep learning frameworks. A single parameter in Keras configuration file dictates what deep learning framework would be used as the backend. So, you can build a single model and without changing any code at all, you can run it on TensorFlow, CNTK and Theano. As for MXNet, since it only supports Keras ver1.2.2 right now, some minimal changes in code are required but this might change soon. These individual frameworks can obviously be fine-tuned further using features present in the individual libraries but Keras still provides an excellent opportunity to compare the base performance between these libraries.</p>\n<p>There have already been a few articles comparing the relative performance of backends supported by Keras but with each new release for Keras or the individual deep learning libraries, we are seeing drastic improvements in performance. </p>\n<p>So let\u2019s see how did the recent releases for the different deep learning frameworks performed in the recent matchup.</p>\n<p>Let\u2019s first go over the setup used for the tests. </p>\n<p>All performance tests were executed on Azure NC6 VM with Nvidia Tesla K80 GPU. The VM image used was Azure DSVM (Data Science Virtual Machine) on Ubuntu. The image comes pre-installed with Keras, TensorFlow, Theano and MXNet besides other data science tools. For tests, all packages were updated to recent releases. To use MXNet, older Keras package 1.2.2 was used. Additional details on Azure DSVM: <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-data-science-virtual-machine-overview\" target=\"_blank\">https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-data-science-virtual-machine-overview</a></p>\n<p>\u00a0</p>\n<h3>Configuration:</h3>\n<p>\u00a0<br>\nDue to dependencies for each framework, I had to run the tests in three configurations, as shown below:</br></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-1-update.jpg\" width=\"60%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-2.png\" width=\"80%\"/></p>\n<p>For all frameworks latest available stable releases were used for testing. All frameworks have their next beta versions available which claim to improve performance and are probably good to use for research purpose, but for production applications, preference is to use the stable releases. Hence these beta versions are not included in the performance tests.</p>\n<p>\u00a0</p>\n<h3>Performance Tests:</h3>\n<p>\u00a0<br>\nTo compare the performance of the DL frameworks, I used 5 different test models described below. To ensure no particular framework got any special treatment, all models were sourced from <a href=\"https://github.com/fchollet/keras/tree/master/examples\" target=\"_blank\">Keras/examples</a> repository maintained on GitHub.</br></p>\n<p>The test code/notebooks are available in my GitHub repo - <a href=\"https://github.com/jasmeetsb/deep-learning-keras-projects\" target=\"_blank\">https://github.com/jasmeetsb/deep-learning-keras-projects</a></p>\n<p>Note: In two of the tests, MXNet was left out. This is because MXNet doesn\u2019t yet support newer Keras functions and scripts would have needed significant changes before running on MXNet. This would have defeated the purpose of this exercise. Even the 3 tests that were run on MXNet needed some minimal changes to the script, mostly due to renaming of some of the Keras functions in their recent releases.</p>\n<p>\u00a0<br>\n<b>1. Test - CIFAR10 CNN</b></br></p>\n<p><b>Learning Model Type:</b> Convolutional Neural Network (CNN)<br>\n<b>Datasets/Tasks:</b> \u00a0CIFAR10 small images dataset</br></p>\n<p><b>Objective: </b>Classify images into 10 classes</p>\n<p>In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet.<br/>\nIn terms of accuracy/convergence speed CNTK seems to have a slight edge till 25<sup>th</sup> iteration but by 50<sup>th</sup> iteration all frameworks display similar accuracy.</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-5-update.png\" width=\"99%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-4.png\" width=\"99%\"/></p>\n<p>In terms of training speed per epoch, TensorFlow wins by a slight margin over MXNet.</p>\n<p>In terms of accuracy/convergence speed CNTK seems to have a slight edge till 25th iteration but by 50th iteration all frameworks display similar accuracy.</p>\n<p>\u00a0<br/>\n<b>2. Test - MNIST CNN</b></p>\n<p><b>Learning Model Type: </b>CNN<br/>\n<b>Datasets/Tasks:</b> MNIST handwritten digit dataset</p>\n<p><b>Description:</b> Classify images into 10 classes/digits</p>\n<p>In this test TensorFlow is the winner in terms of training speed followed closely by Theano but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics.</p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-7-update.png\" width=\"99%\"/></p>\n<p><img alt=\"Image\" class=\"aligncenter\" src=\"/wp-content/uploads/fastest-keras-6.png\" width=\"99%\"/></p>\n<p>In this test TensorFlow is a clear winner in terms of training speed but in terms of accuracy/convergence speed, all frameworks showcase similar characteristics.</p>\n</div> ", "website": "kdnuggets"}