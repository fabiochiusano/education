{"content": "comments By Ryan Shrott , Chief Analyst at National Bank of Canada. Created in week 4 of the course. Combined Ng\u2019s face with the style of Rain Princess by Leonid\u00a0Afremov. I recently completed Andrew Ng\u2019s computer vision course on Coursera. Ng does an excellent job at explaining many of the complex ideas required to optimize any computer vision task. My favourite component of the course was the neural style transfer section (see lesson 11), which allows you to create artwork which combines the style of Claud Monet with the content of whichever image you would like. This is an example of what you can do: In this article, I will discuss 11 key lessons that I learned in the course. Note that this is the fourth course in the Deep Learning specialization released by deeplearning.ai. If you would like to learn about the previous 3 courses, I recommend you check out\u00a0 this blog. Lesson 1: Why computer vision is taking\u00a0off? Big data and algorithmic developments will cause the testing error of intelligent systems to converge to Bayes optimal error. This will lead to AI surpassing human level performance in all areas, including natural perception tasks. Open source software from TensorFlow allows you to use transfer learning to implement an object detection system for any object very rapidly. With transfer learning, you only need about 100\u2013500 examples for the system to work relatively well. Manually labeling 100 examples isn\u2019t too much work, so you\u2019ll have a minimum viable product very quickly. Lesson 2: How convolution works? Ng explains how to implement the convolution operator and shows how it can detect edges in an image. He also explains other filters, such as the Sobel filter, which put more weight on central pixels of the edge. Ng then explains that the weights of the filter should not be hand-designed but rather should be learned using a hill climbing algorithm such as gradient descent. Lesson 3: Why convolutions? Ng gives several philosophical reasons for why convolutions work so well in image recognition tasks. He outlines 2 concrete reasons. The first is known as\u00a0parameter sharing. It is the idea that a feature detector that\u2019s useful in one part of an image is probably useful in another part of the image. For example, an edge detector is probably useful is many parts of the image. The sharing of parameters allows the number of parameters to be small and also allows for robust translation invariance. Translation invariance is the notion that a cat shifted and rotated is still a picture of a cat. The second idea he outlines is known as sparsity of connections. This is the idea that each output layer is only a function of a small number of inputs (particularly, the filter size squared). This greatly reduces the number of parameters in the network and allows for faster training. Lesson 3: Why\u00a0Padding? Padding is usually used to preserve the input size (i.e. the dimension of the input and output are the same). It is also used so that frames near the edges of image contribute as much to the output as frames near near the centre. Lesson 4: Why Max\u00a0Pooling? Through empirical research, max pooling has proven to be extremely effective in CNN\u2019s. By downsampling the image, we reduce the number of parameters which makes the features invariant to scale or orientation changes. Lesson 5: Classical network architectures Ng shows 3 classical network architectures including LeNet-5, AlexNet and VGG-16. The main idea he presents is that effective networks often have layers with an increasing channel size and decreasing width and height. Lesson 6: Why ResNets\u00a0works? For a plain network, the training error does not monotonically decrease as the number of layers increases due to vanishing and exploding gradients. These networks have feed forward skipped connections which allow you train extremely large networks without a drop in performance. Lesson 7: Use Transfer Learning! Training large networks, such as inception, from scratch can take weeks on a GPU. You should download the weights from a pretrained network and just retrain the last softmax layer (or the last few layers). This will greatly reduce training time. The reason this works is that earlier layers tend to be associated with concepts in all images such as edges and curvy lines. Lesson 8: How to win computer vision competitions Ng explains that you should train several networks independently and average their outputs to get better performance. Data augmentation techniques such as randomly cropping images, flipping images about the horizontal and vertical axes may also help with performance. Finally, you should use an open source implementation and pretrained model to start and then fine-tune the parameters for your particular application. Lesson 9: How to implement object detection Ng starts by explaining the idea of landmark detection in an image. Basically, these landmarks become apart of your training output examples. With some clever convolution manipulations, you get an output volume that tells you the probability that the object is in a certain region and the location of the object. He also explains how to evaluate the effectiveness of your object detection algorithm using the intersection over union formula. Finally, Ng puts all these components together to explain the famous YOLO algorithm. Lesson 10: How to implement Face Recognition Facial recognition is a one-shot learning problem since you may only have one example image to identify the person. The solution is to learn a similarity function which gives the degree of difference between two images. So if the images are of the same person, you want the function to output a small number, and vice versa for different people. The first solution Ng gives is known as a siamese network. The idea is to input two persons into the same network separately and then compare their outputs. If the outputs are similar, then the persons are probably the same. The network is trained so that if two input images are of the same person, then the distance between their encodings is relatively small. The second solution he gives uses a triplet loss method. The idea is that you have a triplet of images (Anchor (A), Positive (P) and Negative (N)) and you train the network so that the output distance between A and P is much smaller than the distance between A and N. Lesson 11: How to create artwork using Neural Style\u00a0Transfer Ng explains how to generate an image with a combining content and style. See the examples below. The key to Neural Style Transfer is to understand the visual representations for what each layer in a convolutional network is learning. It turns out that earlier layers learn simple features like edges and later features learn complex objects like faces, feet and cars. To build a neural style transfer image, you simply define a cost function which is a convex combination of the similarity in content and style. In particular, the cost function\u00a0would\u00a0be:  = alpha *  + beta *  where G is the generated image, C is the content image and S is the style image. The learning algorithm simply uses gradient descent to minimize the cost function with respect to the generated image, G. The steps are as follows: Generate G randomly. Use gradient descent to minimize , i.e. write G\u00a0:= G-). Repeat step 2. Conclusion By completing this course, you will gain an intuitive understanding of a large chunk of the computer vision literature. The homework assignments also give you practice implementing these ideas yourself. You will not become an expert in computer vision after completing this course, but this course may kickstart a potential idea/career you may have in computer vision. If you have any interesting applications of computer vision you would like to share, let me know in the comments below. I would be happy to discuss potential collaboration on new projects. That\u2019s all folks\u200a\u2014\u200aif you\u2019ve made it this far, please comment below and add me on\u00a0 LinkedIn . My Github is\u00a0 here . \u00a0 Bio: Ryan J. Shrott is Chief Analyst at National Bank of Canada Financial Markets. Original . Reposted with permission. Related: An Overview of 3 Popular Courses on Deep Learning 5 Free Resources for Furthering Your Understanding of Deep Learning Estimating an Optimal Learning Rate For a Deep Neural Network", "title_html": "<h1 id=\"title\"><img align=\"right\" alt=\"Gold Blog\" src=\"/images/tkb-1712-g.png\" width=\"94\"/>Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned</h1> ", "url": "https://www.kdnuggets.com/2017/12/ng-computer-vision-11-lessons-learnied.html", "tfidf": {"tfidf": {"after": 1.02070207021, "tensorflow": 1587.6, "too": 1.81585268215, "anchor": 10.451612903200001, "analyst": 29.6747663552, "take": 2.27923336444, "visual": 5.22752716497, "new": 1.0178880554, "assign": 3.83663605607, "viabl": 16.1834862385, "would": 5.414364640899999, "claud": 16.5375, "previous": 1.42846859816, "rain": 6.854922279789999, "decreas": 9.046153846160001, "function": 14.97265011, "happi": 6.125, "descent": 25.483146067409997, "crop": 9.71009174312, "resnet": 1587.6, "well": 2.1311497416, "product": 1.62264922322, "further": 1.3618116315, "complet": 3.72064682448, "whichev": 76.3269230769, "know": 2.59327017315, "feet": 5.42769230769, "their": 3.0464372521500005, "scale": 3.7469907953699995, "similar": 4.12542226071, "chief": 4.8365575019, "creat": 3.7478753541, "how": 14.422529524589999, "test": 2.65707112971, "repost": 933.882352941, "landmark": 15.939759036139998, "present": 1.25551601423, "chunk": 81.0, "than": 1.03278688525, "increas": 2.6404989605, "special": 1.4881889763799998, "expert": 5.36713995943, "converg": 15.2947976879, "frame": 12.560126582279999, "releas": 1.8377126982299998, "downsampl": 1587.6, "interest": 1.60331246213, "invari": 67.2711864408, "deep": 14.511882998159999, "will": 7.34886591576, "associ": 1.3263157894700002, "overview": 12.6805111821, "rotat": 8.53548387097, "open": 2.49113447356, "homework": 151.2, "artwork": 33.109489051, "second": 2.2261796256, "shrott": 3175.2, "below": 6.76822509591, "near": 3.86308703058, "recognit": 13.200665188470001, "certain": 1.8077886586200003, "need": 1.4372623574099999, "cost": 6.95807158509, "final": 2.6801721955, "applic": 6.85344269372, "empir": 2.8395635843299996, "level": 1.6544393497299998, "has": 1.0436497502, "generat": 8.21101629168, "collabor": 4.45454545455, "region": 1.7647843486, "use": 14.414942603319998, "famous": 2.28201811125, "resourc": 2.9487369985100003, "lenetnum": 1587.6, "out": 2.12033388982, "model": 2.0905978404, "forward": 3.66566612792, "concept": 2.65707112971, "number": 6.60857499654, "pool": 14.105730786320002, "cours": 21.509280585299997, "optim": 34.6133720931, "deeplearningai": 1587.6, "loss": 2.42529789184, "softmax": 1587.6, "climb": 9.284210526319999, "not": 3.04702194357, "far": 1.71022298826, "compon": 8.18983750322, "literatur": 3.68096452585, "respect": 1.6443293630200002, "minim": 12.21700654098, "kickstart": 256.064516129, "quick": 2.205, "pleas": 9.12938470385, "alexnet": 1587.6, "width": 17.294117647100002, "then": 5.432893025799999, "separ": 1.6012102874399998, "convex": 103.764705882, "anoth": 1.13643521832, "turn": 1.3838912133899999, "effect": 4.1889182058, "allow": 7.629635562660001, "minimum": 6.02962400304, "monet": 139.263157895, "pixel": 86.28260869569999, "github": 1587.6, "section": 2.1284354471099998, "distanc": 10.426444833629999, "featur": 6.10850327048, "percept": 8.34700315457, "practic": 1.70434782609, "simpl": 3.3981164383599998, "algorithm": 139.753521127, "softwar": 10.2624434389, "develop": 1.1955719557200002, "intersect": 12.660287081300002, "such": 5.3075688687, "sever": 2.14482572278, "horizont": 11.6137527432, "clever": 30.5307692308, "curvi": 1134.0, "network": 41.49910145408, "without": 1.29547123623, "some": 1.04036697248, "sourc": 3.39520958084, "small": 5.4379174516, "should": 8.32162700495, "add": 4.61243463103, "may": 4.20807103572, "locat": 1.59766529134, "union": 2.11736463057, "off": 1.5121440137200002, "content": 14.1686746988, "filter": 67.5574468084, "rate": 2.14048806795, "channel": 3.6784059314199995, "caus": 1.38521943984, "ani": 3.40151406942, "two": 3.04137931035, "philosoph": 5.65586034913, "canada": 6.073450650340001, "from": 3.00170164491, "work": 6.69120539478, "vertic": 8.974561899380001, "num": 22.00693088022, "market": 2.36602086438, "idea": 18.837705998700002, "free": 1.71818181818, "for": 12.00378048012, "car": 3.53743315508, "manipul": 9.145161290319999, "output": 76.76982591880001, "height": 4.1023255814, "with": 10.011982089899998, "competit": 3.06960556845, "are": 6.17943561468, "solut": 14.183442525299998, "max": 14.949152542379998, "better": 2.0065722952500002, "siames": 163.670103093, "popular": 1.50769230769, "sparsiti": 1443.27272727, "reduc": 5.960951188979999, "veri": 2.51760228354, "num\u2013num": 1587.6, "negat": 3.75852272727, "combin": 6.79041916168, "posit": 1.37252528746, "later": 1.08650424309, "tend": 3.3735656608599998, "compar": 1.8662278123900002, "made": 1.07038834951, "doe": 3.4116256581, "give": 6.826625387, "retrain": 180.409090909, "check": 6.50655737705, "train": 17.4291290559, "great": 2.53185551392, "beta": 25.0410094637, "step": 5.655860349119999, "scratch": 25.8146341463, "error": 18.123287671230003, "alpha": 17.898534385599998, "extrem": 4.73204172876, "big": 2.7400759406299997, "lead": 1.2664326739, "note": 1.42449528937, "shift": 3.3317943336799996, "probabl": 10.58223629396, "into": 1.01502461479, "dimens": 8.25585023401, "rapid": 2.62586834271, "requir": 1.52844902282, "last": 2.4234468020200004, "face": 5.40981372105, "earlier": 3.73552941176, "let": 3.48616600791, "particular": 4.144448311860001, "help": 1.39962972759, "main": 1.25303867403, "larg": 3.55724848755, "vice": 5.19162851537, "layer": 65.13230769232, "notion": 7.356811862839999, "line": 1.4182597820299998, "conclus": 4.84615384615, "natur": 1.5392670157100001, "label": 4.47715736041, "pictur": 3.4953764861300005, "squar": 3.26666666667, "permiss": 6.280063291139999, "preserv": 3.1062414400300002, "explod": 12.432263116700002, "here": 2.42307692308, "facial": 30.827184466, "week": 3.61064362066, "averag": 2.60390355913, "paramet": 103.53913043460001, "apart": 3.1032056294, "human": 1.8965476048299998, "much": 3.5826688731899994, "encod": 29.0237659963, "evalu": 6.9509632224199995, "ideacar": 1587.6, "about": 3.19458045477, "problem": 1.76674827509, "articl": 2.01805008262, "job": 3.2539454806299997, "neural": 297.3033707865, "just": 1.33580143037, "simpli": 5.0384005077800005, "favourit": 13.938542581199998, "hill": 2.89233011478, "handdesign": 1587.6, "defin": 2.72830383227, "finetun": 1587.6, "size": 7.48162111215, "contribut": 1.9255306246200001, "recommend": 3.9142011834300003, "feed": 7.77853993141, "where": 1.06715063521, "complex": 4.6804245283, "flip": 31.3136094675, "start": 2.53347163488, "intuit": 27.7068062827, "whi": 19.539692307720003, "explain": 23.40442260441, "central": 1.6121039805000001, "usual": 1.72508964468, "mani": 2.08853515754, "coursera": 1587.6, "over": 1.02525024217, "skip": 26.111842105300003, "build": 1.6341739578, "oneshot": 1587.6, "triplet": 269.084745762, "leonid": 61.2972972973, "same": 5.592897907399999, "togeth": 1.58095996813, "due": 1.23789473684, "surpass": 10.1185468451, "connect": 3.7687833827800006, "bank": 5.74800868936, "formula": 8.64235166032, "exampl": 10.53383886254, "volum": 2.40545454545, "linkedin": 610.615384615, "lesson": 121.32314410482, "follow": 1.04640126549, "robust": 19.9447236181, "princess": 10.073604060900001, "represent": 5.928304705, "basic": 2.7301805675, "financi": 2.60860992442, "edg": 26.74227961818, "incept": 16.8535031847, "also": 6.08859060402, "person": 7.026022304850001, "versa": 23.381443299, "sobel": 441.0, "style": 21.40263630918, "task": 11.65924112607, "plain": 5.49913404919, "research": 1.9420183486200002, "the": 92.0, "area": 1.3881262568900001, "becom": 2.24984057252, "peopl": 1.21320495186, "want": 1.99698113208, "concret": 10.0100882724, "system": 4.16219522853, "vanish": 18.6556991774, "intellig": 4.19334389857, "share": 5.56987486845, "monoton": 97.3987730061, "manual": 7.72930866602, "win": 2.75290445639, "centr": 2.97080838323, "which": 7.036342915, "like": 5.745928338750001, "estim": 2.34991119005, "other": 1.00992366412, "techniqu": 3.7293868921800004, "one": 2.01254991444, "show": 2.5340782123, "known": 3.25772913816, "see": 2.54484251022, "imag": 62.13169984683, "blog": 14.1876675603, "get": 3.5712518277, "still": 1.1866357724799999, "random": 14.3804347826, "implement": 21.458887136759998, "through": 1.07074930869, "drop": 2.4594887684, "tell": 3.36142282448, "detect": 27.064439140799998, "part": 3.12992048367, "put": 3.31613577024, "independ": 1.58950740889, "outlin": 12.76205787782, "includ": 2.0381282495599997, "yourself": 26.592964824099997, "understand": 8.90575916229, "repeat": 2.8771293947099994, "this": 13.049317147230001, "transfer": 19.07845493561, "time": 1.01127460348, "relat": 3.71252630757, "chang": 1.1808985421, "perform": 6.125590817000001, "smaller": 2.59369384088, "project": 1.7534791252500002, "differ": 2.4730898045, "but": 2.03264835798, "between": 4.13814674832, "what": 2.50686878256, "excel": 4.84467500763, "vision": 39.04334460496, "all": 4.04587155964, "augment": 16.5202913632, "reason": 5.17021276596, "gradient": 167.556728232, "recent": 1.54405757635, "degre": 2.4852849092, "classic": 4.8174783796, "that": 18.0717131475, "translat": 5.71490280778, "weight": 14.636754763379997, "architectur": 10.25581395348, "object": 16.44207723039, "more": 1.0171706817, "and": 29.00182677177, "discuss": 4.39352428394, "these": 4.29661705008, "folk": 7.6658619024600005, "cat": 21.0696748506, "pad": 49.304347826000004, "gain": 1.84819557625, "ryan": 24.5, "faster": 7.61438848921, "comment": 9.17864713818, "download": 14.6457564576, "detector": 91.2413793104, "orient": 4.994023277759999, "can": 3.52878417426, "comput": 31.422068283040005, "make": 1.0762660158600001, "onli": 3.0769429549800007, "each": 2.37949640288, "afremov": 1587.6, "andrew": 3.82462057336, "few": 1.31729173581, "key": 4.5601034037, "axe": 21.3100671141, "pretrain": 3175.2, "data": 6.75287111868, "oper": 1.55479384977, "method": 2.5714285714300003, "rather": 1.55692850838, "sinc": 1.08368600683, "convolut": 606.726114648, "bio": 42.336000000000006, "origin": 1.13724928367, "potenti": 5.0416005081, "identifi": 2.30187037843, "fourth": 2.5647819063, "first": 2.01523229246, "input": 61.0146041505, "have": 7.104263887979998, "proven": 9.818181818180001, "write": 2.0575427682700003, "often": 1.29452054795, "bay": 4.629921259840001, "learn": 37.1640087784, "nation": 2.45264946702}, "logtfidf": {"after": 0.020490694648099998, "tensorflow": 7.369978720910001, "too": 0.5965551547219999, "anchor": 2.3467563113099996, "analyst": 5.394299772899999, "take": 0.261383924394, "visual": 1.6539383488600001, "new": 0.0177299468511, "assign": 1.3445959556, "viabl": 2.7839913543400003, "would": 0.3980881398235, "claud": 2.80563052944, "previous": 0.356602960063, "rain": 1.92496697521, "decreas": 3.01838499488, "function": 5.486794449564, "happi": 1.81237875643, "descent": 6.418215019350001, "crop": 2.27316573057, "resnet": 7.369978720910001, "well": 0.1270288766312, "product": 0.484060136536, "further": 0.308815895297, "complet": 0.6458557261410001, "whichev": 4.3350257342, "know": 0.952919694398, "feet": 1.69151405424, "their": 0.046081515368100005, "scale": 1.32095306328, "similar": 0.9556682763419999, "chief": 1.766112054332, "creat": 0.667730455542, "how": 4.244102612370001, "test": 0.977224437103, "repost": 6.83935046985, "landmark": 4.151338751519999, "present": 0.227546654799, "chunk": 4.394449154669999, "than": 0.0322608622182, "increas": 0.555641437858, "special": 0.39755992860100003, "expert": 1.68029517063, "converg": 2.7275127501800003, "frame": 3.6747601172800004, "releas": 0.608521699544, "downsampl": 7.369978720910001, "interest": 0.47207177798199995, "invari": 9.33035916063, "deep": 5.1546938792, "will": 1.2167192094900001, "associ": 0.28240501535100004, "overview": 2.54006626224, "rotat": 2.1442320472, "open": 0.439182076058, "homework": 5.01860346375, "artwork": 5.61334547804, "second": 0.21427952675999998, "shrott": 14.739957441820001, "below": 2.440879775808, "near": 0.758562972102, "recognit": 4.444964798160001, "certain": 0.592104362781, "need": 0.362740163442, "cost": 2.52387022854, "final": 0.585467727896, "applic": 2.46320785698, "empir": 1.04365037288, "level": 0.503462189943, "has": 0.0427239448548, "generat": 2.876729366944, "collabor": 1.4939250253100003, "region": 0.568028500824, "use": 0.4089122762424, "famous": 0.825060187979, "resourc": 1.08137694258, "lenetnum": 7.369978720910001, "out": 0.1168527818386, "model": 0.7374500731110001, "forward": 1.29901007269, "concept": 0.977224437103, "number": 0.5796514705116, "pool": 3.906867946, "cours": 7.65899404133, "optim": 7.336883386229999, "deeplearningai": 7.369978720910001, "loss": 0.885954358842, "softmax": 7.369978720910001, "climb": 2.2283151644099997, "not": 0.0466572390225, "far": 0.536623764503, "compon": 2.81949375246, "literatur": 1.3031748172600002, "respect": 0.49733261904, "minim": 3.61936355852, "kickstart": 5.54542942886, "quick": 0.790727508899, "pleas": 2.21149829955, "alexnet": 7.369978720910001, "width": 2.85036642328, "then": 0.4151693261545, "separ": 0.470759772949, "convex": 4.64212589251, "anoth": 0.127896361652, "turn": 0.324899251064, "effect": 1.0014906814739999, "allow": 1.441683667134, "minimum": 1.79668465441, "monet": 4.93636536551, "pixel": 4.45762805629, "github": 7.369978720910001, "section": 0.755387177948, "distanc": 3.73719918771, "featur": 1.693549672568, "percept": 2.1219025708, "practic": 0.533182530867, "simpl": 1.2232212893899999, "algorithm": 16.6522119759, "softwar": 2.32849096333, "develop": 0.178624694913, "intersect": 2.53847009271, "such": 0.29847988903, "sever": 0.13982224079379998, "horizont": 2.4521899771799998, "clever": 3.4187350023299996, "curvi": 7.033506484289999, "network": 15.249328848831999, "without": 0.258874517941, "some": 0.0395735090645, "sourc": 1.058436621502, "small": 1.228407220236, "should": 2.54709938379, "add": 1.52875583713, "may": 0.20283998113760002, "locat": 0.46854337067199997, "union": 0.750172216607, "off": 0.41352852038800003, "content": 5.05895663816, "filter": 11.30673575456, "rate": 0.761033872166, "channel": 1.30247948752, "caus": 0.325858567406, "ani": 0.376825075098, "two": 0.041096533074600004, "philosoph": 1.73269223754, "canada": 2.22155947832, "from": 0.0017011625065979999, "work": 0.654207403638, "vertic": 2.19439411974, "num": 0.006929788698734001, "market": 0.8612095839370001, "idea": 6.64772329908, "free": 0.5412666492670001, "for": 0.0037798847447640003, "car": 1.2634013667, "manipul": 2.21322491868, "output": 20.382265782700003, "height": 1.4115540278799998, "with": 0.0119749171339, "competit": 1.12154907401, "are": 0.17680484149620002, "solut": 4.660388928810001, "max": 4.02301486308, "better": 0.6964279406, "siames": 5.0978528354, "popular": 0.41058020877499996, "sparsiti": 7.2746685411000005, "reduc": 2.059853325429, "veri": 0.460319586476, "num\u2013num": 7.369978720910001, "negat": 1.32402598852, "combin": 2.116873243004, "posit": 0.316652318608, "later": 0.0829654259878, "tend": 1.21597024462, "compar": 0.6239191809269999, "made": 0.0680215260973, "doe": 1.0680834594339998, "give": 1.5569627611199999, "retrain": 5.19522699942, "check": 1.87281049562, "train": 5.948264815551, "great": 0.471610516158, "beta": 3.22051485947, "step": 2.07909011396, "scratch": 3.2509415461, "error": 5.395756302900001, "alpha": 2.8847188315900003, "extrem": 1.7224191678740002, "big": 1.00798563557, "lead": 0.23620402986699998, "note": 0.353817568083, "shift": 1.20351099781, "probabl": 3.891529651652, "into": 0.0149128632287, "dimens": 2.11092206831, "rapid": 0.965411638564, "requir": 0.424253510675, "last": 0.38408728922200003, "face": 1.768807113771, "earlier": 1.24948474285, "let": 1.2488025672799998, "particular": 0.969472181412, "help": 0.336207721344, "main": 0.225571540588, "larg": 0.511125181818, "vice": 1.64704742741, "layer": 16.775833298800002, "notion": 1.9956266680799999, "line": 0.349430614452, "conclus": 1.57818536893, "natur": 0.431306339292, "label": 1.49898832727, "pictur": 1.25144109124, "squar": 1.18377009701, "permiss": 1.8373800586400002, "preserv": 1.13341345513, "explod": 2.52029495787, "here": 0.8850381883700001, "facial": 3.42839691324, "week": 1.1814777283239999, "averag": 0.957011687995, "paramet": 17.089140863159997, "apart": 1.1324356512, "human": 0.640035183243, "much": 0.5324871879030001, "encod": 3.36811501148, "evalu": 1.9388802431299998, "ideacar": 7.369978720910001, "about": 0.18853043242380002, "problem": 0.569140724273, "articl": 0.702131739574, "job": 1.1798682540899998, "neural": 20.4265757775, "just": 0.289531434109, "simpli": 1.847882983172, "favourit": 2.6346578504599996, "hill": 1.06206244535, "handdesign": 7.369978720910001, "defin": 1.00368010925, "finetun": 7.369978720910001, "size": 2.741511618183, "contribut": 0.655201578909, "recommend": 1.36461126863, "feed": 2.05136865109, "where": 0.0649921387457, "complex": 1.7004832728619999, "flip": 3.4440528103099997, "start": 0.472886738582, "intuit": 3.3216780971900004, "whi": 7.08413058282, "explain": 8.601303846222, "central": 0.477540146039, "usual": 0.545279017064, "mani": 0.0866315162442, "coursera": 7.369978720910001, "over": 0.0249367214957, "skip": 3.26238893194, "build": 0.491137452091, "oneshot": 7.369978720910001, "triplet": 9.80375837888, "leonid": 4.1157357522, "same": 0.5602982480200001, "togeth": 0.458032237308, "due": 0.21341214386399998, "surpass": 2.31437006117, "connect": 1.267210117364, "bank": 2.1114125987400003, "formula": 2.15667472869, "exampl": 2.8607787249929997, "volum": 0.877738885888, "linkedin": 6.414467275880001, "lesson": 30.231603761380004, "follow": 0.045356911094199995, "robust": 2.9929646280599997, "princess": 2.3099185434900003, "represent": 1.7797382876499999, "basic": 1.00436774895, "financi": 0.958817483446, "edg": 8.9669181003, "incept": 2.82455853933, "also": 0.0879429468, "person": 1.7009140800900002, "versa": 3.15194268634, "sobel": 6.08904487545, "style": 7.7966057620889995, "task": 4.0724604198300005, "plain": 1.70459063424, "research": 0.663727818138, "the": 0.0, "area": 0.327954821122, "becom": 0.23542435297800002, "peopl": 0.193265578473, "want": 0.6916366062549999, "concret": 2.3035934117099996, "system": 0.982291036755, "vanish": 2.92615168533, "intellig": 1.43349848213, "share": 1.8562808992409998, "monoton": 4.5788136131, "manual": 2.04501942341, "win": 1.01265652029, "centr": 1.08883409869, "which": 0.036248896918010004, "like": 0.6952678827250001, "estim": 0.854377535975, "other": 0.00987474791976, "techniqu": 1.31624384807, "one": 0.012510703291, "show": 0.473365532026, "known": 0.2472542417976, "see": 0.481843170984, "imag": 22.85652846767, "blog": 2.65237310559, "get": 1.159538011564, "still": 0.17112222142900002, "random": 3.9454428130199997, "implement": 7.646276454420001, "through": 0.0683586918849, "drop": 0.8999535106219999, "tell": 1.21236434401, "detect": 8.443913724649999, "part": 0.12718593294840003, "put": 1.011305999708, "independ": 0.463424162503, "outlin": 3.70665872008, "includ": 0.037769362781, "yourself": 3.28064670051, "understand": 3.264257627039999, "repeat": 1.0567930591299999, "this": 0.0492238376825, "transfer": 7.01854674829, "time": 0.0112115188626, "relat": 0.639300904962, "chang": 0.166275625058, "perform": 1.70472340232, "smaller": 0.9530830530519999, "project": 0.561601885907, "differ": 0.424642242624, "but": 0.0323847441438, "between": 0.13581472466119998, "what": 0.451774593654, "excel": 1.5778801652, "vision": 12.68184709944, "all": 0.04561052839119999, "augment": 2.8045894049299998, "reason": 1.632904658886, "gradient": 14.94011043528, "recent": 0.434413741288, "degre": 0.910387304568, "classic": 1.7582069056999998, "that": 0.07157067083351999, "translat": 2.0998602200599996, "weight": 4.7547705783600005, "architectur": 3.26939515838, "object": 5.977535093620999, "more": 0.017024931599999998, "and": 0.0018267141198444, "discuss": 1.57396904524, "these": 0.2861344776032, "folk": 2.03677695251, "cat": 4.70937523056, "pad": 6.409730175599999, "gain": 0.6142097989249999, "ryan": 5.01105187398, "faster": 2.03003967967, "comment": 3.3548026036199996, "download": 2.6841506319, "detector": 7.640722668260001, "orient": 1.60824185299, "can": 0.487023289182, "comput": 10.94455132752, "make": 0.07349765782289999, "onli": 0.0759728049873, "each": 0.347483378608, "afremov": 7.369978720910001, "andrew": 1.34145926585, "few": 0.275577913653, "key": 1.64839623792, "axe": 3.05917959552, "pretrain": 14.739957441820001, "data": 2.4336411696, "oper": 0.441342964347, "method": 0.944461608841, "rather": 0.442714975539, "sinc": 0.0803681994577, "convolut": 27.697908051300004, "bio": 3.7456377879300002, "origin": 0.128612437587, "potenti": 1.8491528244839999, "identifi": 0.833722000472, "fourth": 0.941873448224, "first": 0.015174579624319999, "input": 12.50837667695, "have": 0.1034950163884, "proven": 2.28423595433, "write": 0.721512439877, "often": 0.258140393351, "bay": 1.5325398614399999, "learn": 13.48403303592, "nation": 0.408043349596}, "logidf": {"after": 0.020490694648099998, "tensorflow": 7.369978720910001, "too": 0.5965551547219999, "anchor": 2.3467563113099996, "analyst": 2.6971498864499996, "take": 0.130691962197, "visual": 1.6539383488600001, "new": 0.0177299468511, "assign": 1.3445959556, "viabl": 2.7839913543400003, "would": 0.0796176279647, "claud": 2.80563052944, "previous": 0.356602960063, "rain": 1.92496697521, "decreas": 1.50919249744, "function": 0.914465741594, "happi": 1.81237875643, "descent": 2.13940500645, "crop": 2.27316573057, "resnet": 7.369978720910001, "well": 0.0635144383156, "product": 0.484060136536, "further": 0.308815895297, "complet": 0.215285242047, "whichev": 4.3350257342, "know": 0.952919694398, "feet": 1.69151405424, "their": 0.015360505122700001, "scale": 1.32095306328, "similar": 0.318556092114, "chief": 0.883056027166, "creat": 0.222576818514, "how": 0.47156695693000006, "test": 0.977224437103, "repost": 6.83935046985, "landmark": 2.0756693757599995, "present": 0.227546654799, "chunk": 4.394449154669999, "than": 0.0322608622182, "increas": 0.277820718929, "special": 0.39755992860100003, "expert": 1.68029517063, "converg": 2.7275127501800003, "frame": 1.8373800586400002, "releas": 0.608521699544, "downsampl": 7.369978720910001, "interest": 0.47207177798199995, "invari": 3.1101197202099997, "deep": 1.2886734698, "will": 0.202786534915, "associ": 0.28240501535100004, "overview": 2.54006626224, "rotat": 2.1442320472, "open": 0.219591038029, "homework": 5.01860346375, "artwork": 2.80667273902, "second": 0.10713976337999999, "shrott": 7.369978720910001, "below": 0.813626591936, "near": 0.252854324034, "recognit": 1.4816549327200002, "certain": 0.592104362781, "need": 0.362740163442, "cost": 0.84129007618, "final": 0.292733863948, "applic": 1.23160392849, "empir": 1.04365037288, "level": 0.503462189943, "has": 0.0427239448548, "generat": 0.719182341736, "collabor": 1.4939250253100003, "region": 0.568028500824, "use": 0.0292080197316, "famous": 0.825060187979, "resourc": 1.08137694258, "lenetnum": 7.369978720910001, "out": 0.0584263909193, "model": 0.7374500731110001, "forward": 1.29901007269, "concept": 0.977224437103, "number": 0.0966085784186, "pool": 1.953433973, "cours": 0.765899404133, "optim": 2.4456277954099996, "deeplearningai": 7.369978720910001, "loss": 0.885954358842, "softmax": 7.369978720910001, "climb": 2.2283151644099997, "not": 0.0155524130075, "far": 0.536623764503, "compon": 1.40974687623, "literatur": 1.3031748172600002, "respect": 0.49733261904, "minim": 1.80968177926, "kickstart": 5.54542942886, "quick": 0.790727508899, "pleas": 2.21149829955, "alexnet": 7.369978720910001, "width": 2.85036642328, "then": 0.08303386523089999, "separ": 0.470759772949, "convex": 4.64212589251, "anoth": 0.127896361652, "turn": 0.324899251064, "effect": 0.333830227158, "allow": 0.24028061118900002, "minimum": 1.79668465441, "monet": 4.93636536551, "pixel": 4.45762805629, "github": 7.369978720910001, "section": 0.755387177948, "distanc": 1.24573306257, "featur": 0.423387418142, "percept": 2.1219025708, "practic": 0.533182530867, "simpl": 1.2232212893899999, "algorithm": 3.33044239518, "softwar": 2.32849096333, "develop": 0.178624694913, "intersect": 2.53847009271, "such": 0.059695977806, "sever": 0.06991112039689999, "horizont": 2.4521899771799998, "clever": 3.4187350023299996, "curvi": 7.033506484289999, "network": 0.9530830530519999, "without": 0.258874517941, "some": 0.0395735090645, "sourc": 0.529218310751, "small": 0.307101805059, "should": 0.509419876758, "add": 1.52875583713, "may": 0.050709995284400004, "locat": 0.46854337067199997, "union": 0.750172216607, "off": 0.41352852038800003, "content": 1.26473915954, "filter": 2.82668393864, "rate": 0.761033872166, "channel": 1.30247948752, "caus": 0.325858567406, "ani": 0.125608358366, "two": 0.0136988443582, "philosoph": 1.73269223754, "canada": 1.11077973916, "from": 0.000567054168866, "work": 0.109034567273, "vertic": 2.19439411974, "num": 0.00031499039539700004, "market": 0.8612095839370001, "idea": 0.73863592212, "free": 0.5412666492670001, "for": 0.00031499039539700004, "car": 1.2634013667, "manipul": 2.21322491868, "output": 2.03822657827, "height": 1.4115540278799998, "with": 0.00119749171339, "competit": 1.12154907401, "are": 0.0294674735827, "solut": 1.55346297627, "max": 2.01150743154, "better": 0.6964279406, "siames": 5.0978528354, "popular": 0.41058020877499996, "sparsiti": 7.2746685411000005, "reduc": 0.686617775143, "veri": 0.230159793238, "num\u2013num": 7.369978720910001, "negat": 1.32402598852, "combin": 0.529218310751, "posit": 0.316652318608, "later": 0.0829654259878, "tend": 1.21597024462, "compar": 0.6239191809269999, "made": 0.0680215260973, "doe": 0.5340417297169999, "give": 0.311392552224, "retrain": 5.19522699942, "check": 1.87281049562, "train": 0.660918312839, "great": 0.235805258079, "beta": 3.22051485947, "step": 1.03954505698, "scratch": 3.2509415461, "error": 1.7985854343, "alpha": 2.8847188315900003, "extrem": 0.8612095839370001, "big": 1.00798563557, "lead": 0.23620402986699998, "note": 0.353817568083, "shift": 1.20351099781, "probabl": 0.972882412913, "into": 0.0149128632287, "dimens": 2.11092206831, "rapid": 0.965411638564, "requir": 0.424253510675, "last": 0.19204364461100001, "face": 0.589602371257, "earlier": 0.624742371425, "let": 1.2488025672799998, "particular": 0.323157393804, "help": 0.336207721344, "main": 0.225571540588, "larg": 0.17037506060600002, "vice": 1.64704742741, "layer": 2.0969791623500003, "notion": 1.9956266680799999, "line": 0.349430614452, "conclus": 1.57818536893, "natur": 0.431306339292, "label": 1.49898832727, "pictur": 1.25144109124, "squar": 1.18377009701, "permiss": 1.8373800586400002, "preserv": 1.13341345513, "explod": 2.52029495787, "here": 0.8850381883700001, "facial": 3.42839691324, "week": 0.5907388641619999, "averag": 0.957011687995, "paramet": 2.8481901438599997, "apart": 1.1324356512, "human": 0.640035183243, "much": 0.17749572930100002, "encod": 3.36811501148, "evalu": 1.9388802431299998, "ideacar": 7.369978720910001, "about": 0.0628434774746, "problem": 0.569140724273, "articl": 0.702131739574, "job": 1.1798682540899998, "neural": 4.0853151555, "just": 0.289531434109, "simpli": 0.923941491586, "favourit": 2.6346578504599996, "hill": 1.06206244535, "handdesign": 7.369978720910001, "defin": 1.00368010925, "finetun": 7.369978720910001, "size": 0.9138372060609999, "contribut": 0.655201578909, "recommend": 1.36461126863, "feed": 2.05136865109, "where": 0.0649921387457, "complex": 0.8502416364309999, "flip": 3.4440528103099997, "start": 0.236443369291, "intuit": 3.3216780971900004, "whi": 1.18068843047, "explain": 0.955700427358, "central": 0.477540146039, "usual": 0.545279017064, "mani": 0.0433157581221, "coursera": 7.369978720910001, "over": 0.0249367214957, "skip": 3.26238893194, "build": 0.491137452091, "oneshot": 7.369978720910001, "triplet": 4.90187918944, "leonid": 4.1157357522, "same": 0.112059649604, "togeth": 0.458032237308, "due": 0.21341214386399998, "surpass": 2.31437006117, "connect": 0.633605058682, "bank": 1.0557062993700002, "formula": 2.15667472869, "exampl": 0.40868267499899996, "volum": 0.877738885888, "linkedin": 6.414467275880001, "lesson": 2.1594002686700002, "follow": 0.045356911094199995, "robust": 2.9929646280599997, "princess": 2.3099185434900003, "represent": 1.7797382876499999, "basic": 1.00436774895, "financi": 0.958817483446, "edg": 1.4944863500499999, "incept": 2.82455853933, "also": 0.0146571578, "person": 0.34018281601800004, "versa": 3.15194268634, "sobel": 6.08904487545, "style": 0.866289529121, "task": 1.35748680661, "plain": 1.70459063424, "research": 0.663727818138, "the": 0.0, "area": 0.327954821122, "becom": 0.11771217648900001, "peopl": 0.193265578473, "want": 0.6916366062549999, "concret": 2.3035934117099996, "system": 0.327430345585, "vanish": 2.92615168533, "intellig": 1.43349848213, "share": 0.618760299747, "monoton": 4.5788136131, "manual": 2.04501942341, "win": 1.01265652029, "centr": 1.08883409869, "which": 0.00517841384543, "like": 0.139053576545, "estim": 0.854377535975, "other": 0.00987474791976, "techniqu": 1.31624384807, "one": 0.0062553516455, "show": 0.236682766013, "known": 0.0824180805992, "see": 0.240921585492, "imag": 0.99376210729, "blog": 2.65237310559, "get": 0.579769005782, "still": 0.17112222142900002, "random": 1.9727214065099998, "implement": 1.27437940907, "through": 0.0683586918849, "drop": 0.8999535106219999, "tell": 1.21236434401, "detect": 1.68878274493, "part": 0.04239531098280001, "put": 0.505652999854, "independ": 0.463424162503, "outlin": 1.85332936004, "includ": 0.0188846813905, "yourself": 3.28064670051, "understand": 1.0880858756799998, "repeat": 1.0567930591299999, "this": 0.0037864490525, "transfer": 1.00264953547, "time": 0.0112115188626, "relat": 0.21310030165399999, "chang": 0.166275625058, "perform": 0.42618085058, "smaller": 0.9530830530519999, "project": 0.561601885907, "differ": 0.212321121312, "but": 0.0161923720719, "between": 0.033953681165299995, "what": 0.225887296827, "excel": 1.5778801652, "vision": 1.58523088743, "all": 0.011402632097799998, "augment": 2.8045894049299998, "reason": 0.544301552962, "gradient": 3.73502760882, "recent": 0.434413741288, "degre": 0.910387304568, "classic": 0.8791034528499999, "that": 0.00397614837964, "translat": 1.0499301100299998, "weight": 1.58492352612, "architectur": 1.63469757919, "object": 0.853933584803, "more": 0.017024931599999998, "and": 6.29901420636e-05, "discuss": 0.78698452262, "these": 0.0715336194008, "folk": 2.03677695251, "cat": 2.35468761528, "pad": 3.2048650877999996, "gain": 0.6142097989249999, "ryan": 2.50552593699, "faster": 2.03003967967, "comment": 1.11826753454, "download": 2.6841506319, "detector": 3.8203613341300007, "orient": 1.60824185299, "can": 0.162341096394, "comput": 1.36806891594, "make": 0.07349765782289999, "onli": 0.025324268329099998, "each": 0.173741689304, "afremov": 7.369978720910001, "andrew": 1.34145926585, "few": 0.275577913653, "key": 0.82419811896, "axe": 3.05917959552, "pretrain": 7.369978720910001, "data": 1.2168205848, "oper": 0.441342964347, "method": 0.944461608841, "rather": 0.442714975539, "sinc": 0.0803681994577, "convolut": 4.61631800855, "bio": 3.7456377879300002, "origin": 0.128612437587, "potenti": 0.9245764122419999, "identifi": 0.833722000472, "fourth": 0.941873448224, "first": 0.0075872898121599995, "input": 2.50167533539, "have": 0.0147850023412, "proven": 2.28423595433, "write": 0.721512439877, "often": 0.258140393351, "bay": 1.5325398614399999, "learn": 0.842752064745, "nation": 0.204021674798}, "freq": {"after": 1, "tensorflow": 1, "too": 1, "anchor": 1, "analyst": 2, "take": 2, "visual": 1, "new": 1, "assign": 1, "viabl": 1, "would": 5, "claud": 1, "previous": 1, "rain": 1, "decreas": 2, "function": 6, "happi": 1, "descent": 3, "crop": 1, "resnet": 1, "well": 2, "product": 1, "further": 1, "complet": 3, "whichev": 1, "know": 1, "feet": 1, "their": 3, "scale": 1, "similar": 3, "chief": 2, "creat": 3, "how": 9, "test": 1, "repost": 1, "landmark": 2, "present": 1, "chunk": 1, "than": 1, "increas": 2, "special": 1, "expert": 1, "converg": 1, "frame": 2, "releas": 1, "downsampl": 1, "interest": 1, "invari": 3, "deep": 4, "will": 6, "associ": 1, "overview": 1, "rotat": 1, "open": 2, "homework": 1, "artwork": 2, "second": 2, "shrott": 2, "below": 3, "near": 3, "recognit": 3, "certain": 1, "need": 1, "cost": 3, "final": 2, "applic": 2, "empir": 1, "level": 1, "has": 1, "generat": 4, "collabor": 1, "region": 1, "use": 14, "famous": 1, "resourc": 1, "lenetnum": 1, "out": 2, "model": 1, "forward": 1, "concept": 1, "number": 6, "pool": 2, "cours": 10, "optim": 3, "deeplearningai": 1, "loss": 1, "softmax": 1, "climb": 1, "not": 3, "far": 1, "compon": 2, "literatur": 1, "respect": 1, "minim": 2, "kickstart": 1, "quick": 1, "pleas": 1, "alexnet": 1, "width": 1, "then": 5, "separ": 1, "convex": 1, "anoth": 1, "turn": 1, "effect": 3, "allow": 6, "minimum": 1, "monet": 1, "pixel": 1, "github": 1, "section": 1, "distanc": 3, "featur": 4, "percept": 1, "practic": 1, "simpl": 1, "algorithm": 5, "softwar": 1, "develop": 1, "intersect": 1, "such": 5, "sever": 2, "horizont": 1, "clever": 1, "curvi": 1, "network": 16, "without": 1, "some": 1, "sourc": 2, "small": 4, "should": 5, "add": 1, "may": 4, "locat": 1, "union": 1, "off": 1, "content": 4, "filter": 4, "rate": 1, "channel": 1, "caus": 1, "ani": 3, "two": 3, "philosoph": 1, "canada": 2, "from": 3, "work": 6, "vertic": 1, "num": 22, "market": 1, "idea": 9, "free": 1, "for": 12, "car": 1, "manipul": 1, "output": 10, "height": 1, "with": 10, "competit": 1, "are": 6, "solut": 3, "max": 2, "better": 1, "siames": 1, "popular": 1, "sparsiti": 1, "reduc": 3, "veri": 2, "num\u2013num": 1, "negat": 1, "combin": 4, "posit": 1, "later": 1, "tend": 1, "compar": 1, "made": 1, "doe": 2, "give": 5, "retrain": 1, "check": 1, "train": 9, "great": 2, "beta": 1, "step": 2, "scratch": 1, "error": 3, "alpha": 1, "extrem": 2, "big": 1, "lead": 1, "note": 1, "shift": 1, "probabl": 4, "into": 1, "dimens": 1, "rapid": 1, "requir": 1, "last": 2, "face": 3, "earlier": 2, "let": 1, "particular": 3, "help": 1, "main": 1, "larg": 3, "vice": 1, "layer": 8, "notion": 1, "line": 1, "conclus": 1, "natur": 1, "label": 1, "pictur": 1, "squar": 1, "permiss": 1, "preserv": 1, "explod": 1, "here": 1, "facial": 1, "week": 2, "averag": 1, "paramet": 6, "apart": 1, "human": 1, "much": 3, "encod": 1, "evalu": 1, "ideacar": 1, "about": 3, "problem": 1, "articl": 1, "job": 1, "neural": 5, "just": 1, "simpli": 2, "favourit": 1, "hill": 1, "handdesign": 1, "defin": 1, "finetun": 1, "size": 3, "contribut": 1, "recommend": 1, "feed": 1, "where": 1, "complex": 2, "flip": 1, "start": 2, "intuit": 1, "whi": 6, "explain": 9, "central": 1, "usual": 1, "mani": 2, "coursera": 1, "over": 1, "skip": 1, "build": 1, "oneshot": 1, "triplet": 2, "leonid": 1, "same": 5, "togeth": 1, "due": 1, "surpass": 1, "connect": 2, "bank": 2, "formula": 1, "exampl": 7, "volum": 1, "linkedin": 1, "lesson": 14, "follow": 1, "robust": 1, "princess": 1, "represent": 1, "basic": 1, "financi": 1, "edg": 6, "incept": 1, "also": 6, "person": 5, "versa": 1, "sobel": 1, "style": 9, "task": 3, "plain": 1, "research": 1, "the": 92, "area": 1, "becom": 2, "peopl": 1, "want": 1, "concret": 1, "system": 3, "vanish": 1, "intellig": 1, "share": 3, "monoton": 1, "manual": 1, "win": 1, "centr": 1, "which": 7, "like": 5, "estim": 1, "other": 1, "techniqu": 1, "one": 2, "show": 2, "known": 3, "see": 2, "imag": 23, "blog": 1, "get": 2, "still": 1, "random": 2, "implement": 6, "through": 1, "drop": 1, "tell": 1, "detect": 5, "part": 3, "put": 2, "independ": 1, "outlin": 2, "includ": 2, "yourself": 1, "understand": 3, "repeat": 1, "this": 13, "transfer": 7, "time": 1, "relat": 3, "chang": 1, "perform": 4, "smaller": 1, "project": 1, "differ": 2, "but": 2, "between": 4, "what": 2, "excel": 1, "vision": 8, "all": 4, "augment": 1, "reason": 3, "gradient": 4, "recent": 1, "degre": 1, "classic": 2, "that": 18, "translat": 2, "weight": 3, "architectur": 2, "object": 7, "more": 1, "and": 29, "discuss": 2, "these": 4, "folk": 1, "cat": 2, "pad": 2, "gain": 1, "ryan": 2, "faster": 1, "comment": 3, "download": 1, "detector": 2, "orient": 1, "can": 3, "comput": 8, "make": 1, "onli": 3, "each": 2, "afremov": 1, "andrew": 1, "few": 1, "key": 2, "axe": 1, "pretrain": 2, "data": 2, "oper": 1, "method": 1, "rather": 1, "sinc": 1, "convolut": 6, "bio": 1, "origin": 1, "potenti": 2, "identifi": 1, "fourth": 1, "first": 2, "input": 5, "have": 7, "proven": 1, "write": 1, "often": 1, "bay": 1, "learn": 16, "nation": 2}, "idf": {"after": 1.02070207021, "tensorflow": 1587.6, "too": 1.81585268215, "anchor": 10.451612903200001, "analyst": 14.8373831776, "take": 1.13961668222, "visual": 5.22752716497, "new": 1.0178880554, "assign": 3.83663605607, "viabl": 16.1834862385, "would": 1.0828729281799998, "claud": 16.5375, "previous": 1.42846859816, "rain": 6.854922279789999, "decreas": 4.5230769230800005, "function": 2.495441685, "happi": 6.125, "descent": 8.494382022469999, "crop": 9.71009174312, "resnet": 1587.6, "well": 1.0655748708, "product": 1.62264922322, "further": 1.3618116315, "complet": 1.24021560816, "whichev": 76.3269230769, "know": 2.59327017315, "feet": 5.42769230769, "their": 1.01547908405, "scale": 3.7469907953699995, "similar": 1.37514075357, "chief": 2.41827875095, "creat": 1.2492917847, "how": 1.60250328051, "test": 2.65707112971, "repost": 933.882352941, "landmark": 7.969879518069999, "present": 1.25551601423, "chunk": 81.0, "than": 1.03278688525, "increas": 1.32024948025, "special": 1.4881889763799998, "expert": 5.36713995943, "converg": 15.2947976879, "frame": 6.280063291139999, "releas": 1.8377126982299998, "downsampl": 1587.6, "interest": 1.60331246213, "invari": 22.4237288136, "deep": 3.6279707495399998, "will": 1.22481098596, "associ": 1.3263157894700002, "overview": 12.6805111821, "rotat": 8.53548387097, "open": 1.24556723678, "homework": 151.2, "artwork": 16.5547445255, "second": 1.1130898128, "shrott": 1587.6, "below": 2.25607503197, "near": 1.28769567686, "recognit": 4.40022172949, "certain": 1.8077886586200003, "need": 1.4372623574099999, "cost": 2.31935719503, "final": 1.34008609775, "applic": 3.42672134686, "empir": 2.8395635843299996, "level": 1.6544393497299998, "has": 1.0436497502, "generat": 2.05275407292, "collabor": 4.45454545455, "region": 1.7647843486, "use": 1.0296387573799999, "famous": 2.28201811125, "resourc": 2.9487369985100003, "lenetnum": 1587.6, "out": 1.06016694491, "model": 2.0905978404, "forward": 3.66566612792, "concept": 2.65707112971, "number": 1.10142916609, "pool": 7.052865393160001, "cours": 2.15092805853, "optim": 11.5377906977, "deeplearningai": 1587.6, "loss": 2.42529789184, "softmax": 1587.6, "climb": 9.284210526319999, "not": 1.01567398119, "far": 1.71022298826, "compon": 4.09491875161, "literatur": 3.68096452585, "respect": 1.6443293630200002, "minim": 6.10850327049, "kickstart": 256.064516129, "quick": 2.205, "pleas": 9.12938470385, "alexnet": 1587.6, "width": 17.294117647100002, "then": 1.08657860516, "separ": 1.6012102874399998, "convex": 103.764705882, "anoth": 1.13643521832, "turn": 1.3838912133899999, "effect": 1.3963060686000002, "allow": 1.2716059271100002, "minimum": 6.02962400304, "monet": 139.263157895, "pixel": 86.28260869569999, "github": 1587.6, "section": 2.1284354471099998, "distanc": 3.4754816112099998, "featur": 1.52712581762, "percept": 8.34700315457, "practic": 1.70434782609, "simpl": 3.3981164383599998, "algorithm": 27.9507042254, "softwar": 10.2624434389, "develop": 1.1955719557200002, "intersect": 12.660287081300002, "such": 1.06151377374, "sever": 1.07241286139, "horizont": 11.6137527432, "clever": 30.5307692308, "curvi": 1134.0, "network": 2.59369384088, "without": 1.29547123623, "some": 1.04036697248, "sourc": 1.69760479042, "small": 1.3594793629, "should": 1.6643254009900001, "add": 4.61243463103, "may": 1.05201775893, "locat": 1.59766529134, "union": 2.11736463057, "off": 1.5121440137200002, "content": 3.5421686747, "filter": 16.8893617021, "rate": 2.14048806795, "channel": 3.6784059314199995, "caus": 1.38521943984, "ani": 1.13383802314, "two": 1.01379310345, "philosoph": 5.65586034913, "canada": 3.0367253251700004, "from": 1.00056721497, "work": 1.11520089913, "vertic": 8.974561899380001, "num": 1.00031504001, "market": 2.36602086438, "idea": 2.0930784443, "free": 1.71818181818, "for": 1.00031504001, "car": 3.53743315508, "manipul": 9.145161290319999, "output": 7.676982591880001, "height": 4.1023255814, "with": 1.0011982089899998, "competit": 3.06960556845, "are": 1.02990593578, "solut": 4.7278141751, "max": 7.474576271189999, "better": 2.0065722952500002, "siames": 163.670103093, "popular": 1.50769230769, "sparsiti": 1443.27272727, "reduc": 1.98698372966, "veri": 1.25880114177, "num\u2013num": 1587.6, "negat": 3.75852272727, "combin": 1.69760479042, "posit": 1.37252528746, "later": 1.08650424309, "tend": 3.3735656608599998, "compar": 1.8662278123900002, "made": 1.07038834951, "doe": 1.70581282905, "give": 1.3653250774, "retrain": 180.409090909, "check": 6.50655737705, "train": 1.9365698950999999, "great": 1.26592775696, "beta": 25.0410094637, "step": 2.8279301745599996, "scratch": 25.8146341463, "error": 6.04109589041, "alpha": 17.898534385599998, "extrem": 2.36602086438, "big": 2.7400759406299997, "lead": 1.2664326739, "note": 1.42449528937, "shift": 3.3317943336799996, "probabl": 2.64555907349, "into": 1.01502461479, "dimens": 8.25585023401, "rapid": 2.62586834271, "requir": 1.52844902282, "last": 1.2117234010100002, "face": 1.80327124035, "earlier": 1.86776470588, "let": 3.48616600791, "particular": 1.3814827706200001, "help": 1.39962972759, "main": 1.25303867403, "larg": 1.18574949585, "vice": 5.19162851537, "layer": 8.14153846154, "notion": 7.356811862839999, "line": 1.4182597820299998, "conclus": 4.84615384615, "natur": 1.5392670157100001, "label": 4.47715736041, "pictur": 3.4953764861300005, "squar": 3.26666666667, "permiss": 6.280063291139999, "preserv": 3.1062414400300002, "explod": 12.432263116700002, "here": 2.42307692308, "facial": 30.827184466, "week": 1.80532181033, "averag": 2.60390355913, "paramet": 17.256521739100002, "apart": 3.1032056294, "human": 1.8965476048299998, "much": 1.1942229577299999, "encod": 29.0237659963, "evalu": 6.9509632224199995, "ideacar": 1587.6, "about": 1.06486015159, "problem": 1.76674827509, "articl": 2.01805008262, "job": 3.2539454806299997, "neural": 59.4606741573, "just": 1.33580143037, "simpli": 2.5192002538900002, "favourit": 13.938542581199998, "hill": 2.89233011478, "handdesign": 1587.6, "defin": 2.72830383227, "finetun": 1587.6, "size": 2.49387370405, "contribut": 1.9255306246200001, "recommend": 3.9142011834300003, "feed": 7.77853993141, "where": 1.06715063521, "complex": 2.34021226415, "flip": 31.3136094675, "start": 1.26673581744, "intuit": 27.7068062827, "whi": 3.2566153846200003, "explain": 2.60049140049, "central": 1.6121039805000001, "usual": 1.72508964468, "mani": 1.04426757877, "coursera": 1587.6, "over": 1.02525024217, "skip": 26.111842105300003, "build": 1.6341739578, "oneshot": 1587.6, "triplet": 134.542372881, "leonid": 61.2972972973, "same": 1.11857958148, "togeth": 1.58095996813, "due": 1.23789473684, "surpass": 10.1185468451, "connect": 1.8843916913900003, "bank": 2.87400434468, "formula": 8.64235166032, "exampl": 1.50483412322, "volum": 2.40545454545, "linkedin": 610.615384615, "lesson": 8.66593886463, "follow": 1.04640126549, "robust": 19.9447236181, "princess": 10.073604060900001, "represent": 5.928304705, "basic": 2.7301805675, "financi": 2.60860992442, "edg": 4.45704660303, "incept": 16.8535031847, "also": 1.01476510067, "person": 1.40520446097, "versa": 23.381443299, "sobel": 441.0, "style": 2.37807070102, "task": 3.88641370869, "plain": 5.49913404919, "research": 1.9420183486200002, "the": 1.0, "area": 1.3881262568900001, "becom": 1.12492028626, "peopl": 1.21320495186, "want": 1.99698113208, "concret": 10.0100882724, "system": 1.38739840951, "vanish": 18.6556991774, "intellig": 4.19334389857, "share": 1.8566249561500001, "monoton": 97.3987730061, "manual": 7.72930866602, "win": 2.75290445639, "centr": 2.97080838323, "which": 1.005191845, "like": 1.14918566775, "estim": 2.34991119005, "other": 1.00992366412, "techniqu": 3.7293868921800004, "one": 1.00627495722, "show": 1.26703910615, "known": 1.0859097127200001, "see": 1.27242125511, "imag": 2.70137825421, "blog": 14.1876675603, "get": 1.78562591385, "still": 1.1866357724799999, "random": 7.1902173913, "implement": 3.57648118946, "through": 1.07074930869, "drop": 2.4594887684, "tell": 3.36142282448, "detect": 5.41288782816, "part": 1.04330682789, "put": 1.65806788512, "independ": 1.58950740889, "outlin": 6.38102893891, "includ": 1.0190641247799999, "yourself": 26.592964824099997, "understand": 2.96858638743, "repeat": 2.8771293947099994, "this": 1.00379362671, "transfer": 2.72549356223, "time": 1.01127460348, "relat": 1.23750876919, "chang": 1.1808985421, "perform": 1.5313977042500002, "smaller": 2.59369384088, "project": 1.7534791252500002, "differ": 1.23654490225, "but": 1.01632417899, "between": 1.03453668708, "what": 1.25343439128, "excel": 4.84467500763, "vision": 4.88041807562, "all": 1.01146788991, "augment": 16.5202913632, "reason": 1.72340425532, "gradient": 41.889182058, "recent": 1.54405757635, "degre": 2.4852849092, "classic": 2.4087391898, "that": 1.00398406375, "translat": 2.85745140389, "weight": 4.878918254459999, "architectur": 5.12790697674, "object": 2.3488681757700003, "more": 1.0171706817, "and": 1.00006299213, "discuss": 2.19676214197, "these": 1.07415426252, "folk": 7.6658619024600005, "cat": 10.5348374253, "pad": 24.652173913000002, "gain": 1.84819557625, "ryan": 12.25, "faster": 7.61438848921, "comment": 3.05954904606, "download": 14.6457564576, "detector": 45.6206896552, "orient": 4.994023277759999, "can": 1.17626139142, "comput": 3.9277585353800006, "make": 1.0762660158600001, "onli": 1.0256476516600002, "each": 1.18974820144, "afremov": 1587.6, "andrew": 3.82462057336, "few": 1.31729173581, "key": 2.28005170185, "axe": 21.3100671141, "pretrain": 1587.6, "data": 3.37643555934, "oper": 1.55479384977, "method": 2.5714285714300003, "rather": 1.55692850838, "sinc": 1.08368600683, "convolut": 101.121019108, "bio": 42.336000000000006, "origin": 1.13724928367, "potenti": 2.52080025405, "identifi": 2.30187037843, "fourth": 2.5647819063, "first": 1.00761614623, "input": 12.2029208301, "have": 1.0148948411399998, "proven": 9.818181818180001, "write": 2.0575427682700003, "often": 1.29452054795, "bay": 4.629921259840001, "learn": 2.32275054865, "nation": 1.22632473351}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/12/ng-computer-vision-11-lessons-learnied.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/12/deepschool-io-deep-learning-learning.html\" rel=\"prev\" title=\"DeepSchool.io: Deep Learning Learning\"/>\n<link href=\"https://www.kdnuggets.com/2017/12/introduction-monte-carlo-tree-search.html\" rel=\"next\" title=\"An Introduction to Monte Carlo Tree Search\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2017/12/ng-computer-vision-11-lessons-learnied.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=76045\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2017/12/ng-computer-vision-11-lessons-learnied.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-76045 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 22-Dec, 2017  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned (\u00a0<a href=\"/2018/n01.html\">18:n01</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\"><img align=\"right\" alt=\"Gold Blog\" src=\"/images/tkb-1712-g.png\" width=\"94\"/>Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/12/deepschool-io-deep-learning-learning.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/12/introduction-monte-carlo-tree-search.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/andrew-ng\" rel=\"tag\">Andrew Ng</a>, <a href=\"https://www.kdnuggets.com/tag/computer-vision\" rel=\"tag\">Computer Vision</a>, <a href=\"https://www.kdnuggets.com/tag/coursera\" rel=\"tag\">Coursera</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/mooc\" rel=\"tag\">MOOC</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/object-detection\" rel=\"tag\">Object Detection</a></div>\n<br/>\n<p class=\"excerpt\">\n     I recently completed Andrew Ng\u2019s computer vision course on Coursera. In this article, I will discuss 11 key lessons that I learned in the course.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/ryanshrott/\" target=\"_blank\">Ryan Shrott</a>, Chief Analyst at National Bank of Canada.</b></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*oG9PstLjOV1aMc7v7vMhRQ.jpeg\" width=\"99%\"><br>\n<font size=\"-1\">Created in week 4 of the course. Combined Ng\u2019s face with the style of Rain Princess by Leonid\u00a0Afremov.</font></br></img></center></p>\n<p>I recently completed Andrew Ng\u2019s computer vision course on Coursera. Ng does an excellent job at explaining many of the complex ideas required to optimize any computer vision task. My favourite component of the course was the neural style transfer section (see lesson 11), which allows you to create artwork which combines the style of Claud Monet with the content of whichever image you would like. This is an example of what you can do:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*AMEw4j3O4dWVzjJkgNItvg.png\" width=\"80%\"/></p>\n<p>In this article, I will discuss 11 key lessons that I learned in the course. Note that this is the fourth course in the Deep Learning specialization released by deeplearning.ai. If you would like to learn about the previous 3 courses, I recommend you check out\u00a0<a href=\"https://towardsdatascience.com/deep-learning-specialization-by-andrew-ng-21-lessons-learned-15ffaaef627c\" rel=\"noopener noreferrer\" target=\"_blank\">this blog.</a></p>\n<p><b>Lesson 1: Why computer vision is taking\u00a0off?</b></p>\n<p>Big data and algorithmic developments will cause the testing error of intelligent systems to converge to Bayes optimal error. This will lead to AI surpassing human level performance in all areas, including natural perception tasks. Open source software from TensorFlow allows you to use transfer learning to implement an object detection system for any object very rapidly. With transfer learning, you only need about 100\u2013500 examples for the system to work relatively well. Manually labeling 100 examples isn\u2019t too much work, so you\u2019ll have a minimum viable product very quickly.</p>\n<p><b>Lesson 2: How convolution works?</b></p>\n<p>Ng explains how to implement the convolution operator and shows how it can detect edges in an image. He also explains other filters, such as the Sobel filter, which put more weight on central pixels of the edge. Ng then explains that the weights of the filter should not be hand-designed but rather should be learned using a hill climbing algorithm such as gradient descent.</p>\n<p><b>Lesson 3: Why convolutions?</b></p>\n<p>Ng gives several philosophical reasons for why convolutions work so well in image recognition tasks. He outlines 2 concrete reasons. The first is known as\u00a0parameter sharing. It is the idea that a feature detector that\u2019s useful in one part of an image is probably useful in another part of the image. For example, an edge detector is probably useful is many parts of the image. The sharing of parameters allows the number of parameters to be small and also allows for robust translation invariance. Translation invariance is the notion that a cat shifted and rotated is still a picture of a cat.<br>\nThe second idea he outlines is known as sparsity of connections. This is the idea that each output layer is only a function of a small number of inputs (particularly, the filter size squared). This greatly reduces the number of parameters in the network and allows for faster training.</br></p>\n<p><b>Lesson 3: Why\u00a0Padding?</b></p>\n<p>Padding is usually used to preserve the input size (i.e. the dimension of the input and output are the same). It is also used so that frames near the edges of image contribute as much to the output as frames near near the centre.</p>\n<p><b>Lesson 4: Why Max\u00a0Pooling?</b></p>\n<p>Through empirical research, max pooling has proven to be extremely effective in CNN\u2019s. By downsampling the image, we reduce the number of parameters which makes the features invariant to scale or orientation changes.</p>\n<p><b>Lesson 5: Classical network architectures</b></p>\n<p>Ng shows 3 classical network architectures including LeNet-5, AlexNet and VGG-16. The main idea he presents is that effective networks often have layers with an increasing channel size and decreasing width and height.</p>\n<p><b>Lesson 6: Why ResNets\u00a0works?</b></p>\n<p>For a plain network, the training error does not monotonically decrease as the number of layers increases due to vanishing and exploding gradients. These networks have feed forward skipped connections which allow you train extremely large networks without a drop in performance.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*SP6KSRdom6hu4kUxpdXgiQ.png\" width=\"99%\"/></p>\n<p><b>Lesson 7: Use Transfer Learning!</b></p>\n<p>Training large networks, such as inception, from scratch can take weeks on a GPU. You should download the weights from a pretrained network and just retrain the last softmax layer (or the last few layers). This will greatly reduce training time. The reason this works is that earlier layers tend to be associated with concepts in all images such as edges and curvy lines.</p>\n<p><b>Lesson 8: How to win computer vision competitions</b></p>\n<p>Ng explains that you should train several networks independently and average their outputs to get better performance. Data augmentation techniques such as randomly cropping images, flipping images about the horizontal and vertical axes may also help with performance. Finally, you should use an open source implementation and pretrained model to start and then fine-tune the parameters for your particular application.</p>\n<p><b>Lesson 9: How to implement object detection</b></p>\n<p>Ng starts by explaining the idea of landmark detection in an image. Basically, these landmarks become apart of your training output examples. With some clever convolution manipulations, you get an output volume that tells you the probability that the object is in a certain region and the location of the object. He also explains how to evaluate the effectiveness of your object detection algorithm using the intersection over union formula. Finally, Ng puts all these components together to explain the famous YOLO algorithm.</p>\n<p><b>Lesson 10: How to implement Face Recognition</b></p>\n<p>Facial recognition is a one-shot learning problem since you may only have one example image to identify the person. The solution is to learn a similarity function which gives the degree of difference between two images. So if the images are of the same person, you want the function to output a small number, and vice versa for different people.</p>\n<p>The first solution Ng gives is known as a siamese network. The idea is to input two persons into the same network separately and then compare their outputs. If the outputs are similar, then the persons are probably the same. The network is trained so that if two input images are of the same person, then the distance between their encodings is relatively small.</p>\n<p>The second solution he gives uses a triplet loss method. The idea is that you have a triplet of images (Anchor (A), Positive (P) and Negative (N)) and you train the network so that the output distance between A and P is much smaller than the distance between A and N.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*6fxfZxDuAT9gPX4vzAe8qg.png\" width=\"99%\"/></p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*0GCcwv08Pup-PtPCVSRHxw.png\" width=\"99%\"/></p>\n<p><b>Lesson 11: How to create artwork using Neural Style\u00a0Transfer</b></p>\n<p>Ng explains how to generate an image with a combining content and style. See the examples below.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*ekjIdfldOust0qWMZilUAg.png\" width=\"99%\"/></p>\n<p>The key to Neural Style Transfer is to understand the visual representations for what each layer in a convolutional network is learning. It turns out that earlier layers learn simple features like edges and later features learn complex objects like faces, feet and cars.</p>\n<p>To build a neural style transfer image, you simply define a cost function which is a convex combination of the similarity in content and style. In particular, the cost function\u00a0would\u00a0be:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>J(G) = alpha * J_content(C,G) + beta * J_style(S,G)</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>where G is the generated image, C is the content image and S is the style image. The learning algorithm simply uses gradient descent to minimize the cost function with respect to the generated image, G.</p>\n<p>The steps are as follows:</p>\n<ol>\n<li>Generate G randomly.\n<li>Use gradient descent to minimize J(G), i.e. write G\u00a0:= G-dG(J(G)).\n<li>Repeat step 2.\n</li></li></li></ol>\n<p><b>Conclusion</b></p>\n<p>By completing this course, you will gain an intuitive understanding of a large chunk of the computer vision literature. The homework assignments also give you practice implementing these ideas yourself. You will not become an expert in computer vision after completing this course, but this course may kickstart a potential idea/career you may have in computer vision.</p>\n<p>If you have any interesting applications of computer vision you would like to share, let me know in the comments below. I would be happy to discuss potential collaboration on new projects.</p>\n<p>That\u2019s all folks\u200a\u2014\u200aif you\u2019ve made it this far, please comment below and add me on\u00a0<a href=\"https://www.linkedin.com/in/ryanshrott/\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>.</p>\n<p>My Github is\u00a0<a href=\"https://github.com/ryanshrott\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br>\n<b>Bio: <a href=\"https://www.linkedin.com/in/ryanshrott/\" target=\"_blank\">Ryan J. Shrott</a></b> is Chief Analyst at National Bank of Canada Financial Markets.</br></p>\n<p><a href=\"https://towardsdatascience.com/computer-vision-by-andrew-ng-11-lessons-learned-7d05c18a6999\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/10/3-popular-courses-deep-learning.html\">An Overview of 3 Popular Courses on Deep Learning</a>\n<li><a href=\"/2017/10/5-free-resources-furthering-understanding-deep-learning.html\">5 Free Resources for Furthering Your Understanding of Deep Learning</a>\n<li><a href=\"/2017/11/estimating-optimal-learning-rate-deep-neural-network.html\">Estimating an Optimal Learning Rate For a Deep Neural Network</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/12/deepschool-io-deep-learning-learning.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/12/introduction-monte-carlo-tree-search.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned (\u00a0<a href=\"/2018/n01.html\">18:n01</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556330317\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.707 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 21:58:37 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "ryan", "shrott", "chief", "analyst", "nation", "bank", "canada", "creat", "week", "num", "the", "cours", "combin", "face", "with", "the", "style", "rain", "princess", "leonid", "afremov", "recent", "complet", "andrew", "comput", "vision", "cours", "coursera", "doe", "excel", "job", "explain", "mani", "the", "complex", "idea", "requir", "optim", "ani", "comput", "vision", "task", "favourit", "compon", "the", "cours", "the", "neural", "style", "transfer", "section", "see", "lesson", "num", "which", "allow", "creat", "artwork", "which", "combin", "the", "style", "claud", "monet", "with", "the", "content", "whichev", "imag", "would", "like", "this", "exampl", "what", "can", "this", "articl", "will", "discuss", "num", "key", "lesson", "that", "learn", "the", "cours", "note", "that", "this", "the", "fourth", "cours", "the", "deep", "learn", "special", "releas", "deeplearningai", "would", "like", "learn", "about", "the", "previous", "num", "cours", "recommend", "check", "out", "this", "blog", "lesson", "num", "whi", "comput", "vision", "take", "off", "big", "data", "and", "algorithm", "develop", "will", "caus", "the", "test", "error", "intellig", "system", "converg", "bay", "optim", "error", "this", "will", "lead", "surpass", "human", "level", "perform", "all", "area", "includ", "natur", "percept", "task", "open", "sourc", "softwar", "from", "tensorflow", "allow", "use", "transfer", "learn", "implement", "object", "detect", "system", "for", "ani", "object", "veri", "rapid", "with", "transfer", "learn", "onli", "need", "about", "num\u2013num", "exampl", "for", "the", "system", "work", "relat", "well", "manual", "label", "num", "exampl", "too", "much", "work", "have", "minimum", "viabl", "product", "veri", "quick", "lesson", "num", "how", "convolut", "work", "explain", "how", "implement", "the", "convolut", "oper", "and", "show", "how", "can", "detect", "edg", "imag", "also", "explain", "other", "filter", "such", "the", "sobel", "filter", "which", "put", "more", "weight", "central", "pixel", "the", "edg", "then", "explain", "that", "the", "weight", "the", "filter", "should", "not", "handdesign", "but", "rather", "should", "learn", "use", "hill", "climb", "algorithm", "such", "gradient", "descent", "lesson", "num", "whi", "convolut", "give", "sever", "philosoph", "reason", "for", "whi", "convolut", "work", "well", "imag", "recognit", "task", "outlin", "num", "concret", "reason", "the", "first", "known", "paramet", "share", "the", "idea", "that", "featur", "detector", "that", "use", "one", "part", "imag", "probabl", "use", "anoth", "part", "the", "imag", "for", "exampl", "edg", "detector", "probabl", "use", "mani", "part", "the", "imag", "the", "share", "paramet", "allow", "the", "number", "paramet", "small", "and", "also", "allow", "for", "robust", "translat", "invari", "translat", "invari", "the", "notion", "that", "cat", "shift", "and", "rotat", "still", "pictur", "cat", "the", "second", "idea", "outlin", "known", "sparsiti", "connect", "this", "the", "idea", "that", "each", "output", "layer", "onli", "function", "small", "number", "input", "particular", "the", "filter", "size", "squar", "this", "great", "reduc", "the", "number", "paramet", "the", "network", "and", "allow", "for", "faster", "train", "lesson", "num", "whi", "pad", "pad", "usual", "use", "preserv", "the", "input", "size", "the", "dimens", "the", "input", "and", "output", "are", "the", "same", "also", "use", "that", "frame", "near", "the", "edg", "imag", "contribut", "much", "the", "output", "frame", "near", "near", "the", "centr", "lesson", "num", "whi", "max", "pool", "through", "empir", "research", "max", "pool", "has", "proven", "extrem", "effect", "downsampl", "the", "imag", "reduc", "the", "number", "paramet", "which", "make", "the", "featur", "invari", "scale", "orient", "chang", "lesson", "num", "classic", "network", "architectur", "show", "num", "classic", "network", "architectur", "includ", "lenetnum", "alexnet", "and", "the", "main", "idea", "present", "that", "effect", "network", "often", "have", "layer", "with", "increas", "channel", "size", "and", "decreas", "width", "and", "height", "lesson", "num", "whi", "resnet", "work", "for", "plain", "network", "the", "train", "error", "doe", "not", "monoton", "decreas", "the", "number", "layer", "increas", "due", "vanish", "and", "explod", "gradient", "these", "network", "have", "feed", "forward", "skip", "connect", "which", "allow", "train", "extrem", "larg", "network", "without", "drop", "perform", "lesson", "num", "use", "transfer", "learn", "train", "larg", "network", "such", "incept", "from", "scratch", "can", "take", "week", "should", "download", "the", "weight", "from", "pretrain", "network", "and", "just", "retrain", "the", "last", "softmax", "layer", "the", "last", "few", "layer", "this", "will", "great", "reduc", "train", "time", "the", "reason", "this", "work", "that", "earlier", "layer", "tend", "associ", "with", "concept", "all", "imag", "such", "edg", "and", "curvi", "line", "lesson", "num", "how", "win", "comput", "vision", "competit", "explain", "that", "should", "train", "sever", "network", "independ", "and", "averag", "their", "output", "get", "better", "perform", "data", "augment", "techniqu", "such", "random", "crop", "imag", "flip", "imag", "about", "the", "horizont", "and", "vertic", "axe", "may", "also", "help", "with", "perform", "final", "should", "use", "open", "sourc", "implement", "and", "pretrain", "model", "start", "and", "then", "finetun", "the", "paramet", "for", "particular", "applic", "lesson", "num", "how", "implement", "object", "detect", "start", "explain", "the", "idea", "landmark", "detect", "imag", "basic", "these", "landmark", "becom", "apart", "train", "output", "exampl", "with", "some", "clever", "convolut", "manipul", "get", "output", "volum", "that", "tell", "the", "probabl", "that", "the", "object", "certain", "region", "and", "the", "locat", "the", "object", "also", "explain", "how", "evalu", "the", "effect", "object", "detect", "algorithm", "use", "the", "intersect", "over", "union", "formula", "final", "put", "all", "these", "compon", "togeth", "explain", "the", "famous", "algorithm", "lesson", "num", "how", "implement", "face", "recognit", "facial", "recognit", "oneshot", "learn", "problem", "sinc", "may", "onli", "have", "one", "exampl", "imag", "identifi", "the", "person", "the", "solut", "learn", "similar", "function", "which", "give", "the", "degre", "differ", "between", "two", "imag", "the", "imag", "are", "the", "same", "person", "want", "the", "function", "output", "small", "number", "and", "vice", "versa", "for", "differ", "peopl", "the", "first", "solut", "give", "known", "siames", "network", "the", "idea", "input", "two", "person", "into", "the", "same", "network", "separ", "and", "then", "compar", "their", "output", "the", "output", "are", "similar", "then", "the", "person", "are", "probabl", "the", "same", "the", "network", "train", "that", "two", "input", "imag", "are", "the", "same", "person", "then", "the", "distanc", "between", "their", "encod", "relat", "small", "the", "second", "solut", "give", "use", "triplet", "loss", "method", "the", "idea", "that", "have", "triplet", "imag", "anchor", "posit", "and", "negat", "and", "train", "the", "network", "that", "the", "output", "distanc", "between", "and", "much", "smaller", "than", "the", "distanc", "between", "and", "lesson", "num", "how", "creat", "artwork", "use", "neural", "style", "transfer", "explain", "how", "generat", "imag", "with", "combin", "content", "and", "style", "see", "the", "exampl", "below", "the", "key", "neural", "style", "transfer", "understand", "the", "visual", "represent", "for", "what", "each", "layer", "convolut", "network", "learn", "turn", "out", "that", "earlier", "layer", "learn", "simpl", "featur", "like", "edg", "and", "later", "featur", "learn", "complex", "object", "like", "face", "feet", "and", "car", "build", "neural", "style", "transfer", "imag", "simpli", "defin", "cost", "function", "which", "convex", "combin", "the", "similar", "content", "and", "style", "particular", "the", "cost", "function", "would", "alpha", "beta", "where", "the", "generat", "imag", "the", "content", "imag", "and", "the", "style", "imag", "the", "learn", "algorithm", "simpli", "use", "gradient", "descent", "minim", "the", "cost", "function", "with", "respect", "the", "generat", "imag", "the", "step", "are", "follow", "generat", "random", "use", "gradient", "descent", "minim", "write", "repeat", "step", "num", "conclus", "complet", "this", "cours", "will", "gain", "intuit", "understand", "larg", "chunk", "the", "comput", "vision", "literatur", "the", "homework", "assign", "also", "give", "practic", "implement", "these", "idea", "yourself", "will", "not", "becom", "expert", "comput", "vision", "after", "complet", "this", "cours", "but", "this", "cours", "may", "kickstart", "potenti", "ideacar", "may", "have", "comput", "vision", "have", "ani", "interest", "applic", "comput", "vision", "would", "like", "share", "let", "know", "the", "comment", "below", "would", "happi", "discuss", "potenti", "collabor", "new", "project", "that", "all", "folk", "made", "this", "far", "pleas", "comment", "below", "and", "add", "linkedin", "github", "here", "bio", "ryan", "shrott", "chief", "analyst", "nation", "bank", "canada", "financi", "market", "origin", "repost", "with", "permiss", "relat", "overview", "num", "popular", "cours", "deep", "learn", "num", "free", "resourc", "for", "further", "understand", "deep", "learn", "estim", "optim", "learn", "rate", "for", "deep", "neural", "network"], "timestamp_scraper": 1556379553.274147, "title": "Computer Vision by Andrew Ng\u200a-\u200a11 Lessons Learned", "read_time": 414.0, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/ryanshrott/\" target=\"_blank\">Ryan Shrott</a>, Chief Analyst at National Bank of Canada.</b></p>\n<p><center><img src=\"https://cdn-images-1.medium.com/max/800/1*oG9PstLjOV1aMc7v7vMhRQ.jpeg\" width=\"99%\"><br>\n<font size=\"-1\">Created in week 4 of the course. Combined Ng\u2019s face with the style of Rain Princess by Leonid\u00a0Afremov.</font></br></img></center></p>\n<p>I recently completed Andrew Ng\u2019s computer vision course on Coursera. Ng does an excellent job at explaining many of the complex ideas required to optimize any computer vision task. My favourite component of the course was the neural style transfer section (see lesson 11), which allows you to create artwork which combines the style of Claud Monet with the content of whichever image you would like. This is an example of what you can do:</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*AMEw4j3O4dWVzjJkgNItvg.png\" width=\"80%\"/></p>\n<p>In this article, I will discuss 11 key lessons that I learned in the course. Note that this is the fourth course in the Deep Learning specialization released by deeplearning.ai. If you would like to learn about the previous 3 courses, I recommend you check out\u00a0<a href=\"https://towardsdatascience.com/deep-learning-specialization-by-andrew-ng-21-lessons-learned-15ffaaef627c\" rel=\"noopener noreferrer\" target=\"_blank\">this blog.</a></p>\n<p><b>Lesson 1: Why computer vision is taking\u00a0off?</b></p>\n<p>Big data and algorithmic developments will cause the testing error of intelligent systems to converge to Bayes optimal error. This will lead to AI surpassing human level performance in all areas, including natural perception tasks. Open source software from TensorFlow allows you to use transfer learning to implement an object detection system for any object very rapidly. With transfer learning, you only need about 100\u2013500 examples for the system to work relatively well. Manually labeling 100 examples isn\u2019t too much work, so you\u2019ll have a minimum viable product very quickly.</p>\n<p><b>Lesson 2: How convolution works?</b></p>\n<p>Ng explains how to implement the convolution operator and shows how it can detect edges in an image. He also explains other filters, such as the Sobel filter, which put more weight on central pixels of the edge. Ng then explains that the weights of the filter should not be hand-designed but rather should be learned using a hill climbing algorithm such as gradient descent.</p>\n<p><b>Lesson 3: Why convolutions?</b></p>\n<p>Ng gives several philosophical reasons for why convolutions work so well in image recognition tasks. He outlines 2 concrete reasons. The first is known as\u00a0parameter sharing. It is the idea that a feature detector that\u2019s useful in one part of an image is probably useful in another part of the image. For example, an edge detector is probably useful is many parts of the image. The sharing of parameters allows the number of parameters to be small and also allows for robust translation invariance. Translation invariance is the notion that a cat shifted and rotated is still a picture of a cat.<br>\nThe second idea he outlines is known as sparsity of connections. This is the idea that each output layer is only a function of a small number of inputs (particularly, the filter size squared). This greatly reduces the number of parameters in the network and allows for faster training.</br></p>\n<p><b>Lesson 3: Why\u00a0Padding?</b></p>\n<p>Padding is usually used to preserve the input size (i.e. the dimension of the input and output are the same). It is also used so that frames near the edges of image contribute as much to the output as frames near near the centre.</p>\n<p><b>Lesson 4: Why Max\u00a0Pooling?</b></p>\n<p>Through empirical research, max pooling has proven to be extremely effective in CNN\u2019s. By downsampling the image, we reduce the number of parameters which makes the features invariant to scale or orientation changes.</p>\n<p><b>Lesson 5: Classical network architectures</b></p>\n<p>Ng shows 3 classical network architectures including LeNet-5, AlexNet and VGG-16. The main idea he presents is that effective networks often have layers with an increasing channel size and decreasing width and height.</p>\n<p><b>Lesson 6: Why ResNets\u00a0works?</b></p>\n<p>For a plain network, the training error does not monotonically decrease as the number of layers increases due to vanishing and exploding gradients. These networks have feed forward skipped connections which allow you train extremely large networks without a drop in performance.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*SP6KSRdom6hu4kUxpdXgiQ.png\" width=\"99%\"/></p>\n<p><b>Lesson 7: Use Transfer Learning!</b></p>\n<p>Training large networks, such as inception, from scratch can take weeks on a GPU. You should download the weights from a pretrained network and just retrain the last softmax layer (or the last few layers). This will greatly reduce training time. The reason this works is that earlier layers tend to be associated with concepts in all images such as edges and curvy lines.</p>\n<p><b>Lesson 8: How to win computer vision competitions</b></p>\n<p>Ng explains that you should train several networks independently and average their outputs to get better performance. Data augmentation techniques such as randomly cropping images, flipping images about the horizontal and vertical axes may also help with performance. Finally, you should use an open source implementation and pretrained model to start and then fine-tune the parameters for your particular application.</p>\n<p><b>Lesson 9: How to implement object detection</b></p>\n<p>Ng starts by explaining the idea of landmark detection in an image. Basically, these landmarks become apart of your training output examples. With some clever convolution manipulations, you get an output volume that tells you the probability that the object is in a certain region and the location of the object. He also explains how to evaluate the effectiveness of your object detection algorithm using the intersection over union formula. Finally, Ng puts all these components together to explain the famous YOLO algorithm.</p>\n<p><b>Lesson 10: How to implement Face Recognition</b></p>\n<p>Facial recognition is a one-shot learning problem since you may only have one example image to identify the person. The solution is to learn a similarity function which gives the degree of difference between two images. So if the images are of the same person, you want the function to output a small number, and vice versa for different people.</p>\n<p>The first solution Ng gives is known as a siamese network. The idea is to input two persons into the same network separately and then compare their outputs. If the outputs are similar, then the persons are probably the same. The network is trained so that if two input images are of the same person, then the distance between their encodings is relatively small.</p>\n<p>The second solution he gives uses a triplet loss method. The idea is that you have a triplet of images (Anchor (A), Positive (P) and Negative (N)) and you train the network so that the output distance between A and P is much smaller than the distance between A and N.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*6fxfZxDuAT9gPX4vzAe8qg.png\" width=\"99%\"/></p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*0GCcwv08Pup-PtPCVSRHxw.png\" width=\"99%\"/></p>\n<p><b>Lesson 11: How to create artwork using Neural Style\u00a0Transfer</b></p>\n<p>Ng explains how to generate an image with a combining content and style. See the examples below.</p>\n<p><img class=\"aligncenter\" src=\"https://cdn-images-1.medium.com/max/800/1*ekjIdfldOust0qWMZilUAg.png\" width=\"99%\"/></p>\n<p>The key to Neural Style Transfer is to understand the visual representations for what each layer in a convolutional network is learning. It turns out that earlier layers learn simple features like edges and later features learn complex objects like faces, feet and cars.</p>\n<p>To build a neural style transfer image, you simply define a cost function which is a convex combination of the similarity in content and style. In particular, the cost function\u00a0would\u00a0be:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>J(G) = alpha * J_content(C,G) + beta * J_style(S,G)</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>where G is the generated image, C is the content image and S is the style image. The learning algorithm simply uses gradient descent to minimize the cost function with respect to the generated image, G.</p>\n<p>The steps are as follows:</p>\n<ol>\n<li>Generate G randomly.\n<li>Use gradient descent to minimize J(G), i.e. write G\u00a0:= G-dG(J(G)).\n<li>Repeat step 2.\n</li></li></li></ol>\n<p><b>Conclusion</b></p>\n<p>By completing this course, you will gain an intuitive understanding of a large chunk of the computer vision literature. The homework assignments also give you practice implementing these ideas yourself. You will not become an expert in computer vision after completing this course, but this course may kickstart a potential idea/career you may have in computer vision.</p>\n<p>If you have any interesting applications of computer vision you would like to share, let me know in the comments below. I would be happy to discuss potential collaboration on new projects.</p>\n<p>That\u2019s all folks\u200a\u2014\u200aif you\u2019ve made it this far, please comment below and add me on\u00a0<a href=\"https://www.linkedin.com/in/ryanshrott/\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>.</p>\n<p>My Github is\u00a0<a href=\"https://github.com/ryanshrott\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>\u00a0<br>\n<b>Bio: <a href=\"https://www.linkedin.com/in/ryanshrott/\" target=\"_blank\">Ryan J. Shrott</a></b> is Chief Analyst at National Bank of Canada Financial Markets.</br></p>\n<p><a href=\"https://towardsdatascience.com/computer-vision-by-andrew-ng-11-lessons-learned-7d05c18a6999\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/10/3-popular-courses-deep-learning.html\">An Overview of 3 Popular Courses on Deep Learning</a>\n<li><a href=\"/2017/10/5-free-resources-furthering-understanding-deep-learning.html\">5 Free Resources for Furthering Your Understanding of Deep Learning</a>\n<li><a href=\"/2017/11/estimating-optimal-learning-rate-deep-neural-network.html\">Estimating an Optimal Learning Rate For a Deep Neural Network</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}