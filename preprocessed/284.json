{"content": "comments By Jekaterina Kokatjuhha , Research Engineer at Zalando. There are many online courses about data science and machine learning that will guide you through a theory and provide you with some code examples and an analysis of\u00a0 very clean \u00a0data. However, in order to start practising data science, it is better if you challenge a real-life problem. Digging into the data in order to find deeper insights. Carrying out feature engineering using additional sources of data and building stand-alone machine learning pipelines. This blogpost will guide you through the main steps of building a data science project from scratch. It is based on a\u00a0 real-life problem \u200a\u2014\u200awhat are the main drivers of rental prices in Berlin? It will provide an analysis of this situation. It will also highlight the common mistake beginners tend to make when it comes to machine learning. These are the steps that will be discussed in detail: finding a topic extracting data from the web and cleaning it gaining deeper insights engineering of features using external APIs Finding a\u00a0topic There are many problems that can be solved by analyzing data, but it is always better to find a problem that you are interested in and that will motivate you. While searching for a topic, you should definitely concentrate on your preferences and interests. For instance, if you are interested in healthcare systems, there are many angles from which you could challenge the data provided on that topic.\u00a0 \u201cExploring the ChestXray14 dataset: problems\u201d \u00a0is an example of how to question the quality of medical data. Another example\u200a\u2014\u200aif you are interested in music, you could try to\u00a0 predict the genre of the song from its audio . However, I suggest not only to concentrate on your interests but also to listen to what people around you are talking about. What bothers them? What are they complaining about? This can be another good source of ideas for a data science project. In those cases where people are still complaining about it, this may mean that the problem wasn\u2019t solved properly the first time around. Thus, if you challenge it with data, you could provide an even better solution and have an impact in how this topic is perceived. This may all sound a bit too abstract, so lets find out how I came up with the idea to analyze Berlin rental prices. \u201cIf I had known that the rental prices were so high here, I would have negotiated for a higher\u00a0salary.\u201d This is just one of the things I heard from people who had recently moved to Berlin for work. Most newcomers complained that they hadn\u2019t imagined Berlin to be so expensive, and that there were no statistics about possible price ranges of the apartment. If they had known this it beforehand, they could have asked for a higher salary during the job application process or could have considered other options. I googled, checked several rental apartment websites, and asked several people, but could not find any plausible statistics or visualizations of the current market prices. And this was how I came up with the idea of this analysis. I wanted to gather the data, build an interactive dashboard where you could select different options such as a 40m2 apartment situated in Berlin Mitte with a balcony and equipped kitchen, and it would show you the price ranges. This, alone, would help people understand apartment prices in Berlin. Also, by applying machine learning, I would be able to identify the drivers of the rental prices and practise with different machine learning algorithms. Extracting data from the web and cleaning\u00a0it Getting the\u00a0data Now that you have an idea about your data science project, you can start looking for the data. There are tons of amazing data repositories, such as\u00a0 Kaggle ,\u00a0 UCI ML Repository \u00a0or\u00a0 dataset search engine s, and\u00a0 websites \u00a0containing academic papers with datasets. Alternatively, you could use\u00a0 web scraping . But be cautious\u200a\u2014\u200aold data is everywhere. When I was searching for the information about the rental prices in Berlin, I found many visualizations\u00a0 but\u00a0 they were old, or without any year specified. For some statistics, they even had a note saying that this price would only be for a 2 room apartment of 50 m2 without furniture. But what if I am searching for a smaller apartment with a furnished kitchen? Old data is everywhere. As I could find only old data, I decided to\u00a0 web scrape \u00a0the websites that offered rental apartments. Web scraping is a technique used to extract data from websites through an automated process. My web scraping blogpost \u00a0goes into the details of pitfalls and design patterns of web scraping. Here are the main findings: Before scraping, check if there is a public API available Be kind ! Don\u2019t overload the website by sending hundreds of requests per second Save the date when the extraction took place. It will be explained why this is important. Data cleaning Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues. While web scraping rental data, I included some small checks such as the number of missing values for all features. Web-masters could change the HTML of the website, which would result in my program not getting the data anymore. Once I had ensured that all technical aspects of web scraping were covered, I thought the data would almost be ideal. However, I ended up cleaning the data for around a week because of not so obvious duplicates. Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues. For instance, if you web scrape, you could have missed some important fields. If you use a comma separator while saving data into a file, and one of the fields also contains commas, you can end up having files which are not separated very well. ILLUSION vs REALITY There were several sources of duplicates: Duplicated apartments because they had been online for a while Agencies had input errors, for example the rental price or the storey of the apartment. They would correct them after a while, or would publish a completely new ad with corrected values and additional description modifications Some prices were changed (increased and decreased) after a month for the same apartment While the duplicates from the first case were easy to identify by their ID, the duplicates from the second case were very complicated. The reason is that an agency could slightly change a description, modify the wrong price, and publish it as a new ad so that the ID would also be new. I had to come up with many logic-based rules to filter out the old versions of the ads. Once I was able to identify that these apartments would be the actual duplicates but with slight modifications, I could sort them by the extraction date, taking the latest one as the most recent. Additionally, some agencies would increase or decrease the price for the same apartment after a month. I was told that if nobody wanted this apartment, the price would decrease. Conversely, I was told that, if there were so many requests for it, that the agencies increased the price. These sounds like good explanations. Gaining deeper\u00a0insights Now that we have everything ready, we can start analyzing the data. I know data scientists love seaborn and ggplot2, as well as many static visualizations from which they can derive some insights. However,\u00a0 interactive dashboards can help you and other stakeholders to find useful insights. There are many amazing easy-to-use tools for that, such as\u00a0 Tableau \u00a0and\u00a0 Microstrategy . It took me less than 30 minutes to create an interactive dashboard where one can select all the important components and see how the price would change. Interactive dashboard of Berlin rental prices: one can select all the possible configurations and see the corresponding price distribution. (Data date: Winder 2017/18) A fairly simple\u00a0 dashboard\u00a0 could already provide\u00a0 insights\u00a0 into the prices in Berlin for newcomers and could be a good\u00a0 user driver for a rental apartment website . Already from this data visualization you can see that the price distribution of 2.5 rooms falls into the distribution of 2 room apartment. The reason for this is that most of the 2.5 room apartments aren\u2019t situated in the center of the city which, of course, reduces the price. Price distribution and number of apartments in Berlin. This data was gathered in winter 2017/18 and it will also get outdated. However, my point is that the rental websites could frequently update their statistics and visualizations to provide more transparency to this question. Engineering of features using external\u00a0APIs Visualization helps you to identify important attributes, or \u201cfeatures,\u201d that could be used by these machine learning algorithms. If the features you use are very uninformative, any algorithm will produce bad predictions. With very strong features, even a very simple algorithm can produce pretty decent results. In the rental price project, price is a continuous variable, so it is a typical regression problem. Taking all extracted information, I collected the following features in order to be able to predict a rental price. These are the majority of the features used to predict the rental apartment price. However, there was one feature that was problematic, namely the address. There were 6.6K apartments and around 4.4K unique addresses of different granularity. There were around 200 unique postcodes which could be converted into the dummy variables but then very precious information of a particular location would be lost. Different granularity of the address: street with the house number, street with hidden house number and only a postcode. What do you do when you are given a new address? You either google where it is or how to get there. By using an external API following the four additional features given, the apartment\u2019s address could be calculated: duration of a train trip to the S-Bahn Friedrichstrasse (central station) distance to U-Bahn Stadtmitte (city center) by car duration of a walking trip to the nearest metro station number of metro stations within one kilometer from the apartment These four features boosted the performance significantly. Bio : Jekaterina\u00a0Kokatjuhha is a Research Engineer at Zalando, focusing on scalable machine learning for fraud prediction. Original . Reposted with permission. Resources: On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning education Software for Analytics, Data Science, Data Mining, and Machine Learning Related: Data Science Projects Employers Want To See: How To Show A Business Impact Text Preprocessing in Python: Steps, Tools, and Examples Are you buying an apartment? How to hack competition in the real estate market", "title_html": "<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog\" src=\"/images/tkb-1812-s.png\" width=\"94\"/>How to build a data science project from scratch</h1> ", "url": "https://www.kdnuggets.com/2018/12/build-data-science-project-from-scratch.html", "tfidf": {"tfidf": {"after": 3.06210621063, "real": 2.28103448276, "boost": 9.16099249856, "song": 3.4333910034599997, "googl": 22.777618364400002, "web": 51.7133550489, "extern": 15.72400132056, "fall": 1.6945244956799999, "onc": 5.9898132427999995, "too": 1.81585268215, "take": 2.27923336444, "kind": 2.5806241872599998, "stakehold": 73.8418604651, "addit": 4.98539802168, "would": 16.243093922699998, "number": 5.50714583045, "audio": 9.05647461495, "been": 1.0239277652399998, "decreas": 13.56923076924, "dataset": 580.829268294, "furnish": 23.042089985500002, "driver": 20.39743040685, "thought": 1.9854927463699998, "nummnum": 429.081081081, "ubahn": 1221.23076923, "sound": 6.22588235294, "complet": 1.24021560816, "technic": 3.1400316455699997, "higher": 4.2437850842, "know": 2.59327017315, "friedrichstrass": 1221.23076923, "motiv": 5.01611374408, "cautious": 29.7861163227, "highlight": 5.83033419023, "particular": 1.3814827706200001, "creat": 1.2492917847, "room": 12.3069767442, "kokatjuhha": 2442.46153846, "how": 12.82002624408, "sbahn": 1221.23076923, "repost": 933.882352941, "mnum": 14.086956521700001, "fair": 3.20533010297, "music": 2.47791478071, "had": 8.380600461919999, "deeper": 45.2307692307, "hundr": 2.4698195395099996, "distribut": 10.958412424519999, "end": 2.21360847742, "found": 1.11387076405, "given": 2.70852170946, "jekaterina": 2442.46153846, "interest": 8.016562310649999, "beginn": 53.4545454545, "consid": 1.2397313759200002, "obvious": 6.44841592201, "standalon": 70.875, "second": 2.2261796256, "updat": 5.56466876972, "new": 4.0715522216, "simpl": 6.7962328767199995, "perform": 1.5313977042500002, "healthcar": 18.7659574468, "definit": 3.24, "carri": 1.66869875972, "overload": 61.0615384615, "point": 1.25990000794, "amaz": 30.501440922199997, "applic": 3.42672134686, "hadn": 1221.23076923, "hidden": 7.81299212598, "fraud": 16.468879668, "date": 4.89244992297, "stadtmitt": 1221.23076923, "listen": 6.97846153846, "use": 11.32602633118, "resourc": 2.9487369985100003, "out": 3.18050083473, "mistak": 8.71350164654, "ton": 10.5278514589, "estat": 4.93810264386, "good": 4.55944859277, "alway": 2.06745670009, "mine": 9.751842751839998, "cours": 4.30185611706, "dig": 18.5034965035, "per": 1.9597580545599997, "comma": 246.13953488400003, "everyth": 4.81967213115, "field": 3.5580457194, "reason": 3.44680851064, "not": 5.07836990595, "uninform": 256.064516129, "compon": 4.09491875161, "kaggl": 1221.23076923, "practis": 35.797068771199996, "altern": 2.1390460792200003, "four": 2.41901569404, "easi": 5.2937645882, "better": 6.01971688575, "than": 1.03278688525, "then": 1.08657860516, "complic": 5.6478121664900005, "separ": 3.2024205748799996, "they": 9.27155927583, "design": 1.45825296225, "genr": 8.34700315457, "descript": 8.01009081736, "let": 3.48616600791, "scienc": 18.55756867328, "anoth": 2.27287043664, "employ": 2.16530278232, "webmast": 610.615384615, "current": 1.5325803649, "featur": 18.32550981144, "frequent": 2.10501193317, "problemat": 16.503118503099998, "alreadi": 3.9103448275800003, "that": 27.107569721249998, "provid": 7.29316285122, "preprocess": 1221.23076923, "offer": 1.53896859248, "either": 1.5830092731099998, "should": 1.6643254009900001, "pattern": 3.79173632673, "sever": 3.2172385841699995, "those": 1.19548192771, "explor": 3.39593582888, "python": 56.2978723404, "deriv": 2.78379800105, "some": 7.28256880736, "sourc": 5.09281437126, "small": 1.3594793629, "collect": 1.64109985528, "step": 8.48379052368, "locat": 1.59766529134, "result": 2.29223216864, "version": 2.0083491461099996, "produc": 2.73865792652, "repositori": 89.94900849860001, "well": 2.1311497416, "less": 1.46904783936, "ani": 5.6691901157, "question": 4.4081632653, "citi": 2.77237405046, "from": 12.00680657964, "train": 1.9365698950999999, "work": 1.11520089913, "detail": 4.52372132782, "num": 9.00283536009, "instanc": 6.514567090680001, "nobodi": 15.5647058824, "market": 4.73204172876, "aren": 481.09090909099996, "idea": 8.3723137772, "for": 25.00787600025, "car": 3.53743315508, "predict": 25.92423252775, "correct": 7.3262574988399995, "winder": 481.09090909099996, "with": 15.017973134849997, "competit": 3.06960556845, "negoti": 4.18560506196, "solut": 4.7278141751, "explan": 6.50922509225, "distanc": 3.4754816112099998, "month": 3.0159574468, "pitfal": 178.38202247200002, "look": 5.725895647979999, "option": 8.09793420046, "veri": 11.32921027593, "extract": 46.218340611360006, "variabl": 17.494214876039997, "center": 3.4846356452999996, "public": 1.22424429365, "complain": 24.897020386830004, "focus": 2.01012914662, "educ": 2.00733341763, "dashboard": 592.3880597, "tend": 3.3735656608599998, "balconi": 49.3043478261, "wrong": 5.478260869570001, "even": 3.49383802818, "convers": 3.3486606201200004, "old": 7.6422451141000005, "proper": 3.3388012618299996, "their": 2.0309581681, "place": 1.1004366812200002, "told": 6.3087621696800005, "berlin": 64.3534657479, "rental": 373.260188088, "scratch": 25.8146341463, "error": 6.04109589041, "move": 1.29125660838, "ask": 4.3489932886, "hous": 2.9248341930799997, "note": 1.42449528937, "ggplotnum": 1221.23076923, "salari": 20.4192926046, "scientist": 4.69426374926, "machin": 36.219011406839996, "into": 6.09014768874, "paper": 2.6628648104700003, "medic": 3.27542809986, "came": 2.92026119746, "static": 16.468879668, "buy": 5.12459651388, "techniqu": 3.7293868921800004, "latest": 7.078020508250001, "newcom": 55.0294627384, "help": 4.19888918277, "main": 3.7591160220899997, "microstrategi": 1221.23076923, "actual": 1.87482286254, "cover": 1.69380134429, "outdat": 36.6651270208, "base": 1.14628158845, "relat": 1.23750876919, "can": 12.93887530562, "who": 1.06279287723, "decid": 1.9257641921400002, "trip": 9.8, "tableau": 244.246153846, "permiss": 6.280063291139999, "here": 4.84615384616, "ideal": 4.65571847507, "week": 1.80532181033, "durat": 21.0138980808, "plausibl": 29.954716981100002, "clean": 34.34876676765, "apart": 68.2705238468, "onlin": 7.815556284870001, "contain": 3.19629555064, "zalando": 2442.46153846, "about": 7.45402106113, "problem": 12.36723792563, "everywher": 31.847542627800003, "job": 3.2539454806299997, "thing": 2.4065484311099996, "just": 1.33580143037, "duplic": 118.7730673314, "softwar": 10.2624434389, "understand": 2.96858638743, "precious": 23.1428571429, "heard": 4.45204711161, "price": 94.06451612897999, "ensur": 3.4127257093700005, "topic": 27.287727741500003, "dure": 1.0503473370799998, "kilomet": 18.546728972, "them": 3.29628347982, "check": 19.51967213115, "expens": 3.5453327378300004, "perceiv": 4.92279069767, "where": 4.26860254084, "furnitur": 19.894736842100002, "save": 5.6357827475999995, "tool": 9.99433427762, "start": 6.3336790872, "took": 2.8019767031400002, "kitchen": 32.4, "love": 2.97303370787, "guid": 4.98226894712, "insight": 70.8223048326, "request": 6.18103951722, "lost": 1.74634253657, "whi": 3.2566153846200003, "bad": 3.3944836433599996, "explain": 2.60049140049, "scrape": 635.04, "order": 6.23125834055, "nearest": 15.148854961800001, "configur": 11.504347826099998, "modif": 19.1507840772, "central": 1.6121039805000001, "abl": 5.46255304506, "mani": 8.35414063016, "uniqu": 6.03191489362, "the": 97.0, "anymor": 35.1238938053, "increas": 3.9607484407499998, "build": 4.9025218734000005, "analysi": 10.43558282208, "algorithm": 111.8028169016, "metro": 27.5147313692, "select": 6.07035432066, "earli": 2.24936242562, "same": 2.23715916296, "there": 13.53186467347, "sort": 5.188235294119999, "valu": 4.555523672880001, "inform": 4.72593768606, "possibl": 8.5042406928, "modifi": 4.45329593268, "say": 1.7544480053, "exampl": 7.5241706161, "continu": 1.13928955867, "station": 7.06961555589, "prefer": 3.0216977540900003, "slight": 6.50655737704, "autom": 19.8202247191, "visual": 31.36516298982, "follow": 2.09280253098, "now": 2.321561746, "tri": 1.8544562551099997, "dummi": 48.1090909091, "name": 1.10211732037, "code": 3.8807137619199996, "interact": 17.6743668244, "high": 1.14777327935, "winter": 3.24132298898, "regress": 51.2129032258, "publish": 2.73771339886, "goe": 4.251740760580001, "bother": 39.69, "qualiti": 2.9329392204, "issu": 2.87843350558, "also": 6.08859060402, "typic": 2.2541530597799997, "specifi": 6.920662598080001, "around": 6.06973543355, "mean": 1.44906900329, "will": 11.02329887364, "major": 1.14852058164, "research": 3.8840366972400004, "theori": 3.02745995423, "signific": 1.4529147982100001, "chestxraynum": 1221.23076923, "may": 2.10403551786, "analyz": 29.059182428310002, "peopl": 6.0660247593, "reallif": 2442.46153846, "angl": 8.934158694430002, "challeng": 7.674508540110001, "want": 5.99094339624, "convert": 3.2740771293099997, "talk": 3.0303493033, "street": 4.73415834204, "system": 1.38739840951, "howev": 6.567114787979999, "attribut": 3.4156626506, "readi": 5.15789473684, "calcul": 6.12972972973, "minut": 3.11233091551, "were": 11.27047434656, "which": 6.03115107, "what": 7.520606347679999, "such": 4.24605509496, "seaborn": 140.495575221, "thus": 1.6463756092500001, "agenc": 13.99691426052, "other": 2.01984732824, "appli": 2.2972073506, "without": 2.59094247246, "one": 7.04392470054, "show": 2.5340782123, "known": 2.1718194254400003, "impact": 5.95052473764, "easytous": 1221.23076923, "postcod": 675.574468086, "see": 5.08968502044, "becaus": 2.2990369994999997, "webbas": 1221.23076923, "get": 10.7137554831, "still": 1.1866357724799999, "like": 1.14918566775, "through": 3.21224792607, "imagin": 6.598503740650001, "alon": 2.99716820842, "file": 7.542042755339999, "blogpost": 2442.46153846, "process": 3.39049652964, "analyt": 34.513043478200004, "includ": 1.0190641247799999, "rule": 1.7415533128599998, "gather": 7.57262103506, "this": 18.06828528078, "pretti": 15.75, "rang": 3.5696458684599994, "decent": 35.5964125561, "time": 1.01127460348, "api": 168.89361702120001, "engin": 14.828144458259999, "chang": 4.7235941684, "bit": 8.33385826772, "smaller": 2.59369384088, "project": 8.76739562625, "differ": 4.946179609, "but": 8.13059343192, "statist": 16.97060395512, "most": 3.06289389069, "equip": 3.24529844644, "hack": 43.3770491803, "beforehand": 43.8563535912, "all": 6.06880733946, "busi": 2.05541170378, "storey": 74.8867924528, "program": 2.02139037433, "strong": 1.6439888163999998, "recent": 3.0881151527, "almost": 1.53584212054, "case": 4.45496211768, "mitt": 49.7680250784, "logicbas": 1221.23076923, "filter": 16.8893617021, "academ": 3.8921304241199994, "more": 1.0171706817, "and": 35.00220472455, "granular": 320.727272728, "correspond": 3.32481675393, "discuss": 2.19676214197, "these": 6.44492557512, "gain": 3.6963911525, "websit": 20.17280813216, "could": 22.8830223031, "befor": 1.10036041031, "comment": 3.05954904606, "miss": 7.0732902651, "avail": 1.7288467821, "make": 1.0762660158600001, "search": 13.015781922519999, "onli": 4.102590606640001, "situat": 6.198334200930001, "concentr": 6.32132191918, "are": 19.56821277982, "find": 19.02352941181, "walk": 3.56363636364, "common": 1.4025974025999999, "solv": 14.53846153846, "data": 135.0574223736, "reduc": 1.98698372966, "address": 14.3078586878, "transpar": 15.876, "bio": 42.336000000000006, "come": 2.65662650602, "abstract": 9.966101694919999, "origin": 1.13724928367, "aspect": 3.0893169877399997, "text": 3.12827586207, "send": 3.75053153792, "identifi": 9.20748151372, "scalabl": 186.776470588, "import": 8.041195340220002, "first": 2.01523229246, "input": 12.2029208301, "when": 4.0830707902, "have": 10.1489484114, "while": 6.265193370179999, "year": 1.0485436893200002, "within": 1.2369302688, "suggest": 1.7571665744299998, "learn": 20.90475493785, "pipelin": 32.1376518219, "user": 7.71053909665}, "logtfidf": {"after": 0.061472083944299996, "real": 0.824629060574, "boost": 2.2149545241900004, "song": 1.23354840355, "googl": 4.86526244516, "web": 16.431309733200003, "extern": 4.96972800864, "fall": 0.527402167952, "onc": 1.61506348942, "too": 0.5965551547219999, "take": 0.261383924394, "kind": 0.948031302717, "stakehold": 4.30192578578, "addit": 0.880875531888, "would": 1.1942644194704999, "number": 0.483042892093, "audio": 2.2034799289800002, "been": 0.023645982368400004, "decreas": 4.52757749232, "dataset": 15.79753369992, "furnish": 3.1373225428900002, "driver": 5.7503899314, "thought": 0.685867118283, "nummnum": 6.0616459012599995, "ubahn": 7.1076144564399995, "sound": 2.27113599038, "complet": 0.215285242047, "technic": 1.14423287808, "higher": 1.50461679799, "know": 0.952919694398, "friedrichstrass": 7.1076144564399995, "motiv": 1.61265547932, "cautious": 3.3940423897400005, "highlight": 1.76307432123, "particular": 0.323157393804, "creat": 0.222576818514, "room": 4.49548782172, "kokatjuhha": 14.215228912879999, "how": 3.7725356554400005, "sbahn": 7.1076144564399995, "repost": 6.83935046985, "mnum": 2.6452492998599997, "fair": 1.16481508131, "music": 0.907417392264, "had": 0.3718241952888, "deeper": 8.13949590531, "hundr": 0.904145087046, "distribut": 4.03125223252, "end": 0.202953597236, "found": 0.107841124048, "given": 0.606511621662, "jekaterina": 14.215228912879999, "interest": 2.3603588899099996, "beginn": 3.9788316751, "consid": 0.214894723824, "obvious": 1.86383450716, "standalon": 4.26091776205, "second": 0.21427952675999998, "updat": 1.7164374626899999, "new": 0.0709197874044, "simpl": 2.4464425787799997, "perform": 0.42618085058, "healthcar": 2.9320444543, "definit": 1.1755733298, "carri": 0.512044136911, "overload": 4.1118821828900005, "point": 0.23103235903299998, "amaz": 5.449253490580001, "applic": 1.23160392849, "hadn": 7.1076144564399995, "hidden": 2.0557880052, "fraud": 2.8014725192900003, "date": 1.467242688291, "stadtmitt": 7.1076144564399995, "listen": 1.94282848252, "use": 0.3212882170476, "resourc": 1.08137694258, "out": 0.1752791727579, "mistak": 2.1648737360799997, "ton": 2.35402426534, "estat": 1.59698117723, "good": 1.2557682147209999, "alway": 0.726319204572, "mine": 3.16861817356, "cours": 1.531798808266, "dig": 2.91795971441, "per": 0.672821024072, "comma": 9.62550281908, "everyth": 1.57270590317, "field": 1.1521285167020001, "reason": 1.088603105924, "not": 0.0777620650375, "uninform": 5.54542942886, "compon": 1.40974687623, "kaggl": 7.1076144564399995, "practis": 5.769437663180001, "altern": 0.760359972282, "four": 0.380427077738, "easi": 1.6665296351499999, "better": 2.0892838218, "than": 0.0322608622182, "then": 0.08303386523089999, "complic": 1.7312682430000002, "separ": 0.941519545898, "they": 0.2675429529084, "design": 0.377239118022, "genr": 2.1219025708, "descript": 2.7751098369, "let": 1.2488025672799998, "scienc": 6.731489431128, "anoth": 0.255792723304, "employ": 0.7725602049429999, "webmast": 6.414467275880001, "current": 0.42695282784500005, "featur": 5.080649017703999, "frequent": 0.7443211360850001, "problemat": 2.80354936324, "alreadi": 1.340956761494, "that": 0.10735600625028, "provid": 1.17106706595, "preprocess": 7.1076144564399995, "offer": 0.431112446902, "either": 0.459327638815, "should": 0.509419876758, "pattern": 1.33282404788, "sever": 0.20973336119069996, "those": 0.17854939087299998, "explor": 1.22257937218, "python": 4.03065674296, "deriv": 1.02381618275, "some": 0.2770145634515, "sourc": 1.587654932253, "small": 0.307101805059, "collect": 0.49536666052, "step": 3.11863517094, "locat": 0.46854337067199997, "result": 0.272757816762, "version": 0.697313064259, "produc": 0.628641624006, "repositori": 7.612191513939999, "well": 0.1270288766312, "less": 0.3846144626, "ani": 0.6280417918300001, "question": 1.580621858028, "citi": 0.65311366101, "from": 0.0068046500263919995, "train": 0.660918312839, "work": 0.109034567273, "detail": 1.632375554346, "num": 0.0028349135585730005, "instanc": 2.36178715944, "nobodi": 2.7450059076200004, "market": 1.7224191678740002, "aren": 6.17605625244, "idea": 2.95454368848, "for": 0.007874759884925002, "car": 1.2634013667, "predict": 8.22870118845, "correct": 2.59663526362, "winder": 6.17605625244, "with": 0.01796237570085, "competit": 1.12154907401, "negoti": 1.43165127221, "solut": 1.55346297627, "explan": 1.87322041569, "distanc": 1.24573306257, "month": 0.821540320676, "pitfal": 5.18392744417, "look": 1.9391600808, "option": 2.79692362322, "veri": 2.0714381391420003, "extract": 12.249703398060001, "variabl": 4.3374461344, "center": 1.110432617552, "public": 0.20232375048700002, "complain": 6.348407533379999, "focus": 0.6981989720559999, "educ": 0.696807183384, "dashboard": 23.87362006975, "tend": 1.21597024462, "balconi": 3.8980122683599996, "wrong": 1.70078769102, "even": 0.45716569450200006, "convers": 1.2085604509999999, "old": 2.121267553375, "proper": 1.2056118389200001, "their": 0.030721010245400002, "place": 0.0957070839572, "told": 2.29758461426, "berlin": 18.6180569737, "rental": 48.2133829584, "scratch": 3.2509415461, "error": 1.7985854343, "move": 0.255615859253, "ask": 1.553594419694, "hous": 0.7601812247759999, "note": 0.353817568083, "ggplotnum": 7.1076144564399995, "salari": 4.646665978580001, "scientist": 1.54634128444, "machin": 12.531236225579999, "into": 0.0894771793722, "paper": 0.979402539665, "medic": 1.18644857806, "came": 0.75705176581, "static": 2.8014725192900003, "buy": 1.6340517929299998, "techniqu": 1.31624384807, "latest": 1.95699427938, "newcom": 6.62944309478, "help": 1.008623164032, "main": 0.676714621764, "microstrategi": 7.1076144564399995, "actual": 0.628514181648, "cover": 0.526975319156, "outdat": 3.6018260858999995, "base": 0.13652330228700002, "relat": 0.21310030165399999, "can": 1.7857520603339998, "who": 0.0609002329859, "decid": 0.655322871893, "trip": 3.17847041024, "tableau": 5.4981765440100006, "permiss": 1.8373800586400002, "here": 1.7700763767400003, "ideal": 1.53809624363, "week": 0.5907388641619999, "durat": 4.70407370326, "plausibl": 3.39968680736, "clean": 9.63564101815, "apart": 24.9135843264, "onlin": 2.872511563071, "contain": 0.937690636472, "zalando": 14.215228912879999, "about": 0.43990434232220005, "problem": 3.983985069911, "everywher": 5.53562608788, "job": 1.1798682540899998, "thing": 0.8781935346799999, "just": 0.289531434109, "duplic": 17.91273123624, "softwar": 2.32849096333, "understand": 1.0880858756799998, "precious": 3.14168618618, "heard": 1.4933640154799999, "price": 33.69988861128, "ensur": 1.22751130026, "topic": 8.48499577705, "dure": 0.0491209066894, "kilomet": 2.92029343776, "them": 0.2825499807279, "check": 5.6184314868600005, "expens": 1.26563201674, "perceiv": 1.5938755846700001, "where": 0.2599685549828, "furnitur": 2.99045521645, "save": 2.07197773094, "tool": 3.21774235926, "start": 1.182216846455, "took": 0.674355905906, "kitchen": 5.570022484480001, "love": 1.08958288195, "guid": 1.825476437178, "insight": 14.81048713122, "request": 2.25667856688, "lost": 0.557523621781, "whi": 1.18068843047, "bad": 1.2221516561799999, "explain": 0.955700427358, "scrape": 38.3081707053, "order": 1.1007019039650001, "nearest": 2.71792494902, "configur": 2.4427250357499997, "modif": 4.51839295642, "central": 0.477540146039, "abl": 1.7979119474250003, "mani": 0.3465260649768, "uniqu": 2.2078346818, "the": 0.0, "anymor": 3.5588816340699996, "increas": 0.833462156787, "build": 1.4734123562730002, "analysi": 3.7398273087600007, "algorithm": 13.32176958072, "metro": 5.24314873366, "select": 2.114414061399, "earli": 0.234999258216, "same": 0.224119299208, "there": 0.5212726080315, "sort": 1.64639361896, "valu": 1.646386620296, "inform": 1.363361113986, "possibl": 2.0928328493460002, "modifi": 1.4936444810499998, "say": 0.562154280552, "exampl": 2.0434133749949996, "continu": 0.13040487398700001, "station": 2.571581438826, "prefer": 1.10581884366, "slight": 2.35932663012, "autom": 2.9867028668299995, "visual": 9.92363009316, "follow": 0.09071382218839999, "now": 0.298185890042, "tri": 0.61759152916, "dummi": 3.87347115944, "name": 0.09723316638430002, "code": 1.35601909597, "interact": 5.943284107159999, "high": 0.13782378654000002, "winter": 1.17598157639, "regress": 3.9359915164199997, "publish": 0.627951730934, "goe": 1.4473284897999998, "bother": 3.68109926679, "qualiti": 1.07600506711, "issu": 0.728198087868, "also": 0.0879429468, "typic": 0.812774319158, "specifi": 1.93451151621, "around": 0.9693855289100001, "mean": 0.37092128352, "will": 1.825078814235, "major": 0.138474663439, "research": 1.327455636276, "theori": 1.10772396902, "signific": 0.373571744332, "chestxraynum": 7.1076144564399995, "may": 0.10141999056880001, "analyz": 6.812166705479999, "peopl": 0.9663278923649999, "reallif": 14.215228912879999, "angl": 2.18988198575, "challeng": 2.8178759066850003, "want": 2.0749098187649997, "convert": 1.1860360368, "talk": 1.10867789449, "street": 1.7233135556060002, "system": 0.327430345585, "howev": 0.5418907040850001, "attribut": 1.2283715153700001, "readi": 1.6405284994999998, "calcul": 1.8131506592099997, "minut": 1.1353719359799999, "were": 0.2672025804921, "which": 0.03107048307258, "what": 1.355323780962, "such": 0.238783911224, "seaborn": 4.94517599519, "thus": 0.49857627139300004, "agenc": 5.01017013696, "other": 0.01974949583952, "appli": 0.8316941898119999, "without": 0.517749035882, "one": 0.0437874615185, "show": 0.473365532026, "known": 0.1648361611984, "impact": 2.18066445262, "easytous": 7.1076144564399995, "postcod": 11.644832424379999, "see": 0.963686341968, "becaus": 0.27868631765, "webbas": 7.1076144564399995, "get": 3.478614034692, "still": 0.17112222142900002, "like": 0.139053576545, "through": 0.20507607565469999, "imagin": 1.88684291737, "alon": 1.09766791236, "file": 2.65469177446, "blogpost": 14.215228912879999, "process": 1.05565839805, "analyt": 5.696380287719999, "includ": 0.0188846813905, "rule": 0.554777423537, "gather": 2.6627841334599998, "this": 0.068156082945, "pretti": 2.75684036527, "rang": 1.158638427606, "decent": 3.5722448618800002, "time": 0.0112115188626, "api": 8.87224370214, "engin": 5.428605349655999, "chang": 0.665102500232, "bit": 2.12032652634, "smaller": 0.9530830530519999, "project": 2.8080094295349998, "differ": 0.849284485248, "but": 0.1295389765752, "statist": 5.780753228280001, "most": 0.06224368888679999, "equip": 1.1772073171, "hack": 3.7699304805000002, "beforehand": 3.78091960208, "all": 0.06841579258679999, "busi": 0.720476170355, "storey": 4.31597753923, "program": 0.7037855787649999, "strong": 0.49712549393600003, "recent": 0.868827482576, "almost": 0.42907884333400004, "case": 1.186218806667, "mitt": 3.90737271112, "logicbas": 7.1076144564399995, "filter": 2.82668393864, "academ": 1.35895667459, "more": 0.017024931599999998, "and": 0.0022046549722259997, "granular": 10.154887927539999, "correspond": 1.20141456099, "discuss": 0.78698452262, "these": 0.4292017164048, "gain": 1.2284195978499999, "websit": 7.399152190448, "could": 3.5331691735100006, "befor": 0.0956377718795, "comment": 1.11826753454, "miss": 2.5263571502400004, "avail": 0.547454586289, "make": 0.07349765782289999, "search": 4.719473016359999, "onli": 0.10129707331639999, "situat": 2.1770048700449998, "concentr": 2.3015623403, "are": 0.5598819980713, "find": 6.025594633168001, "walk": 1.270781474, "common": 0.338325805271, "solv": 3.9673009540800006, "data": 48.672823392, "reduc": 0.686617775143, "address": 5.25685516235, "transpar": 2.76480853492, "bio": 3.7456377879300002, "come": 0.5678198130600001, "abstract": 2.29918950399, "origin": 0.128612437587, "aspect": 1.12795002691, "text": 1.14048200999, "send": 1.32189757338, "identifi": 3.334888001888, "scalabl": 5.22991255741, "import": 1.756909662396, "first": 0.015174579624319999, "input": 2.50167533539, "when": 0.0822199554336, "have": 0.14785002341200001, "while": 0.25949990276280005, "year": 0.047402238894600005, "within": 0.21263272059799998, "suggest": 0.563702610877, "learn": 7.584768582704999, "pipelin": 3.47002829672, "user": 2.04258810688}, "logidf": {"after": 0.020490694648099998, "real": 0.824629060574, "boost": 2.2149545241900004, "song": 1.23354840355, "googl": 2.43263122258, "web": 1.6431309733200001, "extern": 1.6565760028799998, "fall": 0.527402167952, "onc": 0.403765872355, "too": 0.5965551547219999, "take": 0.130691962197, "kind": 0.948031302717, "stakehold": 4.30192578578, "addit": 0.220218882972, "would": 0.0796176279647, "number": 0.0966085784186, "audio": 2.2034799289800002, "been": 0.023645982368400004, "decreas": 1.50919249744, "dataset": 5.26584456664, "furnish": 3.1373225428900002, "driver": 1.9167966438, "thought": 0.685867118283, "nummnum": 6.0616459012599995, "ubahn": 7.1076144564399995, "sound": 1.13556799519, "complet": 0.215285242047, "technic": 1.14423287808, "higher": 0.752308398995, "know": 0.952919694398, "friedrichstrass": 7.1076144564399995, "motiv": 1.61265547932, "cautious": 3.3940423897400005, "highlight": 1.76307432123, "particular": 0.323157393804, "creat": 0.222576818514, "room": 1.12387195543, "kokatjuhha": 7.1076144564399995, "how": 0.47156695693000006, "sbahn": 7.1076144564399995, "repost": 6.83935046985, "mnum": 2.6452492998599997, "fair": 1.16481508131, "music": 0.907417392264, "had": 0.0464780244111, "deeper": 2.7131653017699997, "hundr": 0.904145087046, "distribut": 1.00781305813, "end": 0.101476798618, "found": 0.107841124048, "given": 0.303255810831, "jekaterina": 7.1076144564399995, "interest": 0.47207177798199995, "beginn": 3.9788316751, "consid": 0.214894723824, "obvious": 1.86383450716, "standalon": 4.26091776205, "second": 0.10713976337999999, "updat": 1.7164374626899999, "new": 0.0177299468511, "simpl": 1.2232212893899999, "perform": 0.42618085058, "healthcar": 2.9320444543, "definit": 1.1755733298, "carri": 0.512044136911, "overload": 4.1118821828900005, "point": 0.23103235903299998, "amaz": 2.7246267452900006, "applic": 1.23160392849, "hadn": 7.1076144564399995, "hidden": 2.0557880052, "fraud": 2.8014725192900003, "date": 0.489080896097, "stadtmitt": 7.1076144564399995, "listen": 1.94282848252, "use": 0.0292080197316, "resourc": 1.08137694258, "out": 0.0584263909193, "mistak": 2.1648737360799997, "ton": 2.35402426534, "estat": 1.59698117723, "good": 0.418589404907, "alway": 0.726319204572, "mine": 1.58430908678, "cours": 0.765899404133, "dig": 2.91795971441, "per": 0.672821024072, "comma": 4.81275140954, "everyth": 1.57270590317, "field": 0.5760642583510001, "reason": 0.544301552962, "not": 0.0155524130075, "uninform": 5.54542942886, "compon": 1.40974687623, "kaggl": 7.1076144564399995, "practis": 2.8847188315900003, "altern": 0.760359972282, "four": 0.190213538869, "easi": 1.6665296351499999, "better": 0.6964279406, "than": 0.0322608622182, "then": 0.08303386523089999, "complic": 1.7312682430000002, "separ": 0.470759772949, "they": 0.0297269947676, "design": 0.377239118022, "genr": 2.1219025708, "descript": 1.38755491845, "let": 1.2488025672799998, "scienc": 0.841436178891, "anoth": 0.127896361652, "employ": 0.7725602049429999, "webmast": 6.414467275880001, "current": 0.42695282784500005, "featur": 0.423387418142, "frequent": 0.7443211360850001, "problemat": 2.80354936324, "alreadi": 0.670478380747, "that": 0.00397614837964, "provid": 0.19517784432500002, "preprocess": 7.1076144564399995, "offer": 0.431112446902, "either": 0.459327638815, "should": 0.509419876758, "pattern": 1.33282404788, "sever": 0.06991112039689999, "those": 0.17854939087299998, "explor": 1.22257937218, "python": 4.03065674296, "deriv": 1.02381618275, "some": 0.0395735090645, "sourc": 0.529218310751, "small": 0.307101805059, "collect": 0.49536666052, "step": 1.03954505698, "locat": 0.46854337067199997, "result": 0.136378908381, "version": 0.697313064259, "produc": 0.314320812003, "repositori": 3.8060957569699996, "well": 0.0635144383156, "less": 0.3846144626, "ani": 0.125608358366, "question": 0.790310929014, "citi": 0.326556830505, "from": 0.000567054168866, "train": 0.660918312839, "work": 0.109034567273, "detail": 0.816187777173, "num": 0.00031499039539700004, "instanc": 1.18089357972, "nobodi": 2.7450059076200004, "market": 0.8612095839370001, "aren": 6.17605625244, "idea": 0.73863592212, "for": 0.00031499039539700004, "car": 1.2634013667, "predict": 1.6457402376899999, "correct": 1.29831763181, "winder": 6.17605625244, "with": 0.00119749171339, "competit": 1.12154907401, "negoti": 1.43165127221, "solut": 1.55346297627, "explan": 1.87322041569, "distanc": 1.24573306257, "month": 0.410770160338, "pitfal": 5.18392744417, "look": 0.6463866936, "option": 1.39846181161, "veri": 0.230159793238, "extract": 2.04161723301, "variabl": 2.1687230672, "center": 0.555216308776, "public": 0.20232375048700002, "complain": 2.1161358444599996, "focus": 0.6981989720559999, "educ": 0.696807183384, "dashboard": 4.77472401395, "tend": 1.21597024462, "balconi": 3.8980122683599996, "wrong": 1.70078769102, "even": 0.152388564834, "convers": 1.2085604509999999, "old": 0.424253510675, "proper": 1.2056118389200001, "their": 0.015360505122700001, "place": 0.0957070839572, "told": 1.14879230713, "berlin": 1.8618056973700001, "rental": 3.21422553056, "scratch": 3.2509415461, "error": 1.7985854343, "move": 0.255615859253, "ask": 0.776797209847, "hous": 0.38009061238799996, "note": 0.353817568083, "ggplotnum": 7.1076144564399995, "salari": 2.3233329892900003, "scientist": 1.54634128444, "machin": 1.39235958062, "into": 0.0149128632287, "paper": 0.979402539665, "medic": 1.18644857806, "came": 0.378525882905, "static": 2.8014725192900003, "buy": 1.6340517929299998, "techniqu": 1.31624384807, "latest": 1.95699427938, "newcom": 3.31472154739, "help": 0.336207721344, "main": 0.225571540588, "microstrategi": 7.1076144564399995, "actual": 0.628514181648, "cover": 0.526975319156, "outdat": 3.6018260858999995, "base": 0.13652330228700002, "relat": 0.21310030165399999, "can": 0.162341096394, "who": 0.0609002329859, "decid": 0.655322871893, "trip": 1.58923520512, "tableau": 5.4981765440100006, "permiss": 1.8373800586400002, "here": 0.8850381883700001, "ideal": 1.53809624363, "week": 0.5907388641619999, "durat": 2.35203685163, "plausibl": 3.39968680736, "clean": 1.9271282036300001, "apart": 1.1324356512, "onlin": 0.957503854357, "contain": 0.468845318236, "zalando": 7.1076144564399995, "about": 0.0628434774746, "problem": 0.569140724273, "everywher": 2.76781304394, "job": 1.1798682540899998, "thing": 0.8781935346799999, "just": 0.289531434109, "duplic": 2.98545520604, "softwar": 2.32849096333, "understand": 1.0880858756799998, "precious": 3.14168618618, "heard": 1.4933640154799999, "price": 1.24814402264, "ensur": 1.22751130026, "topic": 1.6969991554100001, "dure": 0.0491209066894, "kilomet": 2.92029343776, "them": 0.0941833269093, "check": 1.87281049562, "expens": 1.26563201674, "perceiv": 1.5938755846700001, "where": 0.0649921387457, "furnitur": 2.99045521645, "save": 1.03598886547, "tool": 1.60887117963, "start": 0.236443369291, "took": 0.337177952953, "kitchen": 2.7850112422400004, "love": 1.08958288195, "guid": 0.912738218589, "insight": 2.46841452187, "request": 1.12833928344, "lost": 0.557523621781, "whi": 1.18068843047, "bad": 1.2221516561799999, "explain": 0.955700427358, "scrape": 4.2564634117, "order": 0.22014038079300002, "nearest": 2.71792494902, "configur": 2.4427250357499997, "modif": 2.25919647821, "central": 0.477540146039, "abl": 0.599303982475, "mani": 0.0433157581221, "uniqu": 1.1039173409, "the": 0.0, "anymor": 3.5588816340699996, "increas": 0.277820718929, "build": 0.491137452091, "analysi": 1.2466091029200002, "algorithm": 3.33044239518, "metro": 2.62157436683, "select": 0.704804687133, "earli": 0.117499629108, "same": 0.112059649604, "there": 0.0400978929255, "sort": 1.64639361896, "valu": 0.823193310148, "inform": 0.454453704662, "possibl": 0.348805474891, "modifi": 1.4936444810499998, "say": 0.562154280552, "exampl": 0.40868267499899996, "continu": 0.13040487398700001, "station": 0.857193812942, "prefer": 1.10581884366, "slight": 1.17966331506, "autom": 2.9867028668299995, "visual": 1.6539383488600001, "follow": 0.045356911094199995, "now": 0.149092945021, "tri": 0.61759152916, "dummi": 3.87347115944, "name": 0.09723316638430002, "code": 1.35601909597, "interact": 1.4858210267899998, "high": 0.13782378654000002, "winter": 1.17598157639, "regress": 3.9359915164199997, "publish": 0.313975865467, "goe": 1.4473284897999998, "bother": 3.68109926679, "qualiti": 1.07600506711, "issu": 0.364099043934, "also": 0.0146571578, "typic": 0.812774319158, "specifi": 1.93451151621, "around": 0.19387710578200001, "mean": 0.37092128352, "will": 0.202786534915, "major": 0.138474663439, "research": 0.663727818138, "theori": 1.10772396902, "signific": 0.373571744332, "chestxraynum": 7.1076144564399995, "may": 0.050709995284400004, "analyz": 2.2707222351599996, "peopl": 0.193265578473, "reallif": 7.1076144564399995, "angl": 2.18988198575, "challeng": 0.9392919688950001, "want": 0.6916366062549999, "convert": 1.1860360368, "talk": 1.10867789449, "street": 0.8616567778030001, "system": 0.327430345585, "howev": 0.0903151173475, "attribut": 1.2283715153700001, "readi": 1.6405284994999998, "calcul": 1.8131506592099997, "minut": 1.1353719359799999, "were": 0.024291143681099997, "which": 0.00517841384543, "what": 0.225887296827, "such": 0.059695977806, "seaborn": 4.94517599519, "thus": 0.49857627139300004, "agenc": 1.25254253424, "other": 0.00987474791976, "appli": 0.8316941898119999, "without": 0.258874517941, "one": 0.0062553516455, "show": 0.236682766013, "known": 0.0824180805992, "impact": 1.09033222631, "easytous": 7.1076144564399995, "postcod": 5.822416212189999, "see": 0.240921585492, "becaus": 0.139343158825, "webbas": 7.1076144564399995, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.139053576545, "through": 0.0683586918849, "imagin": 1.88684291737, "alon": 1.09766791236, "file": 1.32734588723, "blogpost": 7.1076144564399995, "process": 0.527829199025, "analyt": 2.8481901438599997, "includ": 0.0188846813905, "rule": 0.554777423537, "gather": 1.3313920667299999, "this": 0.0037864490525, "pretti": 2.75684036527, "rang": 0.579319213803, "decent": 3.5722448618800002, "time": 0.0112115188626, "api": 4.43612185107, "engin": 0.904767558276, "chang": 0.166275625058, "bit": 2.12032652634, "smaller": 0.9530830530519999, "project": 0.561601885907, "differ": 0.212321121312, "but": 0.0161923720719, "statist": 1.4451883070700002, "most": 0.020747896295599998, "equip": 1.1772073171, "hack": 3.7699304805000002, "beforehand": 3.78091960208, "all": 0.011402632097799998, "busi": 0.720476170355, "storey": 4.31597753923, "program": 0.7037855787649999, "strong": 0.49712549393600003, "recent": 0.434413741288, "almost": 0.42907884333400004, "case": 0.395406268889, "mitt": 3.90737271112, "logicbas": 7.1076144564399995, "filter": 2.82668393864, "academ": 1.35895667459, "more": 0.017024931599999998, "and": 6.29901420636e-05, "granular": 5.0774439637699995, "correspond": 1.20141456099, "discuss": 0.78698452262, "these": 0.0715336194008, "gain": 0.6142097989249999, "websit": 0.924894023806, "could": 0.18595627229000003, "befor": 0.0956377718795, "comment": 1.11826753454, "miss": 1.2631785751200002, "avail": 0.547454586289, "make": 0.07349765782289999, "search": 1.1798682540899998, "onli": 0.025324268329099998, "situat": 0.725668290015, "concentr": 1.15078117015, "are": 0.0294674735827, "find": 0.547781330288, "walk": 1.270781474, "common": 0.338325805271, "solv": 1.9836504770400003, "data": 1.2168205848, "reduc": 0.686617775143, "address": 1.05137103247, "transpar": 2.76480853492, "bio": 3.7456377879300002, "come": 0.28390990653000003, "abstract": 2.29918950399, "origin": 0.128612437587, "aspect": 1.12795002691, "text": 1.14048200999, "send": 1.32189757338, "identifi": 0.833722000472, "scalabl": 5.22991255741, "import": 0.292818277066, "first": 0.0075872898121599995, "input": 2.50167533539, "when": 0.0205549888584, "have": 0.0147850023412, "while": 0.04324998379380001, "year": 0.047402238894600005, "within": 0.21263272059799998, "suggest": 0.563702610877, "learn": 0.842752064745, "pipelin": 3.47002829672, "user": 2.04258810688}, "freq": {"after": 3, "real": 1, "boost": 1, "song": 1, "googl": 2, "web": 10, "extern": 3, "fall": 1, "onc": 4, "too": 1, "take": 2, "kind": 1, "stakehold": 1, "addit": 4, "would": 15, "number": 5, "audio": 1, "been": 1, "decreas": 3, "dataset": 3, "furnish": 1, "driver": 3, "thought": 1, "nummnum": 1, "ubahn": 1, "sound": 2, "complet": 1, "technic": 1, "higher": 2, "know": 1, "friedrichstrass": 1, "motiv": 1, "cautious": 1, "highlight": 1, "particular": 1, "creat": 1, "room": 4, "kokatjuhha": 2, "how": 8, "sbahn": 1, "repost": 1, "mnum": 1, "fair": 1, "music": 1, "had": 8, "deeper": 3, "hundr": 1, "distribut": 4, "end": 2, "found": 1, "given": 2, "jekaterina": 2, "interest": 5, "beginn": 1, "consid": 1, "obvious": 1, "standalon": 1, "second": 2, "updat": 1, "new": 4, "simpl": 2, "perform": 1, "healthcar": 1, "definit": 1, "carri": 1, "overload": 1, "point": 1, "amaz": 2, "applic": 1, "hadn": 1, "hidden": 1, "fraud": 1, "date": 3, "stadtmitt": 1, "listen": 1, "use": 11, "resourc": 1, "out": 3, "mistak": 1, "ton": 1, "estat": 1, "good": 3, "alway": 1, "mine": 2, "cours": 2, "dig": 1, "per": 1, "comma": 2, "everyth": 1, "field": 2, "reason": 2, "not": 5, "uninform": 1, "compon": 1, "kaggl": 1, "practis": 2, "altern": 1, "four": 2, "easi": 1, "better": 3, "than": 1, "then": 1, "complic": 1, "separ": 2, "they": 9, "design": 1, "genr": 1, "descript": 2, "let": 1, "scienc": 8, "anoth": 2, "employ": 1, "webmast": 1, "current": 1, "featur": 12, "frequent": 1, "problemat": 1, "alreadi": 2, "that": 27, "provid": 6, "preprocess": 1, "offer": 1, "either": 1, "should": 1, "pattern": 1, "sever": 3, "those": 1, "explor": 1, "python": 1, "deriv": 1, "some": 7, "sourc": 3, "small": 1, "collect": 1, "step": 3, "locat": 1, "result": 2, "version": 1, "produc": 2, "repositori": 2, "well": 2, "less": 1, "ani": 5, "question": 2, "citi": 2, "from": 12, "train": 1, "work": 1, "detail": 2, "num": 9, "instanc": 2, "nobodi": 1, "market": 2, "aren": 1, "idea": 4, "for": 25, "car": 1, "predict": 5, "correct": 2, "winder": 1, "with": 15, "competit": 1, "negoti": 1, "solut": 1, "explan": 1, "distanc": 1, "month": 2, "pitfal": 1, "look": 3, "option": 2, "veri": 9, "extract": 6, "variabl": 2, "center": 2, "public": 1, "complain": 3, "focus": 1, "educ": 1, "dashboard": 5, "tend": 1, "balconi": 1, "wrong": 1, "even": 3, "convers": 1, "old": 5, "proper": 1, "their": 2, "place": 1, "told": 2, "berlin": 10, "rental": 15, "scratch": 1, "error": 1, "move": 1, "ask": 2, "hous": 2, "note": 1, "ggplotnum": 1, "salari": 2, "scientist": 1, "machin": 9, "into": 6, "paper": 1, "medic": 1, "came": 2, "static": 1, "buy": 1, "techniqu": 1, "latest": 1, "newcom": 2, "help": 3, "main": 3, "microstrategi": 1, "actual": 1, "cover": 1, "outdat": 1, "base": 1, "relat": 1, "can": 11, "who": 1, "decid": 1, "trip": 2, "tableau": 1, "permiss": 1, "here": 2, "ideal": 1, "week": 1, "durat": 2, "plausibl": 1, "clean": 5, "apart": 22, "onlin": 3, "contain": 2, "zalando": 2, "about": 7, "problem": 7, "everywher": 2, "job": 1, "thing": 1, "just": 1, "duplic": 6, "softwar": 1, "understand": 1, "precious": 1, "heard": 1, "price": 27, "ensur": 1, "topic": 5, "dure": 1, "kilomet": 1, "them": 3, "check": 3, "expens": 1, "perceiv": 1, "where": 4, "furnitur": 1, "save": 2, "tool": 2, "start": 5, "took": 2, "kitchen": 2, "love": 1, "guid": 2, "insight": 6, "request": 2, "lost": 1, "whi": 1, "bad": 1, "explain": 1, "scrape": 9, "order": 5, "nearest": 1, "configur": 1, "modif": 2, "central": 1, "abl": 3, "mani": 8, "uniqu": 2, "the": 97, "anymor": 1, "increas": 3, "build": 3, "analysi": 3, "algorithm": 4, "metro": 2, "select": 3, "earli": 2, "same": 2, "there": 13, "sort": 1, "valu": 2, "inform": 3, "possibl": 6, "modifi": 1, "say": 1, "exampl": 5, "continu": 1, "station": 3, "prefer": 1, "slight": 2, "autom": 1, "visual": 6, "follow": 2, "now": 2, "tri": 1, "dummi": 1, "name": 1, "code": 1, "interact": 4, "high": 1, "winter": 1, "regress": 1, "publish": 2, "goe": 1, "bother": 1, "qualiti": 1, "issu": 2, "also": 6, "typic": 1, "specifi": 1, "around": 5, "mean": 1, "will": 9, "major": 1, "research": 2, "theori": 1, "signific": 1, "chestxraynum": 1, "may": 2, "analyz": 3, "peopl": 5, "reallif": 2, "angl": 1, "challeng": 3, "want": 3, "convert": 1, "talk": 1, "street": 2, "system": 1, "howev": 6, "attribut": 1, "readi": 1, "calcul": 1, "minut": 1, "were": 11, "which": 6, "what": 6, "such": 4, "seaborn": 1, "thus": 1, "agenc": 4, "other": 2, "appli": 1, "without": 2, "one": 7, "show": 2, "known": 2, "impact": 2, "easytous": 1, "postcod": 2, "see": 4, "becaus": 2, "webbas": 1, "get": 6, "still": 1, "like": 1, "through": 3, "imagin": 1, "alon": 1, "file": 2, "blogpost": 2, "process": 2, "analyt": 2, "includ": 1, "rule": 1, "gather": 2, "this": 18, "pretti": 1, "rang": 2, "decent": 1, "time": 1, "api": 2, "engin": 6, "chang": 4, "bit": 1, "smaller": 1, "project": 5, "differ": 4, "but": 8, "statist": 4, "most": 3, "equip": 1, "hack": 1, "beforehand": 1, "all": 6, "busi": 1, "storey": 1, "program": 1, "strong": 1, "recent": 2, "almost": 1, "case": 3, "mitt": 1, "logicbas": 1, "filter": 1, "academ": 1, "more": 1, "and": 35, "granular": 2, "correspond": 1, "discuss": 1, "these": 6, "gain": 2, "websit": 8, "could": 19, "befor": 1, "comment": 1, "miss": 2, "avail": 1, "make": 1, "search": 4, "onli": 4, "situat": 3, "concentr": 2, "are": 19, "find": 11, "walk": 1, "common": 1, "solv": 2, "data": 40, "reduc": 1, "address": 5, "transpar": 1, "bio": 1, "come": 2, "abstract": 1, "origin": 1, "aspect": 1, "text": 1, "send": 1, "identifi": 4, "scalabl": 1, "import": 6, "first": 2, "input": 1, "when": 4, "have": 10, "while": 6, "year": 1, "within": 1, "suggest": 1, "learn": 9, "pipelin": 1, "user": 1}, "idf": {"after": 1.02070207021, "real": 2.28103448276, "boost": 9.16099249856, "song": 3.4333910034599997, "googl": 11.388809182200001, "web": 5.17133550489, "extern": 5.24133377352, "fall": 1.6945244956799999, "onc": 1.4974533106999999, "too": 1.81585268215, "take": 1.13961668222, "kind": 2.5806241872599998, "stakehold": 73.8418604651, "addit": 1.24634950542, "would": 1.0828729281799998, "number": 1.10142916609, "audio": 9.05647461495, "been": 1.0239277652399998, "decreas": 4.5230769230800005, "dataset": 193.609756098, "furnish": 23.042089985500002, "driver": 6.79914346895, "thought": 1.9854927463699998, "nummnum": 429.081081081, "ubahn": 1221.23076923, "sound": 3.11294117647, "complet": 1.24021560816, "technic": 3.1400316455699997, "higher": 2.1218925421, "know": 2.59327017315, "friedrichstrass": 1221.23076923, "motiv": 5.01611374408, "cautious": 29.7861163227, "highlight": 5.83033419023, "particular": 1.3814827706200001, "creat": 1.2492917847, "room": 3.07674418605, "kokatjuhha": 1221.23076923, "how": 1.60250328051, "sbahn": 1221.23076923, "repost": 933.882352941, "mnum": 14.086956521700001, "fair": 3.20533010297, "music": 2.47791478071, "had": 1.0475750577399998, "deeper": 15.0769230769, "hundr": 2.4698195395099996, "distribut": 2.7396031061299997, "end": 1.10680423871, "found": 1.11387076405, "given": 1.35426085473, "jekaterina": 1221.23076923, "interest": 1.60331246213, "beginn": 53.4545454545, "consid": 1.2397313759200002, "obvious": 6.44841592201, "standalon": 70.875, "second": 1.1130898128, "updat": 5.56466876972, "new": 1.0178880554, "simpl": 3.3981164383599998, "perform": 1.5313977042500002, "healthcar": 18.7659574468, "definit": 3.24, "carri": 1.66869875972, "overload": 61.0615384615, "point": 1.25990000794, "amaz": 15.250720461099998, "applic": 3.42672134686, "hadn": 1221.23076923, "hidden": 7.81299212598, "fraud": 16.468879668, "date": 1.63081664099, "stadtmitt": 1221.23076923, "listen": 6.97846153846, "use": 1.0296387573799999, "resourc": 2.9487369985100003, "out": 1.06016694491, "mistak": 8.71350164654, "ton": 10.5278514589, "estat": 4.93810264386, "good": 1.51981619759, "alway": 2.06745670009, "mine": 4.875921375919999, "cours": 2.15092805853, "dig": 18.5034965035, "per": 1.9597580545599997, "comma": 123.06976744200001, "everyth": 4.81967213115, "field": 1.7790228597, "reason": 1.72340425532, "not": 1.01567398119, "uninform": 256.064516129, "compon": 4.09491875161, "kaggl": 1221.23076923, "practis": 17.898534385599998, "altern": 2.1390460792200003, "four": 1.20950784702, "easi": 5.2937645882, "better": 2.0065722952500002, "than": 1.03278688525, "then": 1.08657860516, "complic": 5.6478121664900005, "separ": 1.6012102874399998, "they": 1.03017325287, "design": 1.45825296225, "genr": 8.34700315457, "descript": 4.00504540868, "let": 3.48616600791, "scienc": 2.31969608416, "anoth": 1.13643521832, "employ": 2.16530278232, "webmast": 610.615384615, "current": 1.5325803649, "featur": 1.52712581762, "frequent": 2.10501193317, "problemat": 16.503118503099998, "alreadi": 1.9551724137900002, "that": 1.00398406375, "provid": 1.21552714187, "preprocess": 1221.23076923, "offer": 1.53896859248, "either": 1.5830092731099998, "should": 1.6643254009900001, "pattern": 3.79173632673, "sever": 1.07241286139, "those": 1.19548192771, "explor": 3.39593582888, "python": 56.2978723404, "deriv": 2.78379800105, "some": 1.04036697248, "sourc": 1.69760479042, "small": 1.3594793629, "collect": 1.64109985528, "step": 2.8279301745599996, "locat": 1.59766529134, "result": 1.14611608432, "version": 2.0083491461099996, "produc": 1.36932896326, "repositori": 44.974504249300004, "well": 1.0655748708, "less": 1.46904783936, "ani": 1.13383802314, "question": 2.20408163265, "citi": 1.38618702523, "from": 1.00056721497, "train": 1.9365698950999999, "work": 1.11520089913, "detail": 2.26186066391, "num": 1.00031504001, "instanc": 3.2572835453400004, "nobodi": 15.5647058824, "market": 2.36602086438, "aren": 481.09090909099996, "idea": 2.0930784443, "for": 1.00031504001, "car": 3.53743315508, "predict": 5.18484650555, "correct": 3.6631287494199998, "winder": 481.09090909099996, "with": 1.0011982089899998, "competit": 3.06960556845, "negoti": 4.18560506196, "solut": 4.7278141751, "explan": 6.50922509225, "distanc": 3.4754816112099998, "month": 1.5079787234, "pitfal": 178.38202247200002, "look": 1.9086318826599997, "option": 4.04896710023, "veri": 1.25880114177, "extract": 7.703056768560001, "variabl": 8.747107438019999, "center": 1.7423178226499998, "public": 1.22424429365, "complain": 8.299006795610001, "focus": 2.01012914662, "educ": 2.00733341763, "dashboard": 118.47761194, "tend": 3.3735656608599998, "balconi": 49.3043478261, "wrong": 5.478260869570001, "even": 1.16461267606, "convers": 3.3486606201200004, "old": 1.52844902282, "proper": 3.3388012618299996, "their": 1.01547908405, "place": 1.1004366812200002, "told": 3.1543810848400002, "berlin": 6.43534657479, "rental": 24.8840125392, "scratch": 25.8146341463, "error": 6.04109589041, "move": 1.29125660838, "ask": 2.1744966443, "hous": 1.4624170965399999, "note": 1.42449528937, "ggplotnum": 1221.23076923, "salari": 10.2096463023, "scientist": 4.69426374926, "machin": 4.02433460076, "into": 1.01502461479, "paper": 2.6628648104700003, "medic": 3.27542809986, "came": 1.46013059873, "static": 16.468879668, "buy": 5.12459651388, "techniqu": 3.7293868921800004, "latest": 7.078020508250001, "newcom": 27.5147313692, "help": 1.39962972759, "main": 1.25303867403, "microstrategi": 1221.23076923, "actual": 1.87482286254, "cover": 1.69380134429, "outdat": 36.6651270208, "base": 1.14628158845, "relat": 1.23750876919, "can": 1.17626139142, "who": 1.06279287723, "decid": 1.9257641921400002, "trip": 4.9, "tableau": 244.246153846, "permiss": 6.280063291139999, "here": 2.42307692308, "ideal": 4.65571847507, "week": 1.80532181033, "durat": 10.5069490404, "plausibl": 29.954716981100002, "clean": 6.86975335353, "apart": 3.1032056294, "onlin": 2.6051854282900004, "contain": 1.59814777532, "zalando": 1221.23076923, "about": 1.06486015159, "problem": 1.76674827509, "everywher": 15.923771313900001, "job": 3.2539454806299997, "thing": 2.4065484311099996, "just": 1.33580143037, "duplic": 19.7955112219, "softwar": 10.2624434389, "understand": 2.96858638743, "precious": 23.1428571429, "heard": 4.45204711161, "price": 3.4838709677399997, "ensur": 3.4127257093700005, "topic": 5.457545548300001, "dure": 1.0503473370799998, "kilomet": 18.546728972, "them": 1.09876115994, "check": 6.50655737705, "expens": 3.5453327378300004, "perceiv": 4.92279069767, "where": 1.06715063521, "furnitur": 19.894736842100002, "save": 2.8178913737999998, "tool": 4.99716713881, "start": 1.26673581744, "took": 1.4009883515700001, "kitchen": 16.2, "love": 2.97303370787, "guid": 2.49113447356, "insight": 11.8037174721, "request": 3.09051975861, "lost": 1.74634253657, "whi": 3.2566153846200003, "bad": 3.3944836433599996, "explain": 2.60049140049, "scrape": 70.56, "order": 1.24625166811, "nearest": 15.148854961800001, "configur": 11.504347826099998, "modif": 9.5753920386, "central": 1.6121039805000001, "abl": 1.8208510150200001, "mani": 1.04426757877, "uniqu": 3.01595744681, "the": 1.0, "anymor": 35.1238938053, "increas": 1.32024948025, "build": 1.6341739578, "analysi": 3.47852760736, "algorithm": 27.9507042254, "metro": 13.7573656846, "select": 2.02345144022, "earli": 1.12468121281, "same": 1.11857958148, "there": 1.04091266719, "sort": 5.188235294119999, "valu": 2.2777618364400003, "inform": 1.5753125620200001, "possibl": 1.4173734488, "modifi": 4.45329593268, "say": 1.7544480053, "exampl": 1.50483412322, "continu": 1.13928955867, "station": 2.35653851863, "prefer": 3.0216977540900003, "slight": 3.25327868852, "autom": 19.8202247191, "visual": 5.22752716497, "follow": 1.04640126549, "now": 1.160780873, "tri": 1.8544562551099997, "dummi": 48.1090909091, "name": 1.10211732037, "code": 3.8807137619199996, "interact": 4.4185917061, "high": 1.14777327935, "winter": 3.24132298898, "regress": 51.2129032258, "publish": 1.36885669943, "goe": 4.251740760580001, "bother": 39.69, "qualiti": 2.9329392204, "issu": 1.43921675279, "also": 1.01476510067, "typic": 2.2541530597799997, "specifi": 6.920662598080001, "around": 1.21394708671, "mean": 1.44906900329, "will": 1.22481098596, "major": 1.14852058164, "research": 1.9420183486200002, "theori": 3.02745995423, "signific": 1.4529147982100001, "chestxraynum": 1221.23076923, "may": 1.05201775893, "analyz": 9.68639414277, "peopl": 1.21320495186, "reallif": 1221.23076923, "angl": 8.934158694430002, "challeng": 2.55816951337, "want": 1.99698113208, "convert": 3.2740771293099997, "talk": 3.0303493033, "street": 2.36707917102, "system": 1.38739840951, "howev": 1.0945191313299998, "attribut": 3.4156626506, "readi": 5.15789473684, "calcul": 6.12972972973, "minut": 3.11233091551, "were": 1.02458857696, "which": 1.005191845, "what": 1.25343439128, "such": 1.06151377374, "seaborn": 140.495575221, "thus": 1.6463756092500001, "agenc": 3.49922856513, "other": 1.00992366412, "appli": 2.2972073506, "without": 1.29547123623, "one": 1.00627495722, "show": 1.26703910615, "known": 1.0859097127200001, "impact": 2.97526236882, "easytous": 1221.23076923, "postcod": 337.787234043, "see": 1.27242125511, "becaus": 1.1495184997499999, "webbas": 1221.23076923, "get": 1.78562591385, "still": 1.1866357724799999, "like": 1.14918566775, "through": 1.07074930869, "imagin": 6.598503740650001, "alon": 2.99716820842, "file": 3.7710213776699995, "blogpost": 1221.23076923, "process": 1.69524826482, "analyt": 17.256521739100002, "includ": 1.0190641247799999, "rule": 1.7415533128599998, "gather": 3.78631051753, "this": 1.00379362671, "pretti": 15.75, "rang": 1.7848229342299997, "decent": 35.5964125561, "time": 1.01127460348, "api": 84.44680851060001, "engin": 2.47135740971, "chang": 1.1808985421, "bit": 8.33385826772, "smaller": 2.59369384088, "project": 1.7534791252500002, "differ": 1.23654490225, "but": 1.01632417899, "statist": 4.24265098878, "most": 1.02096463023, "equip": 3.24529844644, "hack": 43.3770491803, "beforehand": 43.8563535912, "all": 1.01146788991, "busi": 2.05541170378, "storey": 74.8867924528, "program": 2.02139037433, "strong": 1.6439888163999998, "recent": 1.54405757635, "almost": 1.53584212054, "case": 1.48498737256, "mitt": 49.7680250784, "logicbas": 1221.23076923, "filter": 16.8893617021, "academ": 3.8921304241199994, "more": 1.0171706817, "and": 1.00006299213, "granular": 160.363636364, "correspond": 3.32481675393, "discuss": 2.19676214197, "these": 1.07415426252, "gain": 1.84819557625, "websit": 2.52160101652, "could": 1.2043695949, "befor": 1.10036041031, "comment": 3.05954904606, "miss": 3.53664513255, "avail": 1.7288467821, "make": 1.0762660158600001, "search": 3.2539454806299997, "onli": 1.0256476516600002, "situat": 2.06611140031, "concentr": 3.16066095959, "are": 1.02990593578, "find": 1.7294117647099998, "walk": 3.56363636364, "common": 1.4025974025999999, "solv": 7.26923076923, "data": 3.37643555934, "reduc": 1.98698372966, "address": 2.86157173756, "transpar": 15.876, "bio": 42.336000000000006, "come": 1.32831325301, "abstract": 9.966101694919999, "origin": 1.13724928367, "aspect": 3.0893169877399997, "text": 3.12827586207, "send": 3.75053153792, "identifi": 2.30187037843, "scalabl": 186.776470588, "import": 1.3401992233700002, "first": 1.00761614623, "input": 12.2029208301, "when": 1.02076769755, "have": 1.0148948411399998, "while": 1.0441988950299999, "year": 1.0485436893200002, "within": 1.2369302688, "suggest": 1.7571665744299998, "learn": 2.32275054865, "pipelin": 32.1376518219, "user": 7.71053909665}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  How to build a data science project from scratch</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/build-data-science-project-from-scratch.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb How to build a data science project from scratch Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/6-step-plan-starting-data-science-career.html\" rel=\"prev\" title=\"6 Step Plan to Starting Your Data Science Career\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/top-tweets-nov28-dec04.html\" rel=\"next\" title=\"Top KDnuggets tweets, Nov 28 \u2013 Dec 4: Deep Learning Cheat Sheets; Amazon opens its internal #machinelearning courses to all for free\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/12/build-data-science-project-from-scratch.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=88069\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/12/build-data-science-project-from-scratch.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-88069 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 5-Dec, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/tutorials.html\">Tutorials, Overviews</a> \u00bb How to build a data science project from scratch (\u00a0<a href=\"/2018/n47.html\">18:n47</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog\" src=\"/images/tkb-1812-s.png\" width=\"94\"/>How to build a data science project from scratch</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/12/6-step-plan-starting-data-science-career.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/12/top-tweets-nov28-dec04.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/berlin\" rel=\"tag\">Berlin</a>, <a href=\"https://www.kdnuggets.com/tag/data-preparation\" rel=\"tag\">Data Preparation</a>, <a href=\"https://www.kdnuggets.com/tag/data-science\" rel=\"tag\">Data Science</a>, <a href=\"https://www.kdnuggets.com/tag/real-estate\" rel=\"tag\">Real Estate</a>, <a href=\"https://www.kdnuggets.com/tag/web-scraping\" rel=\"tag\">Web Scraping</a></div>\n<br/>\n<p class=\"excerpt\">\n     A demonstration using an analysis of Berlin rental prices, covering how to extract data from the web and clean it, gaining deeper insights, engineering of features using external APIs, and more.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/jekaterina-kokatjuhha/\">Jekaterina Kokatjuhha</a>, Research Engineer at Zalando.</b></p>\n<p>There are many online courses about data science and machine learning that will guide you through a theory and provide you with some code examples and an analysis of\u00a0<strong>very clean</strong>\u00a0data.</p>\n<p>However, in order to start practising data science, it is better if you challenge a real-life problem. Digging into the data in order to find deeper insights. Carrying out feature engineering using additional sources of data and building stand-alone machine learning pipelines.</p>\n<p>This blogpost will guide you through the main steps of building a data science project from scratch. It is based on a\u00a0<strong>real-life problem</strong>\u200a\u2014\u200awhat are the main drivers of rental prices in Berlin? It will provide an analysis of this situation. It will also highlight the common mistake beginners tend to make when it comes to machine learning.</p>\n<p>These are the steps that will be discussed in detail:</p>\n<ul>\n<li>finding a topic</li>\n<li>extracting data from the web and cleaning it</li>\n<li>gaining deeper insights</li>\n<li>engineering of features using external APIs</li>\n</ul>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*kF7On_Ajcb5g0ASNNetA7Q.png\" width=\"100%\"/></p>\n<h3>Finding a\u00a0topic</h3>\n<p>There are many problems that can be solved by analyzing data, but it is always better to find a problem that you are interested in and that will motivate you. While searching for a topic, you should definitely concentrate on your preferences and interests.</p>\n<p>For instance, if you are interested in healthcare systems, there are many angles from which you could challenge the data provided on that topic.\u00a0<a data-href=\"https://lukeoakdenrayner.wordpress.com/2017/12/18/the-chestxray14-dataset-problems/\" href=\"https://lukeoakdenrayner.wordpress.com/2017/12/18/the-chestxray14-dataset-problems/\">\u201cExploring the ChestXray14 dataset: problems\u201d</a>\u00a0is an example of how to question the quality of medical data. Another example\u200a\u2014\u200aif you are interested in music, you could try to\u00a0<a data-href=\"https://hackernoon.com/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194\" href=\"https://hackernoon.com/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194\">predict the genre of the song from its audio</a>.</p>\n<p>However, I suggest not only to concentrate on your interests but also to listen to what people around you are talking about. What bothers them? What are they complaining about? This can be another good source of ideas for a data science project. In those cases where people are still complaining about it, this may mean that the problem wasn\u2019t solved properly the first time around. Thus, if you challenge it with data, you could provide an even better solution and have an impact in how this topic is perceived.</p>\n<p>This may all sound a bit too abstract, so lets find out how I came up with the idea to analyze Berlin rental prices.</p>\n<p><em>\u201cIf I had known that the rental prices were so high here, I would have negotiated for a higher\u00a0salary.\u201d</em></p>\n<p>This is just one of the things I heard from people who had recently moved to Berlin for work. Most newcomers complained that they hadn\u2019t imagined Berlin to be so expensive, and that there were no statistics about possible price ranges of the apartment. If they had known this it beforehand, they could have asked for a higher salary during the job application process or could have considered other options.</p>\n<p>I googled, checked several rental apartment websites, and asked several people, but could not find any plausible statistics or visualizations of the current market prices. And this was how I came up with the idea of this analysis.</p>\n<p>I wanted to gather the data, build an interactive dashboard where you could select different options such as a 40m2 apartment situated in Berlin Mitte with a balcony and equipped kitchen, and it would show you the price ranges. This, alone, would help people understand apartment prices in Berlin. Also, by applying machine learning, I would be able to identify the drivers of the rental prices and practise with different machine learning algorithms.</p>\n<h3>Extracting data from the web and cleaning\u00a0it</h3>\n<h4>Getting the\u00a0data</h4>\n<p>Now that you have an idea about your data science project, you can start looking for the data. There are tons of amazing data repositories, such as\u00a0<a data-href=\"http://kaggle.com/\" href=\"http://kaggle.com/\">Kaggle</a>,\u00a0<a data-href=\"https://archive.ics.uci.edu/ml/index.php\" href=\"https://archive.ics.uci.edu/ml/index.php\">UCI ML Repository</a>\u00a0or\u00a0<a data-href=\"https://toolbox.google.com/datasetsearch\" href=\"https://toolbox.google.com/datasetsearch\">dataset search engine</a>s, and\u00a0<a data-href=\"https://www.ncbi.nlm.nih.gov/\" href=\"https://www.ncbi.nlm.nih.gov/\">websites</a>\u00a0containing academic papers with datasets. Alternatively, you could use\u00a0<a data-href=\"https://en.wikipedia.org/wiki/Web_scraping\" href=\"https://en.wikipedia.org/wiki/Web_scraping\">web scraping</a>.</p>\n<p>But be cautious\u200a\u2014\u200aold data is everywhere. When I was searching for the information about the rental prices in Berlin, I found many visualizations\u00a0<strong>but\u00a0</strong>they were old, or without any year specified.</p>\n<p>For some statistics, they even had a note saying that this price would only be for a 2 room apartment of 50 m2 without furniture. But what if I am searching for a smaller apartment with a furnished kitchen?</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*4_Mc9fj__cOrgtfqUijYhw.png\" width=\"100%\"/><br>\n<strong>Old data is everywhere.</strong></br></p>\n<p>As I could find only old data, I decided to\u00a0<strong>web scrape</strong>\u00a0the websites that offered rental apartments. Web scraping is a technique used to extract data from websites through an automated process.</p>\n<p><a data-href=\"https://hackernoon.com/web-scraping-tutorial-with-python-tips-and-tricks-db070e70e071\" href=\"https://hackernoon.com/web-scraping-tutorial-with-python-tips-and-tricks-db070e70e071\">My web scraping blogpost</a>\u00a0goes into the details of pitfalls and design patterns of web scraping.</p>\n<p>Here are the main findings:</p>\n<ul>\n<li>Before scraping, check if there is a public API available</li>\n<li><strong>Be kind</strong>! Don\u2019t overload the website by sending hundreds of requests per second</li>\n<li>Save the date when the extraction took place. It will be explained why this is important.</li>\n</ul>\n<h4>Data cleaning</h4>\n<p>Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues.</p>\n<p>While web scraping rental data, I included some small checks such as the number of missing values for all features. Web-masters could change the HTML of the website, which would result in my program not getting the data anymore.</p>\n<p>Once I had ensured that all technical aspects of web scraping were covered, I thought the data would almost be ideal. However, I ended up cleaning the data for around a week because of not so obvious duplicates.</p>\n<p>Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues. For instance, if you web scrape, you could have missed some important fields. If you use a comma separator while saving data into a file, and one of the fields also contains commas, you can end up having files which are not separated very well.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*g7EhX85-uSJiIxt8bqcTTw.png\" width=\"100%\"/><br>\n<strong>ILLUSION vs REALITY</strong></br></p>\n<p>There were several sources of duplicates:</p>\n<ul>\n<li>Duplicated apartments because they had been online for a while</li>\n<li>Agencies had input errors, for example the rental price or the storey of the apartment. They would correct them after a while, or would publish a completely new ad with corrected values and additional description modifications</li>\n<li>Some prices were changed (increased and decreased) after a month for the same apartment</li>\n</ul>\n<p>While the duplicates from the first case were easy to identify by their ID, the duplicates from the second case were very complicated. The reason is that an agency could slightly change a description, modify the wrong price, and publish it as a new ad so that the ID would also be new.</p>\n<p>I had to come up with many logic-based rules to filter out the old versions of the ads. Once I was able to identify that these apartments would be the actual duplicates but with slight modifications, I could sort them by the extraction date, taking the latest one as the most recent.</p>\n<p>Additionally, some agencies would increase or decrease the price for the same apartment after a month. I was told that if nobody wanted this apartment, the price would decrease. Conversely, I was told that, if there were so many requests for it, that the agencies increased the price. These sounds like good explanations.</p>\n<h3>Gaining deeper\u00a0insights</h3>\n<p>Now that we have everything ready, we can start analyzing the data. I know data scientists love seaborn and ggplot2, as well as many static visualizations from which they can derive some insights.</p>\n<p>However,\u00a0<span data-creator-ids=\"anon\">interactive dashboards can help you and other stakeholders to find useful insights. There are many amazing easy-to-use tools for that, such as\u00a0<a data-href=\"https://www.tableau.com/\" href=\"https://www.tableau.com/\">Tableau</a>\u00a0and\u00a0<a data-href=\"https://www.microstrategy.com/us\" href=\"https://www.microstrategy.com/us\">Microstrategy</a>.</span></p>\n<p>It took me less than 30 minutes to create an interactive dashboard where one can select all the important components and see how the price would change.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*zTBdipGnGoJivhItOZ8JZA.png\" width=\"100%\"/><br>\n<strong>Interactive dashboard of Berlin rental prices: one can select all the possible configurations and see the corresponding price distribution. (Data date: Winder 2017/18)</strong></br></p>\n<p>A fairly simple\u00a0<strong>dashboard\u00a0</strong>could already provide\u00a0<strong>insights\u00a0</strong>into the prices in Berlin for newcomers and could be a good\u00a0<strong>user driver for a rental apartment website</strong>.</p>\n<p>Already from this data visualization you can see that the price distribution of 2.5 rooms falls into the distribution of 2 room apartment. The reason for this is that most of the 2.5 room apartments aren\u2019t situated in the center of the city which, of course, reduces the price.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Q6icjCPe1utFvbvA85_gXQ.png\" width=\"100%\"/><br>\n<strong>Price distribution and number of apartments in Berlin.</strong></br></p>\n<p>This data was gathered in winter 2017/18 and it will also get outdated. However, my point is that the rental websites could frequently update their statistics and visualizations to provide more transparency to this question.</p>\n<h3>Engineering of features using external\u00a0APIs</h3>\n<p>Visualization helps you to identify important attributes, or \u201cfeatures,\u201d that could be used by these machine learning algorithms. If the features you use are very uninformative, any algorithm will produce bad predictions. With very strong features, even a very simple algorithm can produce pretty decent results.</p>\n<p>In the rental price project, price is a continuous variable, so it is a typical regression problem. Taking all extracted information, I collected the following features in order to be able to predict a rental price.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*2k4Bd_719d1z-HeJNpvIBQ.png\" width=\"100%\"/><br/>\n<strong>These are the majority of the features used to predict the rental apartment price.</strong></p>\n<p>However, there was one feature that was problematic, namely the address. There were 6.6K apartments and around 4.4K unique addresses of different granularity. There were around 200 unique postcodes which could be converted into the dummy variables but then very precious information of a particular location would be lost.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*6eqBZbge561AnkP5vpsvRw.png\" width=\"100%\"/><br/>\n<strong>Different granularity of the address: street with the house number, street with hidden house number and only a postcode.</strong></p>\n<p><strong>What do you do when you are given a new address?</strong><br/>\nYou either google where it is or how to get there.</p>\n<p>By using an external API following the four additional features given, the apartment\u2019s address could be calculated:</p>\n<ol>\n<li>duration of a train trip to the S-Bahn Friedrichstrasse (central station)</li>\n<li>distance to U-Bahn Stadtmitte (city center) by car</li>\n<li>duration of a walking trip to the nearest metro station</li>\n<li>number of metro stations within one kilometer from the apartment</li>\n</ol>\n<p>These four features boosted the performance significantly.</p>\n<p><b>Bio</b>: <a href=\"https://www.linkedin.com/in/jekaterina-kokatjuhha/\">Jekaterina\u00a0Kokatjuhha</a> is a Research Engineer at Zalando, focusing on scalable machine learning for fraud prediction.</p>\n<p><a href=\"https://medium.freecodecamp.org/how-to-build-a-data-science-project-from-scratch-dc4f096a62a1\">Original</a>. Reposted with permission.</p>\n<p><strong>Resources:</strong></p>\n<ul>\n<li><a href=\"https://www.kdnuggets.com/education/online.html\">On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning education</a></li>\n<li><a href=\"https://www.kdnuggets.com/software/index.html\">Software for Analytics, Data Science, Data Mining, and Machine Learning</a></li>\n</ul>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2018/12/data-science-projects-business-impact.html\">Data Science Projects Employers Want To See: How To Show A Business Impact</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/11/text-preprocessing-python.html\">Text Preprocessing in Python: Steps, Tools, and Examples</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/10/apartment-hack-competition-real-estate-market.html\">Are you buying an apartment? How to hack competition in the real estate market</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/12/6-step-plan-starting-data-science-career.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/12/top-tweets-nov28-dec04.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/12/tutorials.html\">Tutorials, Overviews</a> \u00bb How to build a data science project from scratch (\u00a0<a href=\"/2018/n47.html\">18:n47</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556347240\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.762 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 02:40:40 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "jekaterina", "kokatjuhha", "research", "engin", "zalando", "there", "are", "mani", "onlin", "cours", "about", "data", "scienc", "and", "machin", "learn", "that", "will", "guid", "through", "theori", "and", "provid", "with", "some", "code", "exampl", "and", "analysi", "veri", "clean", "data", "howev", "order", "start", "practis", "data", "scienc", "better", "challeng", "reallif", "problem", "dig", "into", "the", "data", "order", "find", "deeper", "insight", "carri", "out", "featur", "engin", "use", "addit", "sourc", "data", "and", "build", "standalon", "machin", "learn", "pipelin", "this", "blogpost", "will", "guid", "through", "the", "main", "step", "build", "data", "scienc", "project", "from", "scratch", "base", "reallif", "problem", "what", "are", "the", "main", "driver", "rental", "price", "berlin", "will", "provid", "analysi", "this", "situat", "will", "also", "highlight", "the", "common", "mistak", "beginn", "tend", "make", "when", "come", "machin", "learn", "these", "are", "the", "step", "that", "will", "discuss", "detail", "find", "topic", "extract", "data", "from", "the", "web", "and", "clean", "gain", "deeper", "insight", "engin", "featur", "use", "extern", "api", "find", "topic", "there", "are", "mani", "problem", "that", "can", "solv", "analyz", "data", "but", "alway", "better", "find", "problem", "that", "are", "interest", "and", "that", "will", "motiv", "while", "search", "for", "topic", "should", "definit", "concentr", "prefer", "and", "interest", "for", "instanc", "are", "interest", "healthcar", "system", "there", "are", "mani", "angl", "from", "which", "could", "challeng", "the", "data", "provid", "that", "topic", "explor", "the", "chestxraynum", "dataset", "problem", "exampl", "how", "question", "the", "qualiti", "medic", "data", "anoth", "exampl", "are", "interest", "music", "could", "tri", "predict", "the", "genr", "the", "song", "from", "audio", "howev", "suggest", "not", "onli", "concentr", "interest", "but", "also", "listen", "what", "peopl", "around", "are", "talk", "about", "what", "bother", "them", "what", "are", "they", "complain", "about", "this", "can", "anoth", "good", "sourc", "idea", "for", "data", "scienc", "project", "those", "case", "where", "peopl", "are", "still", "complain", "about", "this", "may", "mean", "that", "the", "problem", "solv", "proper", "the", "first", "time", "around", "thus", "challeng", "with", "data", "could", "provid", "even", "better", "solut", "and", "have", "impact", "how", "this", "topic", "perceiv", "this", "may", "all", "sound", "bit", "too", "abstract", "let", "find", "out", "how", "came", "with", "the", "idea", "analyz", "berlin", "rental", "price", "had", "known", "that", "the", "rental", "price", "were", "high", "here", "would", "have", "negoti", "for", "higher", "salari", "this", "just", "one", "the", "thing", "heard", "from", "peopl", "who", "had", "recent", "move", "berlin", "for", "work", "most", "newcom", "complain", "that", "they", "hadn", "imagin", "berlin", "expens", "and", "that", "there", "were", "statist", "about", "possibl", "price", "rang", "the", "apart", "they", "had", "known", "this", "beforehand", "they", "could", "have", "ask", "for", "higher", "salari", "dure", "the", "job", "applic", "process", "could", "have", "consid", "other", "option", "googl", "check", "sever", "rental", "apart", "websit", "and", "ask", "sever", "peopl", "but", "could", "not", "find", "ani", "plausibl", "statist", "visual", "the", "current", "market", "price", "and", "this", "how", "came", "with", "the", "idea", "this", "analysi", "want", "gather", "the", "data", "build", "interact", "dashboard", "where", "could", "select", "differ", "option", "such", "nummnum", "apart", "situat", "berlin", "mitt", "with", "balconi", "and", "equip", "kitchen", "and", "would", "show", "the", "price", "rang", "this", "alon", "would", "help", "peopl", "understand", "apart", "price", "berlin", "also", "appli", "machin", "learn", "would", "abl", "identifi", "the", "driver", "the", "rental", "price", "and", "practis", "with", "differ", "machin", "learn", "algorithm", "extract", "data", "from", "the", "web", "and", "clean", "get", "the", "data", "now", "that", "have", "idea", "about", "data", "scienc", "project", "can", "start", "look", "for", "the", "data", "there", "are", "ton", "amaz", "data", "repositori", "such", "kaggl", "repositori", "dataset", "search", "engin", "and", "websit", "contain", "academ", "paper", "with", "dataset", "altern", "could", "use", "web", "scrape", "but", "cautious", "old", "data", "everywher", "when", "search", "for", "the", "inform", "about", "the", "rental", "price", "berlin", "found", "mani", "visual", "but", "they", "were", "old", "without", "ani", "year", "specifi", "for", "some", "statist", "they", "even", "had", "note", "say", "that", "this", "price", "would", "onli", "for", "num", "room", "apart", "num", "mnum", "without", "furnitur", "but", "what", "search", "for", "smaller", "apart", "with", "furnish", "kitchen", "old", "data", "everywher", "could", "find", "onli", "old", "data", "decid", "web", "scrape", "the", "websit", "that", "offer", "rental", "apart", "web", "scrape", "techniqu", "use", "extract", "data", "from", "websit", "through", "autom", "process", "web", "scrape", "blogpost", "goe", "into", "the", "detail", "pitfal", "and", "design", "pattern", "web", "scrape", "here", "are", "the", "main", "find", "befor", "scrape", "check", "there", "public", "avail", "kind", "overload", "the", "websit", "send", "hundr", "request", "per", "second", "save", "the", "date", "when", "the", "extract", "took", "place", "will", "explain", "whi", "this", "import", "data", "clean", "onc", "start", "get", "the", "data", "veri", "import", "have", "look", "earli", "possibl", "order", "find", "ani", "possibl", "issu", "while", "web", "scrape", "rental", "data", "includ", "some", "small", "check", "such", "the", "number", "miss", "valu", "for", "all", "featur", "webmast", "could", "chang", "the", "the", "websit", "which", "would", "result", "program", "not", "get", "the", "data", "anymor", "onc", "had", "ensur", "that", "all", "technic", "aspect", "web", "scrape", "were", "cover", "thought", "the", "data", "would", "almost", "ideal", "howev", "end", "clean", "the", "data", "for", "around", "week", "becaus", "not", "obvious", "duplic", "onc", "start", "get", "the", "data", "veri", "import", "have", "look", "earli", "possibl", "order", "find", "ani", "possibl", "issu", "for", "instanc", "web", "scrape", "could", "have", "miss", "some", "import", "field", "use", "comma", "separ", "while", "save", "data", "into", "file", "and", "one", "the", "field", "also", "contain", "comma", "can", "end", "have", "file", "which", "are", "not", "separ", "veri", "well", "there", "were", "sever", "sourc", "duplic", "duplic", "apart", "becaus", "they", "had", "been", "onlin", "for", "while", "agenc", "had", "input", "error", "for", "exampl", "the", "rental", "price", "the", "storey", "the", "apart", "they", "would", "correct", "them", "after", "while", "would", "publish", "complet", "new", "with", "correct", "valu", "and", "addit", "descript", "modif", "some", "price", "were", "chang", "increas", "and", "decreas", "after", "month", "for", "the", "same", "apart", "while", "the", "duplic", "from", "the", "first", "case", "were", "easi", "identifi", "their", "the", "duplic", "from", "the", "second", "case", "were", "veri", "complic", "the", "reason", "that", "agenc", "could", "slight", "chang", "descript", "modifi", "the", "wrong", "price", "and", "publish", "new", "that", "the", "would", "also", "new", "had", "come", "with", "mani", "logicbas", "rule", "filter", "out", "the", "old", "version", "the", "onc", "abl", "identifi", "that", "these", "apart", "would", "the", "actual", "duplic", "but", "with", "slight", "modif", "could", "sort", "them", "the", "extract", "date", "take", "the", "latest", "one", "the", "most", "recent", "addit", "some", "agenc", "would", "increas", "decreas", "the", "price", "for", "the", "same", "apart", "after", "month", "told", "that", "nobodi", "want", "this", "apart", "the", "price", "would", "decreas", "convers", "told", "that", "there", "were", "mani", "request", "for", "that", "the", "agenc", "increas", "the", "price", "these", "sound", "like", "good", "explan", "gain", "deeper", "insight", "now", "that", "have", "everyth", "readi", "can", "start", "analyz", "the", "data", "know", "data", "scientist", "love", "seaborn", "and", "ggplotnum", "well", "mani", "static", "visual", "from", "which", "they", "can", "deriv", "some", "insight", "howev", "interact", "dashboard", "can", "help", "and", "other", "stakehold", "find", "use", "insight", "there", "are", "mani", "amaz", "easytous", "tool", "for", "that", "such", "tableau", "and", "microstrategi", "took", "less", "than", "num", "minut", "creat", "interact", "dashboard", "where", "one", "can", "select", "all", "the", "import", "compon", "and", "see", "how", "the", "price", "would", "chang", "interact", "dashboard", "berlin", "rental", "price", "one", "can", "select", "all", "the", "possibl", "configur", "and", "see", "the", "correspond", "price", "distribut", "data", "date", "winder", "num", "fair", "simpl", "dashboard", "could", "alreadi", "provid", "insight", "into", "the", "price", "berlin", "for", "newcom", "and", "could", "good", "user", "driver", "for", "rental", "apart", "websit", "alreadi", "from", "this", "data", "visual", "can", "see", "that", "the", "price", "distribut", "num", "room", "fall", "into", "the", "distribut", "num", "room", "apart", "the", "reason", "for", "this", "that", "most", "the", "num", "room", "apart", "aren", "situat", "the", "center", "the", "citi", "which", "cours", "reduc", "the", "price", "price", "distribut", "and", "number", "apart", "berlin", "this", "data", "gather", "winter", "num", "and", "will", "also", "get", "outdat", "howev", "point", "that", "the", "rental", "websit", "could", "frequent", "updat", "their", "statist", "and", "visual", "provid", "more", "transpar", "this", "question", "engin", "featur", "use", "extern", "api", "visual", "help", "identifi", "import", "attribut", "featur", "that", "could", "use", "these", "machin", "learn", "algorithm", "the", "featur", "use", "are", "veri", "uninform", "ani", "algorithm", "will", "produc", "bad", "predict", "with", "veri", "strong", "featur", "even", "veri", "simpl", "algorithm", "can", "produc", "pretti", "decent", "result", "the", "rental", "price", "project", "price", "continu", "variabl", "typic", "regress", "problem", "take", "all", "extract", "inform", "collect", "the", "follow", "featur", "order", "abl", "predict", "rental", "price", "these", "are", "the", "major", "the", "featur", "use", "predict", "the", "rental", "apart", "price", "howev", "there", "one", "featur", "that", "problemat", "name", "the", "address", "there", "were", "apart", "and", "around", "uniqu", "address", "differ", "granular", "there", "were", "around", "num", "uniqu", "postcod", "which", "could", "convert", "into", "the", "dummi", "variabl", "but", "then", "veri", "precious", "inform", "particular", "locat", "would", "lost", "differ", "granular", "the", "address", "street", "with", "the", "hous", "number", "street", "with", "hidden", "hous", "number", "and", "onli", "postcod", "what", "when", "are", "given", "new", "address", "either", "googl", "where", "how", "get", "there", "use", "extern", "follow", "the", "four", "addit", "featur", "given", "the", "apart", "address", "could", "calcul", "durat", "train", "trip", "the", "sbahn", "friedrichstrass", "central", "station", "distanc", "ubahn", "stadtmitt", "citi", "center", "car", "durat", "walk", "trip", "the", "nearest", "metro", "station", "number", "metro", "station", "within", "one", "kilomet", "from", "the", "apart", "these", "four", "featur", "boost", "the", "perform", "signific", "bio", "jekaterina", "kokatjuhha", "research", "engin", "zalando", "focus", "scalabl", "machin", "learn", "for", "fraud", "predict", "origin", "repost", "with", "permiss", "resourc", "onlin", "and", "webbas", "analyt", "data", "mine", "data", "scienc", "machin", "learn", "educ", "softwar", "for", "analyt", "data", "scienc", "data", "mine", "and", "machin", "learn", "relat", "data", "scienc", "project", "employ", "want", "see", "how", "show", "busi", "impact", "text", "preprocess", "python", "step", "tool", "and", "exampl", "are", "buy", "apart", "how", "hack", "competit", "the", "real", "estat", "market"], "timestamp_scraper": 1556368283.4682, "title": "How to build a data science project from scratch", "read_time": 538.1999999999999, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/jekaterina-kokatjuhha/\">Jekaterina Kokatjuhha</a>, Research Engineer at Zalando.</b></p>\n<p>There are many online courses about data science and machine learning that will guide you through a theory and provide you with some code examples and an analysis of\u00a0<strong>very clean</strong>\u00a0data.</p>\n<p>However, in order to start practising data science, it is better if you challenge a real-life problem. Digging into the data in order to find deeper insights. Carrying out feature engineering using additional sources of data and building stand-alone machine learning pipelines.</p>\n<p>This blogpost will guide you through the main steps of building a data science project from scratch. It is based on a\u00a0<strong>real-life problem</strong>\u200a\u2014\u200awhat are the main drivers of rental prices in Berlin? It will provide an analysis of this situation. It will also highlight the common mistake beginners tend to make when it comes to machine learning.</p>\n<p>These are the steps that will be discussed in detail:</p>\n<ul>\n<li>finding a topic</li>\n<li>extracting data from the web and cleaning it</li>\n<li>gaining deeper insights</li>\n<li>engineering of features using external APIs</li>\n</ul>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*kF7On_Ajcb5g0ASNNetA7Q.png\" width=\"100%\"/></p>\n<h3>Finding a\u00a0topic</h3>\n<p>There are many problems that can be solved by analyzing data, but it is always better to find a problem that you are interested in and that will motivate you. While searching for a topic, you should definitely concentrate on your preferences and interests.</p>\n<p>For instance, if you are interested in healthcare systems, there are many angles from which you could challenge the data provided on that topic.\u00a0<a data-href=\"https://lukeoakdenrayner.wordpress.com/2017/12/18/the-chestxray14-dataset-problems/\" href=\"https://lukeoakdenrayner.wordpress.com/2017/12/18/the-chestxray14-dataset-problems/\">\u201cExploring the ChestXray14 dataset: problems\u201d</a>\u00a0is an example of how to question the quality of medical data. Another example\u200a\u2014\u200aif you are interested in music, you could try to\u00a0<a data-href=\"https://hackernoon.com/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194\" href=\"https://hackernoon.com/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194\">predict the genre of the song from its audio</a>.</p>\n<p>However, I suggest not only to concentrate on your interests but also to listen to what people around you are talking about. What bothers them? What are they complaining about? This can be another good source of ideas for a data science project. In those cases where people are still complaining about it, this may mean that the problem wasn\u2019t solved properly the first time around. Thus, if you challenge it with data, you could provide an even better solution and have an impact in how this topic is perceived.</p>\n<p>This may all sound a bit too abstract, so lets find out how I came up with the idea to analyze Berlin rental prices.</p>\n<p><em>\u201cIf I had known that the rental prices were so high here, I would have negotiated for a higher\u00a0salary.\u201d</em></p>\n<p>This is just one of the things I heard from people who had recently moved to Berlin for work. Most newcomers complained that they hadn\u2019t imagined Berlin to be so expensive, and that there were no statistics about possible price ranges of the apartment. If they had known this it beforehand, they could have asked for a higher salary during the job application process or could have considered other options.</p>\n<p>I googled, checked several rental apartment websites, and asked several people, but could not find any plausible statistics or visualizations of the current market prices. And this was how I came up with the idea of this analysis.</p>\n<p>I wanted to gather the data, build an interactive dashboard where you could select different options such as a 40m2 apartment situated in Berlin Mitte with a balcony and equipped kitchen, and it would show you the price ranges. This, alone, would help people understand apartment prices in Berlin. Also, by applying machine learning, I would be able to identify the drivers of the rental prices and practise with different machine learning algorithms.</p>\n<h3>Extracting data from the web and cleaning\u00a0it</h3>\n<h4>Getting the\u00a0data</h4>\n<p>Now that you have an idea about your data science project, you can start looking for the data. There are tons of amazing data repositories, such as\u00a0<a data-href=\"http://kaggle.com/\" href=\"http://kaggle.com/\">Kaggle</a>,\u00a0<a data-href=\"https://archive.ics.uci.edu/ml/index.php\" href=\"https://archive.ics.uci.edu/ml/index.php\">UCI ML Repository</a>\u00a0or\u00a0<a data-href=\"https://toolbox.google.com/datasetsearch\" href=\"https://toolbox.google.com/datasetsearch\">dataset search engine</a>s, and\u00a0<a data-href=\"https://www.ncbi.nlm.nih.gov/\" href=\"https://www.ncbi.nlm.nih.gov/\">websites</a>\u00a0containing academic papers with datasets. Alternatively, you could use\u00a0<a data-href=\"https://en.wikipedia.org/wiki/Web_scraping\" href=\"https://en.wikipedia.org/wiki/Web_scraping\">web scraping</a>.</p>\n<p>But be cautious\u200a\u2014\u200aold data is everywhere. When I was searching for the information about the rental prices in Berlin, I found many visualizations\u00a0<strong>but\u00a0</strong>they were old, or without any year specified.</p>\n<p>For some statistics, they even had a note saying that this price would only be for a 2 room apartment of 50 m2 without furniture. But what if I am searching for a smaller apartment with a furnished kitchen?</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*4_Mc9fj__cOrgtfqUijYhw.png\" width=\"100%\"/><br>\n<strong>Old data is everywhere.</strong></br></p>\n<p>As I could find only old data, I decided to\u00a0<strong>web scrape</strong>\u00a0the websites that offered rental apartments. Web scraping is a technique used to extract data from websites through an automated process.</p>\n<p><a data-href=\"https://hackernoon.com/web-scraping-tutorial-with-python-tips-and-tricks-db070e70e071\" href=\"https://hackernoon.com/web-scraping-tutorial-with-python-tips-and-tricks-db070e70e071\">My web scraping blogpost</a>\u00a0goes into the details of pitfalls and design patterns of web scraping.</p>\n<p>Here are the main findings:</p>\n<ul>\n<li>Before scraping, check if there is a public API available</li>\n<li><strong>Be kind</strong>! Don\u2019t overload the website by sending hundreds of requests per second</li>\n<li>Save the date when the extraction took place. It will be explained why this is important.</li>\n</ul>\n<h4>Data cleaning</h4>\n<p>Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues.</p>\n<p>While web scraping rental data, I included some small checks such as the number of missing values for all features. Web-masters could change the HTML of the website, which would result in my program not getting the data anymore.</p>\n<p>Once I had ensured that all technical aspects of web scraping were covered, I thought the data would almost be ideal. However, I ended up cleaning the data for around a week because of not so obvious duplicates.</p>\n<p>Once you starting getting the data, it is very important to have a look at it as early as possible in order to find any possible issues. For instance, if you web scrape, you could have missed some important fields. If you use a comma separator while saving data into a file, and one of the fields also contains commas, you can end up having files which are not separated very well.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*g7EhX85-uSJiIxt8bqcTTw.png\" width=\"100%\"/><br>\n<strong>ILLUSION vs REALITY</strong></br></p>\n<p>There were several sources of duplicates:</p>\n<ul>\n<li>Duplicated apartments because they had been online for a while</li>\n<li>Agencies had input errors, for example the rental price or the storey of the apartment. They would correct them after a while, or would publish a completely new ad with corrected values and additional description modifications</li>\n<li>Some prices were changed (increased and decreased) after a month for the same apartment</li>\n</ul>\n<p>While the duplicates from the first case were easy to identify by their ID, the duplicates from the second case were very complicated. The reason is that an agency could slightly change a description, modify the wrong price, and publish it as a new ad so that the ID would also be new.</p>\n<p>I had to come up with many logic-based rules to filter out the old versions of the ads. Once I was able to identify that these apartments would be the actual duplicates but with slight modifications, I could sort them by the extraction date, taking the latest one as the most recent.</p>\n<p>Additionally, some agencies would increase or decrease the price for the same apartment after a month. I was told that if nobody wanted this apartment, the price would decrease. Conversely, I was told that, if there were so many requests for it, that the agencies increased the price. These sounds like good explanations.</p>\n<h3>Gaining deeper\u00a0insights</h3>\n<p>Now that we have everything ready, we can start analyzing the data. I know data scientists love seaborn and ggplot2, as well as many static visualizations from which they can derive some insights.</p>\n<p>However,\u00a0<span data-creator-ids=\"anon\">interactive dashboards can help you and other stakeholders to find useful insights. There are many amazing easy-to-use tools for that, such as\u00a0<a data-href=\"https://www.tableau.com/\" href=\"https://www.tableau.com/\">Tableau</a>\u00a0and\u00a0<a data-href=\"https://www.microstrategy.com/us\" href=\"https://www.microstrategy.com/us\">Microstrategy</a>.</span></p>\n<p>It took me less than 30 minutes to create an interactive dashboard where one can select all the important components and see how the price would change.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*zTBdipGnGoJivhItOZ8JZA.png\" width=\"100%\"/><br>\n<strong>Interactive dashboard of Berlin rental prices: one can select all the possible configurations and see the corresponding price distribution. (Data date: Winder 2017/18)</strong></br></p>\n<p>A fairly simple\u00a0<strong>dashboard\u00a0</strong>could already provide\u00a0<strong>insights\u00a0</strong>into the prices in Berlin for newcomers and could be a good\u00a0<strong>user driver for a rental apartment website</strong>.</p>\n<p>Already from this data visualization you can see that the price distribution of 2.5 rooms falls into the distribution of 2 room apartment. The reason for this is that most of the 2.5 room apartments aren\u2019t situated in the center of the city which, of course, reduces the price.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Q6icjCPe1utFvbvA85_gXQ.png\" width=\"100%\"/><br>\n<strong>Price distribution and number of apartments in Berlin.</strong></br></p>\n<p>This data was gathered in winter 2017/18 and it will also get outdated. However, my point is that the rental websites could frequently update their statistics and visualizations to provide more transparency to this question.</p>\n<h3>Engineering of features using external\u00a0APIs</h3>\n<p>Visualization helps you to identify important attributes, or \u201cfeatures,\u201d that could be used by these machine learning algorithms. If the features you use are very uninformative, any algorithm will produce bad predictions. With very strong features, even a very simple algorithm can produce pretty decent results.</p>\n<p>In the rental price project, price is a continuous variable, so it is a typical regression problem. Taking all extracted information, I collected the following features in order to be able to predict a rental price.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*2k4Bd_719d1z-HeJNpvIBQ.png\" width=\"100%\"/><br/>\n<strong>These are the majority of the features used to predict the rental apartment price.</strong></p>\n<p>However, there was one feature that was problematic, namely the address. There were 6.6K apartments and around 4.4K unique addresses of different granularity. There were around 200 unique postcodes which could be converted into the dummy variables but then very precious information of a particular location would be lost.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*6eqBZbge561AnkP5vpsvRw.png\" width=\"100%\"/><br/>\n<strong>Different granularity of the address: street with the house number, street with hidden house number and only a postcode.</strong></p>\n<p><strong>What do you do when you are given a new address?</strong><br/>\nYou either google where it is or how to get there.</p>\n<p>By using an external API following the four additional features given, the apartment\u2019s address could be calculated:</p>\n<ol>\n<li>duration of a train trip to the S-Bahn Friedrichstrasse (central station)</li>\n<li>distance to U-Bahn Stadtmitte (city center) by car</li>\n<li>duration of a walking trip to the nearest metro station</li>\n<li>number of metro stations within one kilometer from the apartment</li>\n</ol>\n<p>These four features boosted the performance significantly.</p>\n<p><b>Bio</b>: <a href=\"https://www.linkedin.com/in/jekaterina-kokatjuhha/\">Jekaterina\u00a0Kokatjuhha</a> is a Research Engineer at Zalando, focusing on scalable machine learning for fraud prediction.</p>\n<p><a href=\"https://medium.freecodecamp.org/how-to-build-a-data-science-project-from-scratch-dc4f096a62a1\">Original</a>. Reposted with permission.</p>\n<p><strong>Resources:</strong></p>\n<ul>\n<li><a href=\"https://www.kdnuggets.com/education/online.html\">On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning education</a></li>\n<li><a href=\"https://www.kdnuggets.com/software/index.html\">Software for Analytics, Data Science, Data Mining, and Machine Learning</a></li>\n</ul>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2018/12/data-science-projects-business-impact.html\">Data Science Projects Employers Want To See: How To Show A Business Impact</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/11/text-preprocessing-python.html\">Text Preprocessing in Python: Steps, Tools, and Examples</a></li>\n<li><a href=\"https://www.kdnuggets.com/2018/10/apartment-hack-competition-real-estate-market.html\">Are you buying an apartment? How to hack competition in the real estate market</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}