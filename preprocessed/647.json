{"content": "Sponsored Post. By Nir Regev, Sisense . The world of data is now the world of Big Data. The genie is out of the bottle and there\u2019s no going back. We produce more and more data every day and the datasets being generated are getting more and more complex. Traditionally, the way to handle this has been to scale up computing resources to handle these bigger datasets. That\u2019s not feasible for the long term on a global scale, nor is it tenable in the near term for smaller organizations who may have limited resources to deal with their analytics challenges. Further complicating matters, in order to facilitate true interactivity with large datasets, user queries need near-real-time response rates. This is a challenge even for the most powerful large-scale systems. Approximate Query Processing (AQP) removes the need to query the entire Big Data set and serves up usable results rapidly. Sisense Hunch\u2122 Sisense Hunch\u2122 \u00a0is a new way of handling Big Data sets that uses AQP technology to construct Deep Neural Networks (DNNs) which are trained to learn the relationships between queries and their results in these huge datasets. This provides users with a fast, scalable inference layer above the data that they can interactively query to get actionable insights. Large batches of data can be approximated by the DNN which utilize concurrent processing in a Graphical Processing Unit (GPU). In addition, since Hunch\u2019s DNNs are typically on the Mb scale, they can be easily deployed and distributed to thousands of users or IOT devices, putting incredibly fast Big Data analytics almost anywhere. Embedding Big Data analytics at the edge or anyplace that users can benefit from them is a huge leap forward when dealing with these immense datasets. Sisense Hunch balances speed, resource consumption, and accuracy and gives users unparalleled flexibility in where they put these insights. The power of the Hunch system lies in the DNN training process, which ultimately yields the query approximation model. The process is divided into three phases: generating artificial\u00a0 SQL queries , obtaining the labels for the training set (i.e., executing the queries on the database), and finally encoding the queries into numeric tensor using the on-the-fly generated query encoder. Once this training set is created, Hunch utilizes a supervised approach to learn to approximate the training set queries. The Training Process Generating SQL Queries To approximate the wide array of queries that could come in for a given dataset, Hunch self-generates a robust set of queries. This is the formal query structure description: An example of a Hunch-generated query is: \u201cSelect  from table where store_type in (\u2018online\u2019) and computer_type in (\u2018Mac\u2019) and hour between 20 and 23 and hdisk_tb_size between 1 AND 5\u201d The ultimate goal of this phase is to generate a large representative set of aggregated SQL queries to cover many (user-oriented) aspects of the raw data. In order to do this, the system first extracts statistical values (data distribution) from the raw data. For each column with continuous numeric values, the algorithm calculates quartile distributions (min, 25%, median, 75%, max). Then, it uses this information to sample values from a uniform distribution which fits to the column numeric boundaries. The system also executes \u201cGroup By\u201d queries, which accelerates training set generation, mainly because all permutations of nominal columns\u2019 values can be obtained in one path to the data. Additionally, in the query format our method supports, \u201cWHERE\u201d clause statements are connected with an \u201cAND\u201d operator, so the order of the statement does not make a difference. To ensure the DNN does not learn specific statements\u2019 order, our method randomly shuffles the statements before constructing the query. This is done intentionally to force the DNN to learn to approximate semantically identical queries that occur with different \u201cWHERE\u201d clause ordering. Labeling the Training Set Building a supervised data set for training the DNN requires real query results. For this, our method runs the set of generated queries against the dataset. Since the DNN requires a relatively large number of training samples, the system generates and executes hundreds of thousands of queries using concurrent technology to optimize costs. However, this process takes place only\u00a0 once \u00a0for each dataset. When new data arrives, necessitating the generation of new queries, Hunch uses incremental (transfer) learning (more on that later). This approach saves time, effort, and costs both in the training set generation phase and in the DNN training phase. Encoding Queries Since the DNN can digest only numeric input, we developed an encoding model to encode the queries into numeric matrices. This goal is obtained by an encoder model which is constructed on the fly (during SQL queries generation), making use of vector embedding technique. The encoder is designed to condense data sets with millions of distinct values into light memory footprint numeric tensors by utilizing proprietary embedding techniques. Tackling New Data with Incremental Learning When new data is added to the dataset, Hunch needs to adapt the DNN to approximate queries based on new data. Building on the previous learning processes, Hunch utilizes transfer learning, meaning that the DNN will be trained from its last weights state, against a new training set which is generated using the previous DNN and the new data. Evaluation and Distribution Once the training is finalized, we use a set of accuracy metrics to evaluate the model\u2019s approximation. We use Normalized Root Mean Squared Error (NRMSE) to measure the model accuracy on a hold out testing set of queries. Once the NRMSE is converged below a threshold, Hunch publishes a cloud API end-point around the DNN. Then, users or IOT devices can send query requests. The end-user benefits with from prompt response fixed query latency (which is independent of the raw data size!) and interactivity when dealing with Big Data in a wide variety of settings. Conclusion Just because we now live in a world of Big Data does not mean we need to surrender our ability to interact with that data and truly understand it.\u00a0 Deep neural networks \u00a0using Approximate Query Processing offer users a way to work with these huge datasets, pull out powerful insights, and put those insights at the edge for IoT and human usage\u2014all without requiring huge technological investments or costs. Nothing will stop the Big Data from getting even bigger, but technology like Hunch will help humans stay in the driver\u2019s seat. Graph A: Query Results and Predictions for a 1,000,000,000-Row, 250-Gb Dataset Original . Reposted with permission.", "title_html": "<h1 id=\"title\">Training a Champion: Building Deep Neural Nets for Big Data Analytics</h1> ", "url": "https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html", "tfidf": {"tfidf": {"real": 2.28103448276, "anywher": 10.1638924456, "onc": 5.9898132427999995, "relat": 1.23750876919, "fit": 3.37070063694, "vector": 25.898858075, "label": 8.95431472082, "wide": 3.1196698762, "new": 8.1431044432, "addit": 2.49269901084, "sisens": 5773.09090908, "number": 1.10142916609, "boundari": 4.85801713586, "dataset": 2129.707317078, "intent": 3.19372359686, "driver": 6.79914346895, "done": 2.3302509907499998, "surrend": 6.5038918476, "approach": 4.15113086678, "path": 4.6421052631599995, "permiss": 6.280063291139999, "yield": 6.46943765281, "tackl": 19.8698372966, "their": 2.0309581681, "scale": 11.240972386109998, "hdisktbsiz": 1443.27272727, "measur": 2.41093394077, "creat": 1.2492917847, "model": 10.452989202000001, "test": 2.65707112971, "repost": 933.882352941, "million": 1.7279059643, "matric": 96.80487804879999, "scalabl": 186.776470588, "hundr": 2.4698195395099996, "distribut": 13.698015530649998, "converg": 15.2947976879, "given": 1.35426085473, "deep": 7.2559414990799995, "will": 3.67443295788, "publish": 1.36885669943, "further": 1.3618116315, "tabl": 3.82093862816, "below": 2.25607503197, "near": 1.28769567686, "but": 1.01632417899, "need": 5.749049429639999, "our": 9.43035343036, "cost": 6.95807158509, "final": 2.6801721955, "tensor": 305.307692308, "organ": 1.6387283237, "immens": 12.7723250201, "has": 1.0436497502, "generat": 24.63304887504, "arriv": 2.03173790632, "stop": 2.1783754116400003, "also": 1.01476510067, "action": 1.81855670103, "resourc": 8.84621099553, "onlin": 2.6051854282900004, "out": 3.18050083473, "prompt": 4.44456886898, "format": 2.53125, "numgb": 396.9, "numer": 10.99953810624, "huge": 17.55709151232, "tradit": 1.60802187785, "optim": 11.5377906977, "footprint": 41.4516971279, "forward": 3.66566612792, "global": 3.30612244898, "not": 4.06269592476, "sponsor": 5.66393150196, "day": 1.18371607516, "specif": 1.8719490626099997, "fli": 4.35555555556, "max": 7.474576271189999, "metric": 22.235294117600002, "handl": 11.76871756857, "then": 2.17315721032, "complic": 5.6478121664900005, "they": 3.09051975861, "design": 1.45825296225, "last": 1.2117234010100002, "techniqu": 7.458773784360001, "world": 3.34020618558, "claus": 24.5378670788, "construct": 5.79627601314, "ensur": 3.4127257093700005, "respons": 3.0133814178600002, "normal": 2.61075481006, "provid": 1.21552714187, "valu": 11.388809182200001, "offer": 1.53896859248, "develop": 1.1955719557200002, "storetyp": 1443.27272727, "accuraci": 38.2861736334, "thousand": 4.953510140400001, "those": 1.19548192771, "onthefli": 1443.27272727, "network": 5.18738768176, "three": 1.06621893889, "fast": 9.7458563536, "nomin": 3.79990426041, "unparallel": 82.6875, "result": 4.58446433728, "mac": 20.511627907, "supervis": 15.48122866894, "hunchgener": 1443.27272727, "produc": 1.36932896326, "devic": 10.01640378548, "set": 20.18034993277, "divid": 2.3169877408099997, "from": 7.00397050479, "limit": 1.5186531471200002, "work": 1.11520089913, "num": 6.00189024006, "technolog": 10.413906198760001, "cover": 1.69380134429, "formal": 2.44622496148, "userori": 1443.27272727, "incred": 18.227324913900002, "balanc": 4.45329593268, "for": 11.00346544011, "predict": 5.18484650555, "proprietari": 41.2363636364, "with": 14.016774925859997, "forc": 1.32399299475, "are": 4.11962374312, "true": 2.55569864778, "effort": 1.89247824532, "stay": 2.6986231514499996, "root": 3.57809330629, "extract": 7.703056768560001, "latenc": 174.46153846200002, "later": 1.08650424309, "column": 21.234061524750004, "train": 29.0485484265, "remov": 2.0058117498400003, "group": 1.20996875238, "doe": 5.11743848715, "even": 2.32922535212, "give": 1.3653250774, "computertyp": 1443.27272727, "usage\u2014al": 1443.27272727, "place": 1.1004366812200002, "graphic": 9.035856573710001, "shuffl": 62.5039370079, "goal": 6.56304257958, "nearrealtim": 1443.27272727, "error": 6.04109589041, "continu": 1.13928955867, "matter": 2.44773358002, "condens": 24.728971962600003, "into": 4.06009845916, "rapid": 2.62586834271, "requir": 4.58534706846, "descript": 4.00504540868, "largescal": 1443.27272727, "relationship": 2.39132399458, "against": 2.5804144656599997, "flexibl": 9.68639414277, "help": 1.39962972759, "main": 1.25303867403, "larg": 4.7429979834, "abil": 2.70875277256, "conclus": 4.84615384615, "approxim": 19.91969887077, "base": 1.14628158845, "occur": 1.7453825857499998, "deal": 6.55040572137, "hour": 2.25960717336, "who": 1.06279287723, "squar": 3.26666666667, "hold": 1.6551292744, "bigger": 26.46, "post": 2.23826307627, "speed": 3.8703071672400005, "numrow": 1443.27272727, "infer": 21.1398135819, "long": 1.2657259028899999, "human": 3.7930952096599997, "layer": 8.14153846154, "encod": 203.1663619741, "evalu": 13.901926444839999, "aggreg": 17.542541436500002, "deploy": 7.41869158879, "bottl": 15.443579766500001, "neural": 118.9213483146, "distinct": 2.2836593786000003, "increment": 63.7590361446, "have": 1.0148948411399998, "just": 1.33580143037, "entir": 1.59365589239, "adapt": 3.32272917539, "dure": 1.0503473370799998, "statement": 13.68915714592, "where": 2.13430127042, "live": 1.30591428806, "save": 2.8178913737999998, "complex": 2.34021226415, "nor": 3.3479544496, "light": 1.9102394417, "noth": 3.46410648047, "run": 1.55692850838, "them": 1.09876115994, "insight": 47.2148698884, "request": 3.09051975861, "consumpt": 9.3608490566, "execut": 6.7091139597, "order": 6.23125834055, "support": 1.2685577307200002, "system": 6.93699204755, "mani": 1.04426757877, "pull": 5.18654034629, "seat": 3.2579519802999997, "the": 75.0, "build": 3.2683479156, "calcul": 6.12972972973, "select": 2.02345144022, "permut": 102.425806452, "there": 1.04091266719, "array": 10.1444089457, "inform": 1.5753125620200001, "endus": 1443.27272727, "regev": 1443.27272727, "endpoint": 151.2, "phase": 17.205093470599998, "repres": 1.46972782818, "big": 21.920607525039998, "take": 1.13961668222, "previous": 2.85693719632, "now": 2.321561746, "robust": 19.9447236181, "interact": 17.6743668244, "iot": 1443.27272727, "semant": 39.1034482759, "unit": 1.15394679459, "power": 4.018901358539999, "edg": 8.91409320606, "fix": 4.4346368715099995, "cloud": 10.6193979933, "typic": 2.2541530597799997, "around": 1.21394708671, "mean": 4.34720700987, "acceler": 8.15408320493, "exampl": 1.50483412322, "batch": 35.6764044944, "necessit": 23.450516986700002, "may": 1.05201775893, "anyplac": 1443.27272727, "facilit": 6.453658536590001, "challeng": 5.11633902674, "util": 18.63927208688, "threshold": 23.008695652199997, "usabl": 31.5, "howev": 1.0945191313299998, "lie": 3.2157180474000002, "uniform": 5.7231434751300005, "quartil": 1443.27272727, "which": 8.04153476, "databas": 8.24727272727, "like": 1.14918566775, "term": 2.79040337464, "ident": 2.80792359392, "raw": 31.943661971699996, "min": 33.3529411765, "without": 1.29547123623, "one": 1.00627495722, "graph": 37.7102137767, "ultim": 5.17049340498, "algorithm": 27.9507042254, "becaus": 2.2990369994999997, "invest": 4.16146788991, "get": 5.35687774155, "random": 7.1902173913, "abov": 1.90382539873, "process": 15.25723438338, "both": 1.05215720061, "independ": 1.58950740889, "analyt": 51.769565217300006, "median": 14.3155996393, "digest": 19.0588235294, "structur": 2.0580762250499998, "put": 4.97420365536, "this": 13.049317147230001, "transfer": 5.45098712446, "sampl": 14.46560364464, "time": 1.01127460348, "selfgener": 1443.27272727, "back": 1.26070038911, "truli": 9.405213270139999, "smaller": 2.59369384088, "differ": 2.4730898045, "embed": 50.506892895, "been": 1.0239277652399998, "statist": 4.24265098878, "most": 1.02096463023, "between": 3.1036100612399995, "memori": 2.57392996109, "obtain": 8.05888324872, "all": 1.01146788991, "nir": 466.941176471, "varieti": 2.2972073506, "dnns": 2886.54545454, "almost": 1.53584212054, "feasibl": 17.8181818182, "that": 9.03585657375, "weight": 4.878918254459999, "rate": 2.14048806795, "more": 5.085853408499999, "and": 24.001511811119997, "leap": 19.6242274413, "these": 5.3707713126000005, "benefit": 6.13683803634, "artifici": 8.31639601886, "could": 1.2043695949, "befor": 1.10036041031, "state": 1.0477133240899998, "serv": 1.4668760972, "can": 8.23382973994, "comput": 3.9277585353800006, "make": 2.1525320317200003, "queri": 1914.1276595735999, "way": 3.6572218383, "onli": 2.0512953033200003, "each": 2.37949640288, "size": 2.49387370405, "concurr": 30.827184466, "geni": 134.542372881, "hunch\u2122": 2886.54545454, "data": 84.4108889835, "oper": 1.55479384977, "connect": 1.8843916913900003, "method": 7.714285714290001, "sinc": 3.2510580204900004, "hunch": 3692.09302326, "come": 1.32831325301, "origin": 1.13724928367, "aspect": 3.0893169877399997, "send": 3.75053153792, "understand": 2.96858638743, "first": 1.00761614623, "everi": 1.47917637194, "input": 12.2029208301, "tenabl": 378.0, "use": 10.296387573799999, "easili": 3.6938110749199997, "learn": 18.5820043892, "when": 4.0830707902, "user": 53.973773676549996}, "logtfidf": {"real": 0.824629060574, "anywher": 2.3188414835, "onc": 1.61506348942, "relat": 0.21310030165399999, "fit": 1.2151206268899999, "vector": 3.25419887797, "label": 2.99797665454, "wide": 0.8891600135079999, "new": 0.1418395748088, "addit": 0.440437765944, "sisens": 29.098674164400002, "number": 0.0966085784186, "boundari": 1.58063035792, "dataset": 57.924290233040004, "intent": 1.16118750781, "driver": 1.9167966438, "done": 0.845975983129, "surrend": 1.8724007435099999, "approach": 1.4604672291620002, "path": 1.5351679838499999, "permiss": 1.8373800586400002, "yield": 1.86708918863, "tackl": 2.98920286814, "their": 0.030721010245400002, "scale": 3.9628591898399996, "hdisktbsiz": 7.2746685411000005, "measur": 0.880014199726, "creat": 0.222576818514, "model": 3.687250365555, "test": 0.977224437103, "repost": 6.83935046985, "million": 0.5469102500940001, "matric": 4.572697386080001, "scalabl": 5.22991255741, "hundr": 0.904145087046, "distribut": 5.03906529065, "converg": 2.7275127501800003, "given": 0.303255810831, "deep": 2.5773469396, "will": 0.6083596047450001, "publish": 0.313975865467, "further": 0.308815895297, "tabl": 1.34049610661, "below": 0.813626591936, "near": 0.252854324034, "but": 0.0161923720719, "need": 1.450960653768, "our": 3.4305568567280003, "cost": 2.52387022854, "final": 0.585467727896, "tensor": 10.05634582952, "organ": 0.49392052866999997, "immens": 2.54728072239, "has": 0.0427239448548, "generat": 8.630188100832001, "arriv": 0.7088915382879999, "stop": 0.778579374963, "also": 0.0146571578, "action": 0.598043165069, "resourc": 3.24413082774, "onlin": 0.957503854357, "out": 0.1752791727579, "prompt": 1.4916828719100002, "format": 0.9287132518729999, "numgb": 5.98368435979, "numer": 3.636562874076, "huge": 5.9166543278, "tradit": 0.47500477629199994, "optim": 2.4456277954099996, "footprint": 3.7245288247199992, "forward": 1.29901007269, "global": 1.1957760371200001, "not": 0.06220965203, "sponsor": 1.7341182627400002, "day": 0.16865870631700003, "specif": 0.626980167541, "fli": 1.47145216946, "max": 2.01150743154, "metric": 3.1016808515599994, "handl": 4.10049800709, "then": 0.16606773046179998, "complic": 1.7312682430000002, "they": 0.0891809843028, "design": 0.377239118022, "last": 0.19204364461100001, "techniqu": 2.63248769614, "world": 0.322260745863, "claus": 5.01414067768, "construct": 1.975810067916, "ensur": 1.22751130026, "respons": 0.8198313246060001, "normal": 0.959639378783, "provid": 0.19517784432500002, "valu": 4.11596655074, "offer": 0.431112446902, "develop": 0.178624694913, "storetyp": 7.2746685411000005, "accuraci": 7.6394296218, "thousand": 1.813898527976, "those": 0.17854939087299998, "onthefli": 7.2746685411000005, "network": 1.9061661061039998, "three": 0.06411868822490001, "fast": 3.1673900494800002, "nomin": 1.33497587179, "unparallel": 4.41506844188, "result": 0.545515633524, "mac": 3.0209919403099996, "supervis": 4.09296211166, "hunchgener": 7.2746685411000005, "produc": 0.314320812003, "devic": 3.2221538940599994, "set": 2.9154321919129997, "divid": 0.8402679544589999, "from": 0.0039693791820619995, "limit": 0.41782385463, "work": 0.109034567273, "num": 0.0018899423723820002, "technolog": 3.82739074542, "cover": 0.526975319156, "formal": 0.894546004205, "userori": 7.2746685411000005, "incred": 2.9029218370499996, "balanc": 1.4936444810499998, "for": 0.0034648943493670007, "predict": 1.6457402376899999, "proprietari": 3.7193204796199995, "with": 0.01676488398746, "forc": 0.280652166524, "are": 0.1178698943308, "true": 0.938325629634, "effort": 0.637887211057, "stay": 0.9927416990379999, "root": 1.27483006252, "extract": 2.04161723301, "latenc": 5.16170430739, "later": 0.0829654259878, "column": 5.87098283814, "train": 9.913774692585001, "remov": 0.6960488415880001, "group": 0.190594534797, "doe": 1.6021251891509998, "even": 0.304777129668, "give": 0.311392552224, "computertyp": 7.2746685411000005, "usage\u2014al": 7.2746685411000005, "place": 0.0957070839572, "graphic": 2.20120072572, "shuffl": 4.135229546880001, "goal": 2.37661424546, "nearrealtim": 7.2746685411000005, "error": 1.7985854343, "continu": 0.13040487398700001, "matter": 0.8951625270360001, "condens": 3.20797551021, "into": 0.0596514529148, "rapid": 0.965411638564, "requir": 1.272760532025, "descript": 1.38755491845, "largescal": 7.2746685411000005, "relationship": 0.871847185184, "against": 0.509605702156, "flexibl": 2.2707222351599996, "help": 0.336207721344, "main": 0.225571540588, "larg": 0.6815002424240001, "abil": 0.996488297427, "conclus": 1.57818536893, "approxim": 7.150361019993001, "base": 0.13652330228700002, "occur": 0.556973778473, "deal": 2.342744103759, "hour": 0.815190981077, "who": 0.0609002329859, "squar": 1.18377009701, "hold": 0.503879117196, "bigger": 5.16497395626, "post": 0.8057001527009999, "speed": 1.3533338752700002, "numrow": 7.2746685411000005, "infer": 3.0511581621399997, "long": 0.235645793878, "human": 1.280070366486, "layer": 2.0969791623500003, "encod": 23.57680508036, "evalu": 3.8777604862599997, "aggreg": 2.8646288702, "deploy": 2.00400270589, "bottl": 2.7371933678900002, "neural": 8.170630311, "distinct": 0.825779146958, "increment": 6.92392747376, "have": 0.0147850023412, "just": 0.289531434109, "entir": 0.46603068026999994, "adapt": 1.2007864860200002, "dure": 0.0491209066894, "statement": 4.921238836600001, "where": 0.1299842774914, "live": 0.266903399347, "save": 1.03598886547, "complex": 0.8502416364309999, "nor": 1.2083495472799999, "light": 0.64722859635, "noth": 1.24245472939, "run": 0.442714975539, "them": 0.0941833269093, "insight": 9.87365808748, "request": 1.12833928344, "consumpt": 2.23653599755, "execut": 2.414563817592, "order": 1.1007019039650001, "support": 0.237880610037, "system": 1.637151727925, "mani": 0.0433157581221, "pull": 1.6460668749599998, "seat": 1.18109877106, "the": 0.0, "build": 0.982274904182, "calcul": 1.8131506592099997, "select": 0.704804687133, "permut": 4.62913869698, "there": 0.0400978929255, "array": 2.31692271093, "inform": 0.454453704662, "endus": 7.2746685411000005, "regev": 7.2746685411000005, "endpoint": 5.01860346375, "phase": 5.8356444434800006, "repres": 0.38507723275, "big": 8.06388508456, "take": 0.130691962197, "previous": 0.713205920126, "now": 0.298185890042, "robust": 2.9929646280599997, "interact": 5.943284107159999, "iot": 7.2746685411000005, "semant": 3.6662106543, "unit": 0.143188061817, "power": 0.8771888481450001, "edg": 2.9889727000999997, "fix": 1.48944573451, "cloud": 2.36268232808, "typic": 0.812774319158, "around": 0.19387710578200001, "mean": 1.11276385056, "acceler": 2.0985188085299997, "exampl": 0.40868267499899996, "batch": 3.5744895317400003, "necessit": 3.15489254099, "may": 0.050709995284400004, "anyplac": 7.2746685411000005, "facilit": 1.86464718498, "challeng": 1.8785839377900002, "util": 6.155905584959999, "threshold": 3.1358722163099997, "usabl": 3.44998754583, "howev": 0.0903151173475, "lie": 1.16805067564, "uniform": 1.74451821303, "quartil": 7.2746685411000005, "which": 0.04142731076344, "databas": 2.10988256718, "like": 0.139053576545, "term": 0.6660779670920001, "ident": 1.03244527565, "raw": 7.09608449742, "min": 3.5071459596699994, "without": 0.258874517941, "one": 0.0062553516455, "graph": 3.6299309802199997, "ultim": 1.8996418791479999, "algorithm": 3.33044239518, "becaus": 0.27868631765, "invest": 1.42586787018, "get": 1.739307017346, "random": 1.9727214065099998, "abov": 0.643865229816, "process": 4.750462791225, "both": 0.050842533389300004, "independ": 0.463424162503, "analyt": 8.544570431579999, "median": 2.66134982655, "digest": 2.9475301717400004, "structur": 0.7217716751350001, "put": 1.516958999562, "this": 0.0492238376825, "transfer": 2.00529907094, "sampl": 3.9572529767800004, "time": 0.0112115188626, "selfgener": 7.2746685411000005, "back": 0.23166743089699998, "truli": 2.24126413875, "smaller": 0.9530830530519999, "differ": 0.424642242624, "embed": 8.47049259381, "been": 0.023645982368400004, "statist": 1.4451883070700002, "most": 0.020747896295599998, "between": 0.10186104349589999, "memori": 0.9454338986599999, "obtain": 2.964488110509, "all": 0.011402632097799998, "nir": 6.14620328929, "varieti": 0.8316941898119999, "dnns": 14.549337082200001, "almost": 0.42907884333400004, "feasibl": 2.88021938643, "that": 0.035785335416759996, "weight": 1.58492352612, "rate": 0.761033872166, "more": 0.08512465799999999, "and": 0.0015117634095264, "leap": 2.9767648968400002, "these": 0.357668097004, "benefit": 2.24232490232, "artifici": 2.11822899018, "could": 0.18595627229000003, "befor": 0.0956377718795, "state": 0.0466100027668, "serv": 0.383135035608, "can": 1.136387674758, "comput": 1.36806891594, "make": 0.14699531564579998, "queri": 137.04232926064, "way": 0.5942745298050001, "onli": 0.050648536658199995, "each": 0.347483378608, "size": 0.9138372060609999, "concurr": 5.4704994653600005, "geni": 4.90187918944, "hunch\u2122": 14.549337082200001, "data": 30.42051462, "oper": 0.441342964347, "connect": 0.633605058682, "method": 2.833384826523, "sinc": 0.2411045983731, "hunch": 59.1136369821, "come": 0.28390990653000003, "origin": 0.128612437587, "aspect": 1.12795002691, "send": 1.32189757338, "understand": 1.0880858756799998, "first": 0.0075872898121599995, "everi": 0.391485427421, "input": 2.50167533539, "tenabl": 5.934894195619999, "use": 0.292080197316, "easili": 1.3066587367, "learn": 6.74201651796, "when": 0.0822199554336, "user": 14.298116748159998}, "logidf": {"real": 0.824629060574, "anywher": 2.3188414835, "onc": 0.403765872355, "relat": 0.21310030165399999, "fit": 1.2151206268899999, "vector": 3.25419887797, "label": 1.49898832727, "wide": 0.44458000675399995, "new": 0.0177299468511, "addit": 0.220218882972, "sisens": 7.2746685411000005, "number": 0.0966085784186, "boundari": 1.58063035792, "dataset": 5.26584456664, "intent": 1.16118750781, "driver": 1.9167966438, "done": 0.845975983129, "surrend": 1.8724007435099999, "approach": 0.7302336145810001, "path": 1.5351679838499999, "permiss": 1.8373800586400002, "yield": 1.86708918863, "tackl": 2.98920286814, "their": 0.015360505122700001, "scale": 1.32095306328, "hdisktbsiz": 7.2746685411000005, "measur": 0.880014199726, "creat": 0.222576818514, "model": 0.7374500731110001, "test": 0.977224437103, "repost": 6.83935046985, "million": 0.5469102500940001, "matric": 4.572697386080001, "scalabl": 5.22991255741, "hundr": 0.904145087046, "distribut": 1.00781305813, "converg": 2.7275127501800003, "given": 0.303255810831, "deep": 1.2886734698, "will": 0.202786534915, "publish": 0.313975865467, "further": 0.308815895297, "tabl": 1.34049610661, "below": 0.813626591936, "near": 0.252854324034, "but": 0.0161923720719, "need": 0.362740163442, "our": 0.8576392141820001, "cost": 0.84129007618, "final": 0.292733863948, "tensor": 5.02817291476, "organ": 0.49392052866999997, "immens": 2.54728072239, "has": 0.0427239448548, "generat": 0.719182341736, "arriv": 0.7088915382879999, "stop": 0.778579374963, "also": 0.0146571578, "action": 0.598043165069, "resourc": 1.08137694258, "onlin": 0.957503854357, "out": 0.0584263909193, "prompt": 1.4916828719100002, "format": 0.9287132518729999, "numgb": 5.98368435979, "numer": 0.606093812346, "huge": 1.47916358195, "tradit": 0.47500477629199994, "optim": 2.4456277954099996, "footprint": 3.7245288247199992, "forward": 1.29901007269, "global": 1.1957760371200001, "not": 0.0155524130075, "sponsor": 1.7341182627400002, "day": 0.16865870631700003, "specif": 0.626980167541, "fli": 1.47145216946, "max": 2.01150743154, "metric": 3.1016808515599994, "handl": 1.36683266903, "then": 0.08303386523089999, "complic": 1.7312682430000002, "they": 0.0297269947676, "design": 0.377239118022, "last": 0.19204364461100001, "techniqu": 1.31624384807, "world": 0.107420248621, "claus": 2.50707033884, "construct": 0.658603355972, "ensur": 1.22751130026, "respons": 0.40991566230300003, "normal": 0.959639378783, "provid": 0.19517784432500002, "valu": 0.823193310148, "offer": 0.431112446902, "develop": 0.178624694913, "storetyp": 7.2746685411000005, "accuraci": 2.5464765406, "thousand": 0.906949263988, "those": 0.17854939087299998, "onthefli": 7.2746685411000005, "network": 0.9530830530519999, "three": 0.06411868822490001, "fast": 1.5836950247400001, "nomin": 1.33497587179, "unparallel": 4.41506844188, "result": 0.136378908381, "mac": 3.0209919403099996, "supervis": 2.04648105583, "hunchgener": 7.2746685411000005, "produc": 0.314320812003, "devic": 1.6110769470299997, "set": 0.171496011289, "divid": 0.8402679544589999, "from": 0.000567054168866, "limit": 0.41782385463, "work": 0.109034567273, "num": 0.00031499039539700004, "technolog": 0.956847686355, "cover": 0.526975319156, "formal": 0.894546004205, "userori": 7.2746685411000005, "incred": 2.9029218370499996, "balanc": 1.4936444810499998, "for": 0.00031499039539700004, "predict": 1.6457402376899999, "proprietari": 3.7193204796199995, "with": 0.00119749171339, "forc": 0.280652166524, "are": 0.0294674735827, "true": 0.938325629634, "effort": 0.637887211057, "stay": 0.9927416990379999, "root": 1.27483006252, "extract": 2.04161723301, "latenc": 5.16170430739, "later": 0.0829654259878, "column": 1.95699427938, "train": 0.660918312839, "remov": 0.6960488415880001, "group": 0.190594534797, "doe": 0.5340417297169999, "even": 0.152388564834, "give": 0.311392552224, "computertyp": 7.2746685411000005, "usage\u2014al": 7.2746685411000005, "place": 0.0957070839572, "graphic": 2.20120072572, "shuffl": 4.135229546880001, "goal": 1.18830712273, "nearrealtim": 7.2746685411000005, "error": 1.7985854343, "continu": 0.13040487398700001, "matter": 0.8951625270360001, "condens": 3.20797551021, "into": 0.0149128632287, "rapid": 0.965411638564, "requir": 0.424253510675, "descript": 1.38755491845, "largescal": 7.2746685411000005, "relationship": 0.871847185184, "against": 0.254802851078, "flexibl": 2.2707222351599996, "help": 0.336207721344, "main": 0.225571540588, "larg": 0.17037506060600002, "abil": 0.996488297427, "conclus": 1.57818536893, "approxim": 0.7944845577770001, "base": 0.13652330228700002, "occur": 0.556973778473, "deal": 0.780914701253, "hour": 0.815190981077, "who": 0.0609002329859, "squar": 1.18377009701, "hold": 0.503879117196, "bigger": 2.58248697813, "post": 0.8057001527009999, "speed": 1.3533338752700002, "numrow": 7.2746685411000005, "infer": 3.0511581621399997, "long": 0.235645793878, "human": 0.640035183243, "layer": 2.0969791623500003, "encod": 3.36811501148, "evalu": 1.9388802431299998, "aggreg": 2.8646288702, "deploy": 2.00400270589, "bottl": 2.7371933678900002, "neural": 4.0853151555, "distinct": 0.825779146958, "increment": 3.46196373688, "have": 0.0147850023412, "just": 0.289531434109, "entir": 0.46603068026999994, "adapt": 1.2007864860200002, "dure": 0.0491209066894, "statement": 1.2303097091500002, "where": 0.0649921387457, "live": 0.266903399347, "save": 1.03598886547, "complex": 0.8502416364309999, "nor": 1.2083495472799999, "light": 0.64722859635, "noth": 1.24245472939, "run": 0.442714975539, "them": 0.0941833269093, "insight": 2.46841452187, "request": 1.12833928344, "consumpt": 2.23653599755, "execut": 0.804854605864, "order": 0.22014038079300002, "support": 0.237880610037, "system": 0.327430345585, "mani": 0.0433157581221, "pull": 1.6460668749599998, "seat": 1.18109877106, "the": 0.0, "build": 0.491137452091, "calcul": 1.8131506592099997, "select": 0.704804687133, "permut": 4.62913869698, "there": 0.0400978929255, "array": 2.31692271093, "inform": 0.454453704662, "endus": 7.2746685411000005, "regev": 7.2746685411000005, "endpoint": 5.01860346375, "phase": 1.4589111108700001, "repres": 0.38507723275, "big": 1.00798563557, "take": 0.130691962197, "previous": 0.356602960063, "now": 0.149092945021, "robust": 2.9929646280599997, "interact": 1.4858210267899998, "iot": 7.2746685411000005, "semant": 3.6662106543, "unit": 0.143188061817, "power": 0.292396282715, "edg": 1.4944863500499999, "fix": 1.48944573451, "cloud": 2.36268232808, "typic": 0.812774319158, "around": 0.19387710578200001, "mean": 0.37092128352, "acceler": 2.0985188085299997, "exampl": 0.40868267499899996, "batch": 3.5744895317400003, "necessit": 3.15489254099, "may": 0.050709995284400004, "anyplac": 7.2746685411000005, "facilit": 1.86464718498, "challeng": 0.9392919688950001, "util": 1.5389763962399998, "threshold": 3.1358722163099997, "usabl": 3.44998754583, "howev": 0.0903151173475, "lie": 1.16805067564, "uniform": 1.74451821303, "quartil": 7.2746685411000005, "which": 0.00517841384543, "databas": 2.10988256718, "like": 0.139053576545, "term": 0.33303898354600003, "ident": 1.03244527565, "raw": 2.36536149914, "min": 3.5071459596699994, "without": 0.258874517941, "one": 0.0062553516455, "graph": 3.6299309802199997, "ultim": 0.9498209395739999, "algorithm": 3.33044239518, "becaus": 0.139343158825, "invest": 1.42586787018, "get": 0.579769005782, "random": 1.9727214065099998, "abov": 0.643865229816, "process": 0.527829199025, "both": 0.050842533389300004, "independ": 0.463424162503, "analyt": 2.8481901438599997, "median": 2.66134982655, "digest": 2.9475301717400004, "structur": 0.7217716751350001, "put": 0.505652999854, "this": 0.0037864490525, "transfer": 1.00264953547, "sampl": 1.9786264883900002, "time": 0.0112115188626, "selfgener": 7.2746685411000005, "back": 0.23166743089699998, "truli": 2.24126413875, "smaller": 0.9530830530519999, "differ": 0.212321121312, "embed": 2.82349753127, "been": 0.023645982368400004, "statist": 1.4451883070700002, "most": 0.020747896295599998, "between": 0.033953681165299995, "memori": 0.9454338986599999, "obtain": 0.988162703503, "all": 0.011402632097799998, "nir": 6.14620328929, "varieti": 0.8316941898119999, "dnns": 7.2746685411000005, "almost": 0.42907884333400004, "feasibl": 2.88021938643, "that": 0.00397614837964, "weight": 1.58492352612, "rate": 0.761033872166, "more": 0.017024931599999998, "and": 6.29901420636e-05, "leap": 2.9767648968400002, "these": 0.0715336194008, "benefit": 1.12116245116, "artifici": 2.11822899018, "could": 0.18595627229000003, "befor": 0.0956377718795, "state": 0.0466100027668, "serv": 0.383135035608, "can": 0.162341096394, "comput": 1.36806891594, "make": 0.07349765782289999, "queri": 4.03065674296, "way": 0.19809150993500002, "onli": 0.025324268329099998, "each": 0.173741689304, "size": 0.9138372060609999, "concurr": 2.7352497326800003, "geni": 4.90187918944, "hunch\u2122": 7.2746685411000005, "data": 1.2168205848, "oper": 0.441342964347, "connect": 0.633605058682, "method": 0.944461608841, "sinc": 0.0803681994577, "hunch": 5.91136369821, "come": 0.28390990653000003, "origin": 0.128612437587, "aspect": 1.12795002691, "send": 1.32189757338, "understand": 1.0880858756799998, "first": 0.0075872898121599995, "everi": 0.391485427421, "input": 2.50167533539, "tenabl": 5.934894195619999, "use": 0.0292080197316, "easili": 1.3066587367, "learn": 0.842752064745, "when": 0.0205549888584, "user": 2.04258810688}, "freq": {"real": 1, "anywher": 1, "onc": 4, "relat": 1, "fit": 1, "vector": 1, "label": 2, "wide": 2, "new": 8, "addit": 2, "sisens": 4, "number": 1, "boundari": 1, "dataset": 11, "intent": 1, "driver": 1, "done": 1, "surrend": 1, "approach": 2, "path": 1, "permiss": 1, "yield": 1, "tackl": 1, "their": 2, "scale": 3, "hdisktbsiz": 1, "measur": 1, "creat": 1, "model": 5, "test": 1, "repost": 1, "million": 1, "matric": 1, "scalabl": 1, "hundr": 1, "distribut": 5, "converg": 1, "given": 1, "deep": 2, "will": 3, "publish": 1, "further": 1, "tabl": 1, "below": 1, "near": 1, "but": 1, "need": 4, "our": 4, "cost": 3, "final": 2, "tensor": 2, "organ": 1, "immens": 1, "has": 1, "generat": 12, "arriv": 1, "stop": 1, "also": 1, "action": 1, "resourc": 3, "onlin": 1, "out": 3, "prompt": 1, "format": 1, "numgb": 1, "numer": 6, "huge": 4, "tradit": 1, "optim": 1, "footprint": 1, "forward": 1, "global": 1, "not": 4, "sponsor": 1, "day": 1, "specif": 1, "fli": 1, "max": 1, "metric": 1, "handl": 3, "then": 2, "complic": 1, "they": 3, "design": 1, "last": 1, "techniqu": 2, "world": 3, "claus": 2, "construct": 3, "ensur": 1, "respons": 2, "normal": 1, "provid": 1, "valu": 5, "offer": 1, "develop": 1, "storetyp": 1, "accuraci": 3, "thousand": 2, "those": 1, "onthefli": 1, "network": 2, "three": 1, "fast": 2, "nomin": 1, "unparallel": 1, "result": 4, "mac": 1, "supervis": 2, "hunchgener": 1, "produc": 1, "devic": 2, "set": 17, "divid": 1, "from": 7, "limit": 1, "work": 1, "num": 6, "technolog": 4, "cover": 1, "formal": 1, "userori": 1, "incred": 1, "balanc": 1, "for": 11, "predict": 1, "proprietari": 1, "with": 14, "forc": 1, "are": 4, "true": 1, "effort": 1, "stay": 1, "root": 1, "extract": 1, "latenc": 1, "later": 1, "column": 3, "train": 15, "remov": 1, "group": 1, "doe": 3, "even": 2, "give": 1, "computertyp": 1, "usage\u2014al": 1, "place": 1, "graphic": 1, "shuffl": 1, "goal": 2, "nearrealtim": 1, "error": 1, "continu": 1, "matter": 1, "condens": 1, "into": 4, "rapid": 1, "requir": 3, "descript": 1, "largescal": 1, "relationship": 1, "against": 2, "flexibl": 1, "help": 1, "main": 1, "larg": 4, "abil": 1, "conclus": 1, "approxim": 9, "base": 1, "occur": 1, "deal": 3, "hour": 1, "who": 1, "squar": 1, "hold": 1, "bigger": 2, "post": 1, "speed": 1, "numrow": 1, "infer": 1, "long": 1, "human": 2, "layer": 1, "encod": 7, "evalu": 2, "aggreg": 1, "deploy": 1, "bottl": 1, "neural": 2, "distinct": 1, "increment": 2, "have": 1, "just": 1, "entir": 1, "adapt": 1, "dure": 1, "statement": 4, "where": 2, "live": 1, "save": 1, "complex": 1, "nor": 1, "light": 1, "noth": 1, "run": 1, "them": 1, "insight": 4, "request": 1, "consumpt": 1, "execut": 3, "order": 5, "support": 1, "system": 5, "mani": 1, "pull": 1, "seat": 1, "the": 75, "build": 2, "calcul": 1, "select": 1, "permut": 1, "there": 1, "array": 1, "inform": 1, "endus": 1, "regev": 1, "endpoint": 1, "phase": 4, "repres": 1, "big": 8, "take": 1, "previous": 2, "now": 2, "robust": 1, "interact": 4, "iot": 1, "semant": 1, "unit": 1, "power": 3, "edg": 2, "fix": 1, "cloud": 1, "typic": 1, "around": 1, "mean": 3, "acceler": 1, "exampl": 1, "batch": 1, "necessit": 1, "may": 1, "anyplac": 1, "facilit": 1, "challeng": 2, "util": 4, "threshold": 1, "usabl": 1, "howev": 1, "lie": 1, "uniform": 1, "quartil": 1, "which": 8, "databas": 1, "like": 1, "term": 2, "ident": 1, "raw": 3, "min": 1, "without": 1, "one": 1, "graph": 1, "ultim": 2, "algorithm": 1, "becaus": 2, "invest": 1, "get": 3, "random": 1, "abov": 1, "process": 9, "both": 1, "independ": 1, "analyt": 3, "median": 1, "digest": 1, "structur": 1, "put": 3, "this": 13, "transfer": 2, "sampl": 2, "time": 1, "selfgener": 1, "back": 1, "truli": 1, "smaller": 1, "differ": 2, "embed": 3, "been": 1, "statist": 1, "most": 1, "between": 3, "memori": 1, "obtain": 3, "all": 1, "nir": 1, "varieti": 1, "dnns": 2, "almost": 1, "feasibl": 1, "that": 9, "weight": 1, "rate": 1, "more": 5, "and": 24, "leap": 1, "these": 5, "benefit": 2, "artifici": 1, "could": 1, "befor": 1, "state": 1, "serv": 1, "can": 7, "comput": 1, "make": 2, "queri": 34, "way": 3, "onli": 2, "each": 2, "size": 1, "concurr": 2, "geni": 1, "hunch\u2122": 2, "data": 25, "oper": 1, "connect": 1, "method": 3, "sinc": 3, "hunch": 10, "come": 1, "origin": 1, "aspect": 1, "send": 1, "understand": 1, "first": 1, "everi": 1, "input": 1, "tenabl": 1, "use": 10, "easili": 1, "learn": 8, "when": 4, "user": 7}, "idf": {"real": 2.28103448276, "anywher": 10.1638924456, "onc": 1.4974533106999999, "relat": 1.23750876919, "fit": 3.37070063694, "vector": 25.898858075, "label": 4.47715736041, "wide": 1.5598349381, "new": 1.0178880554, "addit": 1.24634950542, "sisens": 1443.27272727, "number": 1.10142916609, "boundari": 4.85801713586, "dataset": 193.609756098, "intent": 3.19372359686, "driver": 6.79914346895, "done": 2.3302509907499998, "surrend": 6.5038918476, "approach": 2.07556543339, "path": 4.6421052631599995, "permiss": 6.280063291139999, "yield": 6.46943765281, "tackl": 19.8698372966, "their": 1.01547908405, "scale": 3.7469907953699995, "hdisktbsiz": 1443.27272727, "measur": 2.41093394077, "creat": 1.2492917847, "model": 2.0905978404, "test": 2.65707112971, "repost": 933.882352941, "million": 1.7279059643, "matric": 96.80487804879999, "scalabl": 186.776470588, "hundr": 2.4698195395099996, "distribut": 2.7396031061299997, "converg": 15.2947976879, "given": 1.35426085473, "deep": 3.6279707495399998, "will": 1.22481098596, "publish": 1.36885669943, "further": 1.3618116315, "tabl": 3.82093862816, "below": 2.25607503197, "near": 1.28769567686, "but": 1.01632417899, "need": 1.4372623574099999, "our": 2.35758835759, "cost": 2.31935719503, "final": 1.34008609775, "tensor": 152.653846154, "organ": 1.6387283237, "immens": 12.7723250201, "has": 1.0436497502, "generat": 2.05275407292, "arriv": 2.03173790632, "stop": 2.1783754116400003, "also": 1.01476510067, "action": 1.81855670103, "resourc": 2.9487369985100003, "onlin": 2.6051854282900004, "out": 1.06016694491, "prompt": 4.44456886898, "format": 2.53125, "numgb": 396.9, "numer": 1.83325635104, "huge": 4.38927287808, "tradit": 1.60802187785, "optim": 11.5377906977, "footprint": 41.4516971279, "forward": 3.66566612792, "global": 3.30612244898, "not": 1.01567398119, "sponsor": 5.66393150196, "day": 1.18371607516, "specif": 1.8719490626099997, "fli": 4.35555555556, "max": 7.474576271189999, "metric": 22.235294117600002, "handl": 3.9229058561900003, "then": 1.08657860516, "complic": 5.6478121664900005, "they": 1.03017325287, "design": 1.45825296225, "last": 1.2117234010100002, "techniqu": 3.7293868921800004, "world": 1.11340206186, "claus": 12.2689335394, "construct": 1.9320920043799998, "ensur": 3.4127257093700005, "respons": 1.5066907089300001, "normal": 2.61075481006, "provid": 1.21552714187, "valu": 2.2777618364400003, "offer": 1.53896859248, "develop": 1.1955719557200002, "storetyp": 1443.27272727, "accuraci": 12.7620578778, "thousand": 2.4767550702000003, "those": 1.19548192771, "onthefli": 1443.27272727, "network": 2.59369384088, "three": 1.06621893889, "fast": 4.8729281768, "nomin": 3.79990426041, "unparallel": 82.6875, "result": 1.14611608432, "mac": 20.511627907, "supervis": 7.74061433447, "hunchgener": 1443.27272727, "produc": 1.36932896326, "devic": 5.00820189274, "set": 1.18707940781, "divid": 2.3169877408099997, "from": 1.00056721497, "limit": 1.5186531471200002, "work": 1.11520089913, "num": 1.00031504001, "technolog": 2.6034765496900003, "cover": 1.69380134429, "formal": 2.44622496148, "userori": 1443.27272727, "incred": 18.227324913900002, "balanc": 4.45329593268, "for": 1.00031504001, "predict": 5.18484650555, "proprietari": 41.2363636364, "with": 1.0011982089899998, "forc": 1.32399299475, "are": 1.02990593578, "true": 2.55569864778, "effort": 1.89247824532, "stay": 2.6986231514499996, "root": 3.57809330629, "extract": 7.703056768560001, "latenc": 174.46153846200002, "later": 1.08650424309, "column": 7.078020508250001, "train": 1.9365698950999999, "remov": 2.0058117498400003, "group": 1.20996875238, "doe": 1.70581282905, "even": 1.16461267606, "give": 1.3653250774, "computertyp": 1443.27272727, "usage\u2014al": 1443.27272727, "place": 1.1004366812200002, "graphic": 9.035856573710001, "shuffl": 62.5039370079, "goal": 3.28152128979, "nearrealtim": 1443.27272727, "error": 6.04109589041, "continu": 1.13928955867, "matter": 2.44773358002, "condens": 24.728971962600003, "into": 1.01502461479, "rapid": 2.62586834271, "requir": 1.52844902282, "descript": 4.00504540868, "largescal": 1443.27272727, "relationship": 2.39132399458, "against": 1.2902072328299998, "flexibl": 9.68639414277, "help": 1.39962972759, "main": 1.25303867403, "larg": 1.18574949585, "abil": 2.70875277256, "conclus": 4.84615384615, "approxim": 2.2132998745299997, "base": 1.14628158845, "occur": 1.7453825857499998, "deal": 2.18346857379, "hour": 2.25960717336, "who": 1.06279287723, "squar": 3.26666666667, "hold": 1.6551292744, "bigger": 13.23, "post": 2.23826307627, "speed": 3.8703071672400005, "numrow": 1443.27272727, "infer": 21.1398135819, "long": 1.2657259028899999, "human": 1.8965476048299998, "layer": 8.14153846154, "encod": 29.0237659963, "evalu": 6.9509632224199995, "aggreg": 17.542541436500002, "deploy": 7.41869158879, "bottl": 15.443579766500001, "neural": 59.4606741573, "distinct": 2.2836593786000003, "increment": 31.8795180723, "have": 1.0148948411399998, "just": 1.33580143037, "entir": 1.59365589239, "adapt": 3.32272917539, "dure": 1.0503473370799998, "statement": 3.42228928648, "where": 1.06715063521, "live": 1.30591428806, "save": 2.8178913737999998, "complex": 2.34021226415, "nor": 3.3479544496, "light": 1.9102394417, "noth": 3.46410648047, "run": 1.55692850838, "them": 1.09876115994, "insight": 11.8037174721, "request": 3.09051975861, "consumpt": 9.3608490566, "execut": 2.2363713199, "order": 1.24625166811, "support": 1.2685577307200002, "system": 1.38739840951, "mani": 1.04426757877, "pull": 5.18654034629, "seat": 3.2579519802999997, "the": 1.0, "build": 1.6341739578, "calcul": 6.12972972973, "select": 2.02345144022, "permut": 102.425806452, "there": 1.04091266719, "array": 10.1444089457, "inform": 1.5753125620200001, "endus": 1443.27272727, "regev": 1443.27272727, "endpoint": 151.2, "phase": 4.3012733676499995, "repres": 1.46972782818, "big": 2.7400759406299997, "take": 1.13961668222, "previous": 1.42846859816, "now": 1.160780873, "robust": 19.9447236181, "interact": 4.4185917061, "iot": 1443.27272727, "semant": 39.1034482759, "unit": 1.15394679459, "power": 1.3396337861799998, "edg": 4.45704660303, "fix": 4.4346368715099995, "cloud": 10.6193979933, "typic": 2.2541530597799997, "around": 1.21394708671, "mean": 1.44906900329, "acceler": 8.15408320493, "exampl": 1.50483412322, "batch": 35.6764044944, "necessit": 23.450516986700002, "may": 1.05201775893, "anyplac": 1443.27272727, "facilit": 6.453658536590001, "challeng": 2.55816951337, "util": 4.65981802172, "threshold": 23.008695652199997, "usabl": 31.5, "howev": 1.0945191313299998, "lie": 3.2157180474000002, "uniform": 5.7231434751300005, "quartil": 1443.27272727, "which": 1.005191845, "databas": 8.24727272727, "like": 1.14918566775, "term": 1.39520168732, "ident": 2.80792359392, "raw": 10.6478873239, "min": 33.3529411765, "without": 1.29547123623, "one": 1.00627495722, "graph": 37.7102137767, "ultim": 2.58524670249, "algorithm": 27.9507042254, "becaus": 1.1495184997499999, "invest": 4.16146788991, "get": 1.78562591385, "random": 7.1902173913, "abov": 1.90382539873, "process": 1.69524826482, "both": 1.05215720061, "independ": 1.58950740889, "analyt": 17.256521739100002, "median": 14.3155996393, "digest": 19.0588235294, "structur": 2.0580762250499998, "put": 1.65806788512, "this": 1.00379362671, "transfer": 2.72549356223, "sampl": 7.23280182232, "time": 1.01127460348, "selfgener": 1443.27272727, "back": 1.26070038911, "truli": 9.405213270139999, "smaller": 2.59369384088, "differ": 1.23654490225, "embed": 16.835630965, "been": 1.0239277652399998, "statist": 4.24265098878, "most": 1.02096463023, "between": 1.03453668708, "memori": 2.57392996109, "obtain": 2.68629441624, "all": 1.01146788991, "nir": 466.941176471, "varieti": 2.2972073506, "dnns": 1443.27272727, "almost": 1.53584212054, "feasibl": 17.8181818182, "that": 1.00398406375, "weight": 4.878918254459999, "rate": 2.14048806795, "more": 1.0171706817, "and": 1.00006299213, "leap": 19.6242274413, "these": 1.07415426252, "benefit": 3.06841901817, "artifici": 8.31639601886, "could": 1.2043695949, "befor": 1.10036041031, "state": 1.0477133240899998, "serv": 1.4668760972, "can": 1.17626139142, "comput": 3.9277585353800006, "make": 1.0762660158600001, "queri": 56.2978723404, "way": 1.2190739461, "onli": 1.0256476516600002, "each": 1.18974820144, "size": 2.49387370405, "concurr": 15.413592233, "geni": 134.542372881, "hunch\u2122": 1443.27272727, "data": 3.37643555934, "oper": 1.55479384977, "connect": 1.8843916913900003, "method": 2.5714285714300003, "sinc": 1.08368600683, "hunch": 369.209302326, "come": 1.32831325301, "origin": 1.13724928367, "aspect": 3.0893169877399997, "send": 3.75053153792, "understand": 2.96858638743, "first": 1.00761614623, "everi": 1.47917637194, "input": 12.2029208301, "tenabl": 378.0, "use": 1.0296387573799999, "easili": 3.6938110749199997, "learn": 2.32275054865, "when": 1.02076769755, "user": 7.71053909665}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Training a Champion: Building Deep Neural Nets for Big Data Analytics</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Training a Champion: Building Deep Neural Nets for Big Data Analytics Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/04/building-recommender-system.html\" rel=\"prev\" title=\"Building a Recommender System\"/>\n<link href=\"https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html\" rel=\"next\" title=\"KDnuggets Offer: Save 20% on Strata in London\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=92585\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-92585 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 4-Apr, 2019  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/04/opinions.html\">Opinions</a> \u00bb Training a Champion: Building Deep Neural Nets for Big Data Analytics    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Training a Champion: Building Deep Neural Nets for Big Data Analytics</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/04/building-recommender-system.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/big-data-analytics\" rel=\"tag\">Big Data Analytics</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/sisense\" rel=\"tag\">Sisense</a>, <a href=\"https://www.kdnuggets.com/tag/sql\" rel=\"tag\">SQL</a></div>\n<br/>\n<p class=\"excerpt\">\n     Introducing Sisense Hunch, the new way of handling Big Data sets that uses AQP technology to construct Deep Neural Networks (DNNs) which are trained to learn the relationships between queries and their results in these huge datasets. \n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><span style=\"color: #808080; float: right;\">Sponsored Post.</span><br>\n<b>By Nir Regev, Sisense</b>.</br></p>\n<p>The world of data is now the world of Big Data. The genie is out of the bottle and there\u2019s no going back. We produce more and more data every day and the datasets being generated are getting more and more complex. Traditionally, the way to handle this has been to scale up computing resources to handle these bigger datasets. That\u2019s not feasible for the long term on a global scale, nor is it tenable in the near term for smaller organizations who may have limited resources to deal with their analytics challenges.</p>\n<p>Further complicating matters, in order to facilitate true interactivity with large datasets, user queries need near-real-time response rates. This is a challenge even for the most powerful large-scale systems. Approximate Query Processing (AQP) removes the need to query the entire Big Data set and serves up usable results rapidly.</p>\n<h3>Sisense Hunch\u2122</h3>\n<p><a href=\"https://www.sisense.com/blog/sisense-hunch-leadership-through-radical-innovation/\">Sisense Hunch\u2122</a>\u00a0is a new way of handling Big Data sets that uses AQP technology to construct Deep Neural Networks (DNNs) which are trained to learn the relationships between queries and their results in these huge datasets. This provides users with a fast, scalable inference layer above the data that they can interactively query to get actionable insights. Large batches of data can be approximated by the DNN which utilize concurrent processing in a Graphical Processing Unit (GPU). In addition, since Hunch\u2019s DNNs are typically on the Mb scale, they can be easily deployed and distributed to thousands of users or IOT devices, putting incredibly fast Big Data analytics almost anywhere. Embedding Big Data analytics at the edge or anyplace that users can benefit from them is a huge leap forward when dealing with these immense datasets. Sisense Hunch balances speed, resource consumption, and accuracy and gives users unparalleled flexibility in where they put these insights.</p>\n<p><a class=\"fancybox image\" href=\"https://www.sisense.com/sisense-labs/hunch/\"><img alt=\"Sisense Hunch\" class=\"img-polaroid aligncenter\" src=\"https://cdn.sisense.com/wp-content/uploads/Blog-banner_-770-x-250-770x250.png\" width=\"100%\"/></a></p>\n<p>The power of the Hunch system lies in the DNN training process, which ultimately yields the query approximation model. The process is divided into three phases: generating artificial\u00a0<a href=\"https://www.sisense.com/blog/8-ways-fine-tune-sql-queries-production-databases/\">SQL queries</a>, obtaining the labels for the training set (i.e., executing the queries on the database), and finally encoding the queries into numeric tensor using the on-the-fly generated query encoder. Once this training set is created, Hunch utilizes a supervised approach to learn to approximate the training set queries.</p>\n<h3>The Training Process</h3>\n<p><strong>Generating SQL Queries</strong></p>\n<p>To approximate the wide array of queries that could come in for a given dataset, Hunch self-generates a robust set of queries.</p>\n<p>This is the formal query structure description:</p>\n<p><img src=\"https://cdn.sisense.com/wp-content/uploads/image12-770x491.png\" width=\"100%\"/></p>\n<p>An example of a Hunch-generated query is:</p>\n<p>\u201cSelect AVG(sales) from table where store_type in (\u2018online\u2019) and computer_type in (\u2018Mac\u2019) and hour between 20 and 23 and hdisk_tb_size between 1 AND 5\u201d</p>\n<p>The ultimate goal of this phase is to generate a large representative set of aggregated SQL queries to cover many (user-oriented) aspects of the raw data. In order to do this, the system first extracts statistical values (data distribution) from the raw data.</p>\n<p>For each column with continuous numeric values, the algorithm calculates quartile distributions (min, 25%, median, 75%, max). Then, it uses this information to sample values from a uniform distribution which fits to the column numeric boundaries. The system also executes \u201cGroup By\u201d queries, which accelerates training set generation, mainly because all permutations of nominal columns\u2019 values can be obtained in one path to the data. Additionally, in the query format our method supports, \u201cWHERE\u201d clause statements are connected with an \u201cAND\u201d operator, so the order of the statement does not make a difference. To ensure the DNN does not learn specific statements\u2019 order, our method randomly shuffles the statements before constructing the query. This is done intentionally to force the DNN to learn to approximate semantically identical queries that occur with different \u201cWHERE\u201d clause ordering.</p>\n<p><strong>Labeling the Training Set</strong></p>\n<p>Building a supervised data set for training the DNN requires real query results. For this, our method runs the set of generated queries against the dataset. Since the DNN requires a relatively large number of training samples, the system generates and executes hundreds of thousands of queries using concurrent technology to optimize costs. However, this process takes place only\u00a0<strong>once</strong>\u00a0for each dataset. When new data arrives, necessitating the generation of new queries, Hunch uses incremental (transfer) learning (more on that later). This approach saves time, effort, and costs both in the training set generation phase and in the DNN training phase.</p>\n<p><strong>Encoding Queries</strong></p>\n<p>Since the DNN can digest only numeric input, we developed an encoding model to encode the queries into numeric matrices. This goal is obtained by an encoder model which is constructed on the fly (during SQL queries generation), making use of vector embedding technique.</p>\n<p>The encoder is designed to condense data sets with millions of distinct values into light memory footprint numeric tensors by utilizing proprietary embedding techniques.</p>\n<p><strong>Tackling New Data with Incremental Learning</strong></p>\n<p>When new data is added to the dataset, Hunch needs to adapt the DNN to approximate queries based on new data. Building on the previous learning processes, Hunch utilizes transfer learning, meaning that the DNN will be trained from its last weights state, against a new training set which is generated using the previous DNN and the new data.</p>\n<p><strong>Evaluation and Distribution</strong></p>\n<p>Once the training is finalized, we use a set of accuracy metrics to evaluate the model\u2019s approximation. We use Normalized Root Mean Squared Error (NRMSE) to measure the model accuracy on a hold out testing set of queries. Once the NRMSE is converged below a threshold, Hunch publishes a cloud API end-point around the DNN. Then, users or IOT devices can send query requests. The end-user benefits with from prompt response fixed query latency (which is independent of the raw data size!) and interactivity when dealing with Big Data in a wide variety of settings.</p>\n<h3>Conclusion</h3>\n<p>Just because we now live in a world of Big Data does not mean we need to surrender our ability to interact with that data and truly understand it.\u00a0<a href=\"https://internetofthingsagenda.techtarget.com/blog/IoT-Agenda/Data-cognition-engines-can-save-millions-in-big-data-costs\">Deep neural networks</a>\u00a0using Approximate Query Processing offer users a way to work with these huge datasets, pull out powerful insights, and put those insights at the edge for IoT and human usage\u2014all without requiring huge technological investments or costs. Nothing will stop the Big Data from getting even bigger, but technology like Hunch will help humans stay in the driver\u2019s seat.</p>\n<p><strong>Graph A: Query Results and Predictions for a 1,000,000,000-Row, 250-Gb Dataset</strong></p>\n<p><img src=\"https://cdn.sisense.com/wp-content/uploads/validation_graph-770x433.png\" width=\"100%\"/></p>\n<p><a href=\"https://www.sisense.com/blog/training-a-champion-building-deep-neural-nets-for-big-data-analytics/\">Original</a>. Reposted with permission.</p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/04/building-recommender-system.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/04/opinions.html\">Opinions</a> \u00bb Training a Champion: Building Deep Neural Nets for Big Data Analytics    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556326911\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.691 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 21:01:51 -->\n<!-- Compression = gzip -->", "content_tokenized": ["sponsor", "post", "nir", "regev", "sisens", "the", "world", "data", "now", "the", "world", "big", "data", "the", "geni", "out", "the", "bottl", "and", "there", "back", "produc", "more", "and", "more", "data", "everi", "day", "and", "the", "dataset", "generat", "are", "get", "more", "and", "more", "complex", "tradit", "the", "way", "handl", "this", "has", "been", "scale", "comput", "resourc", "handl", "these", "bigger", "dataset", "that", "not", "feasibl", "for", "the", "long", "term", "global", "scale", "nor", "tenabl", "the", "near", "term", "for", "smaller", "organ", "who", "may", "have", "limit", "resourc", "deal", "with", "their", "analyt", "challeng", "further", "complic", "matter", "order", "facilit", "true", "interact", "with", "larg", "dataset", "user", "queri", "need", "nearrealtim", "respons", "rate", "this", "challeng", "even", "for", "the", "most", "power", "largescal", "system", "approxim", "queri", "process", "remov", "the", "need", "queri", "the", "entir", "big", "data", "set", "and", "serv", "usabl", "result", "rapid", "sisens", "hunch\u2122", "sisens", "hunch\u2122", "new", "way", "handl", "big", "data", "set", "that", "use", "technolog", "construct", "deep", "neural", "network", "dnns", "which", "are", "train", "learn", "the", "relationship", "between", "queri", "and", "their", "result", "these", "huge", "dataset", "this", "provid", "user", "with", "fast", "scalabl", "infer", "layer", "abov", "the", "data", "that", "they", "can", "interact", "queri", "get", "action", "insight", "larg", "batch", "data", "can", "approxim", "the", "which", "util", "concurr", "process", "graphic", "process", "unit", "addit", "sinc", "hunch", "dnns", "are", "typic", "the", "scale", "they", "can", "easili", "deploy", "and", "distribut", "thousand", "user", "devic", "put", "incred", "fast", "big", "data", "analyt", "almost", "anywher", "embed", "big", "data", "analyt", "the", "edg", "anyplac", "that", "user", "can", "benefit", "from", "them", "huge", "leap", "forward", "when", "deal", "with", "these", "immens", "dataset", "sisens", "hunch", "balanc", "speed", "resourc", "consumpt", "and", "accuraci", "and", "give", "user", "unparallel", "flexibl", "where", "they", "put", "these", "insight", "the", "power", "the", "hunch", "system", "lie", "the", "train", "process", "which", "ultim", "yield", "the", "queri", "approxim", "model", "the", "process", "divid", "into", "three", "phase", "generat", "artifici", "queri", "obtain", "the", "label", "for", "the", "train", "set", "execut", "the", "queri", "the", "databas", "and", "final", "encod", "the", "queri", "into", "numer", "tensor", "use", "the", "onthefli", "generat", "queri", "encod", "onc", "this", "train", "set", "creat", "hunch", "util", "supervis", "approach", "learn", "approxim", "the", "train", "set", "queri", "the", "train", "process", "generat", "queri", "approxim", "the", "wide", "array", "queri", "that", "could", "come", "for", "given", "dataset", "hunch", "selfgener", "robust", "set", "queri", "this", "the", "formal", "queri", "structur", "descript", "exampl", "hunchgener", "queri", "select", "from", "tabl", "where", "storetyp", "onlin", "and", "computertyp", "mac", "and", "hour", "between", "num", "and", "num", "and", "hdisktbsiz", "between", "num", "num", "the", "ultim", "goal", "this", "phase", "generat", "larg", "repres", "set", "aggreg", "queri", "cover", "mani", "userori", "aspect", "the", "raw", "data", "order", "this", "the", "system", "first", "extract", "statist", "valu", "data", "distribut", "from", "the", "raw", "data", "for", "each", "column", "with", "continu", "numer", "valu", "the", "algorithm", "calcul", "quartil", "distribut", "min", "num", "median", "num", "max", "then", "use", "this", "inform", "sampl", "valu", "from", "uniform", "distribut", "which", "fit", "the", "column", "numer", "boundari", "the", "system", "also", "execut", "group", "queri", "which", "acceler", "train", "set", "generat", "main", "becaus", "all", "permut", "nomin", "column", "valu", "can", "obtain", "one", "path", "the", "data", "addit", "the", "queri", "format", "our", "method", "support", "claus", "statement", "are", "connect", "with", "oper", "the", "order", "the", "statement", "doe", "not", "make", "differ", "ensur", "the", "doe", "not", "learn", "specif", "statement", "order", "our", "method", "random", "shuffl", "the", "statement", "befor", "construct", "the", "queri", "this", "done", "intent", "forc", "the", "learn", "approxim", "semant", "ident", "queri", "that", "occur", "with", "differ", "claus", "order", "label", "the", "train", "set", "build", "supervis", "data", "set", "for", "train", "the", "requir", "real", "queri", "result", "for", "this", "our", "method", "run", "the", "set", "generat", "queri", "against", "the", "dataset", "sinc", "the", "requir", "relat", "larg", "number", "train", "sampl", "the", "system", "generat", "and", "execut", "hundr", "thousand", "queri", "use", "concurr", "technolog", "optim", "cost", "howev", "this", "process", "take", "place", "onli", "onc", "for", "each", "dataset", "when", "new", "data", "arriv", "necessit", "the", "generat", "new", "queri", "hunch", "use", "increment", "transfer", "learn", "more", "that", "later", "this", "approach", "save", "time", "effort", "and", "cost", "both", "the", "train", "set", "generat", "phase", "and", "the", "train", "phase", "encod", "queri", "sinc", "the", "can", "digest", "onli", "numer", "input", "develop", "encod", "model", "encod", "the", "queri", "into", "numer", "matric", "this", "goal", "obtain", "encod", "model", "which", "construct", "the", "fli", "dure", "queri", "generat", "make", "use", "vector", "embed", "techniqu", "the", "encod", "design", "condens", "data", "set", "with", "million", "distinct", "valu", "into", "light", "memori", "footprint", "numer", "tensor", "util", "proprietari", "embed", "techniqu", "tackl", "new", "data", "with", "increment", "learn", "when", "new", "data", "the", "dataset", "hunch", "need", "adapt", "the", "approxim", "queri", "base", "new", "data", "build", "the", "previous", "learn", "process", "hunch", "util", "transfer", "learn", "mean", "that", "the", "will", "train", "from", "last", "weight", "state", "against", "new", "train", "set", "which", "generat", "use", "the", "previous", "and", "the", "new", "data", "evalu", "and", "distribut", "onc", "the", "train", "final", "use", "set", "accuraci", "metric", "evalu", "the", "model", "approxim", "use", "normal", "root", "mean", "squar", "error", "measur", "the", "model", "accuraci", "hold", "out", "test", "set", "queri", "onc", "the", "converg", "below", "threshold", "hunch", "publish", "cloud", "endpoint", "around", "the", "then", "user", "devic", "can", "send", "queri", "request", "the", "endus", "benefit", "with", "from", "prompt", "respons", "fix", "queri", "latenc", "which", "independ", "the", "raw", "data", "size", "and", "interact", "when", "deal", "with", "big", "data", "wide", "varieti", "set", "conclus", "just", "becaus", "now", "live", "world", "big", "data", "doe", "not", "mean", "need", "surrend", "our", "abil", "interact", "with", "that", "data", "and", "truli", "understand", "deep", "neural", "network", "use", "approxim", "queri", "process", "offer", "user", "way", "work", "with", "these", "huge", "dataset", "pull", "out", "power", "insight", "and", "put", "those", "insight", "the", "edg", "for", "iot", "and", "human", "usage\u2014al", "without", "requir", "huge", "technolog", "invest", "cost", "noth", "will", "stop", "the", "big", "data", "from", "get", "even", "bigger", "but", "technolog", "like", "hunch", "will", "help", "human", "stay", "the", "driver", "seat", "graph", "queri", "result", "and", "predict", "for", "numrow", "numgb", "dataset", "origin", "repost", "with", "permiss"], "timestamp_scraper": 1556362839.099543, "title": "Training a Champion: Building Deep Neural Nets for Big Data Analytics", "read_time": 322.8, "content_html": "<div class=\"post\" id=\"post-\">\n<p><span style=\"color: #808080; float: right;\">Sponsored Post.</span><br>\n<b>By Nir Regev, Sisense</b>.</br></p>\n<p>The world of data is now the world of Big Data. The genie is out of the bottle and there\u2019s no going back. We produce more and more data every day and the datasets being generated are getting more and more complex. Traditionally, the way to handle this has been to scale up computing resources to handle these bigger datasets. That\u2019s not feasible for the long term on a global scale, nor is it tenable in the near term for smaller organizations who may have limited resources to deal with their analytics challenges.</p>\n<p>Further complicating matters, in order to facilitate true interactivity with large datasets, user queries need near-real-time response rates. This is a challenge even for the most powerful large-scale systems. Approximate Query Processing (AQP) removes the need to query the entire Big Data set and serves up usable results rapidly.</p>\n<h3>Sisense Hunch\u2122</h3>\n<p><a href=\"https://www.sisense.com/blog/sisense-hunch-leadership-through-radical-innovation/\">Sisense Hunch\u2122</a>\u00a0is a new way of handling Big Data sets that uses AQP technology to construct Deep Neural Networks (DNNs) which are trained to learn the relationships between queries and their results in these huge datasets. This provides users with a fast, scalable inference layer above the data that they can interactively query to get actionable insights. Large batches of data can be approximated by the DNN which utilize concurrent processing in a Graphical Processing Unit (GPU). In addition, since Hunch\u2019s DNNs are typically on the Mb scale, they can be easily deployed and distributed to thousands of users or IOT devices, putting incredibly fast Big Data analytics almost anywhere. Embedding Big Data analytics at the edge or anyplace that users can benefit from them is a huge leap forward when dealing with these immense datasets. Sisense Hunch balances speed, resource consumption, and accuracy and gives users unparalleled flexibility in where they put these insights.</p>\n<p><a class=\"fancybox image\" href=\"https://www.sisense.com/sisense-labs/hunch/\"><img alt=\"Sisense Hunch\" class=\"img-polaroid aligncenter\" src=\"https://cdn.sisense.com/wp-content/uploads/Blog-banner_-770-x-250-770x250.png\" width=\"100%\"/></a></p>\n<p>The power of the Hunch system lies in the DNN training process, which ultimately yields the query approximation model. The process is divided into three phases: generating artificial\u00a0<a href=\"https://www.sisense.com/blog/8-ways-fine-tune-sql-queries-production-databases/\">SQL queries</a>, obtaining the labels for the training set (i.e., executing the queries on the database), and finally encoding the queries into numeric tensor using the on-the-fly generated query encoder. Once this training set is created, Hunch utilizes a supervised approach to learn to approximate the training set queries.</p>\n<h3>The Training Process</h3>\n<p><strong>Generating SQL Queries</strong></p>\n<p>To approximate the wide array of queries that could come in for a given dataset, Hunch self-generates a robust set of queries.</p>\n<p>This is the formal query structure description:</p>\n<p><img src=\"https://cdn.sisense.com/wp-content/uploads/image12-770x491.png\" width=\"100%\"/></p>\n<p>An example of a Hunch-generated query is:</p>\n<p>\u201cSelect AVG(sales) from table where store_type in (\u2018online\u2019) and computer_type in (\u2018Mac\u2019) and hour between 20 and 23 and hdisk_tb_size between 1 AND 5\u201d</p>\n<p>The ultimate goal of this phase is to generate a large representative set of aggregated SQL queries to cover many (user-oriented) aspects of the raw data. In order to do this, the system first extracts statistical values (data distribution) from the raw data.</p>\n<p>For each column with continuous numeric values, the algorithm calculates quartile distributions (min, 25%, median, 75%, max). Then, it uses this information to sample values from a uniform distribution which fits to the column numeric boundaries. The system also executes \u201cGroup By\u201d queries, which accelerates training set generation, mainly because all permutations of nominal columns\u2019 values can be obtained in one path to the data. Additionally, in the query format our method supports, \u201cWHERE\u201d clause statements are connected with an \u201cAND\u201d operator, so the order of the statement does not make a difference. To ensure the DNN does not learn specific statements\u2019 order, our method randomly shuffles the statements before constructing the query. This is done intentionally to force the DNN to learn to approximate semantically identical queries that occur with different \u201cWHERE\u201d clause ordering.</p>\n<p><strong>Labeling the Training Set</strong></p>\n<p>Building a supervised data set for training the DNN requires real query results. For this, our method runs the set of generated queries against the dataset. Since the DNN requires a relatively large number of training samples, the system generates and executes hundreds of thousands of queries using concurrent technology to optimize costs. However, this process takes place only\u00a0<strong>once</strong>\u00a0for each dataset. When new data arrives, necessitating the generation of new queries, Hunch uses incremental (transfer) learning (more on that later). This approach saves time, effort, and costs both in the training set generation phase and in the DNN training phase.</p>\n<p><strong>Encoding Queries</strong></p>\n<p>Since the DNN can digest only numeric input, we developed an encoding model to encode the queries into numeric matrices. This goal is obtained by an encoder model which is constructed on the fly (during SQL queries generation), making use of vector embedding technique.</p>\n<p>The encoder is designed to condense data sets with millions of distinct values into light memory footprint numeric tensors by utilizing proprietary embedding techniques.</p>\n<p><strong>Tackling New Data with Incremental Learning</strong></p>\n<p>When new data is added to the dataset, Hunch needs to adapt the DNN to approximate queries based on new data. Building on the previous learning processes, Hunch utilizes transfer learning, meaning that the DNN will be trained from its last weights state, against a new training set which is generated using the previous DNN and the new data.</p>\n<p><strong>Evaluation and Distribution</strong></p>\n<p>Once the training is finalized, we use a set of accuracy metrics to evaluate the model\u2019s approximation. We use Normalized Root Mean Squared Error (NRMSE) to measure the model accuracy on a hold out testing set of queries. Once the NRMSE is converged below a threshold, Hunch publishes a cloud API end-point around the DNN. Then, users or IOT devices can send query requests. The end-user benefits with from prompt response fixed query latency (which is independent of the raw data size!) and interactivity when dealing with Big Data in a wide variety of settings.</p>\n<h3>Conclusion</h3>\n<p>Just because we now live in a world of Big Data does not mean we need to surrender our ability to interact with that data and truly understand it.\u00a0<a href=\"https://internetofthingsagenda.techtarget.com/blog/IoT-Agenda/Data-cognition-engines-can-save-millions-in-big-data-costs\">Deep neural networks</a>\u00a0using Approximate Query Processing offer users a way to work with these huge datasets, pull out powerful insights, and put those insights at the edge for IoT and human usage\u2014all without requiring huge technological investments or costs. Nothing will stop the Big Data from getting even bigger, but technology like Hunch will help humans stay in the driver\u2019s seat.</p>\n<p><strong>Graph A: Query Results and Predictions for a 1,000,000,000-Row, 250-Gb Dataset</strong></p>\n<p><img src=\"https://cdn.sisense.com/wp-content/uploads/validation_graph-770x433.png\" width=\"100%\"/></p>\n<p><a href=\"https://www.sisense.com/blog/training-a-champion-building-deep-neural-nets-for-big-data-analytics/\">Original</a>. Reposted with permission.</p>\n</div> ", "website": "kdnuggets"}