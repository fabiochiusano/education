{"content": "By Nour Galaby, Data Enthusiast. Instagram is the largest photo\u00a0sharing social media platform with 500 million monthly active users, and 95 million pictures and videos uploaded on Instagram everyday. It has a huge amount of data and huge potential. This guide will help you view Instagram as a source of data and not just a platform,\u00a0and how to use it as a developer for your projects. About API and Tools Instagram has an official API but it is outdated and is currently very limited in things you can do with it. So in this guide I will use LevPasha\u2019s Unofficial Instagram API , which supports all major features like like, follow, upload photo and video, etc! It is written in Python, but I will focus only on the data side. I recommend using Jupyter notebooks and IPython. Normal python will work fine, but you may not have features like displaying the images Installation You can install the library using pip this way: python -m pip install -e git+/LevPasha/Instagram-API-python.git#egg=InstagramAPI You will need ffmpeg if you don't have it. To install it on Linux: sudo apt-get install ffmpeg For Windows, run this in your Python interpreter: import imageio\r  Logging in to Instagram Using the API from InstagramAPI import InstagramAPI\r username=\"YOURUSERNAME\"\r InstagramAPI = \r  If successful, you should receive a \"Login Success\" message. Simple Request With that out of the way let's get started with our first request: \r result = InstagramAPI.LastJson {u'status': u'ok',\r u'user': {u'biography': u'',\r u'birthday': None,\r u'country_code': 20,\r u'email': aaa@hotmail.com',\r u'external_url': u'',\r u'full_name': u'Nour Galaby',\r u'gender': 1,\r u'has_anonymous_profile_picture': False,\r u'hd_profile_pic_url_info': {u'height': 1080,\r u'url': u'/t51.2885-1aaa7448121591_1aa.jpg',\r u'width': 1080},\r u'hd_profile_pic_versions': [{u'height': 320,\r u'url': u'/t51.2885-19/s320x320/19aa23237_4337448121591_195310aaa32_a.jpg',\r u'width': 320},\r {u'height': 640,\r u'url': u'/t51.2885-19/s640x640/19623237_45581744812153_44_a.jpg',\r u'width': 640}],\r u'is_private': True,\r u'is_verified': False,\r u'national_number': 122,\r u'phone_number': u'+201220',\r u'pk': 22412229,\r u'profile_pic_id': u'1550239680720880455_22',\r u'profile_pic_url': u'/t51.2885-19/s150x150/19623237_455817448121591_195310166162_a.jpg',\r u'show_conversion_edit_entry': False,\r u'username': u'nourgalaby'}} As you can see, the result is in JSON format, containing all of the requested data. You can access it in the normal key/value way. For example: You can use any advance viewing tool (Notepad++) to view the JSON and explore it. Get and View Instagram Timeline Now let's do something more interesting. We will request the last posts in the timeline and view them in our notebook. With this line you can get the timeline:  And similar to the previous request, we will use  to view the result. By inspecting the resulting JSON, we can see that it holds a list in a key called 'items.' Each element in that list holds information about a specific post in the timeline, including such elements as: [text] - holds the text value for the caption written under the post, including hashtags [likes] - the number of likes that a post has [created_at] -\u00a0date post created [comments] - post comments [image_versions] - holds links to the actual JPG file, which we will use to display it on our Jupyter notebook Functions  and  will iterate over the list of posts and for each post will find the URL and append it to our empty list: After it's done, we should have a list of URLs like the following: To view the images, we can use the Ipython.display module as follows: Viewing images in a notebook is very useful and we will use those functions later to view our results, as you will see. Get Your Most Liked Posts Now we know how to make a basic request, but what if we want to get more complex requests? Here we will do something similar: we will get our most liked posts. In order to do that, first we need to get all posts in your user profile, and then sort them by number of likes: Get All User Posts In order to get all the posts we will use the next_max_id and more_avialable values to iterate over our list of results: import time\r myposts=[]\r has_more_posts = True\r max_id=\"\"\r \r while has_more_posts:\r \r if InstagramAPI.LastJson['more_available'] is not True:\r has_more_posts = False #stop condition\r print \"stopped\"\r \r max_id = \r  #merge lists\r  # Slows the script down to avoid flooding the servers \r \r print ", "title_html": "<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog, Aug 2017\" src=\"/images/top-kdnuggets-blog-2017-aug-silver.png\" width=\"80\"/>A Guide to Instagramming with Python for Data Analysis</h1> ", "url": "https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html", "tfidf": {"tfidf": {"after": 1.02070207021, "outdat": 36.6651270208, "utnumaaanumaajpg": 1058.4, "pictur": 3.4953764861300005, "ffmpeg": 2116.8, "instagramapilastjson": 2116.8, "utnumsnumxnumajpg": 2116.8, "post": 29.09741999151, "here": 2.42307692308, "pip": 271.384615384, "uhdprofilepicvers": 1058.4, "script": 8.299006795610001, "number": 2.20285833218, "previous": 1.42846859816, "contain": 1.59814777532, "ubirthday": 1058.4, "etc": 4.2066772655, "specif": 1.8719490626099997, "about": 2.12972030318, "function": 4.99088337, "user": 23.13161728995, "uuser": 1058.4, "which": 2.01038369, "hotmailcom": 1058.4, "thing": 2.4065484311099996, "log": 13.6744186047, "ipython": 1058.4, "python": 225.1914893616, "just": 1.33580143037, "ubiographi": 1058.4, "let": 6.97233201582, "done": 2.3302509907499998, "uusernam": 1058.4, "url": 41.669291338600004, "hold": 6.6205170976, "enthusiast": 9.39408284024, "guid": 4.98226894712, "recommend": 3.9142011834300003, "item": 5.07869481766, "uprofilepicid": 1058.4, "complex": 2.34021226415, "creat": 1.2492917847, "tool": 9.99433427762, "start": 1.26673581744, "maxid": 2116.8, "uphonenumb": 1058.4, "run": 1.55692850838, "how": 3.20500656102, "million": 3.4558119286, "video": 6.59439252336, "format": 2.53125, "request": 21.63363831027, "instagram": 2415.9130434810004, "ipythondisplay": 1058.4, "messag": 4.96745932416, "uwidth": 3175.2000000000003, "interest": 1.60331246213, "basic": 2.7301805675, "notepad": 756.0, "nextmaxid": 1058.4, "over": 2.05050048434, "those": 1.19548192771, "mypost": 1058.4, "display": 5.86913123844, "instagramapi": 3175.2000000000003, "under": 1.0781663837, "similar": 2.75028150714, "but": 4.06529671596, "egginstagramapi": 1058.4, "need": 2.8745247148199997, "our": 16.50311850313, "unour": 1058.4, "valu": 4.555523672880001, "inform": 1.5753125620200001, "key": 2.28005170185, "ucountrycod": 1058.4, "exampl": 1.50483412322, "success": 2.6400598653, "have": 3.0446845234199995, "inspect": 11.7512953368, "createdat": 1058.4, "follow": 3.1392037964699995, "now": 2.321561746, "aptget": 1058.4, "out": 1.06016694491, "profil": 4.8314059647, "support": 1.2685577307200002, "see": 3.81726376533, "hasmorepost": 3175.2000000000003, "slow": 4.04793472718, "way": 3.6572218383, "uhasanonymousprofilepictur": 1058.4, "huge": 8.77854575616, "everyday": 11.9548192771, "view": 14.766845804009998, "print": 6.59439252336, "not": 3.04702194357, "will": 18.3721647894, "uheight": 3175.2000000000003, "usernam": 407.07692307699995, "major": 1.14852058164, "them": 2.19752231988, "uispriv": 1058.4, "window": 5.86479497599, "the": 31.0, "order": 2.49250333622, "uhdprofilepicurlinfo": 1058.4, "platform": 12.466431095399999, "gitlevpashainstagramapipythongit": 1058.4, "jupyt": 2116.8, "want": 1.99698113208, "unum": 75.961722488, "then": 1.08657860516, "timelin": 43.645360824799994, "uurl": 3175.2000000000003, "instal": 18.9360687023, "last": 1.2117234010100002, "share": 1.8566249561500001, "actual": 1.87482286254, "work": 1.11520089913, "moreavial": 1058.4, "that": 5.01992031875, "uexternalurl": 1058.4, "featur": 3.05425163524, "activ": 1.46403541129, "simpl": 3.3981164383599998, "sudo": 1058.4, "normal": 5.22150962012, "unoffici": 9.934918648310001, "login": 226.8, "develop": 1.1955719557200002, "such": 1.06151377374, "uemail": 1058.4, "imag": 8.10413476263, "sourc": 1.69760479042, "explor": 3.39593582888, "get": 16.07063322465, "like": 10.342671009750001, "uok": 1058.4, "text": 6.25655172414, "ushowconversioneditentri": 1058.4, "imagevers": 1058.4, "should": 3.3286508019800003, "file": 3.7710213776699995, "result": 6.87669650592, "append": 55.125, "element": 4.72008324662, "keyvalu": 1058.4, "includ": 2.0381282495599997, "unourgalabi": 1058.4, "use": 12.355665088559999, "receiv": 1.3054847463200001, "media": 2.59369384088, "access": 1.8734953976900002, "ani": 1.13383802314, "time": 1.01127460348, "from": 1.00056721497, "uisverifi": 1058.4, "limit": 1.5186531471200002, "galabi": 2116.8, "project": 1.7534791252500002, "num": 12.00378048012, "veri": 2.51760228354, "utnumsnumxnumaanumaaanumajpg": 1058.4, "first": 2.01523229246, "may": 1.05201775893, "most": 2.04192926046, "hashtag": 496.125, "what": 1.25343439128, "for": 5.0015752000500004, "largest": 2.0511627907, "all": 5.05733944955, "uprofilepicurl": 1058.4, "with": 5.005991044949999, "written": 3.9146837627999997, "someth": 6.56304257958, "merg": 5.28319467554, "condit": 1.92483026188, "true": 7.66709594334, "empti": 8.067073170730001, "current": 1.5325803649, "month": 1.5079787234, "fine": 4.02229541424, "sort": 5.188235294119999, "this": 5.0189681335500005, "call": 1.0676529926, "more": 2.0343413634, "and": 19.00119685047, "levpasha": 1058.4, "list": 9.54250386397, "moreavail": 1058.4, "caption": 55.5104895105, "amount": 2.27027027027, "later": 1.08650424309, "focus": 2.01012914662, "librari": 2.68266306185, "iter": 74.8867924528, "none": 4.06555697823, "know": 2.59327017315, "can": 9.41009113136, "linux": 65.0655737705, "make": 1.0762660158600001, "photo": 12.83946623534, "onli": 1.0256476516600002, "each": 2.37949640288, "side": 1.5989525632, "unationalnumb": 1058.4, "avoid": 2.45986984816, "upload": 155.64705882360002, "link": 2.15151104486, "advanc": 1.9997480791, "comment": 6.11909809212, "data": 16.8821777967, "flood": 6.94488188976, "fals": 24.86452623336, "aaa": 56.4982206406, "notebook": 160.7696202532, "ustatus": 1058.4, "ugend": 1058.4, "nour": 1058.4, "offici": 1.40483143085, "line": 1.4182597820299998, "modul": 16.9434364995, "import": 4.020597670110001, "has": 3.1309492505999996, "server": 38.071942446, "social": 1.9904714142400002, "upk": 1058.4, "date": 1.63081664099, "while": 1.0441988950299999, "interpret": 3.2150668286799995, "help": 1.39962972759, "find": 1.7294117647099998, "ufullnam": 1058.4, "down": 1.35889754344, "potenti": 2.52080025405, "stop": 4.3567508232800005, "imageio": 1058.4}, "logtfidf": {"after": 0.020490694648099998, "outdat": 3.6018260858999995, "utnumaaanumaajpg": 6.964513612799999, "pictur": 1.25144109124, "ffmpeg": 13.929027225599999, "instagramapilastjson": 13.929027225599999, "utnumsnumxnumajpg": 13.929027225599999, "post": 10.474101985112998, "here": 0.8850381883700001, "pip": 9.82077975822, "uhdprofilepicvers": 6.964513612799999, "script": 2.1161358444599996, "number": 0.1932171568372, "previous": 0.356602960063, "contain": 0.468845318236, "ubirthday": 6.964513612799999, "etc": 1.4366730879700003, "specif": 0.626980167541, "about": 0.1256869549492, "function": 1.828931483188, "user": 6.127764320639999, "uuser": 6.964513612799999, "which": 0.01035682769086, "hotmailcom": 6.964513612799999, "thing": 0.8781935346799999, "log": 2.61552683221, "ipython": 6.964513612799999, "python": 16.12262697184, "just": 0.289531434109, "ubiographi": 6.964513612799999, "let": 2.4976051345599997, "done": 0.845975983129, "uusernam": 6.964513612799999, "url": 3.72976443878, "hold": 2.015516468784, "enthusiast": 2.24008000599, "guid": 1.825476437178, "recommend": 1.36461126863, "item": 1.62505430292, "uprofilepicid": 6.964513612799999, "complex": 0.8502416364309999, "creat": 0.222576818514, "tool": 3.21774235926, "start": 0.236443369291, "maxid": 13.929027225599999, "uphonenumb": 6.964513612799999, "run": 0.442714975539, "how": 0.9431339138600001, "million": 1.0938205001880001, "video": 2.38614497934, "format": 0.9287132518729999, "request": 7.898374984079999, "instagram": 40.90745692186999, "ipythondisplay": 6.964513612799999, "messag": 1.6029085070200002, "uwidth": 20.8935408384, "interest": 0.47207177798199995, "basic": 1.00436774895, "notepad": 6.6280413761800006, "nextmaxid": 6.964513612799999, "over": 0.0498734429914, "those": 0.17854939087299998, "mypost": 6.964513612799999, "display": 2.15311888412, "instagramapi": 20.8935408384, "under": 0.07526180538319999, "similar": 0.637112184228, "but": 0.0647694882876, "egginstagramapi": 6.964513612799999, "need": 0.725480326884, "our": 6.003474499274001, "unour": 6.964513612799999, "valu": 1.646386620296, "inform": 0.454453704662, "key": 0.82419811896, "ucountrycod": 6.964513612799999, "exampl": 0.40868267499899996, "success": 0.5553088251839999, "have": 0.0443550070236, "inspect": 2.46396347594, "createdat": 6.964513612799999, "follow": 0.1360707332826, "now": 0.298185890042, "aptget": 6.964513612799999, "out": 0.0584263909193, "profil": 1.5751375153100002, "support": 0.237880610037, "see": 0.722764756476, "hasmorepost": 20.8935408384, "slow": 1.39820680715, "way": 0.5942745298050001, "uhasanonymousprofilepictur": 6.964513612799999, "huge": 2.9583271639, "everyday": 2.48113448387, "view": 4.456439479557, "print": 2.38614497934, "not": 0.0466572390225, "will": 3.041798023725, "uheight": 20.8935408384, "usernam": 6.009002167769999, "major": 0.138474663439, "them": 0.1883666538186, "uispriv": 6.964513612799999, "window": 1.7689675242900003, "the": 0.0, "order": 0.44028076158600005, "uhdprofilepicurlinfo": 6.964513612799999, "platform": 3.6597846778400003, "gitlevpashainstagramapipythongit": 6.964513612799999, "jupyt": 13.929027225599999, "want": 0.6916366062549999, "unum": 7.27416476276, "then": 0.08303386523089999, "timelin": 9.5592105372, "uurl": 20.8935408384, "instal": 6.658152939500001, "last": 0.19204364461100001, "share": 0.618760299747, "actual": 0.628514181648, "work": 0.109034567273, "moreavial": 6.964513612799999, "that": 0.019880741898199997, "uexternalurl": 6.964513612799999, "featur": 0.846774836284, "activ": 0.381196603284, "simpl": 1.2232212893899999, "sudo": 6.964513612799999, "normal": 1.919278757566, "unoffici": 2.29605568758, "login": 5.4240685718499995, "develop": 0.178624694913, "such": 0.059695977806, "uemail": 6.964513612799999, "imag": 2.98128632187, "sourc": 0.529218310751, "explor": 1.22257937218, "get": 5.217921052037999, "like": 1.251482188905, "uok": 6.964513612799999, "text": 2.28096401998, "ushowconversioneditentri": 6.964513612799999, "imagevers": 6.964513612799999, "should": 1.018839753516, "file": 1.32734588723, "result": 0.8182734502860001, "append": 4.0096033337699994, "element": 1.7173585117539998, "keyvalu": 6.964513612799999, "includ": 0.037769362781, "unourgalabi": 6.964513612799999, "use": 0.3504962367792, "receiv": 0.266574424922, "media": 0.9530830530519999, "access": 0.627805882716, "ani": 0.125608358366, "time": 0.0112115188626, "from": 0.000567054168866, "uisverifi": 6.964513612799999, "limit": 0.41782385463, "galabi": 13.929027225599999, "project": 0.561601885907, "num": 0.0037798847447640003, "veri": 0.460319586476, "utnumsnumxnumaanumaaanumajpg": 6.964513612799999, "first": 0.015174579624319999, "may": 0.050709995284400004, "most": 0.041495792591199995, "hashtag": 6.2068279111, "what": 0.225887296827, "for": 0.0015749519769850003, "largest": 0.7184068473190001, "all": 0.057013160488999994, "uprofilepicurl": 6.964513612799999, "with": 0.00598745856695, "written": 1.343174739666, "someth": 2.37661424546, "merg": 1.66453096693, "condit": 0.654837788206, "true": 2.814976888902, "empti": 2.08779073629, "current": 0.42695282784500005, "month": 0.410770160338, "fine": 1.39185273824, "sort": 1.64639361896, "this": 0.0189322452625, "call": 0.0654627744488, "more": 0.034049863199999995, "and": 0.0011968126992084, "levpasha": 6.964513612799999, "list": 2.168920330542, "moreavail": 6.964513612799999, "caption": 4.01657200308, "amount": 0.819898886199, "later": 0.0829654259878, "focus": 0.6981989720559999, "librari": 0.986809980943, "iter": 7.24566071734, "none": 1.40255075163, "know": 0.952919694398, "can": 1.298728771152, "linux": 4.17539558861, "make": 0.07349765782289999, "photo": 3.7187530927599997, "onli": 0.025324268329099998, "each": 0.347483378608, "side": 0.46934876686899996, "unationalnumb": 6.964513612799999, "avoid": 0.900108441291, "upload": 8.70888764012, "link": 0.7661704068449999, "advanc": 0.6930212121780001, "comment": 2.23653506908, "data": 6.084102924, "flood": 1.9380049695500001, "fals": 7.308591109239999, "aaa": 4.034209144569999, "notebook": 14.774712196, "ustatus": 6.964513612799999, "ugend": 6.964513612799999, "nour": 6.964513612799999, "offici": 0.339917317543, "line": 0.349430614452, "modul": 2.82988053166, "import": 0.878454831198, "has": 0.1281718345644, "server": 3.6394775921, "social": 0.688371502261, "upk": 6.964513612799999, "date": 0.489080896097, "while": 0.04324998379380001, "interpret": 1.1678481440000001, "help": 0.336207721344, "find": 0.547781330288, "ufullnam": 6.964513612799999, "down": 0.306673741186, "potenti": 0.9245764122419999, "stop": 1.557158749926, "imageio": 6.964513612799999}, "logidf": {"after": 0.020490694648099998, "outdat": 3.6018260858999995, "utnumaaanumaajpg": 6.964513612799999, "pictur": 1.25144109124, "ffmpeg": 6.964513612799999, "instagramapilastjson": 6.964513612799999, "utnumsnumxnumajpg": 6.964513612799999, "post": 0.8057001527009999, "here": 0.8850381883700001, "pip": 4.91038987911, "uhdprofilepicvers": 6.964513612799999, "script": 2.1161358444599996, "number": 0.0966085784186, "previous": 0.356602960063, "contain": 0.468845318236, "ubirthday": 6.964513612799999, "etc": 1.4366730879700003, "specif": 0.626980167541, "about": 0.0628434774746, "function": 0.914465741594, "user": 2.04258810688, "uuser": 6.964513612799999, "which": 0.00517841384543, "hotmailcom": 6.964513612799999, "thing": 0.8781935346799999, "log": 2.61552683221, "ipython": 6.964513612799999, "python": 4.03065674296, "just": 0.289531434109, "ubiographi": 6.964513612799999, "let": 1.2488025672799998, "done": 0.845975983129, "uusernam": 6.964513612799999, "url": 3.72976443878, "hold": 0.503879117196, "enthusiast": 2.24008000599, "guid": 0.912738218589, "recommend": 1.36461126863, "item": 1.62505430292, "uprofilepicid": 6.964513612799999, "complex": 0.8502416364309999, "creat": 0.222576818514, "tool": 1.60887117963, "start": 0.236443369291, "maxid": 6.964513612799999, "uphonenumb": 6.964513612799999, "run": 0.442714975539, "how": 0.47156695693000006, "million": 0.5469102500940001, "video": 1.19307248967, "format": 0.9287132518729999, "request": 1.12833928344, "instagram": 5.843922417409999, "ipythondisplay": 6.964513612799999, "messag": 1.6029085070200002, "uwidth": 6.964513612799999, "interest": 0.47207177798199995, "basic": 1.00436774895, "notepad": 6.6280413761800006, "nextmaxid": 6.964513612799999, "over": 0.0249367214957, "those": 0.17854939087299998, "mypost": 6.964513612799999, "display": 1.07655944206, "instagramapi": 6.964513612799999, "under": 0.07526180538319999, "similar": 0.318556092114, "but": 0.0161923720719, "egginstagramapi": 6.964513612799999, "need": 0.362740163442, "our": 0.8576392141820001, "unour": 6.964513612799999, "valu": 0.823193310148, "inform": 0.454453704662, "key": 0.82419811896, "ucountrycod": 6.964513612799999, "exampl": 0.40868267499899996, "success": 0.27765441259199997, "have": 0.0147850023412, "inspect": 2.46396347594, "createdat": 6.964513612799999, "follow": 0.045356911094199995, "now": 0.149092945021, "aptget": 6.964513612799999, "out": 0.0584263909193, "profil": 1.5751375153100002, "support": 0.237880610037, "see": 0.240921585492, "hasmorepost": 6.964513612799999, "slow": 1.39820680715, "way": 0.19809150993500002, "uhasanonymousprofilepictur": 6.964513612799999, "huge": 1.47916358195, "everyday": 2.48113448387, "view": 0.49515994217299997, "print": 1.19307248967, "not": 0.0155524130075, "will": 0.202786534915, "uheight": 6.964513612799999, "usernam": 6.009002167769999, "major": 0.138474663439, "them": 0.0941833269093, "uispriv": 6.964513612799999, "window": 1.7689675242900003, "the": 0.0, "order": 0.22014038079300002, "uhdprofilepicurlinfo": 6.964513612799999, "platform": 1.8298923389200001, "gitlevpashainstagramapipythongit": 6.964513612799999, "jupyt": 6.964513612799999, "want": 0.6916366062549999, "unum": 3.63708238138, "then": 0.08303386523089999, "timelin": 2.3898026343, "uurl": 6.964513612799999, "instal": 1.3316305879, "last": 0.19204364461100001, "share": 0.618760299747, "actual": 0.628514181648, "work": 0.109034567273, "moreavial": 6.964513612799999, "that": 0.00397614837964, "uexternalurl": 6.964513612799999, "featur": 0.423387418142, "activ": 0.381196603284, "simpl": 1.2232212893899999, "sudo": 6.964513612799999, "normal": 0.959639378783, "unoffici": 2.29605568758, "login": 5.4240685718499995, "develop": 0.178624694913, "such": 0.059695977806, "uemail": 6.964513612799999, "imag": 0.99376210729, "sourc": 0.529218310751, "explor": 1.22257937218, "get": 0.579769005782, "like": 0.139053576545, "uok": 6.964513612799999, "text": 1.14048200999, "ushowconversioneditentri": 6.964513612799999, "imagevers": 6.964513612799999, "should": 0.509419876758, "file": 1.32734588723, "result": 0.136378908381, "append": 4.0096033337699994, "element": 0.8586792558769999, "keyvalu": 6.964513612799999, "includ": 0.0188846813905, "unourgalabi": 6.964513612799999, "use": 0.0292080197316, "receiv": 0.266574424922, "media": 0.9530830530519999, "access": 0.627805882716, "ani": 0.125608358366, "time": 0.0112115188626, "from": 0.000567054168866, "uisverifi": 6.964513612799999, "limit": 0.41782385463, "galabi": 6.964513612799999, "project": 0.561601885907, "num": 0.00031499039539700004, "veri": 0.230159793238, "utnumsnumxnumaanumaaanumajpg": 6.964513612799999, "first": 0.0075872898121599995, "may": 0.050709995284400004, "most": 0.020747896295599998, "hashtag": 6.2068279111, "what": 0.225887296827, "for": 0.00031499039539700004, "largest": 0.7184068473190001, "all": 0.011402632097799998, "uprofilepicurl": 6.964513612799999, "with": 0.00119749171339, "written": 0.671587369833, "someth": 1.18830712273, "merg": 1.66453096693, "condit": 0.654837788206, "true": 0.938325629634, "empti": 2.08779073629, "current": 0.42695282784500005, "month": 0.410770160338, "fine": 1.39185273824, "sort": 1.64639361896, "this": 0.0037864490525, "call": 0.0654627744488, "more": 0.017024931599999998, "and": 6.29901420636e-05, "levpasha": 6.964513612799999, "list": 0.309845761506, "moreavail": 6.964513612799999, "caption": 4.01657200308, "amount": 0.819898886199, "later": 0.0829654259878, "focus": 0.6981989720559999, "librari": 0.986809980943, "iter": 3.62283035867, "none": 1.40255075163, "know": 0.952919694398, "can": 0.162341096394, "linux": 4.17539558861, "make": 0.07349765782289999, "photo": 1.8593765463799998, "onli": 0.025324268329099998, "each": 0.173741689304, "side": 0.46934876686899996, "unationalnumb": 6.964513612799999, "avoid": 0.900108441291, "upload": 4.35444382006, "link": 0.7661704068449999, "advanc": 0.6930212121780001, "comment": 1.11826753454, "data": 1.2168205848, "flood": 1.9380049695500001, "fals": 1.8271477773099998, "aaa": 4.034209144569999, "notebook": 3.693678049, "ustatus": 6.964513612799999, "ugend": 6.964513612799999, "nour": 6.964513612799999, "offici": 0.339917317543, "line": 0.349430614452, "modul": 2.82988053166, "import": 0.292818277066, "has": 0.0427239448548, "server": 3.6394775921, "social": 0.688371502261, "upk": 6.964513612799999, "date": 0.489080896097, "while": 0.04324998379380001, "interpret": 1.1678481440000001, "help": 0.336207721344, "find": 0.547781330288, "ufullnam": 6.964513612799999, "down": 0.306673741186, "potenti": 0.9245764122419999, "stop": 0.778579374963, "imageio": 6.964513612799999}, "freq": {"after": 1, "outdat": 1, "utnumaaanumaajpg": 1, "pictur": 1, "ffmpeg": 2, "instagramapilastjson": 2, "utnumsnumxnumajpg": 2, "post": 13, "here": 1, "pip": 2, "uhdprofilepicvers": 1, "script": 1, "number": 2, "previous": 1, "contain": 1, "ubirthday": 1, "etc": 1, "specif": 1, "about": 2, "function": 2, "user": 3, "uuser": 1, "which": 2, "hotmailcom": 1, "thing": 1, "log": 1, "ipython": 1, "python": 4, "just": 1, "ubiographi": 1, "let": 2, "done": 1, "uusernam": 1, "url": 1, "hold": 4, "enthusiast": 1, "guid": 2, "recommend": 1, "item": 1, "uprofilepicid": 1, "complex": 1, "creat": 1, "tool": 2, "start": 1, "maxid": 2, "uphonenumb": 1, "run": 1, "how": 2, "million": 2, "video": 2, "format": 1, "request": 7, "instagram": 7, "ipythondisplay": 1, "messag": 1, "uwidth": 3, "interest": 1, "basic": 1, "notepad": 1, "nextmaxid": 1, "over": 2, "those": 1, "mypost": 1, "display": 2, "instagramapi": 3, "under": 1, "similar": 2, "but": 4, "egginstagramapi": 1, "need": 2, "our": 7, "unour": 1, "valu": 2, "inform": 1, "key": 1, "ucountrycod": 1, "exampl": 1, "success": 2, "have": 3, "inspect": 1, "createdat": 1, "follow": 3, "now": 2, "aptget": 1, "out": 1, "profil": 1, "support": 1, "see": 3, "hasmorepost": 3, "slow": 1, "way": 3, "uhasanonymousprofilepictur": 1, "huge": 2, "everyday": 1, "view": 9, "print": 2, "not": 3, "will": 15, "uheight": 3, "usernam": 1, "major": 1, "them": 2, "uispriv": 1, "window": 1, "the": 31, "order": 2, "uhdprofilepicurlinfo": 1, "platform": 2, "gitlevpashainstagramapipythongit": 1, "jupyt": 2, "want": 1, "unum": 2, "then": 1, "timelin": 4, "uurl": 3, "instal": 5, "last": 1, "share": 1, "actual": 1, "work": 1, "moreavial": 1, "that": 5, "uexternalurl": 1, "featur": 2, "activ": 1, "simpl": 1, "sudo": 1, "normal": 2, "unoffici": 1, "login": 1, "develop": 1, "such": 1, "uemail": 1, "imag": 3, "sourc": 1, "explor": 1, "get": 9, "like": 9, "uok": 1, "text": 2, "ushowconversioneditentri": 1, "imagevers": 1, "should": 2, "file": 1, "result": 6, "append": 1, "element": 2, "keyvalu": 1, "includ": 2, "unourgalabi": 1, "use": 12, "receiv": 1, "media": 1, "access": 1, "ani": 1, "time": 1, "from": 1, "uisverifi": 1, "limit": 1, "galabi": 2, "project": 1, "num": 12, "veri": 2, "utnumsnumxnumaanumaaanumajpg": 1, "first": 2, "may": 1, "most": 2, "hashtag": 1, "what": 1, "for": 5, "largest": 1, "all": 5, "uprofilepicurl": 1, "with": 5, "written": 2, "someth": 2, "merg": 1, "condit": 1, "true": 3, "empti": 1, "current": 1, "month": 1, "fine": 1, "sort": 1, "this": 5, "call": 1, "more": 2, "and": 19, "levpasha": 1, "list": 7, "moreavail": 1, "caption": 1, "amount": 1, "later": 1, "focus": 1, "librari": 1, "iter": 2, "none": 1, "know": 1, "can": 8, "linux": 1, "make": 1, "photo": 2, "onli": 1, "each": 2, "side": 1, "unationalnumb": 1, "avoid": 1, "upload": 2, "link": 1, "advanc": 1, "comment": 2, "data": 5, "flood": 1, "fals": 4, "aaa": 1, "notebook": 4, "ustatus": 1, "ugend": 1, "nour": 1, "offici": 1, "line": 1, "modul": 1, "import": 3, "has": 3, "server": 1, "social": 1, "upk": 1, "date": 1, "while": 1, "interpret": 1, "help": 1, "find": 1, "ufullnam": 1, "down": 1, "potenti": 1, "stop": 2, "imageio": 1}, "idf": {"after": 1.02070207021, "outdat": 36.6651270208, "utnumaaanumaajpg": 1058.4, "pictur": 3.4953764861300005, "ffmpeg": 1058.4, "instagramapilastjson": 1058.4, "utnumsnumxnumajpg": 1058.4, "post": 2.23826307627, "here": 2.42307692308, "pip": 135.692307692, "uhdprofilepicvers": 1058.4, "script": 8.299006795610001, "number": 1.10142916609, "previous": 1.42846859816, "contain": 1.59814777532, "ubirthday": 1058.4, "etc": 4.2066772655, "specif": 1.8719490626099997, "about": 1.06486015159, "function": 2.495441685, "user": 7.71053909665, "uuser": 1058.4, "which": 1.005191845, "hotmailcom": 1058.4, "thing": 2.4065484311099996, "log": 13.6744186047, "ipython": 1058.4, "python": 56.2978723404, "just": 1.33580143037, "ubiographi": 1058.4, "let": 3.48616600791, "done": 2.3302509907499998, "uusernam": 1058.4, "url": 41.669291338600004, "hold": 1.6551292744, "enthusiast": 9.39408284024, "guid": 2.49113447356, "recommend": 3.9142011834300003, "item": 5.07869481766, "uprofilepicid": 1058.4, "complex": 2.34021226415, "creat": 1.2492917847, "tool": 4.99716713881, "start": 1.26673581744, "maxid": 1058.4, "uphonenumb": 1058.4, "run": 1.55692850838, "how": 1.60250328051, "million": 1.7279059643, "video": 3.29719626168, "format": 2.53125, "request": 3.09051975861, "instagram": 345.13043478300006, "ipythondisplay": 1058.4, "messag": 4.96745932416, "uwidth": 1058.4, "interest": 1.60331246213, "basic": 2.7301805675, "notepad": 756.0, "nextmaxid": 1058.4, "over": 1.02525024217, "those": 1.19548192771, "mypost": 1058.4, "display": 2.93456561922, "instagramapi": 1058.4, "under": 1.0781663837, "similar": 1.37514075357, "but": 1.01632417899, "egginstagramapi": 1058.4, "need": 1.4372623574099999, "our": 2.35758835759, "unour": 1058.4, "valu": 2.2777618364400003, "inform": 1.5753125620200001, "key": 2.28005170185, "ucountrycod": 1058.4, "exampl": 1.50483412322, "success": 1.32002993265, "have": 1.0148948411399998, "inspect": 11.7512953368, "createdat": 1058.4, "follow": 1.04640126549, "now": 1.160780873, "aptget": 1058.4, "out": 1.06016694491, "profil": 4.8314059647, "support": 1.2685577307200002, "see": 1.27242125511, "hasmorepost": 1058.4, "slow": 4.04793472718, "way": 1.2190739461, "uhasanonymousprofilepictur": 1058.4, "huge": 4.38927287808, "everyday": 11.9548192771, "view": 1.6407606448899998, "print": 3.29719626168, "not": 1.01567398119, "will": 1.22481098596, "uheight": 1058.4, "usernam": 407.07692307699995, "major": 1.14852058164, "them": 1.09876115994, "uispriv": 1058.4, "window": 5.86479497599, "the": 1.0, "order": 1.24625166811, "uhdprofilepicurlinfo": 1058.4, "platform": 6.2332155476999995, "gitlevpashainstagramapipythongit": 1058.4, "jupyt": 1058.4, "want": 1.99698113208, "unum": 37.980861244, "then": 1.08657860516, "timelin": 10.911340206199998, "uurl": 1058.4, "instal": 3.78721374046, "last": 1.2117234010100002, "share": 1.8566249561500001, "actual": 1.87482286254, "work": 1.11520089913, "moreavial": 1058.4, "that": 1.00398406375, "uexternalurl": 1058.4, "featur": 1.52712581762, "activ": 1.46403541129, "simpl": 3.3981164383599998, "sudo": 1058.4, "normal": 2.61075481006, "unoffici": 9.934918648310001, "login": 226.8, "develop": 1.1955719557200002, "such": 1.06151377374, "uemail": 1058.4, "imag": 2.70137825421, "sourc": 1.69760479042, "explor": 3.39593582888, "get": 1.78562591385, "like": 1.14918566775, "uok": 1058.4, "text": 3.12827586207, "ushowconversioneditentri": 1058.4, "imagevers": 1058.4, "should": 1.6643254009900001, "file": 3.7710213776699995, "result": 1.14611608432, "append": 55.125, "element": 2.36004162331, "keyvalu": 1058.4, "includ": 1.0190641247799999, "unourgalabi": 1058.4, "use": 1.0296387573799999, "receiv": 1.3054847463200001, "media": 2.59369384088, "access": 1.8734953976900002, "ani": 1.13383802314, "time": 1.01127460348, "from": 1.00056721497, "uisverifi": 1058.4, "limit": 1.5186531471200002, "galabi": 1058.4, "project": 1.7534791252500002, "num": 1.00031504001, "veri": 1.25880114177, "utnumsnumxnumaanumaaanumajpg": 1058.4, "first": 1.00761614623, "may": 1.05201775893, "most": 1.02096463023, "hashtag": 496.125, "what": 1.25343439128, "for": 1.00031504001, "largest": 2.0511627907, "all": 1.01146788991, "uprofilepicurl": 1058.4, "with": 1.0011982089899998, "written": 1.9573418813999999, "someth": 3.28152128979, "merg": 5.28319467554, "condit": 1.92483026188, "true": 2.55569864778, "empti": 8.067073170730001, "current": 1.5325803649, "month": 1.5079787234, "fine": 4.02229541424, "sort": 5.188235294119999, "this": 1.00379362671, "call": 1.0676529926, "more": 1.0171706817, "and": 1.00006299213, "levpasha": 1058.4, "list": 1.36321483771, "moreavail": 1058.4, "caption": 55.5104895105, "amount": 2.27027027027, "later": 1.08650424309, "focus": 2.01012914662, "librari": 2.68266306185, "iter": 37.4433962264, "none": 4.06555697823, "know": 2.59327017315, "can": 1.17626139142, "linux": 65.0655737705, "make": 1.0762660158600001, "photo": 6.41973311767, "onli": 1.0256476516600002, "each": 1.18974820144, "side": 1.5989525632, "unationalnumb": 1058.4, "avoid": 2.45986984816, "upload": 77.82352941180001, "link": 2.15151104486, "advanc": 1.9997480791, "comment": 3.05954904606, "data": 3.37643555934, "flood": 6.94488188976, "fals": 6.21613155834, "aaa": 56.4982206406, "notebook": 40.1924050633, "ustatus": 1058.4, "ugend": 1058.4, "nour": 1058.4, "offici": 1.40483143085, "line": 1.4182597820299998, "modul": 16.9434364995, "import": 1.3401992233700002, "has": 1.0436497502, "server": 38.071942446, "social": 1.9904714142400002, "upk": 1058.4, "date": 1.63081664099, "while": 1.0441988950299999, "interpret": 3.2150668286799995, "help": 1.39962972759, "find": 1.7294117647099998, "ufullnam": 1058.4, "down": 1.35889754344, "potenti": 2.52080025405, "stop": 2.1783754116400003, "imageio": 1058.4}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  A Guide to Instagramming with Python for Data Analysis</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb A Guide to Instagramming with Python for Data Analysis Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/08/top-tweets-aug09-15.html\" rel=\"prev\" title=\"Top KDnuggets tweets, Aug 09-15: #Tensorflow tutorials and best practices; Top Influencers for #DataScience\"/>\n<link href=\"https://www.kdnuggets.com/2017/08/new-beginning-deep-learning.html\" rel=\"next\" title=\"A New Beginning to Deep Learning\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=70302\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-70302 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 17-Aug, 2017  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/08/index.html\">Aug</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/08/tutorials.html\">Tutorials, Overviews</a> \u00bb A Guide to Instagramming with Python for Data Analysis (\u00a0<a href=\"/2017/n32.html\">17:n32</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog, Aug 2017\" src=\"/images/top-kdnuggets-blog-2017-aug-silver.png\" width=\"80\"/>A Guide to Instagramming with Python for Data Analysis</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/08/top-tweets-aug09-15.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/08/new-beginning-deep-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <span class=\"http-likes\" style=\"float: left; font-size:14px\">http likes 202</span> <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/data-analysis\" rel=\"tag\">Data Analysis</a>, <a href=\"https://www.kdnuggets.com/tag/image-recognition\" rel=\"tag\">Image Recognition</a>, <a href=\"https://www.kdnuggets.com/tag/instagram\" rel=\"tag\">Instagram</a>, <a href=\"https://www.kdnuggets.com/tag/python\" rel=\"tag\">Python</a></div>\n<br/>\n<p class=\"excerpt\">\n     I am writing this article to show you the basics of using Instagram in a programmatic way. You can benefit from this if you want to use it in a data analysis, computer vision, or any other cool project you can think of.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><b>By Nour Galaby, Data Enthusiast.</b></p>\n<p><img alt=\"Instagram header\" class=\"aligncenter\" src=\"https://image.ibb.co/h3hDsF/galaby_insta_header.jpg\" width=\"85%\"/></p>\n<p>Instagram is the largest photo\u00a0sharing social media platform with 500 million monthly active users, and 95 million pictures and videos uploaded on Instagram everyday. It has a huge amount of data and huge potential. This guide will help you view Instagram as a source of data and not just a platform,\u00a0and how to use it as a developer for your projects.</p>\n<p><b>About API and Tools</b></p>\n<p>Instagram has an official API but it is outdated and is currently very limited in things you can do with it. So in this guide I will use <a href=\"https://github.com/LevPasha/Instagram-API-python\" target=\"_blank\">LevPasha\u2019s Unofficial Instagram API</a>, which supports all major features like like, follow, upload photo and video, etc! It is written in Python, but I will focus only on the data side.</p>\n<p>I recommend using Jupyter notebooks and IPython. Normal python will work fine, but you may not have features like displaying the images </p>\n<p><b>Installation</b></p>\n<p>You can install the library using <code>pip</code> this way:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>python -m pip install -e git+https://github.com/LevPasha/Instagram-API-python.git#egg=InstagramAPI</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>You will need <code>ffmpeg</code> if you don't have it. To install it on Linux: </p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>sudo apt-get install ffmpeg</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>For Windows, run this in your Python interpreter:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>import imageio\r\nimageio.plugins.ffmpeg.download()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p><b>Logging in to Instagram Using the API</b></p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>from InstagramAPI import InstagramAPI\r\nusername=\"YOURUSERNAME\"\r\nInstagramAPI = InstagramAPI(username, \"YOURPASSWORD\")\r\nInstagramAPI.login()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>If successful, you should receive a \"Login Success\" message.</p>\n<p><b>Simple Request</b></p>\n<p>With that out of the way let's get started with our first request:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>InstagramAPI.getProfileData()\r\nresult = InstagramAPI.LastJson</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>{u'status': u'ok',\r\n u'user': {u'biography': u'',\r\n  u'birthday': None,\r\n  u'country_code': 20,\r\n  u'email': aaa@hotmail.com',\r\n  u'external_url': u'',\r\n  u'full_name': u'Nour Galaby',\r\n  u'gender': 1,\r\n  u'has_anonymous_profile_picture': False,\r\n  u'hd_profile_pic_url_info': {u'height': 1080,\r\n   u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-1aaa7448121591_1aa.jpg',\r\n   u'width': 1080},\r\n  u'hd_profile_pic_versions': [{u'height': 320,\r\n    u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s320x320/19aa23237_4337448121591_195310aaa32_a.jpg',\r\n    u'width': 320},\r\n   {u'height': 640,\r\n    u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s640x640/19623237_45581744812153_44_a.jpg',\r\n    u'width': 640}],\r\n  u'is_private': True,\r\n  u'is_verified': False,\r\n  u'national_number': 122,\r\n  u'phone_number': u'+201220',\r\n  u'pk': 22412229,\r\n  u'profile_pic_id': u'1550239680720880455_22',\r\n  u'profile_pic_url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s150x150/19623237_455817448121591_195310166162_a.jpg',\r\n  u'show_conversion_edit_entry': False,\r\n  u'username': u'nourgalaby'}}</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>As you can see, the result is in JSON format, containing all of the requested data.</p>\n<p>You can access it in the normal key/value way. For example:</p>\n<p><img alt=\"Instagram image\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-1.png\" width=\"80%\"/></p>\n<p>You can use any advance viewing tool (Notepad++) to view the JSON and explore it. </p>\n<p><b>Get and View Instagram Timeline</b></p>\n<p>Now let's do something more interesting. We will request the last posts in the timeline and view them in our notebook.</p>\n<p>With this line you can get the timeline:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>InstagramAPI.timelineFeed()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>And similar to the previous request, we will use LastJson() to view the result. By inspecting the resulting JSON, we can see that it holds a list in a key called 'items.' Each element in that list holds information about a specific post in the timeline, including such elements as:</p>\n<ul>\n<li>[text] - holds the text value for the caption written under the post, including hashtags\n<li>[likes] - the number of likes that a post has\n<li>[created_at] -\u00a0date post created\n<li>[comments] - post comments\n<li>[image_versions] - holds links to the actual JPG file, which we will use to display it on our Jupyter notebook\n</li></li></li></li></li></ul>\n<p><b>Functions</b></p>\n<p><code>Get_posts_from_list()</code> and <code>Get_url()</code> will iterate over the list of posts and for each post will find the URL and append it to our empty list: </p>\n<p>After it's done, we should have a list of URLs like the following:</p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-2.png\" width=\"99%\"/></p>\n<p>To view the images, we can use the <code>Ipython.display</code> module as follows:</p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-3.png\" width=\"99%\"/></p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-4.jpg\" width=\"90%\"/></p>\n<p>Viewing images in a notebook is very useful and we will use those functions later to view our results, as you will see.</p>\n<p><b>Get Your Most Liked Posts</b></p>\n<p>Now we know how to make a basic request, but what if we want to get more complex requests? Here we will do something similar: we will get our most liked posts. In order to do that, first we need to get all posts in your user profile, and then sort them by number of likes:</p>\n<p><b>Get All User Posts</b></p>\n<p>In order to get all the posts we will use the <code>next_max_id</code> and <code>more_avialable</code> values to iterate over our list of results:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>import time\r\nmyposts=[]\r\nhas_more_posts = True\r\nmax_id=\"\"\r\n\r\nwhile has_more_posts:\r\n    InstagramAPI.getSelfUserFeed(maxid=max_id)\r\n    if InstagramAPI.LastJson['more_available'] is not True:\r\n        has_more_posts = False #stop condition\r\n        print \"stopped\"\r\n    \r\n    max_id = InstagramAPI.LastJson.get('next_max_id','')\r\n    myposts.extend(InstagramAPI.LastJson['items']) #merge lists\r\n    time.sleep(2) # Slows the script down to avoid flooding the servers \r\n    \r\nprint len(myposts)</pre>\n</div>\n<p><br class=\"blank\"/></p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/08/top-tweets-aug09-15.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/08/new-beginning-deep-learning.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/08/index.html\">Aug</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/08/tutorials.html\">Tutorials, Overviews</a> \u00bb A Guide to Instagramming with Python for Data Analysis (\u00a0<a href=\"/2017/n32.html\">17:n32</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556323362\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.739 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 20:02:42 -->\n<!-- Compression = gzip -->", "content_tokenized": ["nour", "galabi", "data", "enthusiast", "instagram", "the", "largest", "photo", "share", "social", "media", "platform", "with", "num", "million", "month", "activ", "user", "and", "num", "million", "pictur", "and", "video", "upload", "instagram", "everyday", "has", "huge", "amount", "data", "and", "huge", "potenti", "this", "guid", "will", "help", "view", "instagram", "sourc", "data", "and", "not", "just", "platform", "and", "how", "use", "develop", "for", "project", "about", "and", "tool", "instagram", "has", "offici", "but", "outdat", "and", "current", "veri", "limit", "thing", "can", "with", "this", "guid", "will", "use", "levpasha", "unoffici", "instagram", "which", "support", "all", "major", "featur", "like", "like", "follow", "upload", "photo", "and", "video", "etc", "written", "python", "but", "will", "focus", "onli", "the", "data", "side", "recommend", "use", "jupyt", "notebook", "and", "ipython", "normal", "python", "will", "work", "fine", "but", "may", "not", "have", "featur", "like", "display", "the", "imag", "instal", "can", "instal", "the", "librari", "use", "pip", "this", "way", "python", "pip", "instal", "gitlevpashainstagramapipythongit", "egginstagramapi", "will", "need", "ffmpeg", "have", "instal", "linux", "sudo", "aptget", "instal", "ffmpeg", "for", "window", "run", "this", "python", "interpret", "import", "imageio", "log", "instagram", "use", "the", "from", "instagramapi", "import", "instagramapi", "usernam", "instagramapi", "success", "should", "receiv", "login", "success", "messag", "simpl", "request", "with", "that", "out", "the", "way", "let", "get", "start", "with", "our", "first", "request", "result", "instagramapilastjson", "ustatus", "uok", "uuser", "ubiographi", "ubirthday", "none", "ucountrycod", "num", "uemail", "aaa", "hotmailcom", "uexternalurl", "ufullnam", "unour", "galabi", "ugend", "num", "uhasanonymousprofilepictur", "fals", "uhdprofilepicurlinfo", "uheight", "num", "uurl", "utnumaaanumaajpg", "uwidth", "num", "uhdprofilepicvers", "uheight", "num", "uurl", "utnumsnumxnumaanumaaanumajpg", "uwidth", "num", "uheight", "num", "uurl", "utnumsnumxnumajpg", "uwidth", "num", "uispriv", "true", "uisverifi", "fals", "unationalnumb", "num", "uphonenumb", "unum", "upk", "num", "uprofilepicid", "unum", "uprofilepicurl", "utnumsnumxnumajpg", "ushowconversioneditentri", "fals", "uusernam", "unourgalabi", "can", "see", "the", "result", "format", "contain", "all", "the", "request", "data", "can", "access", "the", "normal", "keyvalu", "way", "for", "exampl", "can", "use", "ani", "advanc", "view", "tool", "notepad", "view", "the", "and", "explor", "get", "and", "view", "instagram", "timelin", "now", "let", "someth", "more", "interest", "will", "request", "the", "last", "post", "the", "timelin", "and", "view", "them", "our", "notebook", "with", "this", "line", "can", "get", "the", "timelin", "and", "similar", "the", "previous", "request", "will", "use", "view", "the", "result", "inspect", "the", "result", "can", "see", "that", "hold", "list", "key", "call", "item", "each", "element", "that", "list", "hold", "inform", "about", "specif", "post", "the", "timelin", "includ", "such", "element", "text", "hold", "the", "text", "valu", "for", "the", "caption", "written", "under", "the", "post", "includ", "hashtag", "like", "the", "number", "like", "that", "post", "has", "createdat", "date", "post", "creat", "comment", "post", "comment", "imagevers", "hold", "link", "the", "actual", "file", "which", "will", "use", "display", "our", "jupyt", "notebook", "function", "and", "will", "iter", "over", "the", "list", "post", "and", "for", "each", "post", "will", "find", "the", "and", "append", "our", "empti", "list", "after", "done", "should", "have", "list", "url", "like", "the", "follow", "view", "the", "imag", "can", "use", "the", "ipythondisplay", "modul", "follow", "view", "imag", "notebook", "veri", "use", "and", "will", "use", "those", "function", "later", "view", "our", "result", "will", "see", "get", "most", "like", "post", "now", "know", "how", "make", "basic", "request", "but", "what", "want", "get", "more", "complex", "request", "here", "will", "someth", "similar", "will", "get", "our", "most", "like", "post", "order", "that", "first", "need", "get", "all", "post", "user", "profil", "and", "then", "sort", "them", "number", "like", "get", "all", "user", "post", "order", "get", "all", "the", "post", "will", "use", "the", "nextmaxid", "and", "moreavial", "valu", "iter", "over", "our", "list", "result", "import", "time", "mypost", "hasmorepost", "true", "maxid", "while", "hasmorepost", "instagramapilastjson", "moreavail", "not", "true", "hasmorepost", "fals", "stop", "condit", "print", "stop", "maxid", "merg", "list", "slow", "the", "script", "down", "avoid", "flood", "the", "server", "print"], "timestamp_scraper": 1556374255.91789, "title": "A Guide to Instagramming with Python for Data Analysis", "read_time": 205.5, "content_html": "<div class=\"post\" id=\"post-\">\n<p><b>By Nour Galaby, Data Enthusiast.</b></p>\n<p><img alt=\"Instagram header\" class=\"aligncenter\" src=\"https://image.ibb.co/h3hDsF/galaby_insta_header.jpg\" width=\"85%\"/></p>\n<p>Instagram is the largest photo\u00a0sharing social media platform with 500 million monthly active users, and 95 million pictures and videos uploaded on Instagram everyday. It has a huge amount of data and huge potential. This guide will help you view Instagram as a source of data and not just a platform,\u00a0and how to use it as a developer for your projects.</p>\n<p><b>About API and Tools</b></p>\n<p>Instagram has an official API but it is outdated and is currently very limited in things you can do with it. So in this guide I will use <a href=\"https://github.com/LevPasha/Instagram-API-python\" target=\"_blank\">LevPasha\u2019s Unofficial Instagram API</a>, which supports all major features like like, follow, upload photo and video, etc! It is written in Python, but I will focus only on the data side.</p>\n<p>I recommend using Jupyter notebooks and IPython. Normal python will work fine, but you may not have features like displaying the images </p>\n<p><b>Installation</b></p>\n<p>You can install the library using <code>pip</code> this way:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>python -m pip install -e git+https://github.com/LevPasha/Instagram-API-python.git#egg=InstagramAPI</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>You will need <code>ffmpeg</code> if you don't have it. To install it on Linux: </p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>sudo apt-get install ffmpeg</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>For Windows, run this in your Python interpreter:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>import imageio\r\nimageio.plugins.ffmpeg.download()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p><b>Logging in to Instagram Using the API</b></p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>from InstagramAPI import InstagramAPI\r\nusername=\"YOURUSERNAME\"\r\nInstagramAPI = InstagramAPI(username, \"YOURPASSWORD\")\r\nInstagramAPI.login()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>If successful, you should receive a \"Login Success\" message.</p>\n<p><b>Simple Request</b></p>\n<p>With that out of the way let's get started with our first request:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>InstagramAPI.getProfileData()\r\nresult = InstagramAPI.LastJson</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>{u'status': u'ok',\r\n u'user': {u'biography': u'',\r\n  u'birthday': None,\r\n  u'country_code': 20,\r\n  u'email': aaa@hotmail.com',\r\n  u'external_url': u'',\r\n  u'full_name': u'Nour Galaby',\r\n  u'gender': 1,\r\n  u'has_anonymous_profile_picture': False,\r\n  u'hd_profile_pic_url_info': {u'height': 1080,\r\n   u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-1aaa7448121591_1aa.jpg',\r\n   u'width': 1080},\r\n  u'hd_profile_pic_versions': [{u'height': 320,\r\n    u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s320x320/19aa23237_4337448121591_195310aaa32_a.jpg',\r\n    u'width': 320},\r\n   {u'height': 640,\r\n    u'url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s640x640/19623237_45581744812153_44_a.jpg',\r\n    u'width': 640}],\r\n  u'is_private': True,\r\n  u'is_verified': False,\r\n  u'national_number': 122,\r\n  u'phone_number': u'+201220',\r\n  u'pk': 22412229,\r\n  u'profile_pic_id': u'1550239680720880455_22',\r\n  u'profile_pic_url': u'https://instagram.fcai2-1.fna.fbcdn.net/t51.2885-19/s150x150/19623237_455817448121591_195310166162_a.jpg',\r\n  u'show_conversion_edit_entry': False,\r\n  u'username': u'nourgalaby'}}</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>As you can see, the result is in JSON format, containing all of the requested data.</p>\n<p>You can access it in the normal key/value way. For example:</p>\n<p><img alt=\"Instagram image\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-1.png\" width=\"80%\"/></p>\n<p>You can use any advance viewing tool (Notepad++) to view the JSON and explore it. </p>\n<p><b>Get and View Instagram Timeline</b></p>\n<p>Now let's do something more interesting. We will request the last posts in the timeline and view them in our notebook.</p>\n<p>With this line you can get the timeline:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>InstagramAPI.timelineFeed()</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>And similar to the previous request, we will use LastJson() to view the result. By inspecting the resulting JSON, we can see that it holds a list in a key called 'items.' Each element in that list holds information about a specific post in the timeline, including such elements as:</p>\n<ul>\n<li>[text] - holds the text value for the caption written under the post, including hashtags\n<li>[likes] - the number of likes that a post has\n<li>[created_at] -\u00a0date post created\n<li>[comments] - post comments\n<li>[image_versions] - holds links to the actual JPG file, which we will use to display it on our Jupyter notebook\n</li></li></li></li></li></ul>\n<p><b>Functions</b></p>\n<p><code>Get_posts_from_list()</code> and <code>Get_url()</code> will iterate over the list of posts and for each post will find the URL and append it to our empty list: </p>\n<p>After it's done, we should have a list of URLs like the following:</p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-2.png\" width=\"99%\"/></p>\n<p>To view the images, we can use the <code>Ipython.display</code> module as follows:</p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-3.png\" width=\"99%\"/></p>\n<p><img alt=\"Instagram\" class=\"aligncenter\" src=\"/wp-content/uploads/galaby-insta-4.jpg\" width=\"90%\"/></p>\n<p>Viewing images in a notebook is very useful and we will use those functions later to view our results, as you will see.</p>\n<p><b>Get Your Most Liked Posts</b></p>\n<p>Now we know how to make a basic request, but what if we want to get more complex requests? Here we will do something similar: we will get our most liked posts. In order to do that, first we need to get all posts in your user profile, and then sort them by number of likes:</p>\n<p><b>Get All User Posts</b></p>\n<p>In order to get all the posts we will use the <code>next_max_id</code> and <code>more_avialable</code> values to iterate over our list of results:</p>\n<div style=\"width:98%;border:1px solid #ccc; overflow:auto; padding-left:10px; padding-bottom:10px; padding-top:10px\">\n<pre>import time\r\nmyposts=[]\r\nhas_more_posts = True\r\nmax_id=\"\"\r\n\r\nwhile has_more_posts:\r\n    InstagramAPI.getSelfUserFeed(maxid=max_id)\r\n    if InstagramAPI.LastJson['more_available'] is not True:\r\n        has_more_posts = False #stop condition\r\n        print \"stopped\"\r\n    \r\n    max_id = InstagramAPI.LastJson.get('next_max_id','')\r\n    myposts.extend(InstagramAPI.LastJson['items']) #merge lists\r\n    time.sleep(2) # Slows the script down to avoid flooding the servers \r\n    \r\nprint len(myposts)</pre>\n</div>\n<p><br class=\"blank\"/></p>\n</div> ", "website": "kdnuggets"}