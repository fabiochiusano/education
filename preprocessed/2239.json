{"title": "Data Structure - Sorting Techniques", "tfidf": {"tfidf": {"common": 1.4025974025999999, "arrang": 5.767847411440001, "comparison": 4.9597000937199995, "call": 3.2029589778, "extra": 10.67652992602, "numer": 1.83325635104, "sort": 98.57647058827999, "most": 1.02096463023, "ani": 1.13383802314, "howev": 1.0945191313299998, "stabl": 6.70156184044, "doe": 1.70581282905, "requir": 4.58534706846, "algorithm": 139.753521127, "readabl": 74.8867924528, "for": 2.00063008002, "sequenc": 6.07112810707, "appear": 1.3214582986499999, "than": 1.03278688525, "particular": 2.7629655412400003, "which": 3.015575535, "inplac": 429.081081081, "they": 1.03017325287, "this": 1.00379362671, "specifi": 6.920662598080001, "also": 1.01476510067, "repres": 1.46972782818, "itself": 1.74557449148, "can": 1.17626139142, "after": 1.02070207021, "storag": 8.623574144489998, "array": 10.1444089457, "lie": 3.2157180474000002, "format": 5.0625, "and": 2.00012598426, "may": 1.05201775893, "few": 1.31729173581, "store": 3.44680851064, "the": 9.0, "notinplac": 286.054054054, "reallif": 143.027027027, "search": 3.2539454806299997, "bubbl": 23.075581395300002, "level": 1.6544393497299998, "data": 20.25861335604, "exampl": 6.01933649288, "optim": 11.5377906977, "veri": 1.25880114177, "temporari": 5.40735694823, "element": 4.72008324662, "way": 1.2190739461, "content": 7.0843373494, "lexicograph": 143.027027027, "chang": 1.1808985421, "manner": 3.93164933135, "space": 9.59274924472, "these": 1.07415426252, "equal": 5.08438751, "mergesort": 143.027027027, "that": 1.00398406375, "said": 1.54751925139, "similar": 1.37514075357, "import": 1.3401992233700002, "happen": 2.96359902931, "follow": 1.04640126549, "order": 3.7387550043299997, "fact": 1.73375559681, "refer": 1.30024570025, "not": 2.03134796238, "high": 1.14777327935, "more": 3.0515120451, "use": 2.0592775147599998, "are": 2.05981187156, "within": 1.2369302688, "scenario": 15.3986420951, "program": 2.02139037433, "some": 3.1211009174399997}, "idf": {"common": 1.4025974025999999, "arrang": 2.8839237057200005, "comparison": 4.9597000937199995, "call": 1.0676529926, "extra": 5.33826496301, "numer": 1.83325635104, "sort": 5.188235294119999, "most": 1.02096463023, "ani": 1.13383802314, "howev": 1.0945191313299998, "stabl": 6.70156184044, "doe": 1.70581282905, "requir": 1.52844902282, "algorithm": 27.9507042254, "readabl": 74.8867924528, "for": 1.00031504001, "sequenc": 6.07112810707, "appear": 1.3214582986499999, "than": 1.03278688525, "particular": 1.3814827706200001, "which": 1.005191845, "inplac": 143.027027027, "they": 1.03017325287, "this": 1.00379362671, "specifi": 6.920662598080001, "also": 1.01476510067, "repres": 1.46972782818, "itself": 1.74557449148, "can": 1.17626139142, "after": 1.02070207021, "storag": 8.623574144489998, "array": 10.1444089457, "lie": 3.2157180474000002, "format": 2.53125, "and": 1.00006299213, "may": 1.05201775893, "few": 1.31729173581, "store": 3.44680851064, "the": 1.0, "notinplac": 143.027027027, "reallif": 143.027027027, "search": 3.2539454806299997, "bubbl": 23.075581395300002, "level": 1.6544393497299998, "data": 3.37643555934, "exampl": 1.50483412322, "optim": 11.5377906977, "veri": 1.25880114177, "temporari": 5.40735694823, "element": 2.36004162331, "way": 1.2190739461, "content": 3.5421686747, "lexicograph": 143.027027027, "chang": 1.1808985421, "manner": 3.93164933135, "space": 2.39818731118, "these": 1.07415426252, "equal": 2.542193755, "mergesort": 143.027027027, "that": 1.00398406375, "said": 1.54751925139, "similar": 1.37514075357, "import": 1.3401992233700002, "happen": 2.96359902931, "follow": 1.04640126549, "order": 1.24625166811, "fact": 1.73375559681, "refer": 1.30024570025, "not": 1.01567398119, "high": 1.14777327935, "more": 1.0171706817, "use": 1.0296387573799999, "are": 1.02990593578, "within": 1.2369302688, "scenario": 15.3986420951, "program": 2.02139037433, "some": 1.04036697248}, "logidf": {"common": 0.338325805271, "arrang": 1.05915176475, "comparison": 1.60134527393, "call": 0.0654627744488, "extra": 1.67490068688, "numer": 0.606093812346, "sort": 1.64639361896, "most": 0.020747896295599998, "ani": 0.125608358366, "howev": 0.0903151173475, "stabl": 1.90234060974, "doe": 0.5340417297169999, "requir": 0.424253510675, "algorithm": 3.33044239518, "readabl": 4.31597753923, "for": 0.00031499039539700004, "sequenc": 1.8035444374, "appear": 0.278735898493, "than": 0.0322608622182, "particular": 0.323157393804, "which": 0.00517841384543, "inplac": 4.96303361259, "they": 0.0297269947676, "this": 0.0037864490525, "specifi": 1.93451151621, "also": 0.0146571578, "repres": 0.38507723275, "itself": 0.5570837229510001, "can": 0.162341096394, "after": 0.020490694648099998, "storag": 2.1544996326700003, "array": 2.31692271093, "lie": 1.16805067564, "format": 0.9287132518729999, "and": 6.29901420636e-05, "may": 0.050709995284400004, "few": 0.275577913653, "store": 1.2374487335200002, "the": 0.0, "notinplac": 4.96303361259, "reallif": 4.96303361259, "search": 1.1798682540899998, "bubbl": 3.13877497597, "level": 0.503462189943, "data": 1.2168205848, "exampl": 0.40868267499899996, "optim": 2.4456277954099996, "veri": 0.230159793238, "temporari": 1.68776042417, "element": 0.8586792558769999, "way": 0.19809150993500002, "content": 1.26473915954, "lexicograph": 4.96303361259, "chang": 0.166275625058, "manner": 1.36905901503, "space": 0.874713164972, "these": 0.0715336194008, "equal": 0.933027391343, "mergesort": 4.96303361259, "that": 0.00397614837964, "said": 0.436653165815, "similar": 0.318556092114, "import": 0.292818277066, "happen": 1.08640441802, "follow": 0.045356911094199995, "order": 0.22014038079300002, "fact": 0.5502899207949999, "refer": 0.262553246798, "not": 0.0155524130075, "high": 0.13782378654000002, "more": 0.017024931599999998, "use": 0.0292080197316, "are": 0.0294674735827, "within": 0.21263272059799998, "scenario": 2.73427932989, "program": 0.7037855787649999, "some": 0.0395735090645}, "freq": {"common": 1, "arrang": 2, "comparison": 1, "call": 3, "extra": 2, "numer": 1, "sort": 19, "most": 1, "ani": 1, "howev": 1, "stabl": 1, "doe": 1, "requir": 3, "algorithm": 5, "readabl": 1, "for": 2, "sequenc": 1, "appear": 1, "than": 1, "particular": 2, "which": 3, "inplac": 3, "they": 1, "this": 1, "specifi": 1, "also": 1, "repres": 1, "itself": 1, "can": 1, "after": 1, "storag": 1, "array": 1, "lie": 1, "format": 2, "and": 2, "may": 1, "few": 1, "store": 1, "the": 9, "notinplac": 2, "reallif": 1, "search": 1, "bubbl": 1, "level": 1, "data": 6, "exampl": 4, "optim": 1, "veri": 1, "temporari": 1, "element": 2, "way": 1, "content": 2, "lexicograph": 1, "chang": 1, "manner": 1, "space": 4, "these": 1, "equal": 2, "mergesort": 1, "that": 1, "said": 1, "similar": 1, "import": 1, "happen": 1, "follow": 1, "order": 3, "fact": 1, "refer": 1, "not": 2, "high": 1, "more": 3, "use": 2, "are": 2, "within": 1, "scenario": 1, "program": 1, "some": 3}, "logtfidf": {"common": 0.338325805271, "arrang": 2.1183035295, "comparison": 1.60134527393, "call": 0.1963883233464, "extra": 3.34980137376, "numer": 0.606093812346, "sort": 31.28147876024, "most": 0.020747896295599998, "ani": 0.125608358366, "howev": 0.0903151173475, "stabl": 1.90234060974, "doe": 0.5340417297169999, "requir": 1.272760532025, "algorithm": 16.6522119759, "readabl": 4.31597753923, "for": 0.0006299807907940001, "sequenc": 1.8035444374, "appear": 0.278735898493, "than": 0.0322608622182, "particular": 0.646314787608, "which": 0.01553524153629, "inplac": 14.889100837770002, "they": 0.0297269947676, "this": 0.0037864490525, "specifi": 1.93451151621, "also": 0.0146571578, "repres": 0.38507723275, "itself": 0.5570837229510001, "can": 0.162341096394, "after": 0.020490694648099998, "storag": 2.1544996326700003, "array": 2.31692271093, "lie": 1.16805067564, "format": 1.8574265037459998, "and": 0.0001259802841272, "may": 0.050709995284400004, "few": 0.275577913653, "store": 1.2374487335200002, "the": 0.0, "notinplac": 9.92606722518, "reallif": 4.96303361259, "search": 1.1798682540899998, "bubbl": 3.13877497597, "level": 0.503462189943, "data": 7.3009235088, "exampl": 1.6347306999959998, "optim": 2.4456277954099996, "veri": 0.230159793238, "temporari": 1.68776042417, "element": 1.7173585117539998, "way": 0.19809150993500002, "content": 2.52947831908, "lexicograph": 4.96303361259, "chang": 0.166275625058, "manner": 1.36905901503, "space": 3.498852659888, "these": 0.0715336194008, "equal": 1.866054782686, "mergesort": 4.96303361259, "that": 0.00397614837964, "said": 0.436653165815, "similar": 0.318556092114, "import": 0.292818277066, "happen": 1.08640441802, "follow": 0.045356911094199995, "order": 0.6604211423790001, "fact": 0.5502899207949999, "refer": 0.262553246798, "not": 0.031104826015, "high": 0.13782378654000002, "more": 0.05107479479999999, "use": 0.0584160394632, "are": 0.0589349471654, "within": 0.21263272059799998, "scenario": 2.73427932989, "program": 0.7037855787649999, "some": 0.11872052719350001}}, "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<meta charset=\"utf-8\"/>\n<title>Data Structures and Algorithms Sorting Techniques</title>\n<meta content=\"Data Structures and Algorithms Sorting Techniques - Learn Data Structures and Algorithm using c, C++ and Java in simple and easy steps starting from basic to advanced concepts with examples including Overview, Environment Setup, Algorithm, Asymptotic Analysis, Greedy Algorithms, Divide and Conquer, Dynamic Programming, Data Structures, Array, Linked List, Doubly Linked List, Circular List, Stack, Parsing Expression, Queue, Priority queue, Linear, Binary, Interpolation Search, Tree, Tree Traversal, Binary Search Tree, B+, AVL, Spanning, Tower of Hanoi, Hash Table, Heap, Graph, Depth, Breadth First Traversal, Search techniques, Sorting techniques, Sorting Algorithm, Bubble, Merge Sort Algorithm, Insertion, Selection, Shell, Quick Sort, Recursion, Fibonacci Series.\" name=\"Description\">\n<meta content=\"Overview, Environment Setup, Algorithm, Asymptotic Analysis, Greedy Algorithms, Divide and Conquer, Dynamic Programming, Data Structures, Array, Linked List, Doubly Linked List, Circular List, Stack, Parsing Expression, Queue, Priority queue, Linear, Binary, Interpolation Search, Tree, Tree Traversal, Binary Search Tree, B+, AVL, Spanning, Tower of Hanoi, Hash Table, Heap, Graph, Depth, Breadth First Traversal, Search techniques, Sorting techniques, Sorting Algorithm, Bubble, Merge Sort Algorithm, Insertion, Selection, Shell, Quick Sort, Recursion, Fibonacci Series.\" name=\"Keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #cd3300 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #cd3300 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #cd3300 !important;}\r\n.submenu-item{ border-bottom: 2px solid #cd3300 !important; border-top: 2px solid #cd3300 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#cd3300; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/data_structures_algorithms/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<style>\r\n.ts {\r\n   text-align:center !important;\r\n   vertical-align:middle !important;\r\n}\r\n</style>\n<div class=\"mini-logo\">\n<img alt=\"Data Structures &amp; Algorithms Tutorial\" src=\"/data_structures_algorithms/images/data-structure-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Data Structures &amp; Algorithms</li>\n<li><a href=\"/data_structures_algorithms/index.htm\">DSA - Home</a></li>\n<li><a href=\"/data_structures_algorithms/data_structure_overview.htm\">DSA - Overview</a></li>\n<li><a href=\"/data_structures_algorithms/data_structure_environment.htm\">DSA - Environment Setup</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Algorithm</li>\n<li><a href=\"/data_structures_algorithms/algorithms_basics.htm\">DSA - Algorithms Basics</a></li>\n<li><a href=\"/data_structures_algorithms/asymptotic_analysis.htm\">DSA - Asymptotic Analysis</a></li>\n<li><a href=\"/data_structures_algorithms/greedy_algorithms.htm\">DSA - Greedy Algorithms</a></li>\n<li><a href=\"/data_structures_algorithms/divide_and_conquer.htm\">DSA - Divide and Conquer</a></li>\n<li><a href=\"/data_structures_algorithms/dynamic_programming.htm\">DSA - Dynamic Programming</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Data Structures</li>\n<li><a href=\"/data_structures_algorithms/data_structures_basics.htm\">DSA - Data Structure Basics</a></li>\n<li><a href=\"/data_structures_algorithms/array_data_structure.htm\">DSA - Array Data Structure</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Linked Lists</li></ul></aside></div></div></div></div>\n<li><a href=\"/data_structures_algorithms/linked_list_algorithms.htm\">DSA - Linked List Basics</a></li>\n<li><a href=\"/data_structures_algorithms/doubly_linked_list_algorithm.htm\">DSA - Doubly Linked List</a></li>\n<li><a href=\"/data_structures_algorithms/circular_linked_list_algorithm.htm\">DSA - Circular Linked List</a></li>\n\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Stack &amp; Queue</li>\n<li><a href=\"/data_structures_algorithms/stack_algorithm.htm\">DSA - Stack</a></li>\n<li><a href=\"/data_structures_algorithms/expression_parsing.htm\">DSA - Expression Parsing</a></li>\n<li><a href=\"/data_structures_algorithms/dsa_queue.htm\">DSA - Queue</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Searching Techniques</li>\n<!--<li style=\"background:yellow;\"><a href=\"/data_structures_algorithms/searching_algorithms.htm\">DSA - Searching Algorithms</a></li>-->\n<li><a href=\"/data_structures_algorithms/linear_search_algorithm.htm\">DSA - Linear Search</a></li>\n<li><a href=\"/data_structures_algorithms/binary_search_algorithm.htm\">DSA - Binary Search</a></li>\n<li><a href=\"/data_structures_algorithms/interpolation_search_algorithm.htm\">DSA - Interpolation Search</a></li>\n<li><a href=\"/data_structures_algorithms/hash_data_structure.htm\">DSA - Hash Table</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Sorting Techniques</li>\n<li><a href=\"/data_structures_algorithms/sorting_algorithms.htm\">DSA - Sorting Algorithms</a></li>\n<li><a href=\"/data_structures_algorithms/bubble_sort_algorithm.htm\">DSA - Bubble Sort</a></li>\n<li><a href=\"/data_structures_algorithms/insertion_sort_algorithm.htm\">DSA - Insertion Sort</a></li>\n<li><a href=\"/data_structures_algorithms/selection_sort_algorithm.htm\">DSA - Selection Sort</a></li>\n<li><a href=\"/data_structures_algorithms/merge_sort_algorithm.htm\">DSA - Merge Sort</a></li>\n<li><a href=\"/data_structures_algorithms/shell_sort_algorithm.htm\">DSA - Shell Sort</a></li>\n<li><a href=\"/data_structures_algorithms/quick_sort_algorithm.htm\">DSA - Quick Sort</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Graph Data Structure</li>\n<li><a href=\"/data_structures_algorithms/graph_data_structure.htm\">DSA - Graph Data Structure</a></li>\n<li><a href=\"/data_structures_algorithms/depth_first_traversal.htm\">DSA - Depth First Traversal</a></li>\n<li><a href=\"/data_structures_algorithms/breadth_first_traversal.htm\">DSA - Breadth First Traversal</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Tree Data Structure</li>\n<li><a href=\"/data_structures_algorithms/tree_data_structure.htm\">DSA - Tree Data Structure</a></li>\n<li><a href=\"/data_structures_algorithms/tree_traversal.htm\">DSA - Tree Traversal</a></li>\n<li><a href=\"/data_structures_algorithms/binary_search_tree.htm\">DSA - Binary Search Tree</a></li>\n<li><a href=\"/data_structures_algorithms/avl_tree_algorithm.htm\">DSA - AVL Tree</a></li>\n<li><a href=\"/data_structures_algorithms/spanning_tree.htm\">DSA - Spanning Tree</a></li>\n<li><a href=\"/data_structures_algorithms/heap_data_structure.htm\">DSA - Heap</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Recursion</li>\n<li><a href=\"/data_structures_algorithms/recursion_basics.htm\">DSA - Recursion Basics</a></li>\n<li><a href=\"/data_structures_algorithms/tower_of_hanoi.htm\">DSA - Tower of Hanoi</a></li>\n<li><a href=\"/data_structures_algorithms/fibonacci_series.htm\">DSA - Fibonacci Series</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">DSA Useful Resources</li>\n<li><a href=\"/data_structures_algorithms/data_structures_algorithms_questions_answers.htm\">DSA - Questions and Answers</a></li>\n<li><a href=\"/data_structures_algorithms/dsa_quick_guide.htm\">DSA - Quick Guide</a></li>\n<li><a href=\"/data_structures_algorithms/dsa_useful_resources.htm\">DSA - Useful Resources</a></li>\n<li><a href=\"/data_structures_algorithms/dsa_discussion.htm\">DSA - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n\n\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>Data Structure - Sorting Techniques</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_structures_algorithms/hash_data_structure.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_structures_algorithms/bubble_sort_algorithm.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>Sorting refers to arranging data in a particular format. Sorting algorithm specifies the way to arrange data in a particular order. Most common orders are in numerical or lexicographical order.</p>\n<p>The importance of sorting lies in the fact that data searching can be optimized to a very high level, if data is stored in a sorted manner. Sorting is also used to represent data in more readable formats. Following are some of the examples of sorting in real-life scenarios \u2212</p>\n<ul class=\"list\">\n<li><p><b>Telephone Directory</b> \u2212 The telephone directory stores the telephone numbers of people sorted by their names, so that the names can be searched easily.</p></li>\n<li><p><b>Dictionary</b> \u2212 The dictionary stores words in an alphabetical order so that searching of any word becomes easy.</p></li>\n</ul>\n<h2>In-place Sorting and Not-in-place Sorting</h2>\n<p>Sorting algorithms may require some extra space for comparison and temporary storage of few data elements. These algorithms do not require any extra space and sorting is said to happen in-place, or for example, within the array itself. This is called <b>in-place sorting</b>. Bubble sort is an example of in-place sorting.</p>\n<p>However, in some sorting algorithms, the program requires space which is more than or equal to the elements being sorted. Sorting which uses equal or more space is called <b>not-in-place sorting</b>. Merge-sort is an example of not-in-place sorting.</p>\n<h2>Stable and Not Stable Sorting</h2>\n<p>If a sorting algorithm, after sorting the contents, does not change the sequence of similar content in which they appear, it is called <b>stable sorting</b>.</p>\n<img alt=\"Stable Sorting\" src=\"/data_structures_algorithms/images/stable_sort.jpg\">\n<p>If a sorting algorithm, after sorting the contents, changes the sequence of similar content in which they appear, it is called <b>unstable sorting</b>.</p>\n<img alt=\"Unstable Sorting\" src=\"/data_structures_algorithms/images/unstable_sort.jpg\"/>\n<p>Stability of an algorithm matters when we wish to maintain the sequence of original elements, like in a tuple for example.</p>\n<h2>Adaptive and Non-Adaptive Sorting Algorithm</h2>\n<p>A sorting algorithm is said to be adaptive, if it takes advantage of already 'sorted' elements in the list that is to be sorted. That is, while sorting if the source list has some element already sorted, adaptive algorithms will take this into account and will try not to re-order them.</p>\n<p>A non-adaptive algorithm is one which does not take into account the elements which are already sorted. They try to force every single element to be re-ordered to confirm their sortedness.</p>\n<h2>Important Terms</h2>\n<p>Some terms are generally coined while discussing sorting techniques, here is a brief introduction to them \u2212</p>\n<h3>Increasing Order</h3>\n<p>A sequence of values is said to be in <b>increasing order</b>, if the successive element is greater than the previous one. For example, 1, 3, 4, 6, 8, 9 are in increasing order, as every next element is greater than the previous element.</p>\n<h3>Decreasing Order</h3>\n<p>A sequence of values is said to be in <b>decreasing order</b>, if the successive element is less than the current one. For example, 9, 8, 6, 4, 3, 1 are in decreasing order, as every next element is less than the previous element.</p>\n<h3>Non-Increasing Order</h3>\n<p>A sequence of values is said to be in <b>non-increasing order</b>, if the successive element is less than or equal to its previous element in the sequence. This order occurs when the sequence contains duplicate values. For example, 9, 8, 6, 3, 3, 1 are in non-increasing order, as every next element is less than or equal to (in case of 3) but not greater than any previous element.</p>\n<h3>Non-Decreasing Order</h3>\n<p>A sequence of values is said to be in <b>non-decreasing order</b>, if the successive element is greater than or equal to its previous element in the sequence. This order occurs when the sequence contains duplicate values. For example, 1, 3, 3, 6, 8, 9 are in non-decreasing order, as every next element is greater than or equal to (in case of 3) but not less than the previous one.</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_structures_algorithms/hash_data_structure.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_structures_algorithms/bubble_sort_algorithm.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</img></div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n\n\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "content_html": "<p>Sorting refers to arranging data in a particular format. Sorting algorithm specifies the way to arrange data in a particular order. Most common orders are in numerical or lexicographical order.</p> <p>The importance of sorting lies in the fact that data searching can be optimized to a very high level, if data is stored in a sorted manner. Sorting is also used to represent data in more readable formats. Following are some of the examples of sorting in real-life scenarios \u2212</p> <p>Sorting algorithms may require some extra space for comparison and temporary storage of few data elements. These algorithms do not require any extra space and sorting is said to happen in-place, or for example, within the array itself. This is called <b>in-place sorting</b>. Bubble sort is an example of in-place sorting.</p> <p>However, in some sorting algorithms, the program requires space which is more than or equal to the elements being sorted. Sorting which uses equal or more space is called <b>not-in-place sorting</b>. Merge-sort is an example of not-in-place sorting.</p> <p>If a sorting algorithm, after sorting the contents, does not change the sequence of similar content in which they appear, it is called <b>stable sorting</b>.</p> ", "content": "Sorting refers to arranging data in a particular format. Sorting algorithm specifies the way to arrange data in a particular order. Most common orders are in numerical or lexicographical order. The importance of sorting lies in the fact that data searching can be optimized to a very high level, if data is stored in a sorted manner. Sorting is also used to represent data in more readable formats. Following are some of the examples of sorting in real-life scenarios \u2212 Sorting algorithms may require some extra space for comparison and temporary storage of few data elements. These algorithms do not require any extra space and sorting is said to happen in-place, or for example, within the array itself. This is called in-place sorting . Bubble sort is an example of in-place sorting. However, in some sorting algorithms, the program requires space which is more than or equal to the elements being sorted. Sorting which uses equal or more space is called not-in-place sorting . Merge-sort is an example of not-in-place sorting. If a sorting algorithm, after sorting the contents, does not change the sequence of similar content in which they appear, it is called stable sorting .", "read_time": 59.099999999999994, "title_html": "<h1>Data Structure - Sorting Techniques</h1> ", "url": "https://www.tutorialspoint.com/data_structures_algorithms/sorting_algorithms.htm"}