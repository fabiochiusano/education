{"content": "comments By Preetish Panda , Prompt Cloud . Adele is one of the most famous contemporary singers and undoubtedly one of the few artists loved by people of all ages. Her album 21 received tremendous success and earned numerous mentions in the Guinness Book of World Records. Adele was also the first female artist to get two albums in the top five of the Billboard 200 at the same time and two singles in the top five of the Billboard Hot 100. As a lead artist she was the first woman in the history of the Billboard Hot 100 to have three simultaneous top 10 singles -- \"Rolling in the Deep\", \"Someone Like You\", and \"Set Fire to the Rain\". Enough said about her singing prowess! What\u2019s fascinating for us is the easy availability of her lyrics exposed by Genius API, audio features via Spotify\u2019s API and the potential to analyze them. In this study, I\u2019ll be performing sentiment analysis on her studio albums, i.e., 19, 21, 25. Data set The Genius.com API allowed me to download the lyrics and associated data points. In total the data set consists of 41 tracks and the following data fields: artist name album name track title track number lyric text line number Goal The goal of this study is to perform text mining techniques, specifically Natural Language Processing (NLP) on the lyrics to uncover the underlying emotions and sentiments. Given below are the specific questions we\u2019ll answer: What are the most frequent words used by her? Which are the positive and negative words prevalent in her songs? What are the overall sentiments expressed in her songs? Which are the top words used to describe different emotions? Which are the songs associated with different emotions? What type of relationship exists between the emotions and the albums? What does the valence score vary for her albums? (Spotify API will be used here) Most frequent words Let\u2019s begin by loading the required packages. After that we will create a word cloud to get an overview of the word frequency. \r library (geniusR)\r library (magrittr)\r library (purrr)\r library (dplyr)\r library (tidyr)\r library (ggplot2)\r library (tm)\r library (wordcloud)\r library (syuzhet)\r library (circlize)\r library (tidytext)\r library (reshape2)\r \r albums <- \r ),\r album = \r )\r \r album_lyrics % \r )\r \r lyrics % \r  %>% \r )\r \r lyrics <- \r \r lyrics_text <- lyrics$lyric\r #Removing punctuations and alphanumeric content \r lyrics_text<- \r lyrics_text<- \\1+\" , \"\" , lyrics_text)\r #creating a text corpus \r docs <- )\r # Converting the text to lowercase \r docs <- )\r # Removing english common stopwords \r docs <- )\r # creating term document matrix \r tdm <- \r # defining tdm as matrix \r m <- \r # getting word counts in decreasing order \r word_freqs = , decreasing= TRUE ) \r # creating a data frame with words and their frequencies \r lyrics_wc_df <- , freq=word_freqs)\r \r lyrics_wc_df <- lyrics_wc_df[ 1:300 ,]\r \r # plotting word cloud \r \r \r ,\r max.words= 200 , random.order= FALSE , rot.per= 0.15 , \r colors=)\r \r This gives us the following visualization: We can see that \u2018love\u2019 is the most frequently used word and the other high frequency words are \u2018like\u2019, \u2018never\u2019, \u2018say\u2019, \u2018heart\u2019 and \u2018ill\u2019. This makes sense as many of her songs are actually about love and heartbreak. Positive and negative words in the songs This will be another word cloud, but this time we\u2019re going to segregate the words into positive and negative polarity. We\u2019ll are using the \u2018bing\u2019 method of \u2018syuzhet\u2019 package for this visualization. \r lyrics$lyric <- \r \r tidy_lyrics % \r \r \r \r tidy_lyrics %>%\r ) %>%\r  %>%\r  %>%\r , max.words = 250 )\r The resulting visualization shows that the predominant positive words are \u2018love\u2019, \u2018like\u2019, \u2018better\u2019, \u2018right, free\u2019, \u2018wonders\u2019 and negative words are \u2018rumours\u2019, \u2018miss\u2019, \u2018fall\u2019, \u2018fool\u2019, \u2018crazy\u2019, pain, hurts\u2019, \u2018wrong\u2019, \u2018tired\u2019. Overall sentiments expressed This chart will show us the cumulative score generated for different emotions expressed in her songs. For this chart we\u2019ll use the \u2018nrc\u2019 method of \u2018syuzhet\u2019 package. Given below is the code for the same: \r # Getting the sentiment value for the lyrics \r ty_sentiment <- )\r \r # Dataframe with cumulative value of the sentiments \r Sentimentscores <- )\r \r # Dataframe with sentiment and score as columns \r  <- \"Score\" \r sentimentscores <- ,sentimentscores)\r  <- NULL \r \r # Plot for the cumulative sentiments \r )+\r ,stat = \"identity\" )+\r +\r ++\r +\r  \r The chart given below shows that the positive score is higher than negative which might have resulted from the high frequency usage of \u2018love\u2019. We also see that \u2018joy\u2019, \u2018anticipation\u2019 and \u2018sadness\u2019 are the top three emotions. Top words used to describe different emotions This chart will help us find out the most frequently used words that are associated with the emotions spanning across all the albums. Execute the following code to generate the chart. \r song_wrd_count % \r \r lyric_counts %\r  %>% \r \r \r lyric_sentiment % \r ,by= \"word\" )\r \r lyric_sentiment %>% \r  %>% \r %>% %>% \r  %>%\r ,y=n,fill=sentiment)) +\r  + \r  +\r  + +\r  +\r \r The chart shows that in terms of polarity, \u2018love\u2019, \u2018baby\u2019, \u2018young\u2019 are the top 3 positive words and \u2018fall\u2019, \u2018words\u2019, \u2018leave\u2019 are the negative words. Coming to emotions, sadness is primarily respected by words such as \u2018fall\u2019, \u2019leave\u2019, \u2018crazy\u2019.", "title_html": "<h1 id=\"title\">The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs</h1> ", "url": "https://www.kdnuggets.com/2018/09/sentiment-analysis-adele-songs.html", "tfidf": {"tfidf": {"after": 1.02070207021, "natur": 1.5392670157100001, "can": 1.17626139142, "rotper": 690.260869565, "vari": 2.4970116388799997, "fall": 5.08357348704, "hot": 9.235602094239999, "lyriccount": 690.260869565, "remov": 4.011623499680001, "here": 2.42307692308, "five": 2.75481520042, "wrong": 5.478260869570001, "punctuat": 42.1114058355, "differ": 4.946179609, "song": 20.60034602076, "with": 5.005991044949999, "joy": 12.928338762200001, "panda": 111.802816901, "datafram": 1380.52173913, "number": 2.20285833218, "audio": 9.05647461495, "rain": 6.854922279789999, "decreas": 9.046153846160001, "specif": 3.7438981252199994, "about": 2.12972030318, "say": 1.7544480053, "crazi": 42.6774193548, "spotifi": 1380.52173913, "never": 1.55769230769, "she": 2.16, "type": 2.0281042411900003, "frequenc": 35.2408435072, "higher": 2.1218925421, "artist": 11.46695557964, "defin": 2.72830383227, "bing": 48.1090909091, "code": 7.761427523839999, "between": 1.03453668708, "emot": 54.16376042457, "tidylyr": 1380.52173913, "point": 1.25990000794, "creat": 4.9971671388, "express": 5.736239913270001, "plot": 10.767039674460001, "describ": 2.94054454528, "lyricswcdf": 2070.782608695, "love": 17.83820224722, "singl": 3.21897810218, "them": 1.09876115994, "singer": 5.1428571428600005, "load": 6.80497213888, "stat": 52.92, "studi": 3.06368197608, "than": 1.03278688525, "execut": 2.2363713199, "order": 1.24625166811, "frame": 6.280063291139999, "given": 4.06278256419, "word": 41.320357587429996, "sing": 6.718578078709999, "track": 9.382978723410002, "deep": 3.6279707495399998, "mani": 1.04426757877, "will": 6.1240549298, "associ": 3.9789473684100005, "overview": 12.6805111821, "age": 1.48623853211, "songwrdcount": 690.260869565, "polar": 29.1570247934, "valenc": 126.0, "analysi": 3.47852760736, "adel": 183.53757225439998, "sentimentscor": 2070.782608695, "prowess": 47.391044776099996, "one": 2.01254991444, "below": 6.76822509591, "perform": 3.0627954085000004, "but": 1.01632417899, "segreg": 19.6485148515, "exist": 1.4647107666799999, "guin": 27.3253012048, "overal": 6.088590604019999, "matrix": 45.2307692308, "record": 1.42334588488, "lead": 1.2664326739, "album": 65.75425678782001, "right": 1.4054532577899999, "success": 1.32002993265, "generat": 4.10550814584, "cloud": 42.4775919732, "visual": 15.68258149491, "use": 8.237110059039999, "follow": 3.1392037964699995, "data": 16.8821777967, "famous": 2.28201811125, "name": 2.20423464074, "out": 1.06016694491, "her": 17.770315648099995, "prompt": 4.44456886898, "lyricstext": 2761.04347826, "high": 2.2955465587, "syuzhet": 2070.782608695, "line": 1.4182597820299998, "under": 1.0781663837, "numer": 1.83325635104, "also": 2.02953020134, "count": 3.48157894737, "field": 1.7790228597, "pain": 6.55762081784, "tire": 12.5106382979, "usag": 6.427530364369999, "woman": 3.47852760736, "sentiment": 79.38, "method": 5.1428571428600005, "babi": 7.517045454550001, "geniusr": 690.260869565, "the": 63.0, "doc": 104.44736842110001, "preetish": 690.260869565, "miss": 3.53664513255, "peopl": 1.21320495186, "tidyr": 690.260869565, "easi": 5.2937645882, "ill": 4.93196644921, "magrittr": 690.260869565, "said": 1.54751925139, "english": 1.7432744043000001, "convert": 3.2740771293099997, "lyricsenti": 1380.52173913, "sens": 2.8365195640499996, "tidytext": 690.260869565, "studio": 4.9273743016800005, "anoth": 1.13643521832, "heartbreak": 68.72727272729999, "wordcloud": 690.260869565, "let": 3.48616600791, "world": 1.11340206186, "genius": 14.5517873511, "actual": 1.87482286254, "histori": 1.20629131525, "fillsenti": 690.260869565, "which": 4.02076738, "featur": 1.52712581762, "hurt": 11.6392961877, "term": 2.79040337464, "ident": 2.80792359392, "earn": 3.3220338983099995, "other": 1.00992366412, "techniqu": 3.7293868921800004, "mine": 4.875921375919999, "consist": 1.4901445466499998, "show": 5.0681564246, "valu": 4.555523672880001, "begin": 1.3305397251100002, "see": 2.54484251022, "billboard": 55.640186916000005, "such": 1.06151377374, "corpus": 24.091047041, "preval": 9.997481108310001, "get": 7.1425036554, "like": 3.44755700325, "three": 2.13243787778, "respect": 1.6443293630200002, "stopword": 690.260869565, "reshapenum": 690.260869565, "circliz": 690.260869565, "process": 1.69524826482, "document": 2.5409731114, "expos": 5.03680203046, "tremend": 16.0363636364, "content": 3.5421686747, "receiv": 1.3054847463200001, "languag": 2.29488291414, "set": 3.56123822343, "text": 12.51310344828, "question": 2.20408163265, "time": 2.02254920696, "from": 1.00056721497, "leav": 3.3230769230799995, "answer": 4.64890190337, "sad": 35.1238938054, "fool": 19.4797546012, "num": 15.004725600150001, "same": 2.23715916296, "tysenti": 690.260869565, "most": 5.10482315115, "free": 1.71818181818, "fascin": 17.446153846199998, "for": 8.00252032008, "color": 3.8255421686699997, "contemporari": 2.835, "geniuscom": 690.260869565, "all": 2.02293577982, "top": 12.871438498940002, "roll": 4.27578777269, "book": 1.43414634146, "albumlyr": 690.260869565, "are": 15.4485890367, "uncov": 14.8097014925, "rumour": 18.6776470588, "better": 2.0065722952500002, "result": 2.29223216864, "titl": 1.87261146497, "frequent": 8.42004773268, "primarili": 2.43459592087, "cumul": 105.6053215077, "undoubt": 27.0459965928, "and": 21.001322834729997, "download": 14.6457564576, "purrr": 690.260869565, "negat": 22.55113636362, "posit": 8.23515172476, "column": 7.078020508250001, "librari": 32.1919567422, "fire": 2.1153897401700004, "femal": 3.18220084185, "alphanumer": 256.064516129, "someon": 4.9350326391, "simultan": 5.32930513595, "doe": 1.70581282905, "lowercas": 162.0, "avail": 1.7288467821, "dplyr": 690.260869565, "wordfreq": 690.260869565, "give": 1.3653250774, "make": 1.0762660158600001, "anticip": 7.793814432989999, "their": 1.01547908405, "few": 1.31729173581, "predomin": 5.33467741935, "this": 10.037936267100001, "goal": 6.56304257958, "total": 1.5460122699399999, "packag": 23.485207100580002, "two": 2.0275862069, "chart": 50.72204472846, "common": 1.4025974025999999, "comment": 3.05954904606, "maxword": 1380.52173913, "freqwordfreq": 690.260869565, "randomord": 690.260869565, "heart": 3.00340522134, "ggplotnum": 690.260869565, "nrc": 283.5, "analyz": 9.68639414277, "into": 1.01502461479, "young": 1.8886509636000002, "come": 1.32831325301, "via": 2.2978723404299997, "might": 2.1561863370900003, "that": 7.0278884462499995, "enough": 2.2319696330700003, "lyric": 100.59677419351999, "requir": 1.52844902282, "across": 1.7318642958400001, "tdm": 1380.52173913, "first": 2.01523229246, "what": 6.2671719563999995, "allow": 1.2716059271100002, "wonder": 7.265903890160001, "have": 2.0297896822799997, "relationship": 2.39132399458, "score": 21.442463533250002, "help": 1.39962972759, "find": 1.7294117647099998, "span": 6.17262830482, "potenti": 2.52080025405, "mention": 2.53894130817}, "logtfidf": {"after": 0.020490694648099998, "natur": 0.431306339292, "can": 0.162341096394, "rotper": 6.5370695979699995, "vari": 0.915094672432, "fall": 1.582206503856, "hot": 3.05983725592, "lyriccount": 6.5370695979699995, "remov": 1.3920976831760001, "here": 0.8850381883700001, "five": 0.640406363812, "wrong": 1.70078769102, "punctuat": 3.7403186264499997, "differ": 0.849284485248, "song": 7.4012904213, "with": 0.00598745856695, "joy": 2.5594217052, "panda": 4.7167367562999996, "datafram": 13.074139195939999, "number": 0.1932171568372, "audio": 2.2034799289800002, "rain": 1.92496697521, "decreas": 3.01838499488, "specif": 1.253960335082, "about": 0.1256869549492, "say": 0.562154280552, "crazi": 6.1210455581400005, "spotifi": 13.074139195939999, "never": 0.443205436091, "she": 0.7701082216959999, "type": 0.707101485387, "frequenc": 8.703645502919999, "higher": 0.752308398995, "artist": 4.21270044068, "defin": 1.00368010925, "bing": 3.87347115944, "code": 2.71203819194, "between": 0.033953681165299995, "emot": 16.15308732567, "tidylyr": 13.074139195939999, "point": 0.23103235903299998, "creat": 0.890307274056, "express": 1.9445749189230002, "plot": 3.36668481018, "describ": 0.77089520625, "lyricswcdf": 19.61120879391, "love": 6.537497291699999, "singl": 0.951833538118, "them": 0.0941833269093, "singer": 1.6376087894, "load": 1.91765354188, "stat": 3.96878133925, "studi": 0.852940544442, "than": 0.0322608622182, "execut": 0.804854605864, "order": 0.22014038079300002, "frame": 1.8373800586400002, "given": 0.9097674324930001, "word": 13.474804894855, "sing": 1.9048765367200002, "track": 3.4208549552100003, "deep": 1.2886734698, "mani": 0.0433157581221, "will": 1.0139326745750001, "associ": 0.8472150460530001, "overview": 2.54006626224, "age": 0.39624845300300005, "songwrdcount": 6.5370695979699995, "polar": 5.35909738194, "valenc": 4.83628190695, "analysi": 1.2466091029200002, "adel": 9.038544438819999, "sentimentscor": 19.61120879391, "prowess": 3.85843328208, "one": 0.012510703291, "below": 2.440879775808, "perform": 0.85236170116, "but": 0.0161923720719, "segreg": 2.97800175538, "exist": 0.38165779408699996, "guin": 3.3078130570499997, "overal": 2.2265388929400003, "matrix": 6.2372608197599995, "record": 0.353010356953, "lead": 0.23620402986699998, "album": 17.89829850285, "right": 0.34035985417, "success": 0.27765441259199997, "generat": 1.438364683472, "cloud": 9.45072931232, "visual": 4.96181504658, "use": 0.2336641578528, "follow": 0.1360707332826, "data": 6.084102924, "famous": 0.825060187979, "name": 0.19446633276860004, "out": 0.0584263909193, "her": 5.7494431199100005, "prompt": 1.4916828719100002, "lyricstext": 26.148278391879998, "high": 0.27564757308000004, "syuzhet": 19.61120879391, "line": 0.349430614452, "under": 0.07526180538319999, "numer": 0.606093812346, "also": 0.0293143156, "count": 1.24748591139, "field": 0.5760642583510001, "pain": 1.88062785696, "tire": 2.52657934619, "usag": 1.86059038428, "woman": 1.2466091029200002, "sentiment": 18.35843924544, "method": 1.888923217682, "babi": 2.01717316908, "geniusr": 6.5370695979699995, "the": 0.0, "doc": 10.65021301317, "preetish": 6.5370695979699995, "miss": 1.2631785751200002, "peopl": 0.193265578473, "tidyr": 6.5370695979699995, "easi": 1.6665296351499999, "ill": 1.5957377825999999, "magrittr": 6.5370695979699995, "said": 0.436653165815, "english": 0.555765186335, "convert": 1.1860360368, "lyricsenti": 13.074139195939999, "sens": 1.04257779501, "tidytext": 6.5370695979699995, "studio": 1.5948062501700002, "anoth": 0.127896361652, "heartbreak": 4.230146103380001, "wordcloud": 6.5370695979699995, "let": 1.2488025672799998, "world": 0.107420248621, "genius": 2.67771382807, "actual": 0.628514181648, "histori": 0.187550624069, "fillsenti": 6.5370695979699995, "which": 0.02071365538172, "featur": 0.423387418142, "hurt": 2.4543869755000003, "term": 0.6660779670920001, "ident": 1.03244527565, "earn": 1.20057721532, "other": 0.00987474791976, "techniqu": 1.31624384807, "mine": 1.58430908678, "consist": 0.398873126426, "show": 0.946731064052, "valu": 1.646386620296, "begin": 0.285584668268, "see": 0.481843170984, "billboard": 8.76088031328, "such": 0.059695977806, "corpus": 3.1818402794, "preval": 2.3023331721, "get": 2.319076023128, "like": 0.417160729635, "three": 0.12823737644980002, "respect": 0.49733261904, "stopword": 6.5370695979699995, "reshapenum": 6.5370695979699995, "circliz": 6.5370695979699995, "process": 0.527829199025, "document": 0.932547122383, "expos": 1.6167713629299998, "tremend": 2.77485887077, "content": 1.26473915954, "receiv": 0.266574424922, "languag": 0.8306818244059999, "set": 0.5144880338669999, "text": 4.56192803996, "question": 0.790310929014, "time": 0.0224230377252, "from": 0.000567054168866, "leav": 1.015487914458, "answer": 1.5366310419, "sad": 5.73146890702, "fool": 2.9693757006599997, "num": 0.004724855930955001, "same": 0.224119299208, "tysenti": 6.5370695979699995, "most": 0.103739481478, "free": 0.5412666492670001, "fascin": 2.85911921439, "for": 0.0025199231631760004, "color": 1.3417002006799998, "contemporari": 1.04204193718, "geniuscom": 6.5370695979699995, "all": 0.022805264195599997, "top": 4.2637044645160005, "roll": 1.4529683597299998, "book": 0.3605697882, "albumlyr": 6.5370695979699995, "are": 0.4420121037405, "uncov": 2.69528247227, "rumour": 2.9273274644200002, "better": 0.6964279406, "result": 0.272757816762, "titl": 0.6273339619899999, "frequent": 2.9772845443400002, "primarili": 0.8897807965100001, "cumul": 10.6832894232, "undoubt": 3.29753899407, "and": 0.0013227929833356, "download": 2.6841506319, "purrr": 6.5370695979699995, "negat": 7.944155931120001, "posit": 1.8999139116480002, "column": 1.95699427938, "librari": 11.841719771316, "fire": 0.749239069835, "femal": 1.15757304604, "alphanumer": 5.54542942886, "someon": 1.59635928666, "simultan": 1.67322086119, "doe": 0.5340417297169999, "lowercas": 5.08759633523, "avail": 0.547454586289, "dplyr": 6.5370695979699995, "wordfreq": 6.5370695979699995, "give": 0.311392552224, "make": 0.07349765782289999, "anticip": 2.05333039768, "their": 0.015360505122700001, "few": 0.275577913653, "predomin": 1.6742284179499998, "this": 0.037864490525, "goal": 2.37661424546, "total": 0.43567888670500005, "packag": 6.1732753475700015, "two": 0.0273976887164, "chart": 12.80760692478, "common": 0.338325805271, "comment": 1.11826753454, "maxword": 13.074139195939999, "freqwordfreq": 6.5370695979699995, "randomord": 6.5370695979699995, "heart": 1.09974671874, "ggplotnum": 6.5370695979699995, "nrc": 5.647212123169999, "analyz": 2.2707222351599996, "into": 0.0149128632287, "young": 0.6358627983380001, "come": 0.28390990653000003, "via": 0.831983625414, "might": 0.7683410765340001, "that": 0.02783303865748, "enough": 0.802884439169, "lyric": 24.34547410548, "requir": 0.424253510675, "across": 0.549198455941, "tdm": 13.074139195939999, "first": 0.015174579624319999, "what": 1.129436484135, "allow": 0.24028061118900002, "wonder": 1.98319270637, "have": 0.0295700046824, "relationship": 0.871847185184, "score": 7.279676603850001, "help": 0.336207721344, "find": 0.547781330288, "span": 1.82012472855, "potenti": 0.9245764122419999, "mention": 0.931747186336}, "logidf": {"after": 0.020490694648099998, "natur": 0.431306339292, "can": 0.162341096394, "rotper": 6.5370695979699995, "vari": 0.915094672432, "fall": 0.527402167952, "hot": 1.52991862796, "lyriccount": 6.5370695979699995, "remov": 0.6960488415880001, "here": 0.8850381883700001, "five": 0.320203181906, "wrong": 1.70078769102, "punctuat": 3.7403186264499997, "differ": 0.212321121312, "song": 1.23354840355, "with": 0.00119749171339, "joy": 2.5594217052, "panda": 4.7167367562999996, "datafram": 6.5370695979699995, "number": 0.0966085784186, "audio": 2.2034799289800002, "rain": 1.92496697521, "decreas": 1.50919249744, "specif": 0.626980167541, "about": 0.0628434774746, "say": 0.562154280552, "crazi": 3.0605227790700003, "spotifi": 6.5370695979699995, "never": 0.443205436091, "she": 0.7701082216959999, "type": 0.707101485387, "frequenc": 2.1759113757299997, "higher": 0.752308398995, "artist": 1.05317511017, "defin": 1.00368010925, "bing": 3.87347115944, "code": 1.35601909597, "between": 0.033953681165299995, "emot": 1.79478748063, "tidylyr": 6.5370695979699995, "point": 0.23103235903299998, "creat": 0.222576818514, "express": 0.648191639641, "plot": 1.68334240509, "describ": 0.385447603125, "lyricswcdf": 6.5370695979699995, "love": 1.08958288195, "singl": 0.475916769059, "them": 0.0941833269093, "singer": 1.6376087894, "load": 1.91765354188, "stat": 3.96878133925, "studi": 0.426470272221, "than": 0.0322608622182, "execut": 0.804854605864, "order": 0.22014038079300002, "frame": 1.8373800586400002, "given": 0.303255810831, "word": 0.585861082385, "sing": 1.9048765367200002, "track": 1.14028498507, "deep": 1.2886734698, "mani": 0.0433157581221, "will": 0.202786534915, "associ": 0.28240501535100004, "overview": 2.54006626224, "age": 0.39624845300300005, "songwrdcount": 6.5370695979699995, "polar": 2.67954869097, "valenc": 4.83628190695, "analysi": 1.2466091029200002, "adel": 4.5192722194099995, "sentimentscor": 6.5370695979699995, "prowess": 3.85843328208, "one": 0.0062553516455, "below": 0.813626591936, "perform": 0.42618085058, "but": 0.0161923720719, "segreg": 2.97800175538, "exist": 0.38165779408699996, "guin": 3.3078130570499997, "overal": 1.1132694464700001, "matrix": 3.1186304098799997, "record": 0.353010356953, "lead": 0.23620402986699998, "album": 1.9886998336500001, "right": 0.34035985417, "success": 0.27765441259199997, "generat": 0.719182341736, "cloud": 2.36268232808, "visual": 1.6539383488600001, "use": 0.0292080197316, "follow": 0.045356911094199995, "data": 1.2168205848, "famous": 0.825060187979, "name": 0.09723316638430002, "out": 0.0584263909193, "her": 0.574944311991, "prompt": 1.4916828719100002, "lyricstext": 6.5370695979699995, "high": 0.13782378654000002, "syuzhet": 6.5370695979699995, "line": 0.349430614452, "under": 0.07526180538319999, "numer": 0.606093812346, "also": 0.0146571578, "count": 1.24748591139, "field": 0.5760642583510001, "pain": 1.88062785696, "tire": 2.52657934619, "usag": 1.86059038428, "woman": 1.2466091029200002, "sentiment": 2.29480490568, "method": 0.944461608841, "babi": 2.01717316908, "geniusr": 6.5370695979699995, "the": 0.0, "doc": 3.55007100439, "preetish": 6.5370695979699995, "miss": 1.2631785751200002, "peopl": 0.193265578473, "tidyr": 6.5370695979699995, "easi": 1.6665296351499999, "ill": 1.5957377825999999, "magrittr": 6.5370695979699995, "said": 0.436653165815, "english": 0.555765186335, "convert": 1.1860360368, "lyricsenti": 6.5370695979699995, "sens": 1.04257779501, "tidytext": 6.5370695979699995, "studio": 1.5948062501700002, "anoth": 0.127896361652, "heartbreak": 4.230146103380001, "wordcloud": 6.5370695979699995, "let": 1.2488025672799998, "world": 0.107420248621, "genius": 2.67771382807, "actual": 0.628514181648, "histori": 0.187550624069, "fillsenti": 6.5370695979699995, "which": 0.00517841384543, "featur": 0.423387418142, "hurt": 2.4543869755000003, "term": 0.33303898354600003, "ident": 1.03244527565, "earn": 1.20057721532, "other": 0.00987474791976, "techniqu": 1.31624384807, "mine": 1.58430908678, "consist": 0.398873126426, "show": 0.236682766013, "valu": 0.823193310148, "begin": 0.285584668268, "see": 0.240921585492, "billboard": 2.92029343776, "such": 0.059695977806, "corpus": 3.1818402794, "preval": 2.3023331721, "get": 0.579769005782, "like": 0.139053576545, "three": 0.06411868822490001, "respect": 0.49733261904, "stopword": 6.5370695979699995, "reshapenum": 6.5370695979699995, "circliz": 6.5370695979699995, "process": 0.527829199025, "document": 0.932547122383, "expos": 1.6167713629299998, "tremend": 2.77485887077, "content": 1.26473915954, "receiv": 0.266574424922, "languag": 0.8306818244059999, "set": 0.171496011289, "text": 1.14048200999, "question": 0.790310929014, "time": 0.0112115188626, "from": 0.000567054168866, "leav": 0.507743957229, "answer": 1.5366310419, "sad": 2.86573445351, "fool": 2.9693757006599997, "num": 0.00031499039539700004, "same": 0.112059649604, "tysenti": 6.5370695979699995, "most": 0.020747896295599998, "free": 0.5412666492670001, "fascin": 2.85911921439, "for": 0.00031499039539700004, "color": 1.3417002006799998, "contemporari": 1.04204193718, "geniuscom": 6.5370695979699995, "all": 0.011402632097799998, "top": 0.609100637788, "roll": 1.4529683597299998, "book": 0.3605697882, "albumlyr": 6.5370695979699995, "are": 0.0294674735827, "uncov": 2.69528247227, "rumour": 2.9273274644200002, "better": 0.6964279406, "result": 0.136378908381, "titl": 0.6273339619899999, "frequent": 0.7443211360850001, "primarili": 0.8897807965100001, "cumul": 3.5610964743999998, "undoubt": 3.29753899407, "and": 6.29901420636e-05, "download": 2.6841506319, "purrr": 6.5370695979699995, "negat": 1.32402598852, "posit": 0.316652318608, "column": 1.95699427938, "librari": 0.986809980943, "fire": 0.749239069835, "femal": 1.15757304604, "alphanumer": 5.54542942886, "someon": 1.59635928666, "simultan": 1.67322086119, "doe": 0.5340417297169999, "lowercas": 5.08759633523, "avail": 0.547454586289, "dplyr": 6.5370695979699995, "wordfreq": 6.5370695979699995, "give": 0.311392552224, "make": 0.07349765782289999, "anticip": 2.05333039768, "their": 0.015360505122700001, "few": 0.275577913653, "predomin": 1.6742284179499998, "this": 0.0037864490525, "goal": 1.18830712273, "total": 0.43567888670500005, "packag": 2.0577584491900005, "two": 0.0136988443582, "chart": 2.13460115413, "common": 0.338325805271, "comment": 1.11826753454, "maxword": 6.5370695979699995, "freqwordfreq": 6.5370695979699995, "randomord": 6.5370695979699995, "heart": 1.09974671874, "ggplotnum": 6.5370695979699995, "nrc": 5.647212123169999, "analyz": 2.2707222351599996, "into": 0.0149128632287, "young": 0.6358627983380001, "come": 0.28390990653000003, "via": 0.831983625414, "might": 0.7683410765340001, "that": 0.00397614837964, "enough": 0.802884439169, "lyric": 2.21322491868, "requir": 0.424253510675, "across": 0.549198455941, "tdm": 6.5370695979699995, "first": 0.0075872898121599995, "what": 0.225887296827, "allow": 0.24028061118900002, "wonder": 1.98319270637, "have": 0.0147850023412, "relationship": 0.871847185184, "score": 1.4559353207700003, "help": 0.336207721344, "find": 0.547781330288, "span": 1.82012472855, "potenti": 0.9245764122419999, "mention": 0.931747186336}, "freq": {"after": 1, "natur": 1, "can": 1, "rotper": 1, "vari": 1, "fall": 3, "hot": 2, "lyriccount": 1, "remov": 2, "here": 1, "five": 2, "wrong": 1, "punctuat": 1, "differ": 4, "song": 6, "with": 5, "joy": 1, "panda": 1, "datafram": 2, "number": 2, "audio": 1, "rain": 1, "decreas": 2, "specif": 2, "about": 2, "say": 1, "crazi": 2, "spotifi": 2, "never": 1, "she": 1, "type": 1, "frequenc": 4, "higher": 1, "artist": 4, "defin": 1, "bing": 1, "code": 2, "between": 1, "emot": 9, "tidylyr": 2, "point": 1, "creat": 4, "express": 3, "plot": 2, "describ": 2, "lyricswcdf": 3, "love": 6, "singl": 2, "them": 1, "singer": 1, "load": 1, "stat": 1, "studi": 2, "than": 1, "execut": 1, "order": 1, "frame": 1, "given": 3, "word": 23, "sing": 1, "track": 3, "deep": 1, "mani": 1, "will": 5, "associ": 3, "overview": 1, "age": 1, "songwrdcount": 1, "polar": 2, "valenc": 1, "analysi": 1, "adel": 2, "sentimentscor": 3, "prowess": 1, "one": 2, "below": 3, "perform": 2, "but": 1, "segreg": 1, "exist": 1, "guin": 1, "overal": 2, "matrix": 2, "record": 1, "lead": 1, "album": 9, "right": 1, "success": 1, "generat": 2, "cloud": 4, "visual": 3, "use": 8, "follow": 3, "data": 5, "famous": 1, "name": 2, "out": 1, "her": 10, "prompt": 1, "lyricstext": 4, "high": 2, "syuzhet": 3, "line": 1, "under": 1, "numer": 1, "also": 2, "count": 1, "field": 1, "pain": 1, "tire": 1, "usag": 1, "woman": 1, "sentiment": 8, "method": 2, "babi": 1, "geniusr": 1, "the": 63, "doc": 3, "preetish": 1, "miss": 1, "peopl": 1, "tidyr": 1, "easi": 1, "ill": 1, "magrittr": 1, "said": 1, "english": 1, "convert": 1, "lyricsenti": 2, "sens": 1, "tidytext": 1, "studio": 1, "anoth": 1, "heartbreak": 1, "wordcloud": 1, "let": 1, "world": 1, "genius": 1, "actual": 1, "histori": 1, "fillsenti": 1, "which": 4, "featur": 1, "hurt": 1, "term": 2, "ident": 1, "earn": 1, "other": 1, "techniqu": 1, "mine": 1, "consist": 1, "show": 4, "valu": 2, "begin": 1, "see": 2, "billboard": 3, "such": 1, "corpus": 1, "preval": 1, "get": 4, "like": 3, "three": 2, "respect": 1, "stopword": 1, "reshapenum": 1, "circliz": 1, "process": 1, "document": 1, "expos": 1, "tremend": 1, "content": 1, "receiv": 1, "languag": 1, "set": 3, "text": 4, "question": 1, "time": 2, "from": 1, "leav": 2, "answer": 1, "sad": 2, "fool": 1, "num": 15, "same": 2, "tysenti": 1, "most": 5, "free": 1, "fascin": 1, "for": 8, "color": 1, "contemporari": 1, "geniuscom": 1, "all": 2, "top": 7, "roll": 1, "book": 1, "albumlyr": 1, "are": 15, "uncov": 1, "rumour": 1, "better": 1, "result": 2, "titl": 1, "frequent": 4, "primarili": 1, "cumul": 3, "undoubt": 1, "and": 21, "download": 1, "purrr": 1, "negat": 6, "posit": 6, "column": 1, "librari": 12, "fire": 1, "femal": 1, "alphanumer": 1, "someon": 1, "simultan": 1, "doe": 1, "lowercas": 1, "avail": 1, "dplyr": 1, "wordfreq": 1, "give": 1, "make": 1, "anticip": 1, "their": 1, "few": 1, "predomin": 1, "this": 10, "goal": 2, "total": 1, "packag": 3, "two": 2, "chart": 6, "common": 1, "comment": 1, "maxword": 2, "freqwordfreq": 1, "randomord": 1, "heart": 1, "ggplotnum": 1, "nrc": 1, "analyz": 1, "into": 1, "young": 1, "come": 1, "via": 1, "might": 1, "that": 7, "enough": 1, "lyric": 11, "requir": 1, "across": 1, "tdm": 2, "first": 2, "what": 5, "allow": 1, "wonder": 1, "have": 2, "relationship": 1, "score": 5, "help": 1, "find": 1, "span": 1, "potenti": 1, "mention": 1}, "idf": {"after": 1.02070207021, "natur": 1.5392670157100001, "can": 1.17626139142, "rotper": 690.260869565, "vari": 2.4970116388799997, "fall": 1.6945244956799999, "hot": 4.6178010471199995, "lyriccount": 690.260869565, "remov": 2.0058117498400003, "here": 2.42307692308, "five": 1.37740760021, "wrong": 5.478260869570001, "punctuat": 42.1114058355, "differ": 1.23654490225, "song": 3.4333910034599997, "with": 1.0011982089899998, "joy": 12.928338762200001, "panda": 111.802816901, "datafram": 690.260869565, "number": 1.10142916609, "audio": 9.05647461495, "rain": 6.854922279789999, "decreas": 4.5230769230800005, "specif": 1.8719490626099997, "about": 1.06486015159, "say": 1.7544480053, "crazi": 21.3387096774, "spotifi": 690.260869565, "never": 1.55769230769, "she": 2.16, "type": 2.0281042411900003, "frequenc": 8.8102108768, "higher": 2.1218925421, "artist": 2.86673889491, "defin": 2.72830383227, "bing": 48.1090909091, "code": 3.8807137619199996, "between": 1.03453668708, "emot": 6.01819560273, "tidylyr": 690.260869565, "point": 1.25990000794, "creat": 1.2492917847, "express": 1.9120799710900003, "plot": 5.383519837230001, "describ": 1.47027227264, "lyricswcdf": 690.260869565, "love": 2.97303370787, "singl": 1.60948905109, "them": 1.09876115994, "singer": 5.1428571428600005, "load": 6.80497213888, "stat": 52.92, "studi": 1.53184098804, "than": 1.03278688525, "execut": 2.2363713199, "order": 1.24625166811, "frame": 6.280063291139999, "given": 1.35426085473, "word": 1.7965372864099998, "sing": 6.718578078709999, "track": 3.1276595744700004, "deep": 3.6279707495399998, "mani": 1.04426757877, "will": 1.22481098596, "associ": 1.3263157894700002, "overview": 12.6805111821, "age": 1.48623853211, "songwrdcount": 690.260869565, "polar": 14.5785123967, "valenc": 126.0, "analysi": 3.47852760736, "adel": 91.76878612719999, "sentimentscor": 690.260869565, "prowess": 47.391044776099996, "one": 1.00627495722, "below": 2.25607503197, "perform": 1.5313977042500002, "but": 1.01632417899, "segreg": 19.6485148515, "exist": 1.4647107666799999, "guin": 27.3253012048, "overal": 3.0442953020099996, "matrix": 22.6153846154, "record": 1.42334588488, "lead": 1.2664326739, "album": 7.306028531980001, "right": 1.4054532577899999, "success": 1.32002993265, "generat": 2.05275407292, "cloud": 10.6193979933, "visual": 5.22752716497, "use": 1.0296387573799999, "follow": 1.04640126549, "data": 3.37643555934, "famous": 2.28201811125, "name": 1.10211732037, "out": 1.06016694491, "her": 1.7770315648099997, "prompt": 4.44456886898, "lyricstext": 690.260869565, "high": 1.14777327935, "syuzhet": 690.260869565, "line": 1.4182597820299998, "under": 1.0781663837, "numer": 1.83325635104, "also": 1.01476510067, "count": 3.48157894737, "field": 1.7790228597, "pain": 6.55762081784, "tire": 12.5106382979, "usag": 6.427530364369999, "woman": 3.47852760736, "sentiment": 9.9225, "method": 2.5714285714300003, "babi": 7.517045454550001, "geniusr": 690.260869565, "the": 1.0, "doc": 34.8157894737, "preetish": 690.260869565, "miss": 3.53664513255, "peopl": 1.21320495186, "tidyr": 690.260869565, "easi": 5.2937645882, "ill": 4.93196644921, "magrittr": 690.260869565, "said": 1.54751925139, "english": 1.7432744043000001, "convert": 3.2740771293099997, "lyricsenti": 690.260869565, "sens": 2.8365195640499996, "tidytext": 690.260869565, "studio": 4.9273743016800005, "anoth": 1.13643521832, "heartbreak": 68.72727272729999, "wordcloud": 690.260869565, "let": 3.48616600791, "world": 1.11340206186, "genius": 14.5517873511, "actual": 1.87482286254, "histori": 1.20629131525, "fillsenti": 690.260869565, "which": 1.005191845, "featur": 1.52712581762, "hurt": 11.6392961877, "term": 1.39520168732, "ident": 2.80792359392, "earn": 3.3220338983099995, "other": 1.00992366412, "techniqu": 3.7293868921800004, "mine": 4.875921375919999, "consist": 1.4901445466499998, "show": 1.26703910615, "valu": 2.2777618364400003, "begin": 1.3305397251100002, "see": 1.27242125511, "billboard": 18.546728972, "such": 1.06151377374, "corpus": 24.091047041, "preval": 9.997481108310001, "get": 1.78562591385, "like": 1.14918566775, "three": 1.06621893889, "respect": 1.6443293630200002, "stopword": 690.260869565, "reshapenum": 690.260869565, "circliz": 690.260869565, "process": 1.69524826482, "document": 2.5409731114, "expos": 5.03680203046, "tremend": 16.0363636364, "content": 3.5421686747, "receiv": 1.3054847463200001, "languag": 2.29488291414, "set": 1.18707940781, "text": 3.12827586207, "question": 2.20408163265, "time": 1.01127460348, "from": 1.00056721497, "leav": 1.6615384615399997, "answer": 4.64890190337, "sad": 17.5619469027, "fool": 19.4797546012, "num": 1.00031504001, "same": 1.11857958148, "tysenti": 690.260869565, "most": 1.02096463023, "free": 1.71818181818, "fascin": 17.446153846199998, "for": 1.00031504001, "color": 3.8255421686699997, "contemporari": 2.835, "geniuscom": 690.260869565, "all": 1.01146788991, "top": 1.8387769284200002, "roll": 4.27578777269, "book": 1.43414634146, "albumlyr": 690.260869565, "are": 1.02990593578, "uncov": 14.8097014925, "rumour": 18.6776470588, "better": 2.0065722952500002, "result": 1.14611608432, "titl": 1.87261146497, "frequent": 2.10501193317, "primarili": 2.43459592087, "cumul": 35.2017738359, "undoubt": 27.0459965928, "and": 1.00006299213, "download": 14.6457564576, "purrr": 690.260869565, "negat": 3.75852272727, "posit": 1.37252528746, "column": 7.078020508250001, "librari": 2.68266306185, "fire": 2.1153897401700004, "femal": 3.18220084185, "alphanumer": 256.064516129, "someon": 4.9350326391, "simultan": 5.32930513595, "doe": 1.70581282905, "lowercas": 162.0, "avail": 1.7288467821, "dplyr": 690.260869565, "wordfreq": 690.260869565, "give": 1.3653250774, "make": 1.0762660158600001, "anticip": 7.793814432989999, "their": 1.01547908405, "few": 1.31729173581, "predomin": 5.33467741935, "this": 1.00379362671, "goal": 3.28152128979, "total": 1.5460122699399999, "packag": 7.828402366860001, "two": 1.01379310345, "chart": 8.45367412141, "common": 1.4025974025999999, "comment": 3.05954904606, "maxword": 690.260869565, "freqwordfreq": 690.260869565, "randomord": 690.260869565, "heart": 3.00340522134, "ggplotnum": 690.260869565, "nrc": 283.5, "analyz": 9.68639414277, "into": 1.01502461479, "young": 1.8886509636000002, "come": 1.32831325301, "via": 2.2978723404299997, "might": 2.1561863370900003, "that": 1.00398406375, "enough": 2.2319696330700003, "lyric": 9.145161290319999, "requir": 1.52844902282, "across": 1.7318642958400001, "tdm": 690.260869565, "first": 1.00761614623, "what": 1.25343439128, "allow": 1.2716059271100002, "wonder": 7.265903890160001, "have": 1.0148948411399998, "relationship": 2.39132399458, "score": 4.2884927066500005, "help": 1.39962972759, "find": 1.7294117647099998, "span": 6.17262830482, "potenti": 2.52080025405, "mention": 2.53894130817}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/sentiment-analysis-adele-songs.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/economics-benefits-artificial-intelligence.html\" rel=\"prev\" title=\"The Economics and Benefits of Artificial Intelligence\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/bay-path-ms-applied-data-science-online.html\" rel=\"next\" title=\"MS in Applied Data Science Online \u2013 which track is right for you?\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2018/09/sentiment-analysis-adele-songs.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=85073\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2018/09/sentiment-analysis-adele-songs.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-85073 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 13-Sep, 2018  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/opinions-interviews.html\">Opinions</a> \u00bb The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs (\u00a0<a href=\"/2018/n35.html\">18:n35</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/09/economics-benefits-artificial-intelligence.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/09/bay-path-ms-applied-data-science-online.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/adele\" rel=\"tag\">Adele</a>, <a href=\"https://www.kdnuggets.com/tag/music\" rel=\"tag\">Music</a>, <a href=\"https://www.kdnuggets.com/tag/nlp\" rel=\"tag\">NLP</a>, <a href=\"https://www.kdnuggets.com/tag/sentiment-analysis\" rel=\"tag\">Sentiment Analysis</a></div>\n<br/>\n<p class=\"excerpt\">\n     An extensive analysis of Adele's songs using Natural Language Processing (NLP) on the lyrics, to uncover the underlying emotions and sentiments.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/preetishpanda/\">Preetish Panda</a>, <a href=\"https://www.promptcloud.com/\">Prompt Cloud</a></b>.</p>\n<p><img alt=\"Adele\" src=\"https://c1.staticflickr.com/7/6209/6133388851_6e208cdd44_b.jpg\" width=\"80%\"/></p>\n<p>Adele is one of the most famous contemporary singers and undoubtedly one of the few artists loved by people of all ages. Her album <em>21 </em>received tremendous success and earned numerous mentions in the Guinness Book of World Records. Adele was also the first female artist to get two albums in the top five of the Billboard 200 at the same time and two singles in the top five of the Billboard Hot 100. As a lead artist she was the first woman in the history of the Billboard Hot 100 to have three simultaneous top 10 singles -- \"Rolling in the Deep\", \"Someone Like You\", and \"Set Fire to the Rain\".</p>\n<p>Enough said about her singing prowess! What\u2019s fascinating for us is the easy availability of her lyrics exposed by Genius API, audio features via Spotify\u2019s API and the potential to analyze them. In this study, I\u2019ll be performing sentiment analysis on her studio albums, i.e.,<em>19, 21, 25.</em></p>\n<h3>Data set</h3>\n<p>The Genius.com API allowed me to download the lyrics and associated data points. In total the data set consists of 41 tracks and the following data fields:</p>\n<ul>\n<li>artist name</li>\n<li>album name</li>\n<li>track title</li>\n<li>track number</li>\n<li>lyric text</li>\n<li>line number</li>\n</ul>\n<h3>Goal</h3>\n<p>The goal of this study is to perform text mining techniques, specifically Natural Language Processing (NLP) on the lyrics to uncover the underlying emotions and sentiments. Given below are the specific questions we\u2019ll answer:</p>\n<ul>\n<li>What are the most frequent words used by her?</li>\n<li>Which are the positive and negative words prevalent in her songs?</li>\n<li>What are the overall sentiments expressed in her songs?</li>\n<li>Which are the top words used to describe different emotions?</li>\n<li>Which are the songs associated with different emotions?</li>\n<li>What type of relationship exists between the emotions and the albums?</li>\n<li>What does the valence score vary for her albums? (Spotify API will be used here)</li>\n</ul>\n<h3>Most frequent words</h3>\n<p>Let\u2019s begin by loading the required packages. After that we will create a word cloud to get an overview of the word frequency.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\n<span style=\"color: orange;\">library</span>(geniusR)\r\n<span style=\"color: orange;\">library</span>(magrittr)\r\n<span style=\"color: orange;\">library</span>(purrr)\r\n<span style=\"color: orange;\">library</span>(dplyr)\r\n<span style=\"color: orange;\">library</span>(tidyr)\r\n<span style=\"color: orange;\">library</span>(ggplot2)\r\n<span style=\"color: orange;\">library</span>(tm)\r\n<span style=\"color: orange;\">library</span>(wordcloud)\r\n<span style=\"color: orange;\">library</span>(syuzhet)\r\n<span style=\"color: orange;\">library</span>(circlize)\r\n<span style=\"color: orange;\">library</span>(tidytext)\r\n<span style=\"color: orange;\">library</span>(reshape2)\r\n\r\nalbums &lt;-  tibble(\r\n  artist = c(\r\n    rep(<span style=\"color: green;\">\"Adele\"</span>, <span style=\"color: red;\">3</span>)\r\n  ),\r\n  album = c(\r\n    <span style=\"color: green;\">\"19\"</span>, <span style=\"color: green;\">\"21\"</span>,<span style=\"color: green;\">\"25\"</span>\r\n  )\r\n)\r\n\r\nalbum_lyrics &lt;- albums %&gt;% \r\n  mutate(tracks = map2(artist, album, genius_album))\r\n\r\nlyrics &lt;- album_lyrics %&gt;% \r\n  unnest(tracks) %&gt;%    \r\n  arrange(desc(artist))\r\n\r\nlyrics &lt;- as.data.frame(lyrics)\r\n\r\nlyrics_text &lt;- lyrics$lyric\r\n<span style=\"color: darkgrey;\">#Removing punctuations and alphanumeric content</span>\r\nlyrics_text&lt;- gsub(<span style=\"color: green;\">'[[:punct:]]+'</span>, <span style=\"color: green;\">''</span>, lyrics_text)\r\nlyrics_text&lt;- gsub(<span style=\"color: green;\">\"([[:alpha:]])\\1+\"</span>, <span style=\"color: green;\">\"\"</span>, lyrics_text)\r\n<span style=\"color: darkgrey;\">#creating a text corpus</span>\r\ndocs &lt;- Corpus(VectorSource(lyrics_text))\r\n<span style=\"color: darkgrey;\"># Converting the text to lowercase</span>\r\ndocs &lt;- tm_map(docs, content_transformer(tolower))\r\n<span style=\"color: darkgrey;\"># Removing english common stopwords</span>\r\ndocs &lt;- tm_map(docs, removeWords, stopwords(<span style=\"color: green;\">\"english\"</span>))\r\n<span style=\"color: darkgrey;\"># creating term document matrix</span> \r\ntdm &lt;- TermDocumentMatrix(docs)\r\n<span style=\"color: darkgrey;\"># defining tdm as matrix</span>\r\nm &lt;- as.matrix(tdm)\r\n<span style=\"color: darkgrey;\"># getting word counts in decreasing order</span>\r\nword_freqs = sort(rowSums(m), decreasing=<span style=\"color: orange;\">TRUE</span>) \r\n<span style=\"color: darkgrey;\"># creating a data frame with words and their frequencies</span>\r\nlyrics_wc_df &lt;- data.frame(word=names(word_freqs), freq=word_freqs)\r\n\r\nlyrics_wc_df &lt;- lyrics_wc_df[<span style=\"color: red;\">1:300</span>,]\r\n\r\n<span style=\"color: darkgrey;\"># plotting word cloud</span>\r\n\r\nset.seed(<span style=\"color: red;\">1234</span>)\r\nwordcloud(words = lyrics_wc_df$word, freq = lyrics_wc_df$freq, \r\n          min.freq = <span style=\"color: red;\">1</span>,scale=c(<span style=\"color: red;\">1.8</span>,<span style=\"color: red;\">.5</span>),\r\n          max.words=<span style=\"color: red;\">200</span>, random.order=<span style=\"color: orange;\">FALSE</span>, rot.per=<span style=\"color: red;\">0.15</span>, \r\n          colors=brewer.pal(<span style=\"color: red;\">8</span>, <span style=\"color: green;\">\"Dark2\"</span>))\r\n\r\n</pre>\n</div>\n<p><br class=\"blank\">This gives us the following visualization:<br>\n<img alt=\"Adele Fig 1 Word Cloud\" class=\"alignnone size-full wp-image-85096\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud.jpg 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud-300x240.jpg 300w\" width=\"100%\"/></br></br></p>\n<p>We can see that \u2018love\u2019 is the most frequently used word and the other high frequency words are \u2018like\u2019, \u2018never\u2019, \u2018say\u2019, \u2018heart\u2019 and \u2018ill\u2019. This makes sense as many of her songs are actually about love and heartbreak.</p>\n<h3>Positive and negative words in the songs</h3>\n<p>This will be another word cloud, but this time we\u2019re going to segregate the words into positive and negative polarity. We\u2019ll are using the \u2018bing\u2019 method of \u2018syuzhet\u2019 package for this visualization.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\nlyrics$lyric &lt;- as.character(lyrics$lyric)\r\n\r\ntidy_lyrics &lt;- lyrics %&gt;% \r\n  unnest_tokens(word,lyric)\r\n\r\nset.seed(<span style=\"color: red;\">1234</span>)\r\ntidy_lyrics %&gt;%\r\n  inner_join(get_sentiments(<span style=\"color: green;\">\"bing\"</span>)) %&gt;%\r\n  count(word, sentiment, sort = <span style=\"color: orange;\">TRUE</span>) %&gt;%\r\n  acast(word ~ sentiment, value.var = <span style=\"color: green;\">\"n\"</span>, fill = <span style=\"color: red;\">0</span>) %&gt;%\r\n  comparison.cloud(colors = c(<span style=\"color: green;\">\"#F8766D\"</span>, <span style=\"color: green;\">\"#00BFC4\"</span>), max.words = <span style=\"color: red;\">250</span>)\r\n</pre>\n</div>\n<p><br class=\"blank\">The resulting visualization shows that the predominant positive words are \u2018love\u2019, \u2018like\u2019, \u2018better\u2019, \u2018right, free\u2019, \u2018wonders\u2019 and negative words are \u2018rumours\u2019, \u2018miss\u2019, \u2018fall\u2019, \u2018fool\u2019, \u2018crazy\u2019, pain, hurts\u2019, \u2018wrong\u2019, \u2018tired\u2019.</br></p>\n<p><img alt=\"Adele Fig 2 Negative Positive\" class=\"alignnone size-full wp-image-85097\" sizes=\"(max-width: 600px) 100vw, 600px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive.jpg 600w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-150x150.jpg 150w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-300x300.jpg 300w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-120x120.jpg 120w\" width=\"100%\"/></p>\n<h3>Overall sentiments expressed</h3>\n<p>This chart will show us the cumulative score generated for different emotions expressed in her songs. For this chart we\u2019ll use the \u2018nrc\u2019 method of \u2018syuzhet\u2019 package. Given below is the code for the same:</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\n<span style=\"color: darkgrey;\"># Getting the sentiment value for the lyrics</span>\r\nty_sentiment &lt;- get_nrc_sentiment((lyrics_text))\r\n\r\n<span style=\"color: darkgrey;\"># Dataframe with cumulative value of the sentiments</span>\r\nSentimentscores &lt;- data.frame(colSums(ty_sentiment[,]))\r\n\r\n<span style=\"color: darkgrey;\"># Dataframe with sentiment and score as columns</span>\r\nnames(sentimentscores) &lt;- <span style=\"color: green;\">\"Score\"</span>\r\nsentimentscores &lt;- cbind(<span style=\"color: green;\">\"sentiment\"</span>=rownames(sentimentscores),sentimentscores)\r\nrownames(sentimentscores) &lt;- <span style=\"color: orange;\">NULL</span>\r\n\r\n<span style=\"color: darkgrey;\"># Plot for the cumulative sentiments</span>\r\nggplot(data=sentimentscores,aes(x=sentiment,y=Score))+\r\n  geom_bar(aes(fill=sentiment),stat = <span style=\"color: green;\">\"identity\"</span>)+\r\n  theme(legend.position=<span style=\"color: green;\">\"none\"</span>)+\r\n  xlab(<span style=\"color: green;\">\"Sentiments\"</span>)+ylab(<span style=\"color: green;\">\"Scores\"</span>)+\r\n  ggtitle(<span style=\"color: green;\">\"Total sentiment based on scores\"</span>)+\r\n  theme_minimal() \r\n</pre>\n</div>\n<p><br class=\"blank\">The chart given below shows that the positive score is higher than negative which might have resulted from the high frequency usage of \u2018love\u2019. We also see that \u2018joy\u2019, \u2018anticipation\u2019 and \u2018sadness\u2019 are the top three emotions.</br></p>\n<p><img alt=\"Adele Fig 3 Sentiment Scores\" class=\"alignnone size-full wp-image-85098\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores.png\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores.png 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores-300x121.png 300w\" width=\"100%\"/></p>\n<h3>Top words used to describe different emotions</h3>\n<p class=\"Normal1\">This chart will help us find out the most frequently used words that are associated with the emotions spanning across all the albums. Execute the following code to generate the chart.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\nsong_wrd_count &lt;- tidy_lyrics %&gt;% count(track_title)\r\n\r\nlyric_counts &lt;- tidy_lyrics %&gt;%\r\n  left_join(song_wrd_count, by = <span style=\"color: green;\">\"track_title\"</span>) %&gt;% \r\n  rename(total_words=n)\r\n\r\nlyric_sentiment &lt;- tidy_lyrics %&gt;% \r\n  inner_join(get_sentiments(<span style=\"color: green;\">\"nrc\"</span>),by=<span style=\"color: green;\">\"word\"</span>)\r\n\r\nlyric_sentiment %&gt;% \r\n  count(word,sentiment,sort=<span style=\"color: orange;\">TRUE</span>) %&gt;% \r\n  group_by(sentiment)%&gt;%top_n(n=<span style=\"color: red;\">10</span>) %&gt;% \r\n  ungroup() %&gt;%\r\n  ggplot(aes(x=reorder(word,n),y=n,fill=sentiment)) +\r\n  geom_col(show.legend = <span style=\"color: orange;\">FALSE</span>) + \r\n  facet_wrap(~sentiment,scales=<span style=\"color: green;\">\"free\"</span>) +\r\n  xlab(<span style=\"color: green;\">\"Sentiments\"</span>) + ylab(<span style=\"color: green;\">\"Scores\"</span>)+\r\n  ggtitle(<span style=\"color: green;\">\"Top words used to express emotions and sentiments\"</span>) +\r\n  coord_flip()\r\n</pre>\n</div>\n<p><br class=\"blank\"/>The chart shows that in terms of polarity, \u2018love\u2019, \u2018baby\u2019, \u2018young\u2019 are the top 3 positive words and \u2018fall\u2019, \u2018words\u2019, \u2018leave\u2019 are the negative words. Coming to emotions, sadness is primarily respected by words such as \u2018fall\u2019, \u2019leave\u2019, \u2018crazy\u2019.</p>\n<p><img alt=\"Adele Fig 4 Sentiment Words\" class=\"alignnone size-full wp-image-85099\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words.jpg 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words-300x137.jpg 300w\" width=\"100%\"/></p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2018/09/sentiment-analysis-adele-songs.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2018/09/economics-benefits-artificial-intelligence.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2018/09/bay-path-ms-applied-data-science-online.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2018/index.html\">2018</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/index.html\">Sep</a> \u00bb <a href=\"https://www.kdnuggets.com/2018/09/opinions-interviews.html\">Opinions</a> \u00bb The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs (\u00a0<a href=\"/2018/n35.html\">18:n35</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556373724\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.741 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 10:02:04 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "preetish", "panda", "prompt", "cloud", "adel", "one", "the", "most", "famous", "contemporari", "singer", "and", "undoubt", "one", "the", "few", "artist", "love", "peopl", "all", "age", "her", "album", "num", "receiv", "tremend", "success", "and", "earn", "numer", "mention", "the", "guin", "book", "world", "record", "adel", "also", "the", "first", "femal", "artist", "get", "two", "album", "the", "top", "five", "the", "billboard", "num", "the", "same", "time", "and", "two", "singl", "the", "top", "five", "the", "billboard", "hot", "num", "lead", "artist", "she", "the", "first", "woman", "the", "histori", "the", "billboard", "hot", "num", "have", "three", "simultan", "top", "num", "singl", "roll", "the", "deep", "someon", "like", "and", "set", "fire", "the", "rain", "enough", "said", "about", "her", "sing", "prowess", "what", "fascin", "for", "the", "easi", "avail", "her", "lyric", "expos", "genius", "audio", "featur", "via", "spotifi", "and", "the", "potenti", "analyz", "them", "this", "studi", "perform", "sentiment", "analysi", "her", "studio", "album", "num", "num", "num", "data", "set", "the", "geniuscom", "allow", "download", "the", "lyric", "and", "associ", "data", "point", "total", "the", "data", "set", "consist", "num", "track", "and", "the", "follow", "data", "field", "artist", "name", "album", "name", "track", "titl", "track", "number", "lyric", "text", "line", "number", "goal", "the", "goal", "this", "studi", "perform", "text", "mine", "techniqu", "specif", "natur", "languag", "process", "the", "lyric", "uncov", "the", "under", "emot", "and", "sentiment", "given", "below", "are", "the", "specif", "question", "answer", "what", "are", "the", "most", "frequent", "word", "use", "her", "which", "are", "the", "posit", "and", "negat", "word", "preval", "her", "song", "what", "are", "the", "overal", "sentiment", "express", "her", "song", "which", "are", "the", "top", "word", "use", "describ", "differ", "emot", "which", "are", "the", "song", "associ", "with", "differ", "emot", "what", "type", "relationship", "exist", "between", "the", "emot", "and", "the", "album", "what", "doe", "the", "valenc", "score", "vari", "for", "her", "album", "spotifi", "will", "use", "here", "most", "frequent", "word", "let", "begin", "load", "the", "requir", "packag", "after", "that", "will", "creat", "word", "cloud", "get", "overview", "the", "word", "frequenc", "librari", "geniusr", "librari", "magrittr", "librari", "purrr", "librari", "dplyr", "librari", "tidyr", "librari", "ggplotnum", "librari", "librari", "wordcloud", "librari", "syuzhet", "librari", "circliz", "librari", "tidytext", "librari", "reshapenum", "album", "album", "albumlyr", "lyric", "lyric", "lyricstext", "lyric", "lyric", "remov", "punctuat", "and", "alphanumer", "content", "lyricstext", "lyricstext", "num", "lyricstext", "creat", "text", "corpus", "doc", "convert", "the", "text", "lowercas", "doc", "remov", "english", "common", "stopword", "doc", "creat", "term", "document", "matrix", "tdm", "defin", "tdm", "matrix", "get", "word", "count", "decreas", "order", "wordfreq", "decreas", "creat", "data", "frame", "with", "word", "and", "their", "frequenc", "lyricswcdf", "freqwordfreq", "lyricswcdf", "lyricswcdf", "num", "plot", "word", "cloud", "maxword", "num", "randomord", "rotper", "num", "color", "this", "give", "the", "follow", "visual", "can", "see", "that", "love", "the", "most", "frequent", "use", "word", "and", "the", "other", "high", "frequenc", "word", "are", "like", "never", "say", "heart", "and", "ill", "this", "make", "sens", "mani", "her", "song", "are", "actual", "about", "love", "and", "heartbreak", "posit", "and", "negat", "word", "the", "song", "this", "will", "anoth", "word", "cloud", "but", "this", "time", "segreg", "the", "word", "into", "posit", "and", "negat", "polar", "are", "use", "the", "bing", "method", "syuzhet", "packag", "for", "this", "visual", "lyric", "lyric", "tidylyr", "tidylyr", "maxword", "num", "the", "result", "visual", "show", "that", "the", "predomin", "posit", "word", "are", "love", "like", "better", "right", "free", "wonder", "and", "negat", "word", "are", "rumour", "miss", "fall", "fool", "crazi", "pain", "hurt", "wrong", "tire", "overal", "sentiment", "express", "this", "chart", "will", "show", "the", "cumul", "score", "generat", "for", "differ", "emot", "express", "her", "song", "for", "this", "chart", "use", "the", "nrc", "method", "syuzhet", "packag", "given", "below", "the", "code", "for", "the", "same", "get", "the", "sentiment", "valu", "for", "the", "lyric", "tysenti", "datafram", "with", "cumul", "valu", "the", "sentiment", "sentimentscor", "datafram", "with", "sentiment", "and", "score", "column", "score", "sentimentscor", "sentimentscor", "plot", "for", "the", "cumul", "sentiment", "stat", "ident", "the", "chart", "given", "below", "show", "that", "the", "posit", "score", "higher", "than", "negat", "which", "might", "have", "result", "from", "the", "high", "frequenc", "usag", "love", "also", "see", "that", "joy", "anticip", "and", "sad", "are", "the", "top", "three", "emot", "top", "word", "use", "describ", "differ", "emot", "this", "chart", "will", "help", "find", "out", "the", "most", "frequent", "use", "word", "that", "are", "associ", "with", "the", "emot", "span", "across", "all", "the", "album", "execut", "the", "follow", "code", "generat", "the", "chart", "songwrdcount", "lyriccount", "lyricsenti", "word", "lyricsenti", "fillsenti", "the", "chart", "show", "that", "term", "polar", "love", "babi", "young", "are", "the", "top", "num", "posit", "word", "and", "fall", "word", "leav", "are", "the", "negat", "word", "come", "emot", "sad", "primarili", "respect", "word", "such", "fall", "leav", "crazi"], "timestamp_scraper": 1556376262.852152, "title": "The Data Science of \u201cSomeone Like You\u201d or Sentiment Analysis of Adele\u2019s Songs", "read_time": 273.0, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://www.linkedin.com/in/preetishpanda/\">Preetish Panda</a>, <a href=\"https://www.promptcloud.com/\">Prompt Cloud</a></b>.</p>\n<p><img alt=\"Adele\" src=\"https://c1.staticflickr.com/7/6209/6133388851_6e208cdd44_b.jpg\" width=\"80%\"/></p>\n<p>Adele is one of the most famous contemporary singers and undoubtedly one of the few artists loved by people of all ages. Her album <em>21 </em>received tremendous success and earned numerous mentions in the Guinness Book of World Records. Adele was also the first female artist to get two albums in the top five of the Billboard 200 at the same time and two singles in the top five of the Billboard Hot 100. As a lead artist she was the first woman in the history of the Billboard Hot 100 to have three simultaneous top 10 singles -- \"Rolling in the Deep\", \"Someone Like You\", and \"Set Fire to the Rain\".</p>\n<p>Enough said about her singing prowess! What\u2019s fascinating for us is the easy availability of her lyrics exposed by Genius API, audio features via Spotify\u2019s API and the potential to analyze them. In this study, I\u2019ll be performing sentiment analysis on her studio albums, i.e.,<em>19, 21, 25.</em></p>\n<h3>Data set</h3>\n<p>The Genius.com API allowed me to download the lyrics and associated data points. In total the data set consists of 41 tracks and the following data fields:</p>\n<ul>\n<li>artist name</li>\n<li>album name</li>\n<li>track title</li>\n<li>track number</li>\n<li>lyric text</li>\n<li>line number</li>\n</ul>\n<h3>Goal</h3>\n<p>The goal of this study is to perform text mining techniques, specifically Natural Language Processing (NLP) on the lyrics to uncover the underlying emotions and sentiments. Given below are the specific questions we\u2019ll answer:</p>\n<ul>\n<li>What are the most frequent words used by her?</li>\n<li>Which are the positive and negative words prevalent in her songs?</li>\n<li>What are the overall sentiments expressed in her songs?</li>\n<li>Which are the top words used to describe different emotions?</li>\n<li>Which are the songs associated with different emotions?</li>\n<li>What type of relationship exists between the emotions and the albums?</li>\n<li>What does the valence score vary for her albums? (Spotify API will be used here)</li>\n</ul>\n<h3>Most frequent words</h3>\n<p>Let\u2019s begin by loading the required packages. After that we will create a word cloud to get an overview of the word frequency.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\n<span style=\"color: orange;\">library</span>(geniusR)\r\n<span style=\"color: orange;\">library</span>(magrittr)\r\n<span style=\"color: orange;\">library</span>(purrr)\r\n<span style=\"color: orange;\">library</span>(dplyr)\r\n<span style=\"color: orange;\">library</span>(tidyr)\r\n<span style=\"color: orange;\">library</span>(ggplot2)\r\n<span style=\"color: orange;\">library</span>(tm)\r\n<span style=\"color: orange;\">library</span>(wordcloud)\r\n<span style=\"color: orange;\">library</span>(syuzhet)\r\n<span style=\"color: orange;\">library</span>(circlize)\r\n<span style=\"color: orange;\">library</span>(tidytext)\r\n<span style=\"color: orange;\">library</span>(reshape2)\r\n\r\nalbums &lt;-  tibble(\r\n  artist = c(\r\n    rep(<span style=\"color: green;\">\"Adele\"</span>, <span style=\"color: red;\">3</span>)\r\n  ),\r\n  album = c(\r\n    <span style=\"color: green;\">\"19\"</span>, <span style=\"color: green;\">\"21\"</span>,<span style=\"color: green;\">\"25\"</span>\r\n  )\r\n)\r\n\r\nalbum_lyrics &lt;- albums %&gt;% \r\n  mutate(tracks = map2(artist, album, genius_album))\r\n\r\nlyrics &lt;- album_lyrics %&gt;% \r\n  unnest(tracks) %&gt;%    \r\n  arrange(desc(artist))\r\n\r\nlyrics &lt;- as.data.frame(lyrics)\r\n\r\nlyrics_text &lt;- lyrics$lyric\r\n<span style=\"color: darkgrey;\">#Removing punctuations and alphanumeric content</span>\r\nlyrics_text&lt;- gsub(<span style=\"color: green;\">'[[:punct:]]+'</span>, <span style=\"color: green;\">''</span>, lyrics_text)\r\nlyrics_text&lt;- gsub(<span style=\"color: green;\">\"([[:alpha:]])\\1+\"</span>, <span style=\"color: green;\">\"\"</span>, lyrics_text)\r\n<span style=\"color: darkgrey;\">#creating a text corpus</span>\r\ndocs &lt;- Corpus(VectorSource(lyrics_text))\r\n<span style=\"color: darkgrey;\"># Converting the text to lowercase</span>\r\ndocs &lt;- tm_map(docs, content_transformer(tolower))\r\n<span style=\"color: darkgrey;\"># Removing english common stopwords</span>\r\ndocs &lt;- tm_map(docs, removeWords, stopwords(<span style=\"color: green;\">\"english\"</span>))\r\n<span style=\"color: darkgrey;\"># creating term document matrix</span> \r\ntdm &lt;- TermDocumentMatrix(docs)\r\n<span style=\"color: darkgrey;\"># defining tdm as matrix</span>\r\nm &lt;- as.matrix(tdm)\r\n<span style=\"color: darkgrey;\"># getting word counts in decreasing order</span>\r\nword_freqs = sort(rowSums(m), decreasing=<span style=\"color: orange;\">TRUE</span>) \r\n<span style=\"color: darkgrey;\"># creating a data frame with words and their frequencies</span>\r\nlyrics_wc_df &lt;- data.frame(word=names(word_freqs), freq=word_freqs)\r\n\r\nlyrics_wc_df &lt;- lyrics_wc_df[<span style=\"color: red;\">1:300</span>,]\r\n\r\n<span style=\"color: darkgrey;\"># plotting word cloud</span>\r\n\r\nset.seed(<span style=\"color: red;\">1234</span>)\r\nwordcloud(words = lyrics_wc_df$word, freq = lyrics_wc_df$freq, \r\n          min.freq = <span style=\"color: red;\">1</span>,scale=c(<span style=\"color: red;\">1.8</span>,<span style=\"color: red;\">.5</span>),\r\n          max.words=<span style=\"color: red;\">200</span>, random.order=<span style=\"color: orange;\">FALSE</span>, rot.per=<span style=\"color: red;\">0.15</span>, \r\n          colors=brewer.pal(<span style=\"color: red;\">8</span>, <span style=\"color: green;\">\"Dark2\"</span>))\r\n\r\n</pre>\n</div>\n<p><br class=\"blank\">This gives us the following visualization:<br>\n<img alt=\"Adele Fig 1 Word Cloud\" class=\"alignnone size-full wp-image-85096\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud.jpg 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig1-word-cloud-300x240.jpg 300w\" width=\"100%\"/></br></br></p>\n<p>We can see that \u2018love\u2019 is the most frequently used word and the other high frequency words are \u2018like\u2019, \u2018never\u2019, \u2018say\u2019, \u2018heart\u2019 and \u2018ill\u2019. This makes sense as many of her songs are actually about love and heartbreak.</p>\n<h3>Positive and negative words in the songs</h3>\n<p>This will be another word cloud, but this time we\u2019re going to segregate the words into positive and negative polarity. We\u2019ll are using the \u2018bing\u2019 method of \u2018syuzhet\u2019 package for this visualization.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\nlyrics$lyric &lt;- as.character(lyrics$lyric)\r\n\r\ntidy_lyrics &lt;- lyrics %&gt;% \r\n  unnest_tokens(word,lyric)\r\n\r\nset.seed(<span style=\"color: red;\">1234</span>)\r\ntidy_lyrics %&gt;%\r\n  inner_join(get_sentiments(<span style=\"color: green;\">\"bing\"</span>)) %&gt;%\r\n  count(word, sentiment, sort = <span style=\"color: orange;\">TRUE</span>) %&gt;%\r\n  acast(word ~ sentiment, value.var = <span style=\"color: green;\">\"n\"</span>, fill = <span style=\"color: red;\">0</span>) %&gt;%\r\n  comparison.cloud(colors = c(<span style=\"color: green;\">\"#F8766D\"</span>, <span style=\"color: green;\">\"#00BFC4\"</span>), max.words = <span style=\"color: red;\">250</span>)\r\n</pre>\n</div>\n<p><br class=\"blank\">The resulting visualization shows that the predominant positive words are \u2018love\u2019, \u2018like\u2019, \u2018better\u2019, \u2018right, free\u2019, \u2018wonders\u2019 and negative words are \u2018rumours\u2019, \u2018miss\u2019, \u2018fall\u2019, \u2018fool\u2019, \u2018crazy\u2019, pain, hurts\u2019, \u2018wrong\u2019, \u2018tired\u2019.</br></p>\n<p><img alt=\"Adele Fig 2 Negative Positive\" class=\"alignnone size-full wp-image-85097\" sizes=\"(max-width: 600px) 100vw, 600px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive.jpg 600w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-150x150.jpg 150w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-300x300.jpg 300w, https://www.kdnuggets.com/wp-content/uploads/adele-fig2-negative-positive-120x120.jpg 120w\" width=\"100%\"/></p>\n<h3>Overall sentiments expressed</h3>\n<p>This chart will show us the cumulative score generated for different emotions expressed in her songs. For this chart we\u2019ll use the \u2018nrc\u2019 method of \u2018syuzhet\u2019 package. Given below is the code for the same:</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\n<span style=\"color: darkgrey;\"># Getting the sentiment value for the lyrics</span>\r\nty_sentiment &lt;- get_nrc_sentiment((lyrics_text))\r\n\r\n<span style=\"color: darkgrey;\"># Dataframe with cumulative value of the sentiments</span>\r\nSentimentscores &lt;- data.frame(colSums(ty_sentiment[,]))\r\n\r\n<span style=\"color: darkgrey;\"># Dataframe with sentiment and score as columns</span>\r\nnames(sentimentscores) &lt;- <span style=\"color: green;\">\"Score\"</span>\r\nsentimentscores &lt;- cbind(<span style=\"color: green;\">\"sentiment\"</span>=rownames(sentimentscores),sentimentscores)\r\nrownames(sentimentscores) &lt;- <span style=\"color: orange;\">NULL</span>\r\n\r\n<span style=\"color: darkgrey;\"># Plot for the cumulative sentiments</span>\r\nggplot(data=sentimentscores,aes(x=sentiment,y=Score))+\r\n  geom_bar(aes(fill=sentiment),stat = <span style=\"color: green;\">\"identity\"</span>)+\r\n  theme(legend.position=<span style=\"color: green;\">\"none\"</span>)+\r\n  xlab(<span style=\"color: green;\">\"Sentiments\"</span>)+ylab(<span style=\"color: green;\">\"Scores\"</span>)+\r\n  ggtitle(<span style=\"color: green;\">\"Total sentiment based on scores\"</span>)+\r\n  theme_minimal() \r\n</pre>\n</div>\n<p><br class=\"blank\">The chart given below shows that the positive score is higher than negative which might have resulted from the high frequency usage of \u2018love\u2019. We also see that \u2018joy\u2019, \u2018anticipation\u2019 and \u2018sadness\u2019 are the top three emotions.</br></p>\n<p><img alt=\"Adele Fig 3 Sentiment Scores\" class=\"alignnone size-full wp-image-85098\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores.png\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores.png 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig3-sentiment-scores-300x121.png 300w\" width=\"100%\"/></p>\n<h3>Top words used to describe different emotions</h3>\n<p class=\"Normal1\">This chart will help us find out the most frequently used words that are associated with the emotions spanning across all the albums. Execute the following code to generate the chart.</p>\n<div style=\"width: 98%; border: 1px solid #ccc; overflow: auto; padding-left: 10px; padding-bottom: 10px; padding-top: 10px;\">\n<pre> \r\nsong_wrd_count &lt;- tidy_lyrics %&gt;% count(track_title)\r\n\r\nlyric_counts &lt;- tidy_lyrics %&gt;%\r\n  left_join(song_wrd_count, by = <span style=\"color: green;\">\"track_title\"</span>) %&gt;% \r\n  rename(total_words=n)\r\n\r\nlyric_sentiment &lt;- tidy_lyrics %&gt;% \r\n  inner_join(get_sentiments(<span style=\"color: green;\">\"nrc\"</span>),by=<span style=\"color: green;\">\"word\"</span>)\r\n\r\nlyric_sentiment %&gt;% \r\n  count(word,sentiment,sort=<span style=\"color: orange;\">TRUE</span>) %&gt;% \r\n  group_by(sentiment)%&gt;%top_n(n=<span style=\"color: red;\">10</span>) %&gt;% \r\n  ungroup() %&gt;%\r\n  ggplot(aes(x=reorder(word,n),y=n,fill=sentiment)) +\r\n  geom_col(show.legend = <span style=\"color: orange;\">FALSE</span>) + \r\n  facet_wrap(~sentiment,scales=<span style=\"color: green;\">\"free\"</span>) +\r\n  xlab(<span style=\"color: green;\">\"Sentiments\"</span>) + ylab(<span style=\"color: green;\">\"Scores\"</span>)+\r\n  ggtitle(<span style=\"color: green;\">\"Top words used to express emotions and sentiments\"</span>) +\r\n  coord_flip()\r\n</pre>\n</div>\n<p><br class=\"blank\"/>The chart shows that in terms of polarity, \u2018love\u2019, \u2018baby\u2019, \u2018young\u2019 are the top 3 positive words and \u2018fall\u2019, \u2018words\u2019, \u2018leave\u2019 are the negative words. Coming to emotions, sadness is primarily respected by words such as \u2018fall\u2019, \u2019leave\u2019, \u2018crazy\u2019.</p>\n<p><img alt=\"Adele Fig 4 Sentiment Words\" class=\"alignnone size-full wp-image-85099\" sizes=\"(max-width: 700px) 100vw, 700px\" src=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words.jpg\" srcset=\"https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words.jpg 700w, https://www.kdnuggets.com/wp-content/uploads/adele-fig4-sentiment-words-300x137.jpg 300w\" width=\"100%\"/></p>\n</div> ", "website": "kdnuggets"}