{"content": "By Matthew Mayo , KDnuggets. There is no shortage of neural network frameworks, libraries, and APIs available to anyone interested in getting started with deep learning. So... Why Keras? Keras is a high-level neural network API, helping lead the way to the commoditization of deep learning and artificial intelligence. It runs on top of a number of lower-level libraries, used as backends, including TensorFlow, Theano, CNTK, and PlaidML . Keras code is portable, meaning that you can implement a neural network in Keras using Theano as a backened and then specify the backend to subsequently run on TensorFlow, and no further changes would be required to your code. Data Scientist & Machine Learning Expert Charles Martin sums up with this quote (in a response to the post): We have had access to these algorithms for over 10 years. Not readily accessible, but accessible enough to a good hacker. To me, the most important advances have come with Google Keras, which has commoditized very powerful, modern, AI algos that previous were not only inaccessible bit [sic] thought to be unusable as well. Keras is an easy to use neural network library that promotes a simple and intuitive syntax. It is also geared toward neural network technology consumers as opposed to producers, at least to some degree. The line between these 2 groups is not exactly well-defined; what, exactly, constitutes the design and implementation of a machine learning algorithm versus modifying an already-prepared one? This is chicken versus egg stuff, and not really an appropriate discussion topic for here. However, I will make the assertion that, perhaps more than any other established, mainstream neural network library, Keras is ideally suited to the practice of data science . In fact, I would say that Keras is an essential tool in the toolbox of any data scientist working with neural networks. This tutorial is designed to get you up to speed with Keras as quickly as possible, allowing you to hit the ground running, not a particularly difficult task if you already have familiarity with neural networks. To that end, an understanding of neural networks is preferable -- though a very brief intro will be presented in the first step -- as is some experience with other machine learning frameworks. Beyond that, no experience specifically with Keras is required. \u00a0 Step 1: Neural Networks Basics \u00a0 This post collects a number of neural network \"getting started\" resources. \u00a0 Step 2: Keras Basics \u00a0 First, what exactly is Keras? Why not find out directly from the project's website? Read the entirety of this main page (it will only take a couple of minutes), paying particular attention to \"30 Seconds to Keras,\" which should be enough to give you an idea of how simple Keras is to use. Keras: The Python Deep Learning library The release notes for the current major release version of Keras (at the time of writing) can be found here. Take the few minutes to read them: Introducing Keras 2 Karlijn Willems of DataCamp has created a handy Keras cheat sheet which I recommend you download and have handy. Even though some of it may not make sense yet, it soon will, and the reference will undoubtedly prove useful. I have a printed copy on my desk. Keras Cheat Sheet , by Karlijn Willems Lastly, and most importantly, familiarize yourself with the Keras documentation, which is top notch and explains all the things. Bookmark it. Keras Documentation \u00a0 Step 3: An Overview of Keras \u00a0 Valerio Maggio gave a great tutorial presentation at PyData London 2017, titled \"Ten Steps to Keras.\" To get a fleshed out understanding of what Keras is, how it compares to other libraries, and how you can get things done with it, take the 90 minutes to watch the video. It is definitely worth it to gain a high level understanding of Keras, top to bottom. Then look at the following few pages of documentation to get an understanding of how Keras approaches model implementations. About Keras models Getting started with the Keras Sequential model Getting started with the Keras Functional API If you are still having questions as to why you would choose Keras over TensorFlow (you didn't watch the video, did you?), read this: TensorFlow or Keras? Which one should I learn? , by Aakash Nain Make sure you have Keras installed before going any futher. Finally, for information on changing Keras backends, see this documentation page: Keras backends \u00a0 Step 4: Baby Steps with Keras \u00a0 Let's do one of the first things that everyone does when they start using a new deep learning library: implement a simple logistic regression model. If you watched Valerio's video in the previous step then you may already have gotten what you need for this. If not, refer to his notebook from the talk. Ideally you read the whole thing for a great comparison of implementation code for TensorFlow, Theano, and Keras. If you are interested solely in the Keras code, however, skip down about halfway. Multi-layer Fully Connected Networks , by Valerio Maggio The beauty of the Keras code, shown below (and taken directly from Maggio's notebook), to accomplish the task should be readily visible. Note that data pre-processing has already occurred at this point. Implementing logistic regression, as above, is one thing, but now let's try out something more worthy of being called a neural network, complete with a hidden layer. First, ensure that you have looked over the following Keras documentation pages, describing both the Sequenial model (already referenced above) and the Layers. Getting started with the Keras Sequential model About Keras layers Keras Core Layers Now, follow along with this basic implementation of a neural network which learns something about tic-tac-toe game outcomes. Keras Tutorial: Recognizing Tic-Tac-Toe Winners with Neural Networks , by Matthew Mayo Having completed these steps, you should be ready for implementing some more complex architectures. \u00a0 Step 5: Implementing a Convolutional Neural Network \u00a0 To implement a convolutional neural network (CNN) in Keras, start by reading the documentation on its convolutional layers: Keras Convolutional Layers After this, look at both of the following tutorials on CNNs in Keras. The first takes a slower approach, and covers much of what you should already know by now, while the second takes into account some additional topics such as avoiding overfitting. This isn't necessarily an either/or approach; you may find valuable nuggets in both write-ups: Keras Tutorial: The Ultimate Beginner\u2019s Guide to Deep Learning in Python , by Elite Data Science Introduction to Convolutional Neural Networks , by Mike Irvine To learn more about convolution neural networks in general, try Brandon Rohrer's video: Read the accompanying blog post . \u00a0 Step 6: Implementing a Recurrent Neural Network \u00a0 To implement a recurrent neural network (RNN) in Keras, start by reading the documentation on its recurrent layers: Keras Recurrent Layers After this, try out this tutorial by Chris Albon for implementing a Long Short-Term Memory (LSTM) network -- a dominant type of RNN -- for text classification: LSTM Recurrent Neural Network To learn more about recurrent neural networks in general, try Brandon Rohrer's video: Read the accompanying slides . \u00a0 Step 7: What Next? \u00a0 At this point you should have a solid understanding of Keras, including why you would use it, the advantages it has over other libraries in certain situations, and using it to implement a variety of network architectures. You're an expert now, right? Well, probably not. But hopefully you have mastered the basics. When you want to move beyond the basics, the next best stop is likely Keras' official tutorials: Keras Tutorials After this, check out the Keras examples directory, which includes vision models examples, text & sequences examples, generative models examples, and more. Keras Examples Directory Also, how about challenging yourself to fine-tune some of the above models you implemented in the previous steps? Change the optimizer, add another layer, play with activation functions. Or use some of the Keras metrics to go back and judge the performance of your models. The Keras documentation is a great place to start: Keras Metrics Keras FAQ: Frequently Asked Keras Questions Best of luck using Keras. \u00a0 Related: 7 Steps to Mastering Data Preparation with Python 7 Steps to Mastering Machine Learning with Python 7 More Steps to Mastering Machine Learning with Python", "title_html": "<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog\" src=\"/images/tkb-1710-s.png\" width=\"94\"/>7 Steps to Mastering Deep Learning with Keras</h1> ", "url": "https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html", "tfidf": {"tfidf": {"after": 3.06210621063, "watch": 11.77744807122, "matthew": 13.817232375979998, "googl": 11.388809182200001, "relat": 1.23750876919, "play": 1.46390041494, "new": 1.0178880554, "addit": 1.24634950542, "would": 4.331491712719999, "number": 2.20285833218, "follow": 4.18560506196, "recogn": 2.54954231572, "specif": 1.8719490626099997, "function": 4.99088337, "python": 281.489361702, "thought": 1.9854927463699998, "tictacto": 2886.54545454, "well": 2.1311497416, "done": 2.3302509907499998, "assert": 4.6178010471199995, "complet": 2.48043121632, "approach": 6.2266963001699995, "undoubt": 27.0459965928, "toward": 1.6303142329, "know": 2.59327017315, "sic": 34.2155172414, "sheet": 17.2190889371, "particular": 2.7629655412400003, "solid": 6.37334403854, "creat": 1.2492917847, "how": 8.01251640255, "present": 2.51103202846, "had": 1.0475750577399998, "expert": 10.73427991886, "end": 1.10680423871, "found": 1.11387076405, "interest": 3.20662492426, "deep": 18.1398537477, "beginn": 53.4545454545, "overview": 12.6805111821, "accompani": 6.76293929712, "chicken": 19.432068543499998, "second": 2.2261796256, "judg": 3.6263133851099996, "next": 2.9901120632800002, "below": 2.25607503197, "perform": 1.5313977042500002, "but": 3.04897253697, "definit": 3.24, "need": 1.4372623574099999, "classif": 8.067073170730001, "sure": 7.453521126760001, "final": 1.34008609775, "point": 2.51980001588, "writeup": 1443.27272727, "hidden": 7.81299212598, "domin": 2.320713346, "level": 1.6544393497299998, "has": 4.1745990008, "enough": 4.463939266140001, "stop": 2.1783754116400003, "tensorflow": 7216.363636349999, "brandon": 79.7788944724, "advantag": 3.32412060302, "entireti": 21.570652173899997, "experi": 3.74125132556, "subsequ": 1.7534791252500002, "sequenti": 79.1820448878, "establish": 1.34622233528, "out": 5.30083472455, "model": 20.905978404000003, "good": 1.51981619759, "hacker": 83.1204188482, "mainstream": 7.450023463160001, "much": 1.1942229577299999, "gear": 11.203952011300002, "optim": 11.5377906977, "elit": 6.97846153846, "choos": 4.17899447223, "print": 3.29719626168, "not": 9.14106583071, "tri": 7.417825020439999, "quot": 3.85339805825, "whole": 2.29488291414, "implement": 53.6472178419, "logist": 28.1989342806, "quick": 2.205, "easi": 5.2937645882, "gotten": 45.4899713467, "slower": 17.1632432432, "shown": 2.76923076923, "stuff": 23.3127753304, "though": 2.72152224222, "then": 3.25973581548, "they": 1.03017325287, "design": 2.9165059245, "anoth": 1.13643521832, "core": 4.623179965059999, "recurr": 213.57847533659998, "last": 1.2117234010100002, "let": 6.97233201582, "scienc": 4.63939216832, "kdnugget": 1443.27272727, "blog": 14.1876675603, "ensur": 3.4127257093700005, "practic": 1.70434782609, "respons": 1.5066907089300001, "simpl": 10.19434931508, "that": 10.0398406375, "algorithm": 55.9014084508, "such": 1.06151377374, "talk": 3.0303493033, "network": 64.842346022, "some": 7.28256880736, "beyond": 5.09172546504, "collect": 1.64109985528, "both": 3.15647160183, "backend": 3735.529411764, "document": 20.3277848912, "version": 2.0083491461099996, "varieti": 2.2972073506, "produc": 1.36932896326, "use": 10.296387573799999, "introduc": 1.7258397651900002, "ani": 3.40151406942, "question": 4.4081632653, "futher": 1443.27272727, "from": 3.00170164491, "valerio": 1701.0, "account": 1.94463498285, "visibl": 4.68595041322, "ten": 1.9178545542400003, "num": 16.00504064016, "technolog": 2.6034765496900003, "idea": 2.0930784443, "shortterm": 1443.27272727, "alreadyprepar": 1443.27272727, "for": 10.003150400100001, "difficult": 2.48957189901, "slide": 15.1056137012, "discuss": 2.19676214197, "releas": 3.6754253964599997, "fulli": 2.79015817223, "with": 21.025162388789994, "handi": 204.851612904, "theano": 4329.81818181, "are": 2.05981187156, "datacamp": 1443.27272727, "albon": 1443.27272727, "current": 1.5325803649, "frequent": 2.10501193317, "sens": 2.8365195640499996, "preprocess": 1221.23076923, "look": 5.725895647979999, "video": 16.4859813084, "metric": 44.470588235200005, "algo": 882.0, "bottom": 6.27261951798, "want": 1.99698113208, "mike": 5.86046511628, "master": 12.60500198492, "versus": 15.54946131244, "familiar": 13.72762645914, "general": 2.2436404748400003, "compar": 1.8662278123900002, "shortag": 11.388809182200001, "group": 1.20996875238, "doe": 1.70581282905, "flesh": 20.5914396887, "top": 5.516330785260001, "give": 1.3653250774, "place": 1.1004366812200002, "great": 3.79778327088, "sole": 4.04175152749, "step": 45.246882792959994, "framework": 16.400826446279996, "move": 1.29125660838, "desk": 23.244509516799997, "ask": 2.1744966443, "lead": 1.2664326739, "note": 2.84899057874, "oppos": 2.51282051282, "probabl": 2.64555907349, "scientist": 9.38852749852, "notebook": 80.3848101266, "nugget": 113.4, "intro": 66.7058823529, "readi": 5.15789473684, "instal": 3.78721374046, "commodit": 2886.54545454, "abov": 5.7114761961900005, "requir": 3.05689804564, "gave": 1.85121268657, "what": 7.520606347679999, "allow": 1.2716059271100002, "overfit": 1443.27272727, "help": 1.39962972759, "main": 1.25303867403, "find": 3.4588235294199996, "line": 1.4182597820299998, "outcom": 7.48867924528, "cover": 1.69380134429, "least": 1.6165359943000002, "occur": 1.7453825857499998, "even": 1.16461267606, "fact": 1.73375559681, "post": 6.71478922881, "here": 4.84615384616, "ideal": 9.31143695014, "veri": 2.51760228354, "lowerlevel": 1443.27272727, "speed": 3.8703071672400005, "attent": 2.81040892193, "long": 1.2657259028899999, "layer": 73.27384615385999, "than": 1.03278688525, "about": 7.45402106113, "intuit": 27.7068062827, "neural": 1308.1348314606, "thing": 12.032742155549998, "have": 12.178738093679998, "egg": 14.0123565755, "bookmark": 610.615384615, "topic": 10.915091096600001, "type": 2.0281042411900003, "beauti": 4.79347826087, "them": 1.09876115994, "check": 6.50655737705, "finetun": 1443.27272727, "willem": 97.1009174312, "recommend": 3.9142011834300003, "complex": 2.34021226415, "tool": 4.99716713881, "start": 11.400622356960001, "luck": 20.889473684200002, "run": 4.6707855251399995, "guid": 2.49113447356, "alreadi": 9.775862068950001, "whi": 13.026461538480001, "explain": 2.60049140049, "avoid": 2.45986984816, "his": 1.0943682360200002, "cheat": 63.377245509, "comparison": 4.9597000937199995, "karlijn": 2886.54545454, "introduct": 2.7808723068799996, "over": 4.10100096868, "perhap": 3.14812611541, "chris": 5.979661016950001, "consum": 4.93043478261, "maggio": 1443.2727272729999, "exact": 10.40594275725, "there": 1.04091266719, "connect": 1.8843916913900003, "inform": 1.5753125620200001, "plaidml": 1443.27272727, "referenc": 14.0994671403, "charl": 2.3075581395299998, "possibl": 1.4173734488, "modifi": 4.45329593268, "say": 1.7544480053, "inaccess": 52.0524590164, "best": 3.1657028913200005, "exampl": 7.5241706161, "right": 1.4054532577899999, "portabl": 19.5276752768, "take": 5.6980834111, "previous": 4.28540579448, "now": 4.643123492, "further": 1.3618116315, "toolbox": 453.6, "code": 19.4035688096, "high": 1.14777327935, "basic": 13.6509028375, "regress": 102.4258064516, "realli": 4.7476076555, "power": 1.3396337861799998, "tutori": 475.6853932584, "also": 2.02953020134, "coupl": 3.2572835453400004, "specifi": 6.920662598080001, "modern": 1.5319888063299998, "mean": 1.44906900329, "will": 6.1240549298, "martin": 3.07793718496, "task": 7.77282741738, "major": 1.14852058164, "babi": 7.517045454550001, "accomplish": 5.17302052786, "the": 59.0, "may": 3.15605327679, "mayo": 99.5360501568, "unus": 24.3870967742, "eitheror": 1443.27272727, "challeng": 2.55816951337, "machin": 20.121673003799998, "ground": 1.97610156833, "into": 1.01502461479, "ultim": 2.58524670249, "howev": 2.1890382626599996, "essenti": 2.9280708225700005, "prove": 2.45720476706, "work": 1.11520089913, "minut": 9.336992746529999, "were": 1.02458857696, "which": 7.036342915, "intellig": 4.19334389857, "activ": 1.46403541129, "worthi": 18.5250875146, "other": 4.03969465648, "refer": 2.6004914005, "hope": 2.50884955752, "one": 4.02509982888, "prefer": 3.0216977540900003, "see": 1.27242125511, "sequeni": 1443.27272727, "resourc": 2.9487369985100003, "nain": 882.0, "highlevel": 1443.27272727, "worth": 5.210370856580001, "get": 16.07063322465, "still": 1.1866357724799999, "like": 1.14918566775, "rohrer": 1984.5, "should": 9.98595240594, "sum": 6.681818181819999, "add": 4.61243463103, "memori": 2.57392996109, "yet": 2.1258703802900003, "includ": 3.0571923743399996, "anyon": 5.37440758294, "kera": 50134.736842080005, "necessarili": 7.33302540416, "access": 5.6204861930700005, "this": 16.06069802736, "directori": 29.536744186, "time": 1.01127460348, "api": 84.44680851060001, "back": 1.26070038911, "chang": 3.5426956263, "bit": 8.33385826772, "backen": 1443.27272727, "project": 1.7534791252500002, "taken": 1.6012102874399998, "halfway": 26.862944162399998, "valuabl": 7.46754468485, "most": 2.04192926046, "between": 1.03453668708, "readili": 25.0805687204, "certain": 1.8077886586200003, "soon": 1.9817750592900003, "irvin": 40.1924050633, "brief": 3.39013452915, "vision": 4.88041807562, "along": 1.2973768080399999, "all": 1.01146788991, "everyon": 6.3964544722, "constitut": 2.79802608389, "situat": 2.06611140031, "someth": 6.56304257958, "appropri": 4.31413043478, "degre": 2.4852849092, "titl": 1.87261146497, "suit": 3.92873051225, "page": 8.14676074408, "architectur": 10.25581395348, "call": 1.0676529926, "more": 7.1201947719, "and": 20.0012598426, "london": 1.97782484116, "these": 3.22246278756, "prepar": 2.43012398592, "yourself": 53.185929648199995, "gain": 1.84819557625, "artifici": 8.31639601886, "websit": 2.52160101652, "winner": 5.20183486239, "befor": 1.10036041031, "librari": 21.4613044948, "download": 14.6457564576, "can": 3.52878417426, "avail": 1.7288467821, "pydata": 1443.27272727, "describ": 1.47027227264, "make": 3.2287980475800007, "way": 1.2190739461, "onli": 2.0512953033200003, "promot": 2.0172808132099997, "few": 2.63458347162, "skip": 26.111842105300003, "read": 18.519685039360002, "syntax": 45.6206896552, "advanc": 1.9997480791, "data": 20.25861335604, "notch": 57.7309090909, "cnns": 1443.27272727, "sequenc": 6.07112810707, "convolut": 606.726114648, "come": 1.32831325301, "offici": 1.40483143085, "pay": 2.80148226575, "text": 6.25655172414, "understand": 14.842931937149999, "direct": 2.44452998692, "import": 2.6803984467400004, "first": 5.03808073115, "game": 2.57978550536, "copi": 3.8375634517800004, "generat": 2.05275407292, "while": 1.0441988950299999, "welldefin": 1443.27272727, "year": 1.0485436893200002, "write": 2.0575427682700003, "hit": 3.1166077738499998, "aakash": 1443.27272727, "down": 1.35889754344, "learn": 32.518507681100004, "when": 2.0415353951, "multilay": 324.0}, "logtfidf": {"after": 0.061472083944299996, "watch": 4.10272270128, "matthew": 3.8655387109800006, "googl": 2.43263122258, "relat": 0.21310030165399999, "play": 0.38110439064199997, "new": 0.0177299468511, "addit": 0.220218882972, "would": 0.3184705118588, "number": 0.1932171568372, "follow": 0.18142764437679998, "recogn": 0.935913859031, "specif": 0.626980167541, "function": 1.828931483188, "python": 20.153283714799997, "thought": 0.685867118283, "tictacto": 14.549337082200001, "well": 0.1270288766312, "done": 0.845975983129, "assert": 1.52991862796, "complet": 0.430570484094, "approach": 2.1907008437430004, "undoubt": 3.29753899407, "toward": 0.48877277716000006, "know": 0.952919694398, "sic": 3.5326792616800002, "sheet": 4.30574281958, "particular": 0.646314787608, "solid": 1.8521242986400002, "creat": 0.222576818514, "how": 2.3578347846500005, "present": 0.455093309598, "had": 0.0464780244111, "expert": 3.36059034126, "end": 0.101476798618, "found": 0.107841124048, "interest": 0.9441435559639999, "deep": 6.443367349, "beginn": 3.9788316751, "overview": 2.54006626224, "accompani": 2.43662084452, "chicken": 2.9669247190400005, "second": 0.21427952675999998, "judg": 1.28821653582, "next": 0.804327370998, "below": 0.813626591936, "perform": 0.42618085058, "but": 0.0485771162157, "definit": 1.1755733298, "need": 0.362740163442, "classif": 2.08779073629, "sure": 2.0086865552, "final": 0.292733863948, "point": 0.46206471806599997, "writeup": 7.2746685411000005, "hidden": 2.0557880052, "domin": 0.841874615142, "level": 0.503462189943, "has": 0.1708957794192, "enough": 1.605768878338, "stop": 0.778579374963, "tensorflow": 36.3733427055, "brandon": 7.3722236172399995, "advantag": 1.20120515883, "entireti": 3.0713336951700003, "experi": 1.252545907866, "subsequ": 0.561601885907, "sequenti": 7.3572047732, "establish": 0.297302399813, "out": 0.2921319545965, "model": 7.37450073111, "good": 0.418589404907, "hacker": 4.42029038586, "mainstream": 2.0082171818, "much": 0.17749572930100002, "gear": 2.41626657421, "optim": 2.4456277954099996, "elit": 1.94282848252, "choos": 1.43007066072, "print": 1.19307248967, "not": 0.1399717170675, "tri": 2.47036611664, "quot": 1.3489553715600002, "whole": 0.8306818244059999, "implement": 19.11569113605, "logist": 5.2922740104, "quick": 0.790727508899, "easi": 1.6665296351499999, "gotten": 3.8174918917, "slower": 2.84277007639, "shown": 1.01856958099, "stuff": 3.1490015077499995, "though": 0.616088382158, "then": 0.24910159569269996, "they": 0.0297269947676, "design": 0.754478236044, "anoth": 0.127896361652, "core": 1.53108277245, "recurr": 21.433469171280002, "last": 0.19204364461100001, "let": 2.4976051345599997, "scienc": 1.682872357782, "kdnugget": 7.2746685411000005, "blog": 2.65237310559, "ensur": 1.22751130026, "practic": 0.533182530867, "respons": 0.40991566230300003, "simpl": 3.66966386817, "that": 0.039761483796399995, "algorithm": 6.66088479036, "such": 0.059695977806, "talk": 1.10867789449, "network": 23.8270763263, "some": 0.2770145634515, "beyond": 1.86893916745, "collect": 0.49536666052, "both": 0.1525276001679, "backend": 27.3574018794, "document": 7.460376979064, "version": 0.697313064259, "varieti": 0.8316941898119999, "produc": 0.314320812003, "use": 0.292080197316, "introduc": 0.5457137524260001, "ani": 0.376825075098, "question": 1.580621858028, "futher": 7.2746685411000005, "from": 0.0017011625065979999, "valerio": 19.02107791119, "account": 0.665074289973, "visibl": 1.5445687581299998, "ten": 0.6512071415940001, "num": 0.005039846326352001, "technolog": 0.956847686355, "idea": 0.73863592212, "shortterm": 7.2746685411000005, "alreadyprepar": 7.2746685411000005, "for": 0.0031499039539700006, "difficult": 0.912110767588, "slide": 2.7150664430299996, "discuss": 0.78698452262, "releas": 1.217043399088, "fulli": 1.02609828678, "with": 0.025147325981190002, "handi": 9.25827739396, "theano": 21.824005623300003, "are": 0.0589349471654, "datacamp": 7.2746685411000005, "albon": 7.2746685411000005, "current": 0.42695282784500005, "frequent": 0.7443211360850001, "sens": 1.04257779501, "preprocess": 7.1076144564399995, "look": 1.9391600808, "video": 5.96536244835, "metric": 6.203361703119999, "algo": 6.7821920560099995, "bottom": 1.8361940533599999, "want": 0.6916366062549999, "mike": 1.7682289718200002, "master": 4.59119742796, "versus": 4.10175763036, "familiar": 3.85252630334, "general": 0.229905156126, "compar": 0.6239191809269999, "shortag": 2.43263122258, "group": 0.190594534797, "doe": 0.5340417297169999, "flesh": 3.02487544034, "top": 1.8273019133640003, "give": 0.311392552224, "place": 0.0957070839572, "great": 0.707415774237, "sole": 1.3966781444299998, "step": 16.63272091168, "framework": 4.20836909214, "move": 0.255615859253, "desk": 3.1460689543299996, "ask": 0.776797209847, "lead": 0.23620402986699998, "note": 0.707635136166, "oppos": 0.921405832541, "probabl": 0.972882412913, "scientist": 3.09268256888, "notebook": 7.387356098, "nugget": 4.73092139129, "intro": 4.20029314023, "readi": 1.6405284994999998, "instal": 1.3316305879, "commodit": 14.549337082200001, "abov": 1.9315956894480002, "requir": 0.84850702135, "gave": 0.615840930592, "what": 1.355323780962, "allow": 0.24028061118900002, "overfit": 7.2746685411000005, "help": 0.336207721344, "main": 0.225571540588, "find": 1.095562660576, "line": 0.349430614452, "outcom": 2.01339244624, "cover": 0.526975319156, "least": 0.480285584745, "occur": 0.556973778473, "even": 0.152388564834, "fact": 0.5502899207949999, "post": 2.4171004581029996, "here": 1.7700763767400003, "ideal": 3.07619248726, "veri": 0.460319586476, "lowerlevel": 7.2746685411000005, "speed": 1.3533338752700002, "attent": 1.03332999658, "long": 0.235645793878, "layer": 18.87281246115, "than": 0.0322608622182, "about": 0.43990434232220005, "intuit": 3.3216780971900004, "neural": 89.876933421, "thing": 4.3909676734, "have": 0.1774200280944, "egg": 2.63993955287, "bookmark": 6.414467275880001, "topic": 3.3939983108200003, "type": 0.707101485387, "beauti": 1.5672562984, "them": 0.0941833269093, "check": 1.87281049562, "finetun": 7.2746685411000005, "willem": 7.76520728602, "recommend": 1.36461126863, "complex": 0.8502416364309999, "tool": 1.60887117963, "start": 2.127990323619, "luck": 3.03924538062, "run": 1.328144926617, "guid": 0.912738218589, "alreadi": 3.3523919037349996, "whi": 4.72275372188, "explain": 0.955700427358, "avoid": 0.900108441291, "his": 0.0901772433641, "cheat": 6.911915425639999, "comparison": 1.60134527393, "karlijn": 14.549337082200001, "introduct": 1.02276465794, "over": 0.0997468859828, "perhap": 1.14680739183, "chris": 1.78836388023, "consum": 1.5954271753600002, "maggio": 18.52816875732, "exact": 3.7312943197500004, "there": 0.0400978929255, "connect": 0.633605058682, "inform": 0.454453704662, "plaidml": 7.2746685411000005, "referenc": 2.6461370052, "charl": 0.836189882976, "possibl": 0.348805474891, "modifi": 1.4936444810499998, "say": 0.562154280552, "inaccess": 3.9522520373, "best": 0.918455865894, "exampl": 2.0434133749949996, "right": 0.34035985417, "portabl": 2.9718327043599997, "take": 0.653459810985, "previous": 1.069808880189, "now": 0.596371780084, "further": 0.308815895297, "toolbox": 6.117215752409999, "code": 6.78009547985, "high": 0.13782378654000002, "basic": 5.02183874475, "regress": 7.871983032839999, "realli": 1.5576408397, "power": 0.292396282715, "tutori": 32.682521244, "also": 0.0293143156, "coupl": 1.18089357972, "specifi": 1.93451151621, "modern": 0.426566764719, "mean": 0.37092128352, "will": 1.0139326745750001, "martin": 1.12425962746, "task": 2.71497361322, "major": 0.138474663439, "babi": 2.01717316908, "accomplish": 1.64345675928, "the": 0.0, "may": 0.1521299858532, "mayo": 7.81474542224, "unus": 3.1940541716900004, "eitheror": 7.2746685411000005, "challeng": 0.9392919688950001, "machin": 6.9617979031, "ground": 0.681125998984, "into": 0.0149128632287, "ultim": 0.9498209395739999, "howev": 0.180630234695, "essenti": 1.07434378384, "prove": 0.899024430345, "work": 0.109034567273, "minut": 3.4061158079399996, "were": 0.024291143681099997, "which": 0.036248896918010004, "intellig": 1.43349848213, "activ": 0.381196603284, "worthi": 2.9191258953099997, "other": 0.03949899167904, "refer": 0.525106493596, "hope": 0.919824304455, "one": 0.025021406582, "prefer": 1.10581884366, "see": 0.240921585492, "sequeni": 7.2746685411000005, "resourc": 1.08137694258, "nain": 6.7821920560099995, "highlevel": 7.2746685411000005, "worth": 1.65065103492, "get": 5.217921052037999, "still": 0.17112222142900002, "like": 0.139053576545, "rohrer": 13.79995018332, "should": 3.0565192605480003, "sum": 1.89939013342, "add": 1.52875583713, "memori": 0.9454338986599999, "yet": 0.754181309241, "includ": 0.0566540441715, "anyon": 1.68164835081, "kera": 403.6874900844, "necessarili": 1.99238817347, "access": 1.883417648148, "this": 0.06058318484, "directori": 5.3849757466799995, "time": 0.0112115188626, "api": 4.43612185107, "back": 0.23166743089699998, "chang": 0.49882687517400004, "bit": 2.12032652634, "backen": 7.2746685411000005, "project": 0.561601885907, "taken": 0.470759772949, "halfway": 3.2907477965, "valuabl": 2.010566255, "most": 0.041495792591199995, "between": 0.033953681165299995, "readili": 5.0578924224, "certain": 0.592104362781, "soon": 0.6839929376880001, "irvin": 3.693678049, "brief": 1.22086960472, "vision": 1.58523088743, "along": 0.260344385917, "all": 0.011402632097799998, "everyon": 1.8557438481400002, "constitut": 1.0289141985299999, "situat": 0.725668290015, "someth": 2.37661424546, "appropri": 1.4618957827399999, "degre": 0.910387304568, "titl": 0.6273339619899999, "suit": 1.36831634882, "page": 2.845304129644, "architectur": 3.26939515838, "call": 0.0654627744488, "more": 0.11917452119999998, "and": 0.001259802841272, "london": 0.6819976757709999, "these": 0.2146008582024, "prepar": 0.8879422790620001, "yourself": 6.56129340102, "gain": 0.6142097989249999, "artifici": 2.11822899018, "websit": 0.924894023806, "winner": 1.6490114215, "befor": 0.0956377718795, "librari": 7.894479847544, "download": 2.6841506319, "can": 0.487023289182, "avail": 0.547454586289, "pydata": 7.2746685411000005, "describ": 0.385447603125, "make": 0.22049297346869998, "way": 0.19809150993500002, "onli": 0.050648536658199995, "promot": 0.7017504724920001, "few": 0.551155827306, "skip": 3.26238893194, "read": 6.71514144704, "syntax": 3.8203613341300007, "advanc": 0.6930212121780001, "data": 7.3009235088, "notch": 4.05579271624, "cnns": 7.2746685411000005, "sequenc": 1.8035444374, "convolut": 27.697908051300004, "come": 0.28390990653000003, "offici": 0.339917317543, "pay": 1.0301486577299999, "text": 2.28096401998, "understand": 5.440429378399999, "direct": 0.401411378992, "import": 0.585636554132, "first": 0.0379364490608, "game": 0.9477062580210001, "copi": 1.34483764744, "generat": 0.719182341736, "while": 0.04324998379380001, "welldefin": 7.2746685411000005, "year": 0.047402238894600005, "write": 0.721512439877, "hit": 1.1367451583600001, "aakash": 7.2746685411000005, "down": 0.306673741186, "learn": 11.79852890643, "when": 0.0411099777168, "multilay": 5.78074351579}, "logidf": {"after": 0.020490694648099998, "watch": 1.36757423376, "matthew": 1.9327693554900003, "googl": 2.43263122258, "relat": 0.21310030165399999, "play": 0.38110439064199997, "new": 0.0177299468511, "addit": 0.220218882972, "would": 0.0796176279647, "number": 0.0966085784186, "follow": 0.045356911094199995, "recogn": 0.935913859031, "specif": 0.626980167541, "function": 0.914465741594, "python": 4.03065674296, "thought": 0.685867118283, "tictacto": 7.2746685411000005, "well": 0.0635144383156, "done": 0.845975983129, "assert": 1.52991862796, "complet": 0.215285242047, "approach": 0.7302336145810001, "undoubt": 3.29753899407, "toward": 0.48877277716000006, "know": 0.952919694398, "sic": 3.5326792616800002, "sheet": 2.15287140979, "particular": 0.323157393804, "solid": 1.8521242986400002, "creat": 0.222576818514, "how": 0.47156695693000006, "present": 0.227546654799, "had": 0.0464780244111, "expert": 1.68029517063, "end": 0.101476798618, "found": 0.107841124048, "interest": 0.47207177798199995, "deep": 1.2886734698, "beginn": 3.9788316751, "overview": 2.54006626224, "accompani": 1.21831042226, "chicken": 2.9669247190400005, "second": 0.10713976337999999, "judg": 1.28821653582, "next": 0.402163685499, "below": 0.813626591936, "perform": 0.42618085058, "but": 0.0161923720719, "definit": 1.1755733298, "need": 0.362740163442, "classif": 2.08779073629, "sure": 2.0086865552, "final": 0.292733863948, "point": 0.23103235903299998, "writeup": 7.2746685411000005, "hidden": 2.0557880052, "domin": 0.841874615142, "level": 0.503462189943, "has": 0.0427239448548, "enough": 0.802884439169, "stop": 0.778579374963, "tensorflow": 7.2746685411000005, "brandon": 3.6861118086199998, "advantag": 1.20120515883, "entireti": 3.0713336951700003, "experi": 0.626272953933, "subsequ": 0.561601885907, "sequenti": 3.6786023866, "establish": 0.297302399813, "out": 0.0584263909193, "model": 0.7374500731110001, "good": 0.418589404907, "hacker": 4.42029038586, "mainstream": 2.0082171818, "much": 0.17749572930100002, "gear": 2.41626657421, "optim": 2.4456277954099996, "elit": 1.94282848252, "choos": 1.43007066072, "print": 1.19307248967, "not": 0.0155524130075, "tri": 0.61759152916, "quot": 1.3489553715600002, "whole": 0.8306818244059999, "implement": 1.27437940907, "logist": 2.6461370052, "quick": 0.790727508899, "easi": 1.6665296351499999, "gotten": 3.8174918917, "slower": 2.84277007639, "shown": 1.01856958099, "stuff": 3.1490015077499995, "though": 0.308044191079, "then": 0.08303386523089999, "they": 0.0297269947676, "design": 0.377239118022, "anoth": 0.127896361652, "core": 1.53108277245, "recurr": 3.5722448618800002, "last": 0.19204364461100001, "let": 1.2488025672799998, "scienc": 0.841436178891, "kdnugget": 7.2746685411000005, "blog": 2.65237310559, "ensur": 1.22751130026, "practic": 0.533182530867, "respons": 0.40991566230300003, "simpl": 1.2232212893899999, "that": 0.00397614837964, "algorithm": 3.33044239518, "such": 0.059695977806, "talk": 1.10867789449, "network": 0.9530830530519999, "some": 0.0395735090645, "beyond": 0.934469583725, "collect": 0.49536666052, "both": 0.050842533389300004, "backend": 6.83935046985, "document": 0.932547122383, "version": 0.697313064259, "varieti": 0.8316941898119999, "produc": 0.314320812003, "use": 0.0292080197316, "introduc": 0.5457137524260001, "ani": 0.125608358366, "question": 0.790310929014, "futher": 7.2746685411000005, "from": 0.000567054168866, "valerio": 6.340359303730001, "account": 0.665074289973, "visibl": 1.5445687581299998, "ten": 0.6512071415940001, "num": 0.00031499039539700004, "technolog": 0.956847686355, "idea": 0.73863592212, "shortterm": 7.2746685411000005, "alreadyprepar": 7.2746685411000005, "for": 0.00031499039539700004, "difficult": 0.912110767588, "slide": 2.7150664430299996, "discuss": 0.78698452262, "releas": 0.608521699544, "fulli": 1.02609828678, "with": 0.00119749171339, "handi": 4.62913869698, "theano": 7.2746685411000005, "are": 0.0294674735827, "datacamp": 7.2746685411000005, "albon": 7.2746685411000005, "current": 0.42695282784500005, "frequent": 0.7443211360850001, "sens": 1.04257779501, "preprocess": 7.1076144564399995, "look": 0.6463866936, "video": 1.19307248967, "metric": 3.1016808515599994, "algo": 6.7821920560099995, "bottom": 1.8361940533599999, "want": 0.6916366062549999, "mike": 1.7682289718200002, "master": 1.14779935699, "versus": 2.05087881518, "familiar": 1.92626315167, "general": 0.114952578063, "compar": 0.6239191809269999, "shortag": 2.43263122258, "group": 0.190594534797, "doe": 0.5340417297169999, "flesh": 3.02487544034, "top": 0.609100637788, "give": 0.311392552224, "place": 0.0957070839572, "great": 0.235805258079, "sole": 1.3966781444299998, "step": 1.03954505698, "framework": 2.10418454607, "move": 0.255615859253, "desk": 3.1460689543299996, "ask": 0.776797209847, "lead": 0.23620402986699998, "note": 0.353817568083, "oppos": 0.921405832541, "probabl": 0.972882412913, "scientist": 1.54634128444, "notebook": 3.693678049, "nugget": 4.73092139129, "intro": 4.20029314023, "readi": 1.6405284994999998, "instal": 1.3316305879, "commodit": 7.2746685411000005, "abov": 0.643865229816, "requir": 0.424253510675, "gave": 0.615840930592, "what": 0.225887296827, "allow": 0.24028061118900002, "overfit": 7.2746685411000005, "help": 0.336207721344, "main": 0.225571540588, "find": 0.547781330288, "line": 0.349430614452, "outcom": 2.01339244624, "cover": 0.526975319156, "least": 0.480285584745, "occur": 0.556973778473, "even": 0.152388564834, "fact": 0.5502899207949999, "post": 0.8057001527009999, "here": 0.8850381883700001, "ideal": 1.53809624363, "veri": 0.230159793238, "lowerlevel": 7.2746685411000005, "speed": 1.3533338752700002, "attent": 1.03332999658, "long": 0.235645793878, "layer": 2.0969791623500003, "than": 0.0322608622182, "about": 0.0628434774746, "intuit": 3.3216780971900004, "neural": 4.0853151555, "thing": 0.8781935346799999, "have": 0.0147850023412, "egg": 2.63993955287, "bookmark": 6.414467275880001, "topic": 1.6969991554100001, "type": 0.707101485387, "beauti": 1.5672562984, "them": 0.0941833269093, "check": 1.87281049562, "finetun": 7.2746685411000005, "willem": 3.88260364301, "recommend": 1.36461126863, "complex": 0.8502416364309999, "tool": 1.60887117963, "start": 0.236443369291, "luck": 3.03924538062, "run": 0.442714975539, "guid": 0.912738218589, "alreadi": 0.670478380747, "whi": 1.18068843047, "explain": 0.955700427358, "avoid": 0.900108441291, "his": 0.0901772433641, "cheat": 3.4559577128199996, "comparison": 1.60134527393, "karlijn": 7.2746685411000005, "introduct": 1.02276465794, "over": 0.0249367214957, "perhap": 1.14680739183, "chris": 1.78836388023, "consum": 1.5954271753600002, "maggio": 6.17605625244, "exact": 1.2437647732500001, "there": 0.0400978929255, "connect": 0.633605058682, "inform": 0.454453704662, "plaidml": 7.2746685411000005, "referenc": 2.6461370052, "charl": 0.836189882976, "possibl": 0.348805474891, "modifi": 1.4936444810499998, "say": 0.562154280552, "inaccess": 3.9522520373, "best": 0.459227932947, "exampl": 0.40868267499899996, "right": 0.34035985417, "portabl": 2.9718327043599997, "take": 0.130691962197, "previous": 0.356602960063, "now": 0.149092945021, "further": 0.308815895297, "toolbox": 6.117215752409999, "code": 1.35601909597, "high": 0.13782378654000002, "basic": 1.00436774895, "regress": 3.9359915164199997, "realli": 1.5576408397, "power": 0.292396282715, "tutori": 4.0853151555, "also": 0.0146571578, "coupl": 1.18089357972, "specifi": 1.93451151621, "modern": 0.426566764719, "mean": 0.37092128352, "will": 0.202786534915, "martin": 1.12425962746, "task": 1.35748680661, "major": 0.138474663439, "babi": 2.01717316908, "accomplish": 1.64345675928, "the": 0.0, "may": 0.050709995284400004, "mayo": 3.90737271112, "unus": 3.1940541716900004, "eitheror": 7.2746685411000005, "challeng": 0.9392919688950001, "machin": 1.39235958062, "ground": 0.681125998984, "into": 0.0149128632287, "ultim": 0.9498209395739999, "howev": 0.0903151173475, "essenti": 1.07434378384, "prove": 0.899024430345, "work": 0.109034567273, "minut": 1.1353719359799999, "were": 0.024291143681099997, "which": 0.00517841384543, "intellig": 1.43349848213, "activ": 0.381196603284, "worthi": 2.9191258953099997, "other": 0.00987474791976, "refer": 0.262553246798, "hope": 0.919824304455, "one": 0.0062553516455, "prefer": 1.10581884366, "see": 0.240921585492, "sequeni": 7.2746685411000005, "resourc": 1.08137694258, "nain": 6.7821920560099995, "highlevel": 7.2746685411000005, "worth": 1.65065103492, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.139053576545, "rohrer": 6.89997509166, "should": 0.509419876758, "sum": 1.89939013342, "add": 1.52875583713, "memori": 0.9454338986599999, "yet": 0.754181309241, "includ": 0.0188846813905, "anyon": 1.68164835081, "kera": 6.72812483474, "necessarili": 1.99238817347, "access": 0.627805882716, "this": 0.0037864490525, "directori": 2.6924878733399997, "time": 0.0112115188626, "api": 4.43612185107, "back": 0.23166743089699998, "chang": 0.166275625058, "bit": 2.12032652634, "backen": 7.2746685411000005, "project": 0.561601885907, "taken": 0.470759772949, "halfway": 3.2907477965, "valuabl": 2.010566255, "most": 0.020747896295599998, "between": 0.033953681165299995, "readili": 2.5289462112, "certain": 0.592104362781, "soon": 0.6839929376880001, "irvin": 3.693678049, "brief": 1.22086960472, "vision": 1.58523088743, "along": 0.260344385917, "all": 0.011402632097799998, "everyon": 1.8557438481400002, "constitut": 1.0289141985299999, "situat": 0.725668290015, "someth": 1.18830712273, "appropri": 1.4618957827399999, "degre": 0.910387304568, "titl": 0.6273339619899999, "suit": 1.36831634882, "page": 0.711326032411, "architectur": 1.63469757919, "call": 0.0654627744488, "more": 0.017024931599999998, "and": 6.29901420636e-05, "london": 0.6819976757709999, "these": 0.0715336194008, "prepar": 0.8879422790620001, "yourself": 3.28064670051, "gain": 0.6142097989249999, "artifici": 2.11822899018, "websit": 0.924894023806, "winner": 1.6490114215, "befor": 0.0956377718795, "librari": 0.986809980943, "download": 2.6841506319, "can": 0.162341096394, "avail": 0.547454586289, "pydata": 7.2746685411000005, "describ": 0.385447603125, "make": 0.07349765782289999, "way": 0.19809150993500002, "onli": 0.025324268329099998, "promot": 0.7017504724920001, "few": 0.275577913653, "skip": 3.26238893194, "read": 0.83939268088, "syntax": 3.8203613341300007, "advanc": 0.6930212121780001, "data": 1.2168205848, "notch": 4.05579271624, "cnns": 7.2746685411000005, "sequenc": 1.8035444374, "convolut": 4.61631800855, "come": 0.28390990653000003, "offici": 0.339917317543, "pay": 1.0301486577299999, "text": 1.14048200999, "understand": 1.0880858756799998, "direct": 0.200705689496, "import": 0.292818277066, "first": 0.0075872898121599995, "game": 0.9477062580210001, "copi": 1.34483764744, "generat": 0.719182341736, "while": 0.04324998379380001, "welldefin": 7.2746685411000005, "year": 0.047402238894600005, "write": 0.721512439877, "hit": 1.1367451583600001, "aakash": 7.2746685411000005, "down": 0.306673741186, "learn": 0.842752064745, "when": 0.0205549888584, "multilay": 5.78074351579}, "freq": {"after": 3, "watch": 3, "matthew": 2, "googl": 1, "relat": 1, "play": 1, "new": 1, "addit": 1, "would": 4, "number": 2, "follow": 4, "recogn": 1, "specif": 1, "function": 2, "python": 5, "thought": 1, "tictacto": 2, "well": 2, "done": 1, "assert": 1, "complet": 2, "approach": 3, "undoubt": 1, "toward": 1, "know": 1, "sic": 1, "sheet": 2, "particular": 2, "solid": 1, "creat": 1, "how": 5, "present": 2, "had": 1, "expert": 2, "end": 1, "found": 1, "interest": 2, "deep": 5, "beginn": 1, "overview": 1, "accompani": 2, "chicken": 1, "second": 2, "judg": 1, "next": 2, "below": 1, "perform": 1, "but": 3, "definit": 1, "need": 1, "classif": 1, "sure": 1, "final": 1, "point": 2, "writeup": 1, "hidden": 1, "domin": 1, "level": 1, "has": 4, "enough": 2, "stop": 1, "tensorflow": 5, "brandon": 2, "advantag": 1, "entireti": 1, "experi": 2, "subsequ": 1, "sequenti": 2, "establish": 1, "out": 5, "model": 10, "good": 1, "hacker": 1, "mainstream": 1, "much": 1, "gear": 1, "optim": 1, "elit": 1, "choos": 1, "print": 1, "not": 9, "tri": 4, "quot": 1, "whole": 1, "implement": 15, "logist": 2, "quick": 1, "easi": 1, "gotten": 1, "slower": 1, "shown": 1, "stuff": 1, "though": 2, "then": 3, "they": 1, "design": 2, "anoth": 1, "core": 1, "recurr": 6, "last": 1, "let": 2, "scienc": 2, "kdnugget": 1, "blog": 1, "ensur": 1, "practic": 1, "respons": 1, "simpl": 3, "that": 10, "algorithm": 2, "such": 1, "talk": 1, "network": 25, "some": 7, "beyond": 2, "collect": 1, "both": 3, "backend": 4, "document": 8, "version": 1, "varieti": 1, "produc": 1, "use": 10, "introduc": 1, "ani": 3, "question": 2, "futher": 1, "from": 3, "valerio": 3, "account": 1, "visibl": 1, "ten": 1, "num": 16, "technolog": 1, "idea": 1, "shortterm": 1, "alreadyprepar": 1, "for": 10, "difficult": 1, "slide": 1, "discuss": 1, "releas": 2, "fulli": 1, "with": 21, "handi": 2, "theano": 3, "are": 2, "datacamp": 1, "albon": 1, "current": 1, "frequent": 1, "sens": 1, "preprocess": 1, "look": 3, "video": 5, "metric": 2, "algo": 1, "bottom": 1, "want": 1, "mike": 1, "master": 4, "versus": 2, "familiar": 2, "general": 2, "compar": 1, "shortag": 1, "group": 1, "doe": 1, "flesh": 1, "top": 3, "give": 1, "place": 1, "great": 3, "sole": 1, "step": 16, "framework": 2, "move": 1, "desk": 1, "ask": 1, "lead": 1, "note": 2, "oppos": 1, "probabl": 1, "scientist": 2, "notebook": 2, "nugget": 1, "intro": 1, "readi": 1, "instal": 1, "commodit": 2, "abov": 3, "requir": 2, "gave": 1, "what": 6, "allow": 1, "overfit": 1, "help": 1, "main": 1, "find": 2, "line": 1, "outcom": 1, "cover": 1, "least": 1, "occur": 1, "even": 1, "fact": 1, "post": 3, "here": 2, "ideal": 2, "veri": 2, "lowerlevel": 1, "speed": 1, "attent": 1, "long": 1, "layer": 9, "than": 1, "about": 7, "intuit": 1, "neural": 22, "thing": 5, "have": 12, "egg": 1, "bookmark": 1, "topic": 2, "type": 1, "beauti": 1, "them": 1, "check": 1, "finetun": 1, "willem": 2, "recommend": 1, "complex": 1, "tool": 1, "start": 9, "luck": 1, "run": 3, "guid": 1, "alreadi": 5, "whi": 4, "explain": 1, "avoid": 1, "his": 1, "cheat": 2, "comparison": 1, "karlijn": 2, "introduct": 1, "over": 4, "perhap": 1, "chris": 1, "consum": 1, "maggio": 3, "exact": 3, "there": 1, "connect": 1, "inform": 1, "plaidml": 1, "referenc": 1, "charl": 1, "possibl": 1, "modifi": 1, "say": 1, "inaccess": 1, "best": 2, "exampl": 5, "right": 1, "portabl": 1, "take": 5, "previous": 3, "now": 4, "further": 1, "toolbox": 1, "code": 5, "high": 1, "basic": 5, "regress": 2, "realli": 1, "power": 1, "tutori": 8, "also": 2, "coupl": 1, "specifi": 1, "modern": 1, "mean": 1, "will": 5, "martin": 1, "task": 2, "major": 1, "babi": 1, "accomplish": 1, "the": 59, "may": 3, "mayo": 2, "unus": 1, "eitheror": 1, "challeng": 1, "machin": 5, "ground": 1, "into": 1, "ultim": 1, "howev": 2, "essenti": 1, "prove": 1, "work": 1, "minut": 3, "were": 1, "which": 7, "intellig": 1, "activ": 1, "worthi": 1, "other": 4, "refer": 2, "hope": 1, "one": 4, "prefer": 1, "see": 1, "sequeni": 1, "resourc": 1, "nain": 1, "highlevel": 1, "worth": 1, "get": 9, "still": 1, "like": 1, "rohrer": 2, "should": 6, "sum": 1, "add": 1, "memori": 1, "yet": 1, "includ": 3, "anyon": 1, "kera": 60, "necessarili": 1, "access": 3, "this": 16, "directori": 2, "time": 1, "api": 1, "back": 1, "chang": 3, "bit": 1, "backen": 1, "project": 1, "taken": 1, "halfway": 1, "valuabl": 1, "most": 2, "between": 1, "readili": 2, "certain": 1, "soon": 1, "irvin": 1, "brief": 1, "vision": 1, "along": 1, "all": 1, "everyon": 1, "constitut": 1, "situat": 1, "someth": 2, "appropri": 1, "degre": 1, "titl": 1, "suit": 1, "page": 4, "architectur": 2, "call": 1, "more": 7, "and": 20, "london": 1, "these": 3, "prepar": 1, "yourself": 2, "gain": 1, "artifici": 1, "websit": 1, "winner": 1, "befor": 1, "librari": 8, "download": 1, "can": 3, "avail": 1, "pydata": 1, "describ": 1, "make": 3, "way": 1, "onli": 2, "promot": 1, "few": 2, "skip": 1, "read": 8, "syntax": 1, "advanc": 1, "data": 6, "notch": 1, "cnns": 1, "sequenc": 1, "convolut": 6, "come": 1, "offici": 1, "pay": 1, "text": 2, "understand": 5, "direct": 2, "import": 2, "first": 5, "game": 1, "copi": 1, "generat": 1, "while": 1, "welldefin": 1, "year": 1, "write": 1, "hit": 1, "aakash": 1, "down": 1, "learn": 14, "when": 2, "multilay": 1}, "idf": {"after": 1.02070207021, "watch": 3.92581602374, "matthew": 6.908616187989999, "googl": 11.388809182200001, "relat": 1.23750876919, "play": 1.46390041494, "new": 1.0178880554, "addit": 1.24634950542, "would": 1.0828729281799998, "number": 1.10142916609, "follow": 1.04640126549, "recogn": 2.54954231572, "specif": 1.8719490626099997, "function": 2.495441685, "python": 56.2978723404, "thought": 1.9854927463699998, "tictacto": 1443.27272727, "well": 1.0655748708, "done": 2.3302509907499998, "assert": 4.6178010471199995, "complet": 1.24021560816, "approach": 2.07556543339, "undoubt": 27.0459965928, "toward": 1.6303142329, "know": 2.59327017315, "sic": 34.2155172414, "sheet": 8.60954446855, "particular": 1.3814827706200001, "solid": 6.37334403854, "creat": 1.2492917847, "how": 1.60250328051, "present": 1.25551601423, "had": 1.0475750577399998, "expert": 5.36713995943, "end": 1.10680423871, "found": 1.11387076405, "interest": 1.60331246213, "deep": 3.6279707495399998, "beginn": 53.4545454545, "overview": 12.6805111821, "accompani": 3.38146964856, "chicken": 19.432068543499998, "second": 1.1130898128, "judg": 3.6263133851099996, "next": 1.4950560316400001, "below": 2.25607503197, "perform": 1.5313977042500002, "but": 1.01632417899, "definit": 3.24, "need": 1.4372623574099999, "classif": 8.067073170730001, "sure": 7.453521126760001, "final": 1.34008609775, "point": 1.25990000794, "writeup": 1443.27272727, "hidden": 7.81299212598, "domin": 2.320713346, "level": 1.6544393497299998, "has": 1.0436497502, "enough": 2.2319696330700003, "stop": 2.1783754116400003, "tensorflow": 1443.27272727, "brandon": 39.8894472362, "advantag": 3.32412060302, "entireti": 21.570652173899997, "experi": 1.87062566278, "subsequ": 1.7534791252500002, "sequenti": 39.5910224439, "establish": 1.34622233528, "out": 1.06016694491, "model": 2.0905978404, "good": 1.51981619759, "hacker": 83.1204188482, "mainstream": 7.450023463160001, "much": 1.1942229577299999, "gear": 11.203952011300002, "optim": 11.5377906977, "elit": 6.97846153846, "choos": 4.17899447223, "print": 3.29719626168, "not": 1.01567398119, "tri": 1.8544562551099997, "quot": 3.85339805825, "whole": 2.29488291414, "implement": 3.57648118946, "logist": 14.0994671403, "quick": 2.205, "easi": 5.2937645882, "gotten": 45.4899713467, "slower": 17.1632432432, "shown": 2.76923076923, "stuff": 23.3127753304, "though": 1.36076112111, "then": 1.08657860516, "they": 1.03017325287, "design": 1.45825296225, "anoth": 1.13643521832, "core": 4.623179965059999, "recurr": 35.5964125561, "last": 1.2117234010100002, "let": 3.48616600791, "scienc": 2.31969608416, "kdnugget": 1443.27272727, "blog": 14.1876675603, "ensur": 3.4127257093700005, "practic": 1.70434782609, "respons": 1.5066907089300001, "simpl": 3.3981164383599998, "that": 1.00398406375, "algorithm": 27.9507042254, "such": 1.06151377374, "talk": 3.0303493033, "network": 2.59369384088, "some": 1.04036697248, "beyond": 2.54586273252, "collect": 1.64109985528, "both": 1.05215720061, "backend": 933.882352941, "document": 2.5409731114, "version": 2.0083491461099996, "varieti": 2.2972073506, "produc": 1.36932896326, "use": 1.0296387573799999, "introduc": 1.7258397651900002, "ani": 1.13383802314, "question": 2.20408163265, "futher": 1443.27272727, "from": 1.00056721497, "valerio": 567.0, "account": 1.94463498285, "visibl": 4.68595041322, "ten": 1.9178545542400003, "num": 1.00031504001, "technolog": 2.6034765496900003, "idea": 2.0930784443, "shortterm": 1443.27272727, "alreadyprepar": 1443.27272727, "for": 1.00031504001, "difficult": 2.48957189901, "slide": 15.1056137012, "discuss": 2.19676214197, "releas": 1.8377126982299998, "fulli": 2.79015817223, "with": 1.0011982089899998, "handi": 102.425806452, "theano": 1443.27272727, "are": 1.02990593578, "datacamp": 1443.27272727, "albon": 1443.27272727, "current": 1.5325803649, "frequent": 2.10501193317, "sens": 2.8365195640499996, "preprocess": 1221.23076923, "look": 1.9086318826599997, "video": 3.29719626168, "metric": 22.235294117600002, "algo": 882.0, "bottom": 6.27261951798, "want": 1.99698113208, "mike": 5.86046511628, "master": 3.15125049623, "versus": 7.77473065622, "familiar": 6.86381322957, "general": 1.1218202374200001, "compar": 1.8662278123900002, "shortag": 11.388809182200001, "group": 1.20996875238, "doe": 1.70581282905, "flesh": 20.5914396887, "top": 1.8387769284200002, "give": 1.3653250774, "place": 1.1004366812200002, "great": 1.26592775696, "sole": 4.04175152749, "step": 2.8279301745599996, "framework": 8.200413223139998, "move": 1.29125660838, "desk": 23.244509516799997, "ask": 2.1744966443, "lead": 1.2664326739, "note": 1.42449528937, "oppos": 2.51282051282, "probabl": 2.64555907349, "scientist": 4.69426374926, "notebook": 40.1924050633, "nugget": 113.4, "intro": 66.7058823529, "readi": 5.15789473684, "instal": 3.78721374046, "commodit": 1443.27272727, "abov": 1.90382539873, "requir": 1.52844902282, "gave": 1.85121268657, "what": 1.25343439128, "allow": 1.2716059271100002, "overfit": 1443.27272727, "help": 1.39962972759, "main": 1.25303867403, "find": 1.7294117647099998, "line": 1.4182597820299998, "outcom": 7.48867924528, "cover": 1.69380134429, "least": 1.6165359943000002, "occur": 1.7453825857499998, "even": 1.16461267606, "fact": 1.73375559681, "post": 2.23826307627, "here": 2.42307692308, "ideal": 4.65571847507, "veri": 1.25880114177, "lowerlevel": 1443.27272727, "speed": 3.8703071672400005, "attent": 2.81040892193, "long": 1.2657259028899999, "layer": 8.14153846154, "than": 1.03278688525, "about": 1.06486015159, "intuit": 27.7068062827, "neural": 59.4606741573, "thing": 2.4065484311099996, "have": 1.0148948411399998, "egg": 14.0123565755, "bookmark": 610.615384615, "topic": 5.457545548300001, "type": 2.0281042411900003, "beauti": 4.79347826087, "them": 1.09876115994, "check": 6.50655737705, "finetun": 1443.27272727, "willem": 48.5504587156, "recommend": 3.9142011834300003, "complex": 2.34021226415, "tool": 4.99716713881, "start": 1.26673581744, "luck": 20.889473684200002, "run": 1.55692850838, "guid": 2.49113447356, "alreadi": 1.9551724137900002, "whi": 3.2566153846200003, "explain": 2.60049140049, "avoid": 2.45986984816, "his": 1.0943682360200002, "cheat": 31.6886227545, "comparison": 4.9597000937199995, "karlijn": 1443.27272727, "introduct": 2.7808723068799996, "over": 1.02525024217, "perhap": 3.14812611541, "chris": 5.979661016950001, "consum": 4.93043478261, "maggio": 481.09090909099996, "exact": 3.46864758575, "there": 1.04091266719, "connect": 1.8843916913900003, "inform": 1.5753125620200001, "plaidml": 1443.27272727, "referenc": 14.0994671403, "charl": 2.3075581395299998, "possibl": 1.4173734488, "modifi": 4.45329593268, "say": 1.7544480053, "inaccess": 52.0524590164, "best": 1.5828514456600002, "exampl": 1.50483412322, "right": 1.4054532577899999, "portabl": 19.5276752768, "take": 1.13961668222, "previous": 1.42846859816, "now": 1.160780873, "further": 1.3618116315, "toolbox": 453.6, "code": 3.8807137619199996, "high": 1.14777327935, "basic": 2.7301805675, "regress": 51.2129032258, "realli": 4.7476076555, "power": 1.3396337861799998, "tutori": 59.4606741573, "also": 1.01476510067, "coupl": 3.2572835453400004, "specifi": 6.920662598080001, "modern": 1.5319888063299998, "mean": 1.44906900329, "will": 1.22481098596, "martin": 3.07793718496, "task": 3.88641370869, "major": 1.14852058164, "babi": 7.517045454550001, "accomplish": 5.17302052786, "the": 1.0, "may": 1.05201775893, "mayo": 49.7680250784, "unus": 24.3870967742, "eitheror": 1443.27272727, "challeng": 2.55816951337, "machin": 4.02433460076, "ground": 1.97610156833, "into": 1.01502461479, "ultim": 2.58524670249, "howev": 1.0945191313299998, "essenti": 2.9280708225700005, "prove": 2.45720476706, "work": 1.11520089913, "minut": 3.11233091551, "were": 1.02458857696, "which": 1.005191845, "intellig": 4.19334389857, "activ": 1.46403541129, "worthi": 18.5250875146, "other": 1.00992366412, "refer": 1.30024570025, "hope": 2.50884955752, "one": 1.00627495722, "prefer": 3.0216977540900003, "see": 1.27242125511, "sequeni": 1443.27272727, "resourc": 2.9487369985100003, "nain": 882.0, "highlevel": 1443.27272727, "worth": 5.210370856580001, "get": 1.78562591385, "still": 1.1866357724799999, "like": 1.14918566775, "rohrer": 992.25, "should": 1.6643254009900001, "sum": 6.681818181819999, "add": 4.61243463103, "memori": 2.57392996109, "yet": 2.1258703802900003, "includ": 1.0190641247799999, "anyon": 5.37440758294, "kera": 835.5789473680001, "necessarili": 7.33302540416, "access": 1.8734953976900002, "this": 1.00379362671, "directori": 14.768372093, "time": 1.01127460348, "api": 84.44680851060001, "back": 1.26070038911, "chang": 1.1808985421, "bit": 8.33385826772, "backen": 1443.27272727, "project": 1.7534791252500002, "taken": 1.6012102874399998, "halfway": 26.862944162399998, "valuabl": 7.46754468485, "most": 1.02096463023, "between": 1.03453668708, "readili": 12.5402843602, "certain": 1.8077886586200003, "soon": 1.9817750592900003, "irvin": 40.1924050633, "brief": 3.39013452915, "vision": 4.88041807562, "along": 1.2973768080399999, "all": 1.01146788991, "everyon": 6.3964544722, "constitut": 2.79802608389, "situat": 2.06611140031, "someth": 3.28152128979, "appropri": 4.31413043478, "degre": 2.4852849092, "titl": 1.87261146497, "suit": 3.92873051225, "page": 2.03669018602, "architectur": 5.12790697674, "call": 1.0676529926, "more": 1.0171706817, "and": 1.00006299213, "london": 1.97782484116, "these": 1.07415426252, "prepar": 2.43012398592, "yourself": 26.592964824099997, "gain": 1.84819557625, "artifici": 8.31639601886, "websit": 2.52160101652, "winner": 5.20183486239, "befor": 1.10036041031, "librari": 2.68266306185, "download": 14.6457564576, "can": 1.17626139142, "avail": 1.7288467821, "pydata": 1443.27272727, "describ": 1.47027227264, "make": 1.0762660158600001, "way": 1.2190739461, "onli": 1.0256476516600002, "promot": 2.0172808132099997, "few": 1.31729173581, "skip": 26.111842105300003, "read": 2.3149606299200003, "syntax": 45.6206896552, "advanc": 1.9997480791, "data": 3.37643555934, "notch": 57.7309090909, "cnns": 1443.27272727, "sequenc": 6.07112810707, "convolut": 101.121019108, "come": 1.32831325301, "offici": 1.40483143085, "pay": 2.80148226575, "text": 3.12827586207, "understand": 2.96858638743, "direct": 1.22226499346, "import": 1.3401992233700002, "first": 1.00761614623, "game": 2.57978550536, "copi": 3.8375634517800004, "generat": 2.05275407292, "while": 1.0441988950299999, "welldefin": 1443.27272727, "year": 1.0485436893200002, "write": 2.0575427682700003, "hit": 3.1166077738499998, "aakash": 1443.27272727, "down": 1.35889754344, "learn": 2.32275054865, "when": 1.02076769755, "multilay": 324.0}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  7 Steps to Mastering Deep Learning with Keras</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb 7 Steps to Mastering Deep Learning with Keras Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/10/neural-networks-step-1.html\" rel=\"prev\" title=\"Neural Networks, Step 1: Where to Begin with Neural Nets &amp; Deep Learning\"/>\n<link href=\"https://www.kdnuggets.com/2017/10/top-news-week-1023-1029.html\" rel=\"next\" title=\"Top Stories, Oct 23-29: Ranking Popular Deep Learning Libraries; TensorFlow: Building Feed-Forward Neural Networks Step-by-Step\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=62870\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-62870 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 30-Oct, 2017  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/10/index.html\">Oct</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/10/tutorials.html\">Tutorials, Overviews</a> \u00bb 7 Steps to Mastering Deep Learning with Keras (\u00a0<a href=\"/2017/n42.html\">17:n42</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\"><img align=\"right\" alt=\"Silver Blog\" src=\"/images/tkb-1710-s.png\" width=\"94\"/>7 Steps to Mastering Deep Learning with Keras</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/10/neural-networks-step-1.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/10/top-news-week-1023-1029.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/7-steps\" rel=\"tag\">7 Steps</a>, <a href=\"https://www.kdnuggets.com/tag/convolutional-neural-networks\" rel=\"tag\">Convolutional Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/keras\" rel=\"tag\">Keras</a>, <a href=\"https://www.kdnuggets.com/tag/logistic-regression\" rel=\"tag\">Logistic Regression</a>, <a href=\"https://www.kdnuggets.com/tag/lstm\" rel=\"tag\">LSTM</a>, <a href=\"https://www.kdnuggets.com/tag/machine-learning\" rel=\"tag\">Machine Learning</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/python\" rel=\"tag\">Python</a>, <a href=\"https://www.kdnuggets.com/tag/recurrent-neural-networks\" rel=\"tag\">Recurrent Neural Networks</a></div>\n<br/>\n<p class=\"excerpt\">\n     Are you interested in learning how to use Keras? Do you already have an understanding of how neural networks work? Check out this lean, fat-free 7 step plan for going from Keras newbie to master of its basics as quickly as is possible.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/matt-mayo\" rel=\"author\" title=\"Posts by Matthew Mayo\">Matthew Mayo</a>, KDnuggets.</b></div>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://image.ibb.co/i0yXJ6/7_steps_keras_kd_3.png\" width=\"85%\"/></p>\n<p>There is no shortage of neural network frameworks, libraries, and APIs available to anyone interested in getting started with deep learning. So... <strong>Why Keras?</strong></p>\n<p>Keras is a high-level neural network API, helping lead the way to the commoditization of deep learning and artificial intelligence. It runs on top of a number of lower-level libraries, used as backends, including TensorFlow, Theano, CNTK, and <a href=\"http://vertex.ai/blog/announcing-plaidml\" target=\"_blank\">PlaidML</a>. Keras code is portable, meaning that you can implement a neural network in Keras using Theano as a backened and then specify the backend to subsequently run on TensorFlow, and no further changes would be required to your code. Data Scientist &amp; Machine Learning Expert <a href=\"https://www.linkedin.com/in/charlesmartin14/\" target=\"_blank\">Charles Martin</a> sums up <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:6248837318694760448/\" target=\"_blank\">with this quote</a> (in a response to the post):</p>\n<blockquote><p>\nWe have had access to these algorithms for over 10 years. Not readily accessible, but accessible enough to a good hacker. To me, the most important advances have come with Google Keras, which has commoditized very powerful, modern, AI algos that previous were not only inaccessible bit [sic] thought to be unusable as well.\n</p></blockquote>\n<p>Keras is an easy to use neural network library that promotes a simple and intuitive syntax. It is also geared toward neural network technology <b>consumers</b> as opposed to producers, at least to some degree. The line between these 2 groups is not exactly well-defined; what, exactly, constitutes the design and implementation of a machine learning algorithm versus modifying an already-prepared one? This is chicken versus egg stuff, and not really an appropriate discussion topic for here. However, I will make the assertion that, perhaps more than any other established, mainstream neural network library, Keras is ideally suited to the <b>practice of data science</b>. In fact, I would say that Keras is an essential tool in the toolbox of any data scientist working with neural networks.</p>\n<p>This tutorial is designed to get you up to speed with Keras as quickly as possible, allowing you to hit the ground running, not a particularly difficult task if you already have familiarity with neural networks. To that end, an understanding of neural networks is preferable -- though a very brief intro will be presented in the first step -- as is some experience with other machine learning frameworks. Beyond that, no experience specifically with Keras is required.</p>\n<p>\u00a0</p>\n<h3><a href=\"https://www.kdnuggets.com/2017/10/neural-networks-step-1.html\" rel=\"noopener\" target=\"_blank\">Step 1: Neural Networks Basics</a></h3>\n<p>\u00a0<br>\nThis post collects a number of neural network \"getting started\" resources.</br></p>\n<p>\u00a0</p>\n<h3>Step 2: Keras Basics</h3>\n<p>\u00a0<br>\nFirst, what exactly is Keras? Why not find out directly from the project's website? Read the entirety of this main page (it will only take a couple of minutes), paying particular attention to \"30 Seconds to Keras,\" which should be enough to give you an idea of how simple Keras is to use.</br></p>\n<ul>\n<li><a href=\"https://keras.io/\" rel=\"noopener\" target=\"_blank\">Keras: The Python Deep Learning library</a>\n</li></ul>\n<p>The release notes for the current major release version of Keras (at the time of writing) can be found here. Take the few minutes to read them:</p>\n<ul>\n<li><a href=\"https://blog.keras.io/introducing-keras-2.html\" rel=\"noopener\" target=\"_blank\">Introducing Keras 2</a>\n</li></ul>\n<p>Karlijn Willems of DataCamp has created a handy Keras cheat sheet which I recommend you download and have handy. Even though some of it may not make sense yet, it soon will, and the reference will undoubtedly prove useful. I have a printed copy on my desk.</p>\n<ul>\n<li><a href=\"https://www.datacamp.com/community/blog/keras-cheat-sheet#gs.0X64hsc\" rel=\"noopener\" target=\"_blank\">Keras Cheat Sheet</a>, by Karlijn Willems\n</li></ul>\n<p>Lastly, and most importantly, familiarize yourself with the Keras documentation, which is top notch and explains all the things. Bookmark it.</p>\n<ul>\n<li><a href=\"https://keras.io/\" rel=\"noopener\" target=\"_blank\">Keras Documentation</a>\n</li></ul>\n<p>\u00a0</p>\n<h3>Step 3: An Overview of Keras</h3>\n<p>\u00a0<br>\nValerio Maggio gave a great tutorial presentation at PyData London 2017, titled \"Ten Steps to Keras.\" To get a fleshed out understanding of what Keras is, how it compares to other libraries, and how you can get things done with it, take the 90 minutes to watch the video. It is definitely worth it to gain a high level understanding of Keras, top to bottom.</br></p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"440\" src=\"https://www.youtube.com/embed/FrkYu2zVUyM\" width=\"760\"></iframe></center></p>\n<p>Then look at the following few pages of documentation to get an understanding of how Keras approaches model implementations.</p>\n<ul>\n<li><a href=\"https://keras.io/models/about-keras-models/\" rel=\"noopener\" target=\"_blank\">About Keras models</a>\n<li><a href=\"https://keras.io/getting-started/sequential-model-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Sequential model</a>\n<li><a href=\"https://keras.io/getting-started/functional-api-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Functional API</a>\n</li></li></li></ul>\n<p>If you are still having questions as to why you would choose Keras over TensorFlow (you didn't watch the video, did you?), read this:</p>\n<ul>\n<li><a href=\"https://medium.com/implodinggradients/tensorflow-or-keras-which-one-should-i-learn-5dd7fa3f9ca0\" rel=\"noopener\" target=\"_blank\">TensorFlow or Keras? Which one should I learn?</a>, by Aakash Nain\n</li></ul>\n<p><a href=\"https://keras.io/#installation\" rel=\"noopener\" target=\"_blank\">Make sure you have Keras installed</a> before going any futher.</p>\n<p>Finally, for information on changing Keras backends, see this documentation page:</p>\n<ul>\n<li><a href=\"https://keras.io/backend/\" rel=\"noopener\" target=\"_blank\">Keras backends</a>\n</li></ul>\n<p>\u00a0</p>\n<h3>Step 4: Baby Steps with Keras</h3>\n<p>\u00a0<br>\nLet's do one of the first things that everyone does when they start using a new deep learning library: implement a simple logistic regression model.</br></p>\n<p>If you watched Valerio's video in the previous step then you may already have gotten what you need for this. If not, refer to his notebook from the talk. Ideally you read the whole thing for a great comparison of implementation code for TensorFlow, Theano, and Keras. If you are interested solely in the Keras code, however, skip down about halfway.</p>\n<ul>\n<li><a href=\"https://github.com/leriomaggio/deep-learning-keras-tensorflow/blob/euroscipy2017/1%20Multi-layer%20Fully%20Connected%20Networks.ipynb\" rel=\"noopener\" target=\"_blank\">Multi-layer Fully Connected Networks</a>, by Valerio Maggio\n</li></ul>\n<p>The beauty of the Keras code, shown below (and taken directly from Maggio's notebook), to accomplish the task should be readily visible. Note that data pre-processing has already occurred at this point.</p>\n<p><script src=\"https://gist.github.com/mmmayo13/44fd45be7628b70b66aabdd3e55997bc.js\"></script></p>\n<p>Implementing logistic regression, as above, is one thing, but now let's try out something more worthy of being called a neural network, complete with a hidden layer.</p>\n<p>First, ensure that you have looked over the following Keras documentation pages, describing both the Sequenial model (already referenced above) and the Layers.  </p>\n<ul>\n<li><a href=\"https://keras.io/getting-started/sequential-model-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Sequential model</a>\n<li><a href=\"https://keras.io/layers/about-keras-layers/\" rel=\"noopener\" target=\"_blank\">About Keras layers</a>\n<li><a href=\"https://keras.io/layers/core/\" rel=\"noopener\" target=\"_blank\">Keras Core Layers</a>\n</li></li></li></ul>\n<p>Now, follow along with this basic implementation of a neural network which learns something about tic-tac-toe game outcomes.</p>\n<ul>\n<li><a href=\"/2017/09/neural-networks-tic-tac-toe-keras.html\" rel=\"noopener\" target=\"_blank\">Keras Tutorial: Recognizing Tic-Tac-Toe Winners with Neural Networks</a>, by Matthew Mayo\n</li></ul>\n<p>Having completed these steps, you should be ready for implementing some more complex architectures.</p>\n<p>\u00a0</p>\n<h3>Step 5: Implementing a Convolutional Neural Network</h3>\n<p>\u00a0<br/>\nTo implement a convolutional neural network (CNN) in Keras, start by reading the documentation on its convolutional layers:</p>\n<ul>\n<li><a href=\"https://keras.io/layers/convolutional/\" rel=\"noopener\" target=\"_blank\">Keras Convolutional Layers</a>\n</li></ul>\n<p>After this, look at both of the following tutorials on CNNs in Keras. The first takes a slower approach, and covers much of what you should already know by now, while the second takes into account some additional topics such as avoiding overfitting. This isn't necessarily an either/or approach; you may find valuable nuggets in both write-ups:</p>\n<ul>\n<li><a href=\"https://elitedatascience.com/keras-tutorial-deep-learning-in-python\" rel=\"noopener\" target=\"_blank\">Keras Tutorial: The Ultimate Beginner\u2019s Guide to Deep Learning in Python</a>, by Elite Data Science\n<li><a href=\"https://sempwn.github.io/blog/2017/04/06/conv_net_intro\" rel=\"noopener\" target=\"_blank\">Introduction to Convolutional Neural Networks</a>, by Mike Irvine\n</li></li></ul>\n<p>To learn more about convolution neural networks in general, try Brandon Rohrer's video:</p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"300\" src=\"https://www.youtube.com/embed/FmpDIaiMIeA\" width=\"485\"></iframe><br/>\n<font size=\"-1\">Read the <a href=\"https://www.kdnuggets.com/2016/08/brohrer-convolutional-neural-networks-explanation.html\" rel=\"noopener\" target=\"_blank\">accompanying blog post</a>.</font></center></p>\n<p>\u00a0</p>\n<h3>Step 6: Implementing a Recurrent Neural Network</h3>\n<p>\u00a0<br/>\nTo implement a recurrent neural network (RNN) in Keras, start by reading the documentation on its recurrent layers:</p>\n<ul>\n<li><a href=\"https://keras.io/layers/recurrent/\" rel=\"noopener\" target=\"_blank\">Keras Recurrent Layers</a>\n</li></ul>\n<p>After this, try out this tutorial by Chris Albon for implementing a Long Short-Term Memory (LSTM) network -- a dominant type of RNN -- for text classification:</p>\n<ul>\n<li><a href=\"https://chrisalbon.com/deep_learning/keras/lstm_recurrent_neural_network/\" rel=\"noopener\" target=\"_blank\">LSTM Recurrent Neural Network</a>\n</li></ul>\n<p>To learn more about recurrent neural networks in general, try Brandon Rohrer's video:</p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"300\" src=\"https://www.youtube.com/embed/WCUNPb-5EYI\" width=\"485\"></iframe><br/>\n<font size=\"-1\">Read the <a href=\"https://docs.google.com/presentation/d/1hqYB3LRwg_-ntptHxH18W1ax9kBwkaZ1Pa_s3L7R-2Y/edit\" rel=\"noopener\" target=\"_blank\">accompanying slides</a>.</font></center></p>\n<p>\u00a0</p>\n<h3>Step 7: What Next?</h3>\n<p>\u00a0<br/>\nAt this point you should have a solid understanding of Keras, including why you would use it, the advantages it has over other libraries in certain situations, and using it to implement a variety of network architectures. You're an expert now, right?</p>\n<p>Well, probably not. But hopefully you have mastered the basics. When you want to move beyond the basics, the next best stop is likely Keras' official tutorials:</p>\n<ul>\n<li><a href=\"https://blog.keras.io/category/tutorials.html\" rel=\"noopener\" target=\"_blank\">Keras Tutorials</a>\n</li></ul>\n<p>After this, check out the Keras examples directory, which includes vision models examples, text &amp; sequences examples, generative models examples, and more.</p>\n<ul>\n<li><a href=\"https://github.com/fchollet/keras/tree/master/examples\" rel=\"noopener\" target=\"_blank\">Keras Examples Directory</a>\n</li></ul>\n<p>Also, how about challenging yourself to fine-tune some of the above models you implemented in the previous steps? Change the optimizer, add another layer, play with activation functions. Or use some of the Keras metrics to go back and judge the performance of your models. The Keras documentation is a great place to start:</p>\n<ul>\n<li><a href=\"https://keras.io/metrics/\" rel=\"noopener\" target=\"_blank\">Keras Metrics</a>\n<li><a href=\"https://keras.io/getting-started/faq/\" rel=\"noopener\" target=\"_blank\">Keras FAQ: Frequently Asked Keras Questions</a>\n</li></li></ul>\n<p>Best of luck using Keras.</p>\n<p>\u00a0<br/>\n<b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/06/7-steps-mastering-data-preparation-python.html\">7 Steps to Mastering Data Preparation with Python</a>\n<li><a href=\"/2015/11/seven-steps-machine-learning-python.html\">7 Steps to Mastering Machine Learning with Python</a>\n<li><a href=\"/2017/03/seven-more-steps-machine-learning-python.html\">7 More Steps to Mastering Machine Learning with Python</a>\n</li></li></li></ul>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/10/neural-networks-step-1.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/10/top-news-week-1023-1029.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/10/index.html\">Oct</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/10/tutorials.html\">Tutorials, Overviews</a> \u00bb 7 Steps to Mastering Deep Learning with Keras (\u00a0<a href=\"/2017/n42.html\">17:n42</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556327769\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.735 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 21:16:09 -->\n<!-- Compression = gzip -->", "content_tokenized": ["matthew", "mayo", "kdnugget", "there", "shortag", "neural", "network", "framework", "librari", "and", "api", "avail", "anyon", "interest", "get", "start", "with", "deep", "learn", "whi", "kera", "kera", "highlevel", "neural", "network", "help", "lead", "the", "way", "the", "commodit", "deep", "learn", "and", "artifici", "intellig", "run", "top", "number", "lowerlevel", "librari", "use", "backend", "includ", "tensorflow", "theano", "and", "plaidml", "kera", "code", "portabl", "mean", "that", "can", "implement", "neural", "network", "kera", "use", "theano", "backen", "and", "then", "specifi", "the", "backend", "subsequ", "run", "tensorflow", "and", "further", "chang", "would", "requir", "code", "data", "scientist", "machin", "learn", "expert", "charl", "martin", "sum", "with", "this", "quot", "respons", "the", "post", "have", "had", "access", "these", "algorithm", "for", "over", "num", "year", "not", "readili", "access", "but", "access", "enough", "good", "hacker", "the", "most", "import", "advanc", "have", "come", "with", "googl", "kera", "which", "has", "commodit", "veri", "power", "modern", "algo", "that", "previous", "were", "not", "onli", "inaccess", "bit", "sic", "thought", "unus", "well", "kera", "easi", "use", "neural", "network", "librari", "that", "promot", "simpl", "and", "intuit", "syntax", "also", "gear", "toward", "neural", "network", "technolog", "consum", "oppos", "produc", "least", "some", "degre", "the", "line", "between", "these", "num", "group", "not", "exact", "welldefin", "what", "exact", "constitut", "the", "design", "and", "implement", "machin", "learn", "algorithm", "versus", "modifi", "alreadyprepar", "one", "this", "chicken", "versus", "egg", "stuff", "and", "not", "realli", "appropri", "discuss", "topic", "for", "here", "howev", "will", "make", "the", "assert", "that", "perhap", "more", "than", "ani", "other", "establish", "mainstream", "neural", "network", "librari", "kera", "ideal", "suit", "the", "practic", "data", "scienc", "fact", "would", "say", "that", "kera", "essenti", "tool", "the", "toolbox", "ani", "data", "scientist", "work", "with", "neural", "network", "this", "tutori", "design", "get", "speed", "with", "kera", "quick", "possibl", "allow", "hit", "the", "ground", "run", "not", "particular", "difficult", "task", "alreadi", "have", "familiar", "with", "neural", "network", "that", "end", "understand", "neural", "network", "prefer", "though", "veri", "brief", "intro", "will", "present", "the", "first", "step", "some", "experi", "with", "other", "machin", "learn", "framework", "beyond", "that", "experi", "specif", "with", "kera", "requir", "step", "num", "neural", "network", "basic", "this", "post", "collect", "number", "neural", "network", "get", "start", "resourc", "step", "num", "kera", "basic", "first", "what", "exact", "kera", "whi", "not", "find", "out", "direct", "from", "the", "project", "websit", "read", "the", "entireti", "this", "main", "page", "will", "onli", "take", "coupl", "minut", "pay", "particular", "attent", "num", "second", "kera", "which", "should", "enough", "give", "idea", "how", "simpl", "kera", "use", "kera", "the", "python", "deep", "learn", "librari", "the", "releas", "note", "for", "the", "current", "major", "releas", "version", "kera", "the", "time", "write", "can", "found", "here", "take", "the", "few", "minut", "read", "them", "introduc", "kera", "num", "karlijn", "willem", "datacamp", "has", "creat", "handi", "kera", "cheat", "sheet", "which", "recommend", "download", "and", "have", "handi", "even", "though", "some", "may", "not", "make", "sens", "yet", "soon", "will", "and", "the", "refer", "will", "undoubt", "prove", "use", "have", "print", "copi", "desk", "kera", "cheat", "sheet", "karlijn", "willem", "last", "and", "most", "import", "familiar", "yourself", "with", "the", "kera", "document", "which", "top", "notch", "and", "explain", "all", "the", "thing", "bookmark", "kera", "document", "step", "num", "overview", "kera", "valerio", "maggio", "gave", "great", "tutori", "present", "pydata", "london", "num", "titl", "ten", "step", "kera", "get", "flesh", "out", "understand", "what", "kera", "how", "compar", "other", "librari", "and", "how", "can", "get", "thing", "done", "with", "take", "the", "num", "minut", "watch", "the", "video", "definit", "worth", "gain", "high", "level", "understand", "kera", "top", "bottom", "then", "look", "the", "follow", "few", "page", "document", "get", "understand", "how", "kera", "approach", "model", "implement", "about", "kera", "model", "get", "start", "with", "the", "kera", "sequenti", "model", "get", "start", "with", "the", "kera", "function", "are", "still", "have", "question", "whi", "would", "choos", "kera", "over", "tensorflow", "watch", "the", "video", "read", "this", "tensorflow", "kera", "which", "one", "should", "learn", "aakash", "nain", "make", "sure", "have", "kera", "instal", "befor", "ani", "futher", "final", "for", "inform", "chang", "kera", "backend", "see", "this", "document", "page", "kera", "backend", "step", "num", "babi", "step", "with", "kera", "let", "one", "the", "first", "thing", "that", "everyon", "doe", "when", "they", "start", "use", "new", "deep", "learn", "librari", "implement", "simpl", "logist", "regress", "model", "watch", "valerio", "video", "the", "previous", "step", "then", "may", "alreadi", "have", "gotten", "what", "need", "for", "this", "not", "refer", "his", "notebook", "from", "the", "talk", "ideal", "read", "the", "whole", "thing", "for", "great", "comparison", "implement", "code", "for", "tensorflow", "theano", "and", "kera", "are", "interest", "sole", "the", "kera", "code", "howev", "skip", "down", "about", "halfway", "multilay", "fulli", "connect", "network", "valerio", "maggio", "the", "beauti", "the", "kera", "code", "shown", "below", "and", "taken", "direct", "from", "maggio", "notebook", "accomplish", "the", "task", "should", "readili", "visibl", "note", "that", "data", "preprocess", "has", "alreadi", "occur", "this", "point", "implement", "logist", "regress", "abov", "one", "thing", "but", "now", "let", "tri", "out", "someth", "more", "worthi", "call", "neural", "network", "complet", "with", "hidden", "layer", "first", "ensur", "that", "have", "look", "over", "the", "follow", "kera", "document", "page", "describ", "both", "the", "sequeni", "model", "alreadi", "referenc", "abov", "and", "the", "layer", "get", "start", "with", "the", "kera", "sequenti", "model", "about", "kera", "layer", "kera", "core", "layer", "now", "follow", "along", "with", "this", "basic", "implement", "neural", "network", "which", "learn", "someth", "about", "tictacto", "game", "outcom", "kera", "tutori", "recogn", "tictacto", "winner", "with", "neural", "network", "matthew", "mayo", "have", "complet", "these", "step", "should", "readi", "for", "implement", "some", "more", "complex", "architectur", "step", "num", "implement", "convolut", "neural", "network", "implement", "convolut", "neural", "network", "kera", "start", "read", "the", "document", "convolut", "layer", "kera", "convolut", "layer", "after", "this", "look", "both", "the", "follow", "tutori", "cnns", "kera", "the", "first", "take", "slower", "approach", "and", "cover", "much", "what", "should", "alreadi", "know", "now", "while", "the", "second", "take", "into", "account", "some", "addit", "topic", "such", "avoid", "overfit", "this", "necessarili", "eitheror", "approach", "may", "find", "valuabl", "nugget", "both", "writeup", "kera", "tutori", "the", "ultim", "beginn", "guid", "deep", "learn", "python", "elit", "data", "scienc", "introduct", "convolut", "neural", "network", "mike", "irvin", "learn", "more", "about", "convolut", "neural", "network", "general", "tri", "brandon", "rohrer", "video", "read", "the", "accompani", "blog", "post", "step", "num", "implement", "recurr", "neural", "network", "implement", "recurr", "neural", "network", "kera", "start", "read", "the", "document", "recurr", "layer", "kera", "recurr", "layer", "after", "this", "tri", "out", "this", "tutori", "chris", "albon", "for", "implement", "long", "shortterm", "memori", "network", "domin", "type", "for", "text", "classif", "recurr", "neural", "network", "learn", "more", "about", "recurr", "neural", "network", "general", "tri", "brandon", "rohrer", "video", "read", "the", "accompani", "slide", "step", "num", "what", "next", "this", "point", "should", "have", "solid", "understand", "kera", "includ", "whi", "would", "use", "the", "advantag", "has", "over", "other", "librari", "certain", "situat", "and", "use", "implement", "varieti", "network", "architectur", "expert", "now", "right", "well", "probabl", "not", "but", "hope", "have", "master", "the", "basic", "when", "want", "move", "beyond", "the", "basic", "the", "next", "best", "stop", "like", "kera", "offici", "tutori", "kera", "tutori", "after", "this", "check", "out", "the", "kera", "exampl", "directori", "which", "includ", "vision", "model", "exampl", "text", "sequenc", "exampl", "generat", "model", "exampl", "and", "more", "kera", "exampl", "directori", "also", "how", "about", "challeng", "yourself", "finetun", "some", "the", "abov", "model", "implement", "the", "previous", "step", "chang", "the", "optim", "add", "anoth", "layer", "play", "with", "activ", "function", "use", "some", "the", "kera", "metric", "back", "and", "judg", "the", "perform", "model", "the", "kera", "document", "great", "place", "start", "kera", "metric", "kera", "frequent", "ask", "kera", "question", "best", "luck", "use", "kera", "relat", "num", "step", "master", "data", "prepar", "with", "python", "num", "step", "master", "machin", "learn", "with", "python", "num", "more", "step", "master", "machin", "learn", "with", "python"], "timestamp_scraper": 1556390491.703191, "title": "7 Steps to Mastering Deep Learning with Keras", "read_time": 417.0, "content_html": "<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/matt-mayo\" rel=\"author\" title=\"Posts by Matthew Mayo\">Matthew Mayo</a>, KDnuggets.</b></div>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://image.ibb.co/i0yXJ6/7_steps_keras_kd_3.png\" width=\"85%\"/></p>\n<p>There is no shortage of neural network frameworks, libraries, and APIs available to anyone interested in getting started with deep learning. So... <strong>Why Keras?</strong></p>\n<p>Keras is a high-level neural network API, helping lead the way to the commoditization of deep learning and artificial intelligence. It runs on top of a number of lower-level libraries, used as backends, including TensorFlow, Theano, CNTK, and <a href=\"http://vertex.ai/blog/announcing-plaidml\" target=\"_blank\">PlaidML</a>. Keras code is portable, meaning that you can implement a neural network in Keras using Theano as a backened and then specify the backend to subsequently run on TensorFlow, and no further changes would be required to your code. Data Scientist &amp; Machine Learning Expert <a href=\"https://www.linkedin.com/in/charlesmartin14/\" target=\"_blank\">Charles Martin</a> sums up <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:6248837318694760448/\" target=\"_blank\">with this quote</a> (in a response to the post):</p>\n<blockquote><p>\nWe have had access to these algorithms for over 10 years. Not readily accessible, but accessible enough to a good hacker. To me, the most important advances have come with Google Keras, which has commoditized very powerful, modern, AI algos that previous were not only inaccessible bit [sic] thought to be unusable as well.\n</p></blockquote>\n<p>Keras is an easy to use neural network library that promotes a simple and intuitive syntax. It is also geared toward neural network technology <b>consumers</b> as opposed to producers, at least to some degree. The line between these 2 groups is not exactly well-defined; what, exactly, constitutes the design and implementation of a machine learning algorithm versus modifying an already-prepared one? This is chicken versus egg stuff, and not really an appropriate discussion topic for here. However, I will make the assertion that, perhaps more than any other established, mainstream neural network library, Keras is ideally suited to the <b>practice of data science</b>. In fact, I would say that Keras is an essential tool in the toolbox of any data scientist working with neural networks.</p>\n<p>This tutorial is designed to get you up to speed with Keras as quickly as possible, allowing you to hit the ground running, not a particularly difficult task if you already have familiarity with neural networks. To that end, an understanding of neural networks is preferable -- though a very brief intro will be presented in the first step -- as is some experience with other machine learning frameworks. Beyond that, no experience specifically with Keras is required.</p>\n<p>\u00a0</p>\n<h3><a href=\"https://www.kdnuggets.com/2017/10/neural-networks-step-1.html\" rel=\"noopener\" target=\"_blank\">Step 1: Neural Networks Basics</a></h3>\n<p>\u00a0<br>\nThis post collects a number of neural network \"getting started\" resources.</br></p>\n<p>\u00a0</p>\n<h3>Step 2: Keras Basics</h3>\n<p>\u00a0<br>\nFirst, what exactly is Keras? Why not find out directly from the project's website? Read the entirety of this main page (it will only take a couple of minutes), paying particular attention to \"30 Seconds to Keras,\" which should be enough to give you an idea of how simple Keras is to use.</br></p>\n<ul>\n<li><a href=\"https://keras.io/\" rel=\"noopener\" target=\"_blank\">Keras: The Python Deep Learning library</a>\n</li></ul>\n<p>The release notes for the current major release version of Keras (at the time of writing) can be found here. Take the few minutes to read them:</p>\n<ul>\n<li><a href=\"https://blog.keras.io/introducing-keras-2.html\" rel=\"noopener\" target=\"_blank\">Introducing Keras 2</a>\n</li></ul>\n<p>Karlijn Willems of DataCamp has created a handy Keras cheat sheet which I recommend you download and have handy. Even though some of it may not make sense yet, it soon will, and the reference will undoubtedly prove useful. I have a printed copy on my desk.</p>\n<ul>\n<li><a href=\"https://www.datacamp.com/community/blog/keras-cheat-sheet#gs.0X64hsc\" rel=\"noopener\" target=\"_blank\">Keras Cheat Sheet</a>, by Karlijn Willems\n</li></ul>\n<p>Lastly, and most importantly, familiarize yourself with the Keras documentation, which is top notch and explains all the things. Bookmark it.</p>\n<ul>\n<li><a href=\"https://keras.io/\" rel=\"noopener\" target=\"_blank\">Keras Documentation</a>\n</li></ul>\n<p>\u00a0</p>\n<h3>Step 3: An Overview of Keras</h3>\n<p>\u00a0<br>\nValerio Maggio gave a great tutorial presentation at PyData London 2017, titled \"Ten Steps to Keras.\" To get a fleshed out understanding of what Keras is, how it compares to other libraries, and how you can get things done with it, take the 90 minutes to watch the video. It is definitely worth it to gain a high level understanding of Keras, top to bottom.</br></p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"440\" src=\"https://www.youtube.com/embed/FrkYu2zVUyM\" width=\"760\"></iframe></center></p>\n<p>Then look at the following few pages of documentation to get an understanding of how Keras approaches model implementations.</p>\n<ul>\n<li><a href=\"https://keras.io/models/about-keras-models/\" rel=\"noopener\" target=\"_blank\">About Keras models</a>\n<li><a href=\"https://keras.io/getting-started/sequential-model-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Sequential model</a>\n<li><a href=\"https://keras.io/getting-started/functional-api-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Functional API</a>\n</li></li></li></ul>\n<p>If you are still having questions as to why you would choose Keras over TensorFlow (you didn't watch the video, did you?), read this:</p>\n<ul>\n<li><a href=\"https://medium.com/implodinggradients/tensorflow-or-keras-which-one-should-i-learn-5dd7fa3f9ca0\" rel=\"noopener\" target=\"_blank\">TensorFlow or Keras? Which one should I learn?</a>, by Aakash Nain\n</li></ul>\n<p><a href=\"https://keras.io/#installation\" rel=\"noopener\" target=\"_blank\">Make sure you have Keras installed</a> before going any futher.</p>\n<p>Finally, for information on changing Keras backends, see this documentation page:</p>\n<ul>\n<li><a href=\"https://keras.io/backend/\" rel=\"noopener\" target=\"_blank\">Keras backends</a>\n</li></ul>\n<p>\u00a0</p>\n<h3>Step 4: Baby Steps with Keras</h3>\n<p>\u00a0<br>\nLet's do one of the first things that everyone does when they start using a new deep learning library: implement a simple logistic regression model.</br></p>\n<p>If you watched Valerio's video in the previous step then you may already have gotten what you need for this. If not, refer to his notebook from the talk. Ideally you read the whole thing for a great comparison of implementation code for TensorFlow, Theano, and Keras. If you are interested solely in the Keras code, however, skip down about halfway.</p>\n<ul>\n<li><a href=\"https://github.com/leriomaggio/deep-learning-keras-tensorflow/blob/euroscipy2017/1%20Multi-layer%20Fully%20Connected%20Networks.ipynb\" rel=\"noopener\" target=\"_blank\">Multi-layer Fully Connected Networks</a>, by Valerio Maggio\n</li></ul>\n<p>The beauty of the Keras code, shown below (and taken directly from Maggio's notebook), to accomplish the task should be readily visible. Note that data pre-processing has already occurred at this point.</p>\n<p><script src=\"https://gist.github.com/mmmayo13/44fd45be7628b70b66aabdd3e55997bc.js\"></script></p>\n<p>Implementing logistic regression, as above, is one thing, but now let's try out something more worthy of being called a neural network, complete with a hidden layer.</p>\n<p>First, ensure that you have looked over the following Keras documentation pages, describing both the Sequenial model (already referenced above) and the Layers.  </p>\n<ul>\n<li><a href=\"https://keras.io/getting-started/sequential-model-guide/\" rel=\"noopener\" target=\"_blank\">Getting started with the Keras Sequential model</a>\n<li><a href=\"https://keras.io/layers/about-keras-layers/\" rel=\"noopener\" target=\"_blank\">About Keras layers</a>\n<li><a href=\"https://keras.io/layers/core/\" rel=\"noopener\" target=\"_blank\">Keras Core Layers</a>\n</li></li></li></ul>\n<p>Now, follow along with this basic implementation of a neural network which learns something about tic-tac-toe game outcomes.</p>\n<ul>\n<li><a href=\"/2017/09/neural-networks-tic-tac-toe-keras.html\" rel=\"noopener\" target=\"_blank\">Keras Tutorial: Recognizing Tic-Tac-Toe Winners with Neural Networks</a>, by Matthew Mayo\n</li></ul>\n<p>Having completed these steps, you should be ready for implementing some more complex architectures.</p>\n<p>\u00a0</p>\n<h3>Step 5: Implementing a Convolutional Neural Network</h3>\n<p>\u00a0<br/>\nTo implement a convolutional neural network (CNN) in Keras, start by reading the documentation on its convolutional layers:</p>\n<ul>\n<li><a href=\"https://keras.io/layers/convolutional/\" rel=\"noopener\" target=\"_blank\">Keras Convolutional Layers</a>\n</li></ul>\n<p>After this, look at both of the following tutorials on CNNs in Keras. The first takes a slower approach, and covers much of what you should already know by now, while the second takes into account some additional topics such as avoiding overfitting. This isn't necessarily an either/or approach; you may find valuable nuggets in both write-ups:</p>\n<ul>\n<li><a href=\"https://elitedatascience.com/keras-tutorial-deep-learning-in-python\" rel=\"noopener\" target=\"_blank\">Keras Tutorial: The Ultimate Beginner\u2019s Guide to Deep Learning in Python</a>, by Elite Data Science\n<li><a href=\"https://sempwn.github.io/blog/2017/04/06/conv_net_intro\" rel=\"noopener\" target=\"_blank\">Introduction to Convolutional Neural Networks</a>, by Mike Irvine\n</li></li></ul>\n<p>To learn more about convolution neural networks in general, try Brandon Rohrer's video:</p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"300\" src=\"https://www.youtube.com/embed/FmpDIaiMIeA\" width=\"485\"></iframe><br/>\n<font size=\"-1\">Read the <a href=\"https://www.kdnuggets.com/2016/08/brohrer-convolutional-neural-networks-explanation.html\" rel=\"noopener\" target=\"_blank\">accompanying blog post</a>.</font></center></p>\n<p>\u00a0</p>\n<h3>Step 6: Implementing a Recurrent Neural Network</h3>\n<p>\u00a0<br/>\nTo implement a recurrent neural network (RNN) in Keras, start by reading the documentation on its recurrent layers:</p>\n<ul>\n<li><a href=\"https://keras.io/layers/recurrent/\" rel=\"noopener\" target=\"_blank\">Keras Recurrent Layers</a>\n</li></ul>\n<p>After this, try out this tutorial by Chris Albon for implementing a Long Short-Term Memory (LSTM) network -- a dominant type of RNN -- for text classification:</p>\n<ul>\n<li><a href=\"https://chrisalbon.com/deep_learning/keras/lstm_recurrent_neural_network/\" rel=\"noopener\" target=\"_blank\">LSTM Recurrent Neural Network</a>\n</li></ul>\n<p>To learn more about recurrent neural networks in general, try Brandon Rohrer's video:</p>\n<p><center><iframe allowfullscreen=\"\" frameborder=\"0\" gesture=\"media\" height=\"300\" src=\"https://www.youtube.com/embed/WCUNPb-5EYI\" width=\"485\"></iframe><br/>\n<font size=\"-1\">Read the <a href=\"https://docs.google.com/presentation/d/1hqYB3LRwg_-ntptHxH18W1ax9kBwkaZ1Pa_s3L7R-2Y/edit\" rel=\"noopener\" target=\"_blank\">accompanying slides</a>.</font></center></p>\n<p>\u00a0</p>\n<h3>Step 7: What Next?</h3>\n<p>\u00a0<br/>\nAt this point you should have a solid understanding of Keras, including why you would use it, the advantages it has over other libraries in certain situations, and using it to implement a variety of network architectures. You're an expert now, right?</p>\n<p>Well, probably not. But hopefully you have mastered the basics. When you want to move beyond the basics, the next best stop is likely Keras' official tutorials:</p>\n<ul>\n<li><a href=\"https://blog.keras.io/category/tutorials.html\" rel=\"noopener\" target=\"_blank\">Keras Tutorials</a>\n</li></ul>\n<p>After this, check out the Keras examples directory, which includes vision models examples, text &amp; sequences examples, generative models examples, and more.</p>\n<ul>\n<li><a href=\"https://github.com/fchollet/keras/tree/master/examples\" rel=\"noopener\" target=\"_blank\">Keras Examples Directory</a>\n</li></ul>\n<p>Also, how about challenging yourself to fine-tune some of the above models you implemented in the previous steps? Change the optimizer, add another layer, play with activation functions. Or use some of the Keras metrics to go back and judge the performance of your models. The Keras documentation is a great place to start:</p>\n<ul>\n<li><a href=\"https://keras.io/metrics/\" rel=\"noopener\" target=\"_blank\">Keras Metrics</a>\n<li><a href=\"https://keras.io/getting-started/faq/\" rel=\"noopener\" target=\"_blank\">Keras FAQ: Frequently Asked Keras Questions</a>\n</li></li></ul>\n<p>Best of luck using Keras.</p>\n<p>\u00a0<br/>\n<b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2017/06/7-steps-mastering-data-preparation-python.html\">7 Steps to Mastering Data Preparation with Python</a>\n<li><a href=\"/2015/11/seven-steps-machine-learning-python.html\">7 Steps to Mastering Machine Learning with Python</a>\n<li><a href=\"/2017/03/seven-more-steps-machine-learning-python.html\">7 More Steps to Mastering Machine Learning with Python</a>\n</li></li></li></ul>\n</div> ", "website": "kdnuggets"}