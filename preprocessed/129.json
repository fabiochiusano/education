{"content": "comments By ActiveWizards Measuring the similarity between texts is a common task in many applications. It is useful in classic NLP fields like search, as well as in such far from NLP areas as medicine and genetics. There are many different approaches of how to compare two texts (strings of characters). Each has its own advantages and disadvantages and is good only for a range of specific use cases. To help you better understand the differences between the approaches we have prepared the following infographic. We highlight 6 large groups of text distance metrics: edit-based similarities, token-based similarities, sequence-based, phonetic, simple, and hybrid. The core features of each category are described in the infographic. Here, we just want to explain some nuances. Edit based similarities are simple to understand. The more atomic operations you should perform to convert one string into another, the larger distance between them is observed. For example, the distance between words \u201chat\u201d and \u201ccat\u201d is 1, and the distance between \u201cmap\u201d and \u201ccat\u201d is 2. It is obvious that this approach is applicable only for words and short phrases but useless for longer texts. Also, this approach cannot take into account the semantic meaning of the words, because it compares only the characters. In the same time, we understand, that semantic distance between \u201clemon\u201d and \u201capple\u201d is less than between \u201clemon\u201d and \u201cmoon\u201d despite the fact that edit distance between \u201clemon\u201d and \u201capple\u201d may be greater than the distance between \u201clemon\u201d and \u201cmoon\u201d. That\u2019s why edit based distances are used in the applications, where semantic meaning is not such important as similarity in writing. It is also worth to say that the most prominent edit based algorithm is the Levenshtein algorithm. Very often people think about edit based distances as about Levenshtein similarity. Token-based similarities are a little bit more complex. Those analyze text as a set of tokens (words). This allows to take into account the semantic meaning of the words and to process large texts. Semantic meaning plays a role here because you can use word vector representations (word2vec) to describe each word in the text and then compare vectors. Also, using a bag of words approach and TF-IDF method allows comparing the semantic similarity between entire texts (although not between independent words). Token-based similarities are very widely used in different areas. Probably, it is the most well-known approach to work with texts. Nevertheless, it is not applicable to a range of use cases. The next group of distance is sequence based distances. It is somewhat similar to edit based distances, but not completely the same. You may be guessing what is the difference between comparing strings on the basis of the longest common subsequence and the longest common substring. Longest common subsequence doesn\u2019t take into account if there are some letters between characters from subsequence. For example, consider sets of letters \u201caebcdnlp\u201d and \u201ctaybcrd\u201d. The longest common subsequence between these words is \u201cabcd\u201d, while the longest common substring is only \u201cbc\u201d. The fields of application for these approaches are slightly different from edit based approaches, but the pros and cons are almost the same. Phonetic algorithms form a separate group of methods for string comparison. In this case, it is not even string comparison but rather an audio comparison. These algorithms compare words based on how they are pronounced. It is hard to compare long texts in this way. The short sentences or phrases are the maximum threshold for these algorithms. Also, they cannot take into account the semantic meaning. Nevertheless, there are situations when these methods are indispensable. The next several algorithms we want to mention are very simple to understand and use, so they form a group of methods which can be called as \u201cSimple\u201d. These methods can compare strings based on the similar prefixes or postfixes. Also, there are algorithms called \u201clength distance\u201d and \u201cidentity similarity\u201d. The first ones compare strings by counting the number of characters in each of them and the second algorithms simply check if these strings are completely the same or not. As you can see, all these algorithms are very primitive and can be used only in very specific situations. The last group we want to describe is hybrid algorithms. There is only one method: Monge-Elkan. It is a mix of edit based and token based distance. You can choose any edit based algorithm. The Monge-Elkan method compares each word in one text with each word in another text (so it is token-based), but when comparing words it uses some of the edit based methods (so it is edit-based at the same time). Then, distances between words are aggregated to derive a single value of the distance between the two texts. One important thing here is that this method is not symmetrical. This means that the result of comparison depends on what string you take as the first string and what as the second one. We describe this situation in the cons section of our infographic, but actually, it is not a problem for all applications. In other words, there are many use cases where symmetry is not important. \u00a0 Conclusion \u00a0 In this article, we have briefly described some interesting and important notes about different approaches to strings comparison. To understand and remember all these things better, please explore our infographics. There are no good or bad approaches, all of them appeared due to the need of using in particular cases. So, when you need to compare two strings, firstly think about what is the final result you expect to have, and then choose the right metric. Use our infographics as a cheat sheet! \u00a0 ActiveWizards is a team of data scientists and engineers, focused exclusively on data projects (big data, data science, machine learning, data visualizations). Areas of core expertise include data science (research, machine learning algorithms, visualizations and engineering), data visualizations ( d3.js, Tableau and other), big data engineering (Hadoop, Spark, Kafka, Cassandra, HBase, MongoDB and other), and data intensive web applications development (RESTful APIs, Flask, Django, Meteor). Original . Reposted with permission. Related: Comparison of Top 6 Python NLP Libraries Top 20 Python Libraries for Data Science in 2018 Top 20 R Libraries for Data Science in 2018", "title_html": "<h1 id=\"title\">Comparison of the Text Distance Metrics</h1> ", "url": "https://www.kdnuggets.com/2019/01/comparison-text-distance-metrics.html", "tfidf": {"tfidf": {"base": 14.90166064985, "relat": 1.23750876919, "even": 1.16461267606, "fact": 1.73375559681, "django": 369.209302326, "disadvantag": 13.077429983499998, "token": 67.4140127388, "tableau": 244.246153846, "permiss": 6.280063291139999, "here": 7.26923076924, "basi": 2.42122922068, "form": 2.25511363636, "visual": 15.68258149491, "wide": 1.5598349381, "num": 8.00252032008, "maximum": 4.80072573329, "symmetri": 39.297029703, "atom": 10.576948700900001, "mongodb": 1443.27272727, "number": 1.10142916609, "audio": 9.05647461495, "than": 2.0655737705, "web": 5.17133550489, "specif": 3.7438981252199994, "about": 4.25944060636, "problem": 1.76674827509, "meteor": 54.0, "wellknown": 1443.27272727, "somewhat": 4.29197080292, "hat": 12.782608695699999, "sentenc": 5.84536082474, "python": 112.5957446808, "just": 1.33580143037, "entir": 1.59365589239, "well": 1.0655748708, "mongeelkan": 2886.54545454, "work": 1.11520089913, "complet": 2.48043121632, "approach": 20.7556543339, "represent": 5.928304705, "check": 6.50655737705, "phonet": 87.2307692308, "moon": 15.78131212724, "highlight": 5.83033419023, "rest": 1.9573418813999999, "rememb": 4.88793103448, "particular": 1.3814827706200001, "complex": 2.34021226415, "flask": 240.545454545, "vector": 51.79771615, "articl": 2.01805008262, "how": 3.20500656102, "repost": 933.882352941, "them": 3.29628347982, "useless": 27.610434782600002, "lemon": 202.8881789136, "simpl": 13.592465753439999, "origin": 1.13724928367, "bad": 3.3944836433599996, "explain": 2.60049140049, "singl": 1.60948905109, "due": 1.23789473684, "whi": 3.2566153846200003, "word": 28.744596582559996, "cheat": 31.6886227545, "interest": 1.60331246213, "comparison": 29.75820056232, "mani": 3.13280273631, "primit": 13.7573656846, "the": 57.0, "consid": 1.2397313759200002, "write": 2.0575427682700003, "edit": 19.929701230200003, "second": 2.2261796256, "next": 2.9901120632800002, "prefix": 25.8146341463, "perform": 1.5313977042500002, "but": 6.09794507394, "need": 2.8745247148199997, "our": 7.07276507277, "there": 7.28638867033, "longer": 2.02319357716, "final": 1.34008609775, "where": 2.13430127042, "expect": 2.20011086475, "top": 5.516330785260001, "con": 45.489971346800004, "applic": 23.98704942802, "say": 1.7544480053, "exampl": 3.00966824644, "right": 1.4054532577899999, "has": 1.0436497502, "have": 3.0446845234199995, "long": 1.2657259028899999, "postfix": 1323.0, "categori": 3.98194130926, "slight": 3.25327868852, "take": 5.6980834111, "advantag": 3.32412060302, "follow": 1.04640126549, "subsequ": 7.013916501000001, "threshold": 23.008695652199997, "hard": 2.73253012048, "see": 1.27242125511, "good": 3.03963239518, "indispens": 51.2129032258, "dnumj": 1443.27272727, "oper": 1.55479384977, "also": 5.07382550335, "count": 3.48157894737, "pronounc": 7.7443902439, "field": 3.5580457194, "greater": 2.14801785956, "short": 2.82591669634, "mean": 8.69441401974, "not": 11.17241379309, "far": 1.71022298826, "task": 3.88641370869, "role": 1.55327267391, "string": 100.53403693932, "intens": 3.9026548672600003, "may": 2.10403551786, "less": 1.46904783936, "peopl": 1.21320495186, "scientist": 4.69426374926, "pleas": 9.12938470385, "aggreg": 17.542541436500002, "metric": 44.470588235200005, "promin": 2.39746300211, "substr": 2886.54545454, "better": 4.0131445905000005, "convert": 3.2740771293099997, "then": 3.25973581548, "hbase": 1443.27272727, "they": 3.09051975861, "anoth": 2.27287043664, "core": 9.246359930119999, "simpli": 2.5192002538900002, "editbas": 2886.54545454, "last": 1.2117234010100002, "allow": 2.5432118542200004, "although": 1.14968498805, "scienc": 9.27878433664, "actual": 1.87482286254, "probabl": 2.64555907349, "spark": 8.360189573460001, "larger": 2.2407904022599996, "infograph": 3451.304347825, "which": 1.005191845, "featur": 1.52712581762, "such": 2.12302754748, "ident": 2.80792359392, "sequencebas": 1443.27272727, "length": 3.69123459661, "appear": 1.3214582986499999, "other": 3.02977099236, "algorithm": 335.4084507048, "mix": 2.7852631578900002, "abcd": 835.5789473680001, "valu": 2.2777618364400003, "activewizard": 2886.54545454, "develop": 1.1955719557200002, "observ": 2.22446406053, "becaus": 2.2990369994999997, "sever": 1.07241286139, "those": 1.19548192771, "explor": 3.39593582888, "like": 1.14918566775, "deriv": 2.78379800105, "text": 40.66758620691, "some": 4.16146788992, "letter": 4.8543036233, "should": 1.6643254009900001, "area": 4.16437877067, "aebcdnlp": 1443.27272727, "process": 1.69524826482, "longest": 33.76435559335, "separ": 1.6012102874399998, "that": 7.0278884462499995, "play": 1.46390041494, "includ": 1.0190641247799999, "classic": 2.4087391898, "team": 2.2748244734200003, "when": 3.0623030926499997, "set": 2.37415881562, "phrase": 12.36930268796, "ani": 1.13383802314, "two": 3.04137931035, "rang": 3.5696458684599994, "time": 2.02254920696, "api": 84.44680851060001, "engin": 7.414072229129999, "account": 7.7785399314, "bit": 8.33385826772, "similar": 16.50168904284, "project": 1.7534791252500002, "differ": 7.4192694134999995, "same": 5.592897907399999, "medicin": 5.5355648535599995, "independ": 1.58950740889, "first": 3.0228484386899996, "most": 2.04192926046, "between": 16.55258699328, "for": 11.00346544011, "depend": 2.2411067193700003, "obvious": 6.44841592201, "all": 4.04587155964, "charact": 10.06881243064, "with": 3.003594626969999, "expertis": 20.0201765448, "situat": 6.198334200930001, "think": 5.81431972166, "are": 20.598118715600002, "despit": 1.60606980273, "almost": 1.53584212054, "case": 7.4249368628, "distanc": 55.607705779359996, "hybrid": 25.260143198, "result": 2.29223216864, "section": 2.1284354471099998, "call": 2.1353059852, "bag": 15.8601398601, "more": 2.0343413634, "and": 32.00201574816, "veri": 6.29400570885, "these": 9.66738836268, "prepar": 2.43012398592, "cat": 21.0696748506, "cassandra": 128.032258065, "while": 1.0441988950299999, "semant": 273.7241379313, "focus": 2.01012914662, "librari": 8.04798918555, "compar": 22.394733748680004, "kafka": 211.68, "map": 4.0728578758300005, "group": 6.0498437619, "can": 9.41009113136, "one": 6.03764974332, "littl": 1.5499365420299998, "describ": 7.3513613632, "way": 1.2190739461, "search": 3.2539454806299997, "onli": 6.153885909960001, "each": 7.13848920864, "larg": 2.3714989917, "wordnumvec": 1443.27272727, "this": 9.03414264039, "thing": 4.813096862219999, "genet": 10.2558139535, "common": 8.4155844156, "big": 5.480151881259999, "comment": 3.05954904606, "data": 37.14079115274, "want": 5.99094339624, "note": 1.42449528937, "research": 1.9420183486200002, "method": 23.142857142870003, "sequenc": 6.07112810707, "analyz": 9.68639414277, "rather": 1.55692850838, "machin": 8.04866920152, "into": 5.0751230739499995, "appl": 27.3960310612, "levenshtein": 2886.54545454, "worth": 5.210370856580001, "learn": 4.6455010973, "understand": 14.842931937149999, "from": 3.00170164491, "taybcrd": 1443.27272727, "import": 5.360796893480001, "hadoop": 1443.27272727, "what": 5.01373756512, "sheet": 8.60954446855, "choos": 8.35798894446, "use": 13.385303845939998, "guess": 25.0410094637, "mention": 2.53894130817, "help": 1.39962972759, "exclus": 3.40906162766, "tokenbas": 5773.09090908, "measur": 2.41093394077, "often": 1.29452054795, "briefli": 4.8669527897, "symmetr": 30.5307692308, "nevertheless": 8.397778365519999, "conclus": 4.84615384615, "nuanc": 48.2553191489, "pros": 141.75, "own": 1.17844418052}, "logtfidf": {"base": 1.7748029297310002, "relat": 0.21310030165399999, "even": 0.152388564834, "fact": 0.5502899207949999, "django": 5.91136369821, "disadvantag": 2.57088784228, "token": 7.035411439780001, "tableau": 5.4981765440100006, "permiss": 1.8373800586400002, "here": 2.6551145651100003, "basi": 0.884275353639, "form": 0.240106368382, "visual": 4.96181504658, "wide": 0.44458000675399995, "num": 0.0025199231631760004, "maximum": 1.5687671009200002, "symmetri": 3.6711489359400002, "atom": 2.35867698227, "mongodb": 7.2746685411000005, "number": 0.0966085784186, "audio": 2.2034799289800002, "than": 0.0645217244364, "web": 1.6431309733200001, "specif": 1.253960335082, "about": 0.2513739098984, "problem": 0.569140724273, "meteor": 3.9889840465599997, "wellknown": 7.2746685411000005, "somewhat": 1.4567460220700001, "hat": 2.54808555141, "sentenc": 1.7656483252200001, "python": 8.06131348592, "just": 0.289531434109, "entir": 0.46603068026999994, "well": 0.0635144383156, "mongeelkan": 14.549337082200001, "work": 0.109034567273, "complet": 0.430570484094, "approach": 7.302336145810001, "represent": 1.7797382876499999, "check": 1.87281049562, "phonet": 7.55081989254, "moon": 4.13135856536, "highlight": 1.76307432123, "rest": 0.671587369833, "rememb": 1.5867691126199999, "particular": 0.323157393804, "complex": 0.8502416364309999, "flask": 5.482909071880001, "vector": 6.50839775594, "articl": 0.702131739574, "how": 0.9431339138600001, "repost": 6.83935046985, "them": 0.2825499807279, "useless": 3.31819377311, "lemon": 15.705442493439998, "simpl": 4.892885157559999, "origin": 0.128612437587, "bad": 1.2221516561799999, "explain": 0.955700427358, "singl": 0.475916769059, "due": 0.21341214386399998, "whi": 1.18068843047, "word": 9.37377731816, "cheat": 3.4559577128199996, "interest": 0.47207177798199995, "comparison": 9.60807164358, "mani": 0.1299472743663, "primit": 2.62157436683, "the": 0.0, "consid": 0.214894723824, "write": 0.721512439877, "edit": 6.896260501610001, "second": 0.21427952675999998, "next": 0.804327370998, "prefix": 3.2509415461, "perform": 0.42618085058, "but": 0.0971542324314, "need": 0.725480326884, "our": 2.5729176425460003, "there": 0.2806852504785, "longer": 0.7046772417749999, "final": 0.292733863948, "where": 0.1299842774914, "expect": 0.78850775216, "top": 1.8273019133640003, "con": 6.24868942228, "applic": 8.62122749943, "say": 0.562154280552, "exampl": 0.8173653499979999, "right": 0.34035985417, "has": 0.0427239448548, "have": 0.0443550070236, "long": 0.235645793878, "postfix": 7.18765716411, "categori": 1.38176946652, "slight": 1.17966331506, "take": 0.653459810985, "advantag": 1.20120515883, "follow": 0.045356911094199995, "subsequ": 2.246407543628, "threshold": 3.1358722163099997, "hard": 1.00522796406, "see": 0.240921585492, "good": 0.837178809814, "indispens": 3.9359915164199997, "dnumj": 7.2746685411000005, "oper": 0.441342964347, "also": 0.073285789, "count": 1.24748591139, "pronounc": 2.04696874177, "field": 1.1521285167020001, "greater": 0.764545491118, "short": 0.691371251358, "mean": 2.22552770112, "not": 0.1710765430825, "far": 0.536623764503, "task": 1.35748680661, "role": 0.44036410757399996, "string": 25.507076356680006, "intens": 1.3616570567299997, "may": 0.10141999056880001, "less": 0.3846144626, "peopl": 0.193265578473, "scientist": 1.54634128444, "pleas": 2.21149829955, "aggreg": 2.8646288702, "metric": 6.203361703119999, "promin": 0.8744110957960001, "substr": 14.549337082200001, "better": 1.3928558812, "convert": 1.1860360368, "then": 0.24910159569269996, "hbase": 7.2746685411000005, "they": 0.0891809843028, "anoth": 0.255792723304, "core": 3.0621655449, "simpli": 0.923941491586, "editbas": 14.549337082200001, "last": 0.19204364461100001, "allow": 0.48056122237800003, "although": 0.139487981418, "scienc": 3.365744715564, "actual": 0.628514181648, "probabl": 0.972882412913, "spark": 2.12348110309, "larger": 0.806828661778, "infograph": 32.68534798985, "which": 0.00517841384543, "featur": 0.423387418142, "such": 0.119391955612, "ident": 1.03244527565, "sequencebas": 7.2746685411000005, "length": 1.3059609811200001, "appear": 0.278735898493, "other": 0.02962424375928, "algorithm": 39.96530874216, "mix": 1.02434236008, "abcd": 6.72812483474, "valu": 0.823193310148, "activewizard": 14.549337082200001, "develop": 0.178624694913, "observ": 0.7995160149320001, "becaus": 0.27868631765, "sever": 0.06991112039689999, "those": 0.17854939087299998, "explor": 1.22257937218, "like": 0.139053576545, "deriv": 1.02381618275, "text": 14.82626612987, "some": 0.158294036258, "letter": 1.773436951884, "should": 0.509419876758, "area": 0.9838644633659999, "aebcdnlp": 7.2746685411000005, "process": 0.527829199025, "longest": 9.549838826799999, "separ": 0.470759772949, "that": 0.02783303865748, "play": 0.38110439064199997, "includ": 0.0188846813905, "classic": 0.8791034528499999, "team": 0.821902894886, "when": 0.0616649665752, "set": 0.342992022578, "phrase": 3.64414126606, "ani": 0.125608358366, "two": 0.041096533074600004, "rang": 1.158638427606, "time": 0.0224230377252, "api": 4.43612185107, "engin": 2.7143026748279997, "account": 2.660297159892, "bit": 2.12032652634, "similar": 3.8226731053679996, "project": 0.561601885907, "differ": 1.2739267278720001, "same": 0.5602982480200001, "medicin": 1.71119361218, "independ": 0.463424162503, "first": 0.02276186943648, "most": 0.041495792591199995, "between": 0.5432588986447999, "for": 0.0034648943493670007, "depend": 0.806969815, "obvious": 1.86383450716, "all": 0.04561052839119999, "charact": 3.692593628956, "with": 0.00359247514017, "expertis": 2.99674059227, "situat": 2.1770048700449998, "think": 2.1343532235, "are": 0.589349471654, "despit": 0.473790078298, "almost": 0.42907884333400004, "case": 1.9770313444449998, "distanc": 19.93172900112, "hybrid": 5.07216121062, "result": 0.272757816762, "section": 0.755387177948, "call": 0.1309255488976, "bag": 2.76380903459, "more": 0.034049863199999995, "and": 0.0020156845460352, "veri": 1.15079896619, "these": 0.6438025746072, "prepar": 0.8879422790620001, "cat": 4.70937523056, "cassandra": 4.8522822483, "while": 0.04324998379380001, "semant": 25.6634745801, "focus": 0.6981989720559999, "librari": 2.960429942829, "compar": 7.487030171123999, "kafka": 5.35507570037, "map": 1.40434493384, "group": 0.952972673985, "can": 1.298728771152, "one": 0.037532109873, "littl": 0.438213989466, "describ": 1.927238015625, "way": 0.19809150993500002, "search": 1.1798682540899998, "onli": 0.1519456099746, "each": 1.042450135824, "larg": 0.34075012121200005, "wordnumvec": 7.2746685411000005, "this": 0.0340780414725, "thing": 1.7563870693599999, "genet": 2.32784475975, "common": 2.029954831626, "big": 2.01597127114, "comment": 1.11826753454, "data": 13.3850264328, "want": 2.0749098187649997, "note": 0.353817568083, "research": 0.663727818138, "method": 8.500154479569, "sequenc": 1.8035444374, "analyz": 2.2707222351599996, "rather": 0.442714975539, "machin": 2.78471916124, "into": 0.0745643161435, "appl": 5.23450194112, "levenshtein": 14.549337082200001, "worth": 1.65065103492, "learn": 1.68550412949, "understand": 5.440429378399999, "from": 0.0017011625065979999, "taybcrd": 7.2746685411000005, "import": 1.171273108264, "hadoop": 7.2746685411000005, "what": 0.903549187308, "sheet": 2.15287140979, "choos": 2.86014132144, "use": 0.37970425651080003, "guess": 3.22051485947, "mention": 0.931747186336, "help": 0.336207721344, "exclus": 1.22643707092, "tokenbas": 29.098674164400002, "measur": 0.880014199726, "often": 0.258140393351, "briefli": 1.5824680307199999, "symmetr": 3.4187350023299996, "nevertheless": 2.8696400200200003, "conclus": 1.57818536893, "nuanc": 3.87650606314, "pros": 4.95406494261, "own": 0.164195077421}, "logidf": {"base": 0.13652330228700002, "relat": 0.21310030165399999, "even": 0.152388564834, "fact": 0.5502899207949999, "django": 5.91136369821, "disadvantag": 2.57088784228, "token": 3.5177057198900004, "tableau": 5.4981765440100006, "permiss": 1.8373800586400002, "here": 0.8850381883700001, "basi": 0.884275353639, "form": 0.120053184191, "visual": 1.6539383488600001, "wide": 0.44458000675399995, "num": 0.00031499039539700004, "maximum": 1.5687671009200002, "symmetri": 3.6711489359400002, "atom": 2.35867698227, "mongodb": 7.2746685411000005, "number": 0.0966085784186, "audio": 2.2034799289800002, "than": 0.0322608622182, "web": 1.6431309733200001, "specif": 0.626980167541, "about": 0.0628434774746, "problem": 0.569140724273, "meteor": 3.9889840465599997, "wellknown": 7.2746685411000005, "somewhat": 1.4567460220700001, "hat": 2.54808555141, "sentenc": 1.7656483252200001, "python": 4.03065674296, "just": 0.289531434109, "entir": 0.46603068026999994, "well": 0.0635144383156, "mongeelkan": 7.2746685411000005, "work": 0.109034567273, "complet": 0.215285242047, "approach": 0.7302336145810001, "represent": 1.7797382876499999, "check": 1.87281049562, "phonet": 3.77540994627, "moon": 2.06567928268, "highlight": 1.76307432123, "rest": 0.671587369833, "rememb": 1.5867691126199999, "particular": 0.323157393804, "complex": 0.8502416364309999, "flask": 5.482909071880001, "vector": 3.25419887797, "articl": 0.702131739574, "how": 0.47156695693000006, "repost": 6.83935046985, "them": 0.0941833269093, "useless": 3.31819377311, "lemon": 3.9263606233599995, "simpl": 1.2232212893899999, "origin": 0.128612437587, "bad": 1.2221516561799999, "explain": 0.955700427358, "singl": 0.475916769059, "due": 0.21341214386399998, "whi": 1.18068843047, "word": 0.585861082385, "cheat": 3.4559577128199996, "interest": 0.47207177798199995, "comparison": 1.60134527393, "mani": 0.0433157581221, "primit": 2.62157436683, "the": 0.0, "consid": 0.214894723824, "write": 0.721512439877, "edit": 0.6896260501610001, "second": 0.10713976337999999, "next": 0.402163685499, "prefix": 3.2509415461, "perform": 0.42618085058, "but": 0.0161923720719, "need": 0.362740163442, "our": 0.8576392141820001, "there": 0.0400978929255, "longer": 0.7046772417749999, "final": 0.292733863948, "where": 0.0649921387457, "expect": 0.78850775216, "top": 0.609100637788, "con": 3.12434471114, "applic": 1.23160392849, "say": 0.562154280552, "exampl": 0.40868267499899996, "right": 0.34035985417, "has": 0.0427239448548, "have": 0.0147850023412, "long": 0.235645793878, "postfix": 7.18765716411, "categori": 1.38176946652, "slight": 1.17966331506, "take": 0.130691962197, "advantag": 1.20120515883, "follow": 0.045356911094199995, "subsequ": 0.561601885907, "threshold": 3.1358722163099997, "hard": 1.00522796406, "see": 0.240921585492, "good": 0.418589404907, "indispens": 3.9359915164199997, "dnumj": 7.2746685411000005, "oper": 0.441342964347, "also": 0.0146571578, "count": 1.24748591139, "pronounc": 2.04696874177, "field": 0.5760642583510001, "greater": 0.764545491118, "short": 0.345685625679, "mean": 0.37092128352, "not": 0.0155524130075, "far": 0.536623764503, "task": 1.35748680661, "role": 0.44036410757399996, "string": 2.1255896963900005, "intens": 1.3616570567299997, "may": 0.050709995284400004, "less": 0.3846144626, "peopl": 0.193265578473, "scientist": 1.54634128444, "pleas": 2.21149829955, "aggreg": 2.8646288702, "metric": 3.1016808515599994, "promin": 0.8744110957960001, "substr": 7.2746685411000005, "better": 0.6964279406, "convert": 1.1860360368, "then": 0.08303386523089999, "hbase": 7.2746685411000005, "they": 0.0297269947676, "anoth": 0.127896361652, "core": 1.53108277245, "simpli": 0.923941491586, "editbas": 7.2746685411000005, "last": 0.19204364461100001, "allow": 0.24028061118900002, "although": 0.139487981418, "scienc": 0.841436178891, "actual": 0.628514181648, "probabl": 0.972882412913, "spark": 2.12348110309, "larger": 0.806828661778, "infograph": 6.5370695979699995, "which": 0.00517841384543, "featur": 0.423387418142, "such": 0.059695977806, "ident": 1.03244527565, "sequencebas": 7.2746685411000005, "length": 1.3059609811200001, "appear": 0.278735898493, "other": 0.00987474791976, "algorithm": 3.33044239518, "mix": 1.02434236008, "abcd": 6.72812483474, "valu": 0.823193310148, "activewizard": 7.2746685411000005, "develop": 0.178624694913, "observ": 0.7995160149320001, "becaus": 0.139343158825, "sever": 0.06991112039689999, "those": 0.17854939087299998, "explor": 1.22257937218, "like": 0.139053576545, "deriv": 1.02381618275, "text": 1.14048200999, "some": 0.0395735090645, "letter": 0.886718475942, "should": 0.509419876758, "area": 0.327954821122, "aebcdnlp": 7.2746685411000005, "process": 0.527829199025, "longest": 1.9099677653599998, "separ": 0.470759772949, "that": 0.00397614837964, "play": 0.38110439064199997, "includ": 0.0188846813905, "classic": 0.8791034528499999, "team": 0.821902894886, "when": 0.0205549888584, "set": 0.171496011289, "phrase": 1.82207063303, "ani": 0.125608358366, "two": 0.0136988443582, "rang": 0.579319213803, "time": 0.0112115188626, "api": 4.43612185107, "engin": 0.904767558276, "account": 0.665074289973, "bit": 2.12032652634, "similar": 0.318556092114, "project": 0.561601885907, "differ": 0.212321121312, "same": 0.112059649604, "medicin": 1.71119361218, "independ": 0.463424162503, "first": 0.0075872898121599995, "most": 0.020747896295599998, "between": 0.033953681165299995, "for": 0.00031499039539700004, "depend": 0.806969815, "obvious": 1.86383450716, "all": 0.011402632097799998, "charact": 0.923148407239, "with": 0.00119749171339, "expertis": 2.99674059227, "situat": 0.725668290015, "think": 1.06717661175, "are": 0.0294674735827, "despit": 0.473790078298, "almost": 0.42907884333400004, "case": 0.395406268889, "distanc": 1.24573306257, "hybrid": 2.53608060531, "result": 0.136378908381, "section": 0.755387177948, "call": 0.0654627744488, "bag": 2.76380903459, "more": 0.017024931599999998, "and": 6.29901420636e-05, "veri": 0.230159793238, "these": 0.0715336194008, "prepar": 0.8879422790620001, "cat": 2.35468761528, "cassandra": 4.8522822483, "while": 0.04324998379380001, "semant": 3.6662106543, "focus": 0.6981989720559999, "librari": 0.986809980943, "compar": 0.6239191809269999, "kafka": 5.35507570037, "map": 1.40434493384, "group": 0.190594534797, "can": 0.162341096394, "one": 0.0062553516455, "littl": 0.438213989466, "describ": 0.385447603125, "way": 0.19809150993500002, "search": 1.1798682540899998, "onli": 0.025324268329099998, "each": 0.173741689304, "larg": 0.17037506060600002, "wordnumvec": 7.2746685411000005, "this": 0.0037864490525, "thing": 0.8781935346799999, "genet": 2.32784475975, "common": 0.338325805271, "big": 1.00798563557, "comment": 1.11826753454, "data": 1.2168205848, "want": 0.6916366062549999, "note": 0.353817568083, "research": 0.663727818138, "method": 0.944461608841, "sequenc": 1.8035444374, "analyz": 2.2707222351599996, "rather": 0.442714975539, "machin": 1.39235958062, "into": 0.0149128632287, "appl": 2.61725097056, "levenshtein": 7.2746685411000005, "worth": 1.65065103492, "learn": 0.842752064745, "understand": 1.0880858756799998, "from": 0.000567054168866, "taybcrd": 7.2746685411000005, "import": 0.292818277066, "hadoop": 7.2746685411000005, "what": 0.225887296827, "sheet": 2.15287140979, "choos": 1.43007066072, "use": 0.0292080197316, "guess": 3.22051485947, "mention": 0.931747186336, "help": 0.336207721344, "exclus": 1.22643707092, "tokenbas": 7.2746685411000005, "measur": 0.880014199726, "often": 0.258140393351, "briefli": 1.5824680307199999, "symmetr": 3.4187350023299996, "nevertheless": 1.4348200100100001, "conclus": 1.57818536893, "nuanc": 3.87650606314, "pros": 4.95406494261, "own": 0.164195077421}, "freq": {"base": 13, "relat": 1, "even": 1, "fact": 1, "django": 1, "disadvantag": 1, "token": 2, "tableau": 1, "permiss": 1, "here": 3, "basi": 1, "form": 2, "visual": 3, "wide": 1, "num": 8, "maximum": 1, "symmetri": 1, "atom": 1, "mongodb": 1, "number": 1, "audio": 1, "than": 2, "web": 1, "specif": 2, "about": 4, "problem": 1, "meteor": 1, "wellknown": 1, "somewhat": 1, "hat": 1, "sentenc": 1, "python": 2, "just": 1, "entir": 1, "well": 1, "mongeelkan": 2, "work": 1, "complet": 2, "approach": 10, "represent": 1, "check": 1, "phonet": 2, "moon": 2, "highlight": 1, "rest": 1, "rememb": 1, "particular": 1, "complex": 1, "flask": 1, "vector": 2, "articl": 1, "how": 2, "repost": 1, "them": 3, "useless": 1, "lemon": 4, "simpl": 4, "origin": 1, "bad": 1, "explain": 1, "singl": 1, "due": 1, "whi": 1, "word": 16, "cheat": 1, "interest": 1, "comparison": 6, "mani": 3, "primit": 1, "the": 57, "consid": 1, "write": 1, "edit": 10, "second": 2, "next": 2, "prefix": 1, "perform": 1, "but": 6, "need": 2, "our": 3, "there": 7, "longer": 1, "final": 1, "where": 2, "expect": 1, "top": 3, "con": 2, "applic": 7, "say": 1, "exampl": 2, "right": 1, "has": 1, "have": 3, "long": 1, "postfix": 1, "categori": 1, "slight": 1, "take": 5, "advantag": 1, "follow": 1, "subsequ": 4, "threshold": 1, "hard": 1, "see": 1, "good": 2, "indispens": 1, "dnumj": 1, "oper": 1, "also": 5, "count": 1, "pronounc": 1, "field": 2, "greater": 1, "short": 2, "mean": 6, "not": 11, "far": 1, "task": 1, "role": 1, "string": 12, "intens": 1, "may": 2, "less": 1, "peopl": 1, "scientist": 1, "pleas": 1, "aggreg": 1, "metric": 2, "promin": 1, "substr": 2, "better": 2, "convert": 1, "then": 3, "hbase": 1, "they": 3, "anoth": 2, "core": 2, "simpli": 1, "editbas": 2, "last": 1, "allow": 2, "although": 1, "scienc": 4, "actual": 1, "probabl": 1, "spark": 1, "larger": 1, "infograph": 5, "which": 1, "featur": 1, "such": 2, "ident": 1, "sequencebas": 1, "length": 1, "appear": 1, "other": 3, "algorithm": 12, "mix": 1, "abcd": 1, "valu": 1, "activewizard": 2, "develop": 1, "observ": 1, "becaus": 2, "sever": 1, "those": 1, "explor": 1, "like": 1, "deriv": 1, "text": 13, "some": 4, "letter": 2, "should": 1, "area": 3, "aebcdnlp": 1, "process": 1, "longest": 5, "separ": 1, "that": 7, "play": 1, "includ": 1, "classic": 1, "team": 1, "when": 3, "set": 2, "phrase": 2, "ani": 1, "two": 3, "rang": 2, "time": 2, "api": 1, "engin": 3, "account": 4, "bit": 1, "similar": 12, "project": 1, "differ": 6, "same": 5, "medicin": 1, "independ": 1, "first": 3, "most": 2, "between": 16, "for": 11, "depend": 1, "obvious": 1, "all": 4, "charact": 4, "with": 3, "expertis": 1, "situat": 3, "think": 2, "are": 20, "despit": 1, "almost": 1, "case": 5, "distanc": 16, "hybrid": 2, "result": 2, "section": 1, "call": 2, "bag": 1, "more": 2, "and": 32, "veri": 5, "these": 9, "prepar": 1, "cat": 2, "cassandra": 1, "while": 1, "semant": 7, "focus": 1, "librari": 3, "compar": 12, "kafka": 1, "map": 1, "group": 5, "can": 8, "one": 6, "littl": 1, "describ": 5, "way": 1, "search": 1, "onli": 6, "each": 6, "larg": 2, "wordnumvec": 1, "this": 9, "thing": 2, "genet": 1, "common": 6, "big": 2, "comment": 1, "data": 11, "want": 3, "note": 1, "research": 1, "method": 9, "sequenc": 1, "analyz": 1, "rather": 1, "machin": 2, "into": 5, "appl": 2, "levenshtein": 2, "worth": 1, "learn": 2, "understand": 5, "from": 3, "taybcrd": 1, "import": 4, "hadoop": 1, "what": 4, "sheet": 1, "choos": 2, "use": 13, "guess": 1, "mention": 1, "help": 1, "exclus": 1, "tokenbas": 4, "measur": 1, "often": 1, "briefli": 1, "symmetr": 1, "nevertheless": 2, "conclus": 1, "nuanc": 1, "pros": 1, "own": 1}, "idf": {"base": 1.14628158845, "relat": 1.23750876919, "even": 1.16461267606, "fact": 1.73375559681, "django": 369.209302326, "disadvantag": 13.077429983499998, "token": 33.7070063694, "tableau": 244.246153846, "permiss": 6.280063291139999, "here": 2.42307692308, "basi": 2.42122922068, "form": 1.12755681818, "visual": 5.22752716497, "wide": 1.5598349381, "num": 1.00031504001, "maximum": 4.80072573329, "symmetri": 39.297029703, "atom": 10.576948700900001, "mongodb": 1443.27272727, "number": 1.10142916609, "audio": 9.05647461495, "than": 1.03278688525, "web": 5.17133550489, "specif": 1.8719490626099997, "about": 1.06486015159, "problem": 1.76674827509, "meteor": 54.0, "wellknown": 1443.27272727, "somewhat": 4.29197080292, "hat": 12.782608695699999, "sentenc": 5.84536082474, "python": 56.2978723404, "just": 1.33580143037, "entir": 1.59365589239, "well": 1.0655748708, "mongeelkan": 1443.27272727, "work": 1.11520089913, "complet": 1.24021560816, "approach": 2.07556543339, "represent": 5.928304705, "check": 6.50655737705, "phonet": 43.6153846154, "moon": 7.89065606362, "highlight": 5.83033419023, "rest": 1.9573418813999999, "rememb": 4.88793103448, "particular": 1.3814827706200001, "complex": 2.34021226415, "flask": 240.545454545, "vector": 25.898858075, "articl": 2.01805008262, "how": 1.60250328051, "repost": 933.882352941, "them": 1.09876115994, "useless": 27.610434782600002, "lemon": 50.7220447284, "simpl": 3.3981164383599998, "origin": 1.13724928367, "bad": 3.3944836433599996, "explain": 2.60049140049, "singl": 1.60948905109, "due": 1.23789473684, "whi": 3.2566153846200003, "word": 1.7965372864099998, "cheat": 31.6886227545, "interest": 1.60331246213, "comparison": 4.9597000937199995, "mani": 1.04426757877, "primit": 13.7573656846, "the": 1.0, "consid": 1.2397313759200002, "write": 2.0575427682700003, "edit": 1.99297012302, "second": 1.1130898128, "next": 1.4950560316400001, "prefix": 25.8146341463, "perform": 1.5313977042500002, "but": 1.01632417899, "need": 1.4372623574099999, "our": 2.35758835759, "there": 1.04091266719, "longer": 2.02319357716, "final": 1.34008609775, "where": 1.06715063521, "expect": 2.20011086475, "top": 1.8387769284200002, "con": 22.744985673400002, "applic": 3.42672134686, "say": 1.7544480053, "exampl": 1.50483412322, "right": 1.4054532577899999, "has": 1.0436497502, "have": 1.0148948411399998, "long": 1.2657259028899999, "postfix": 1323.0, "categori": 3.98194130926, "slight": 3.25327868852, "take": 1.13961668222, "advantag": 3.32412060302, "follow": 1.04640126549, "subsequ": 1.7534791252500002, "threshold": 23.008695652199997, "hard": 2.73253012048, "see": 1.27242125511, "good": 1.51981619759, "indispens": 51.2129032258, "dnumj": 1443.27272727, "oper": 1.55479384977, "also": 1.01476510067, "count": 3.48157894737, "pronounc": 7.7443902439, "field": 1.7790228597, "greater": 2.14801785956, "short": 1.41295834817, "mean": 1.44906900329, "not": 1.01567398119, "far": 1.71022298826, "task": 3.88641370869, "role": 1.55327267391, "string": 8.37783641161, "intens": 3.9026548672600003, "may": 1.05201775893, "less": 1.46904783936, "peopl": 1.21320495186, "scientist": 4.69426374926, "pleas": 9.12938470385, "aggreg": 17.542541436500002, "metric": 22.235294117600002, "promin": 2.39746300211, "substr": 1443.27272727, "better": 2.0065722952500002, "convert": 3.2740771293099997, "then": 1.08657860516, "hbase": 1443.27272727, "they": 1.03017325287, "anoth": 1.13643521832, "core": 4.623179965059999, "simpli": 2.5192002538900002, "editbas": 1443.27272727, "last": 1.2117234010100002, "allow": 1.2716059271100002, "although": 1.14968498805, "scienc": 2.31969608416, "actual": 1.87482286254, "probabl": 2.64555907349, "spark": 8.360189573460001, "larger": 2.2407904022599996, "infograph": 690.260869565, "which": 1.005191845, "featur": 1.52712581762, "such": 1.06151377374, "ident": 2.80792359392, "sequencebas": 1443.27272727, "length": 3.69123459661, "appear": 1.3214582986499999, "other": 1.00992366412, "algorithm": 27.9507042254, "mix": 2.7852631578900002, "abcd": 835.5789473680001, "valu": 2.2777618364400003, "activewizard": 1443.27272727, "develop": 1.1955719557200002, "observ": 2.22446406053, "becaus": 1.1495184997499999, "sever": 1.07241286139, "those": 1.19548192771, "explor": 3.39593582888, "like": 1.14918566775, "deriv": 2.78379800105, "text": 3.12827586207, "some": 1.04036697248, "letter": 2.42715181165, "should": 1.6643254009900001, "area": 1.3881262568900001, "aebcdnlp": 1443.27272727, "process": 1.69524826482, "longest": 6.75287111867, "separ": 1.6012102874399998, "that": 1.00398406375, "play": 1.46390041494, "includ": 1.0190641247799999, "classic": 2.4087391898, "team": 2.2748244734200003, "when": 1.02076769755, "set": 1.18707940781, "phrase": 6.18465134398, "ani": 1.13383802314, "two": 1.01379310345, "rang": 1.7848229342299997, "time": 1.01127460348, "api": 84.44680851060001, "engin": 2.47135740971, "account": 1.94463498285, "bit": 8.33385826772, "similar": 1.37514075357, "project": 1.7534791252500002, "differ": 1.23654490225, "same": 1.11857958148, "medicin": 5.5355648535599995, "independ": 1.58950740889, "first": 1.00761614623, "most": 1.02096463023, "between": 1.03453668708, "for": 1.00031504001, "depend": 2.2411067193700003, "obvious": 6.44841592201, "all": 1.01146788991, "charact": 2.51720310766, "with": 1.0011982089899998, "expertis": 20.0201765448, "situat": 2.06611140031, "think": 2.90715986083, "are": 1.02990593578, "despit": 1.60606980273, "almost": 1.53584212054, "case": 1.48498737256, "distanc": 3.4754816112099998, "hybrid": 12.630071599, "result": 1.14611608432, "section": 2.1284354471099998, "call": 1.0676529926, "bag": 15.8601398601, "more": 1.0171706817, "and": 1.00006299213, "veri": 1.25880114177, "these": 1.07415426252, "prepar": 2.43012398592, "cat": 10.5348374253, "cassandra": 128.032258065, "while": 1.0441988950299999, "semant": 39.1034482759, "focus": 2.01012914662, "librari": 2.68266306185, "compar": 1.8662278123900002, "kafka": 211.68, "map": 4.0728578758300005, "group": 1.20996875238, "can": 1.17626139142, "one": 1.00627495722, "littl": 1.5499365420299998, "describ": 1.47027227264, "way": 1.2190739461, "search": 3.2539454806299997, "onli": 1.0256476516600002, "each": 1.18974820144, "larg": 1.18574949585, "wordnumvec": 1443.27272727, "this": 1.00379362671, "thing": 2.4065484311099996, "genet": 10.2558139535, "common": 1.4025974025999999, "big": 2.7400759406299997, "comment": 3.05954904606, "data": 3.37643555934, "want": 1.99698113208, "note": 1.42449528937, "research": 1.9420183486200002, "method": 2.5714285714300003, "sequenc": 6.07112810707, "analyz": 9.68639414277, "rather": 1.55692850838, "machin": 4.02433460076, "into": 1.01502461479, "appl": 13.6980155306, "levenshtein": 1443.27272727, "worth": 5.210370856580001, "learn": 2.32275054865, "understand": 2.96858638743, "from": 1.00056721497, "taybcrd": 1443.27272727, "import": 1.3401992233700002, "hadoop": 1443.27272727, "what": 1.25343439128, "sheet": 8.60954446855, "choos": 4.17899447223, "use": 1.0296387573799999, "guess": 25.0410094637, "mention": 2.53894130817, "help": 1.39962972759, "exclus": 3.40906162766, "tokenbas": 1443.27272727, "measur": 2.41093394077, "often": 1.29452054795, "briefli": 4.8669527897, "symmetr": 30.5307692308, "nevertheless": 4.1988891827599994, "conclus": 4.84615384615, "nuanc": 48.2553191489, "pros": 141.75, "own": 1.17844418052}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Comparison of the Text Distance Metrics</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/01/comparison-text-distance-metrics.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comparison of the Text Distance Metrics Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/01/rhan-math-machine-learning-ebook.html\" rel=\"prev\" title=\"Math for Machine Learning\"/>\n<link href=\"https://www.kdnuggets.com/2019/01/five-best-data-visualization-libraries.html\" rel=\"next\" title=\"The Five Best Data Visualization Libraries\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2019/01/comparison-text-distance-metrics.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=89114\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2019/01/comparison-text-distance-metrics.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-89114 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 7-Jan, 2019  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/01/index.html\">Jan</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/01/tutorials.html\">Tutorials, Overviews</a> \u00bb Comparison of the Text Distance Metrics (\u00a0<a href=\"/2019/n02.html\">19:n02</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Comparison of the Text Distance Metrics</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/01/rhan-math-machine-learning-ebook.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/01/five-best-data-visualization-libraries.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/metrics\" rel=\"tag\">Metrics</a>, <a href=\"https://www.kdnuggets.com/tag/nlp\" rel=\"tag\">NLP</a>, <a href=\"https://www.kdnuggets.com/tag/text-analytics\" rel=\"tag\">Text Analytics</a></div>\n<br/>\n<p class=\"excerpt\">\n     There are many different approaches of how to compare two texts (strings of characters). Each has its own advantages and disadvantages and is good only for a range of specific use cases.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://activewizards.com/\" rel=\"noopener noreferrer\" target=\"_blank\">ActiveWizards</a></b></p>\n<p><img alt=\"Header image\" class=\"aligncenter\" src=\"https://activewizards.com/assets/components/phpthumbof/cache/header-image-text-distance-infographics-web-linkedin-1422.2b957ce2a9ae7fb357d442e4e06c6b3d.jpg\" width=\"99%\"/></p>\n<p>Measuring the similarity between texts is a common task in many applications. It is useful in classic NLP fields like search, as well as in such far from NLP areas as medicine and genetics. There are many different approaches of how to compare two texts (strings of characters). Each has its own advantages and disadvantages and is good only for a range of specific use cases. To help you better understand the differences between the approaches we have prepared the following infographic.</p>\n<p><a href=\"https://activewizards.com/content/blog/Comparison-of-the-Text-Distance-Metrics/text-distance-infographics-table05-(1).png\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"Text distance infographic\" class=\"aligncenter\" src=\"https://activewizards.com/content/blog/Comparison-of-the-Text-Distance-Metrics/text-distance-infographics-table05-(1).png\" width=\"99%\"/></a></p>\n<p>We highlight 6 large groups of text distance metrics: edit-based similarities, token-based similarities, sequence-based, phonetic, simple, and hybrid. The core features of each category are described in the infographic. Here, we just want to explain some nuances.</p>\n<p>Edit based similarities are simple to understand. The more atomic operations you should perform to convert one string into another, the larger distance between them is observed. For example, the distance between words \u201chat\u201d and \u201ccat\u201d is 1, and the distance between \u201cmap\u201d and \u201ccat\u201d is 2. It is obvious that this approach is applicable only for words and short phrases but useless for longer texts. Also, this approach cannot take into account the semantic meaning of the words, because it compares only the characters. In the same time, we understand, that semantic distance between \u201clemon\u201d and \u201capple\u201d is less than between \u201clemon\u201d and \u201cmoon\u201d despite the fact that edit distance between \u201clemon\u201d and \u201capple\u201d may be greater than the distance between \u201clemon\u201d and \u201cmoon\u201d. That\u2019s why edit based distances are used in the applications, where semantic meaning is not such important as similarity in writing. It is also worth to say that the most prominent edit based algorithm is the Levenshtein algorithm. Very often people think about edit based distances as about Levenshtein similarity.</p>\n<p>Token-based similarities are a little bit more complex. Those analyze text as a set of tokens (words). This allows to take into account the semantic meaning of the words and to process large texts. Semantic meaning plays a role here because you can use word vector representations (word2vec) to describe each word in the text and then compare vectors. Also, using a bag of words approach and TF-IDF method allows comparing the semantic similarity between entire texts (although not between independent words). Token-based similarities are very widely used in different areas. Probably, it is the most well-known approach to work with texts. Nevertheless, it is not applicable to a range of use cases.</p>\n<p>The next group of distance is sequence based distances. It is somewhat similar to edit based distances, but not completely the same. You may be guessing what is the difference between comparing strings on the basis of the longest common subsequence and the longest common substring. Longest common subsequence doesn\u2019t take into account if there are some letters between characters from subsequence. For example, consider sets of letters \u201caebcdnlp\u201d and \u201ctaybcrd\u201d. The longest common subsequence between these words is \u201cabcd\u201d, while the longest common substring is only \u201cbc\u201d. The fields of application for these approaches are slightly different from edit based approaches, but the pros and cons are almost the same.</p>\n<p>Phonetic algorithms form a separate group of methods for string comparison. In this case, it is not even string comparison but rather an audio comparison. These algorithms compare words based on how they are pronounced. It is hard to compare long texts in this way. The short sentences or phrases are the maximum threshold for these algorithms. Also, they cannot take into account the semantic meaning. Nevertheless, there are situations when these methods are indispensable.</p>\n<p>The next several algorithms we want to mention are very simple to understand and use, so they form a group of methods which can be called as \u201cSimple\u201d. These methods can compare strings based on the similar prefixes or postfixes. Also, there are algorithms called \u201clength distance\u201d and \u201cidentity similarity\u201d. The first ones compare strings by counting the number of characters in each of them and the second algorithms simply check if these strings are completely the same or not. As you can see, all these algorithms are very primitive and can be used only in very specific situations.</p>\n<p>The last group we want to describe is hybrid algorithms. There is only one method: Monge-Elkan. It is a mix of edit based and token based distance. You can choose any edit based algorithm. The Monge-Elkan method compares each word in one text with each word in another text (so it is token-based), but when comparing words it uses some of the edit based methods (so it is edit-based at the same time). Then, distances between words are aggregated to derive a single value of the distance between the two texts. One important thing here is that this method is not symmetrical. This means that the result of comparison depends on what string you take as the first string and what as the second one. We describe this situation in the cons section of our infographic, but actually, it is not a problem for all applications. In other words, there are many use cases where symmetry is not important.</p>\n<p>\u00a0</p>\n<h3>Conclusion</h3>\n<p>\u00a0<br>\nIn this article, we have briefly described some interesting and important notes about different approaches to strings comparison. To understand and remember all these things better, please explore our infographics. There are no good or bad approaches, all of them appeared due to the need of using in particular cases. So, when you need to compare two strings, firstly think about what is the final result you expect to have, and then choose the right metric. Use our infographics as a cheat sheet!</br></p>\n<p>\u00a0<br>\n<b><a href=\"https://activewizards.com/\" rel=\"noopener noreferrer\" target=\"_blank\">ActiveWizards</a></b> is a team of data scientists and engineers, focused exclusively on data projects (big data, data science, machine learning, data visualizations). Areas of core expertise include data science (research, machine learning algorithms, visualizations and engineering), data visualizations ( d3.js, Tableau and other), big data engineering (Hadoop, Spark, Kafka, Cassandra, HBase, MongoDB and other), and data intensive web applications development (RESTful APIs, Flask, Django, Meteor).</br></p>\n<p><a href=\"https://activewizards.com/blog/comparison-of-the-text-distance-metrics/\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2018/07/comparison-top-6-python-nlp-libraries.html\">Comparison of Top 6 Python NLP Libraries</a>\n<li><a href=\"/2018/06/top-20-python-libraries-data-science-2018.html\">Top 20 Python Libraries for Data Science in 2018</a>\n<li><a href=\"/2018/05/top-20-r-libraries-data-science-2018.html\">Top 20 R Libraries for Data Science in 2018</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/01/rhan-math-machine-learning-ebook.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/01/five-best-data-visualization-libraries.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/01/index.html\">Jan</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/01/tutorials.html\">Tutorials, Overviews</a> \u00bb Comparison of the Text Distance Metrics (\u00a0<a href=\"/2019/n02.html\">19:n02</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556331526\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.614 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 22:18:46 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "activewizard", "measur", "the", "similar", "between", "text", "common", "task", "mani", "applic", "use", "classic", "field", "like", "search", "well", "such", "far", "from", "area", "medicin", "and", "genet", "there", "are", "mani", "differ", "approach", "how", "compar", "two", "text", "string", "charact", "each", "has", "own", "advantag", "and", "disadvantag", "and", "good", "onli", "for", "rang", "specif", "use", "case", "help", "better", "understand", "the", "differ", "between", "the", "approach", "have", "prepar", "the", "follow", "infograph", "highlight", "num", "larg", "group", "text", "distanc", "metric", "editbas", "similar", "tokenbas", "similar", "sequencebas", "phonet", "simpl", "and", "hybrid", "the", "core", "featur", "each", "categori", "are", "describ", "the", "infograph", "here", "just", "want", "explain", "some", "nuanc", "edit", "base", "similar", "are", "simpl", "understand", "the", "more", "atom", "oper", "should", "perform", "convert", "one", "string", "into", "anoth", "the", "larger", "distanc", "between", "them", "observ", "for", "exampl", "the", "distanc", "between", "word", "hat", "and", "cat", "num", "and", "the", "distanc", "between", "map", "and", "cat", "num", "obvious", "that", "this", "approach", "applic", "onli", "for", "word", "and", "short", "phrase", "but", "useless", "for", "longer", "text", "also", "this", "approach", "can", "not", "take", "into", "account", "the", "semant", "mean", "the", "word", "becaus", "compar", "onli", "the", "charact", "the", "same", "time", "understand", "that", "semant", "distanc", "between", "lemon", "and", "appl", "less", "than", "between", "lemon", "and", "moon", "despit", "the", "fact", "that", "edit", "distanc", "between", "lemon", "and", "appl", "may", "greater", "than", "the", "distanc", "between", "lemon", "and", "moon", "that", "whi", "edit", "base", "distanc", "are", "use", "the", "applic", "where", "semant", "mean", "not", "such", "import", "similar", "write", "also", "worth", "say", "that", "the", "most", "promin", "edit", "base", "algorithm", "the", "levenshtein", "algorithm", "veri", "often", "peopl", "think", "about", "edit", "base", "distanc", "about", "levenshtein", "similar", "tokenbas", "similar", "are", "littl", "bit", "more", "complex", "those", "analyz", "text", "set", "token", "word", "this", "allow", "take", "into", "account", "the", "semant", "mean", "the", "word", "and", "process", "larg", "text", "semant", "mean", "play", "role", "here", "becaus", "can", "use", "word", "vector", "represent", "wordnumvec", "describ", "each", "word", "the", "text", "and", "then", "compar", "vector", "also", "use", "bag", "word", "approach", "and", "method", "allow", "compar", "the", "semant", "similar", "between", "entir", "text", "although", "not", "between", "independ", "word", "tokenbas", "similar", "are", "veri", "wide", "use", "differ", "area", "probabl", "the", "most", "wellknown", "approach", "work", "with", "text", "nevertheless", "not", "applic", "rang", "use", "case", "the", "next", "group", "distanc", "sequenc", "base", "distanc", "somewhat", "similar", "edit", "base", "distanc", "but", "not", "complet", "the", "same", "may", "guess", "what", "the", "differ", "between", "compar", "string", "the", "basi", "the", "longest", "common", "subsequ", "and", "the", "longest", "common", "substr", "longest", "common", "subsequ", "take", "into", "account", "there", "are", "some", "letter", "between", "charact", "from", "subsequ", "for", "exampl", "consid", "set", "letter", "aebcdnlp", "and", "taybcrd", "the", "longest", "common", "subsequ", "between", "these", "word", "abcd", "while", "the", "longest", "common", "substr", "onli", "the", "field", "applic", "for", "these", "approach", "are", "slight", "differ", "from", "edit", "base", "approach", "but", "the", "pros", "and", "con", "are", "almost", "the", "same", "phonet", "algorithm", "form", "separ", "group", "method", "for", "string", "comparison", "this", "case", "not", "even", "string", "comparison", "but", "rather", "audio", "comparison", "these", "algorithm", "compar", "word", "base", "how", "they", "are", "pronounc", "hard", "compar", "long", "text", "this", "way", "the", "short", "sentenc", "phrase", "are", "the", "maximum", "threshold", "for", "these", "algorithm", "also", "they", "can", "not", "take", "into", "account", "the", "semant", "mean", "nevertheless", "there", "are", "situat", "when", "these", "method", "are", "indispens", "the", "next", "sever", "algorithm", "want", "mention", "are", "veri", "simpl", "understand", "and", "use", "they", "form", "group", "method", "which", "can", "call", "simpl", "these", "method", "can", "compar", "string", "base", "the", "similar", "prefix", "postfix", "also", "there", "are", "algorithm", "call", "length", "distanc", "and", "ident", "similar", "the", "first", "one", "compar", "string", "count", "the", "number", "charact", "each", "them", "and", "the", "second", "algorithm", "simpli", "check", "these", "string", "are", "complet", "the", "same", "not", "can", "see", "all", "these", "algorithm", "are", "veri", "primit", "and", "can", "use", "onli", "veri", "specif", "situat", "the", "last", "group", "want", "describ", "hybrid", "algorithm", "there", "onli", "one", "method", "mongeelkan", "mix", "edit", "base", "and", "token", "base", "distanc", "can", "choos", "ani", "edit", "base", "algorithm", "the", "mongeelkan", "method", "compar", "each", "word", "one", "text", "with", "each", "word", "anoth", "text", "tokenbas", "but", "when", "compar", "word", "use", "some", "the", "edit", "base", "method", "editbas", "the", "same", "time", "then", "distanc", "between", "word", "are", "aggreg", "deriv", "singl", "valu", "the", "distanc", "between", "the", "two", "text", "one", "import", "thing", "here", "that", "this", "method", "not", "symmetr", "this", "mean", "that", "the", "result", "comparison", "depend", "what", "string", "take", "the", "first", "string", "and", "what", "the", "second", "one", "describ", "this", "situat", "the", "con", "section", "our", "infograph", "but", "actual", "not", "problem", "for", "all", "applic", "other", "word", "there", "are", "mani", "use", "case", "where", "symmetri", "not", "import", "conclus", "this", "articl", "have", "briefli", "describ", "some", "interest", "and", "import", "note", "about", "differ", "approach", "string", "comparison", "understand", "and", "rememb", "all", "these", "thing", "better", "pleas", "explor", "our", "infograph", "there", "are", "good", "bad", "approach", "all", "them", "appear", "due", "the", "need", "use", "particular", "case", "when", "need", "compar", "two", "string", "first", "think", "about", "what", "the", "final", "result", "expect", "have", "and", "then", "choos", "the", "right", "metric", "use", "our", "infograph", "cheat", "sheet", "activewizard", "team", "data", "scientist", "and", "engin", "focus", "exclus", "data", "project", "big", "data", "data", "scienc", "machin", "learn", "data", "visual", "area", "core", "expertis", "includ", "data", "scienc", "research", "machin", "learn", "algorithm", "visual", "and", "engin", "data", "visual", "dnumj", "tableau", "and", "other", "big", "data", "engin", "hadoop", "spark", "kafka", "cassandra", "hbase", "mongodb", "and", "other", "and", "data", "intens", "web", "applic", "develop", "rest", "api", "flask", "django", "meteor", "origin", "repost", "with", "permiss", "relat", "comparison", "top", "num", "python", "librari", "top", "num", "python", "librari", "for", "data", "scienc", "num", "top", "num", "librari", "for", "data", "scienc", "num"], "timestamp_scraper": 1556367441.297949, "title": "Comparison of the Text Distance Metrics", "read_time": 311.09999999999997, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://activewizards.com/\" rel=\"noopener noreferrer\" target=\"_blank\">ActiveWizards</a></b></p>\n<p><img alt=\"Header image\" class=\"aligncenter\" src=\"https://activewizards.com/assets/components/phpthumbof/cache/header-image-text-distance-infographics-web-linkedin-1422.2b957ce2a9ae7fb357d442e4e06c6b3d.jpg\" width=\"99%\"/></p>\n<p>Measuring the similarity between texts is a common task in many applications. It is useful in classic NLP fields like search, as well as in such far from NLP areas as medicine and genetics. There are many different approaches of how to compare two texts (strings of characters). Each has its own advantages and disadvantages and is good only for a range of specific use cases. To help you better understand the differences between the approaches we have prepared the following infographic.</p>\n<p><a href=\"https://activewizards.com/content/blog/Comparison-of-the-Text-Distance-Metrics/text-distance-infographics-table05-(1).png\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"Text distance infographic\" class=\"aligncenter\" src=\"https://activewizards.com/content/blog/Comparison-of-the-Text-Distance-Metrics/text-distance-infographics-table05-(1).png\" width=\"99%\"/></a></p>\n<p>We highlight 6 large groups of text distance metrics: edit-based similarities, token-based similarities, sequence-based, phonetic, simple, and hybrid. The core features of each category are described in the infographic. Here, we just want to explain some nuances.</p>\n<p>Edit based similarities are simple to understand. The more atomic operations you should perform to convert one string into another, the larger distance between them is observed. For example, the distance between words \u201chat\u201d and \u201ccat\u201d is 1, and the distance between \u201cmap\u201d and \u201ccat\u201d is 2. It is obvious that this approach is applicable only for words and short phrases but useless for longer texts. Also, this approach cannot take into account the semantic meaning of the words, because it compares only the characters. In the same time, we understand, that semantic distance between \u201clemon\u201d and \u201capple\u201d is less than between \u201clemon\u201d and \u201cmoon\u201d despite the fact that edit distance between \u201clemon\u201d and \u201capple\u201d may be greater than the distance between \u201clemon\u201d and \u201cmoon\u201d. That\u2019s why edit based distances are used in the applications, where semantic meaning is not such important as similarity in writing. It is also worth to say that the most prominent edit based algorithm is the Levenshtein algorithm. Very often people think about edit based distances as about Levenshtein similarity.</p>\n<p>Token-based similarities are a little bit more complex. Those analyze text as a set of tokens (words). This allows to take into account the semantic meaning of the words and to process large texts. Semantic meaning plays a role here because you can use word vector representations (word2vec) to describe each word in the text and then compare vectors. Also, using a bag of words approach and TF-IDF method allows comparing the semantic similarity between entire texts (although not between independent words). Token-based similarities are very widely used in different areas. Probably, it is the most well-known approach to work with texts. Nevertheless, it is not applicable to a range of use cases.</p>\n<p>The next group of distance is sequence based distances. It is somewhat similar to edit based distances, but not completely the same. You may be guessing what is the difference between comparing strings on the basis of the longest common subsequence and the longest common substring. Longest common subsequence doesn\u2019t take into account if there are some letters between characters from subsequence. For example, consider sets of letters \u201caebcdnlp\u201d and \u201ctaybcrd\u201d. The longest common subsequence between these words is \u201cabcd\u201d, while the longest common substring is only \u201cbc\u201d. The fields of application for these approaches are slightly different from edit based approaches, but the pros and cons are almost the same.</p>\n<p>Phonetic algorithms form a separate group of methods for string comparison. In this case, it is not even string comparison but rather an audio comparison. These algorithms compare words based on how they are pronounced. It is hard to compare long texts in this way. The short sentences or phrases are the maximum threshold for these algorithms. Also, they cannot take into account the semantic meaning. Nevertheless, there are situations when these methods are indispensable.</p>\n<p>The next several algorithms we want to mention are very simple to understand and use, so they form a group of methods which can be called as \u201cSimple\u201d. These methods can compare strings based on the similar prefixes or postfixes. Also, there are algorithms called \u201clength distance\u201d and \u201cidentity similarity\u201d. The first ones compare strings by counting the number of characters in each of them and the second algorithms simply check if these strings are completely the same or not. As you can see, all these algorithms are very primitive and can be used only in very specific situations.</p>\n<p>The last group we want to describe is hybrid algorithms. There is only one method: Monge-Elkan. It is a mix of edit based and token based distance. You can choose any edit based algorithm. The Monge-Elkan method compares each word in one text with each word in another text (so it is token-based), but when comparing words it uses some of the edit based methods (so it is edit-based at the same time). Then, distances between words are aggregated to derive a single value of the distance between the two texts. One important thing here is that this method is not symmetrical. This means that the result of comparison depends on what string you take as the first string and what as the second one. We describe this situation in the cons section of our infographic, but actually, it is not a problem for all applications. In other words, there are many use cases where symmetry is not important.</p>\n<p>\u00a0</p>\n<h3>Conclusion</h3>\n<p>\u00a0<br>\nIn this article, we have briefly described some interesting and important notes about different approaches to strings comparison. To understand and remember all these things better, please explore our infographics. There are no good or bad approaches, all of them appeared due to the need of using in particular cases. So, when you need to compare two strings, firstly think about what is the final result you expect to have, and then choose the right metric. Use our infographics as a cheat sheet!</br></p>\n<p>\u00a0<br>\n<b><a href=\"https://activewizards.com/\" rel=\"noopener noreferrer\" target=\"_blank\">ActiveWizards</a></b> is a team of data scientists and engineers, focused exclusively on data projects (big data, data science, machine learning, data visualizations). Areas of core expertise include data science (research, machine learning algorithms, visualizations and engineering), data visualizations ( d3.js, Tableau and other), big data engineering (Hadoop, Spark, Kafka, Cassandra, HBase, MongoDB and other), and data intensive web applications development (RESTful APIs, Flask, Django, Meteor).</br></p>\n<p><a href=\"https://activewizards.com/blog/comparison-of-the-text-distance-metrics/\" rel=\"noopener noreferrer\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2018/07/comparison-top-6-python-nlp-libraries.html\">Comparison of Top 6 Python NLP Libraries</a>\n<li><a href=\"/2018/06/top-20-python-libraries-data-science-2018.html\">Top 20 Python Libraries for Data Science in 2018</a>\n<li><a href=\"/2018/05/top-20-r-libraries-data-science-2018.html\">Top 20 R Libraries for Data Science in 2018</a>\n</li></li></li></ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n</div> ", "website": "kdnuggets"}