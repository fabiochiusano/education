{"content": "comments By Louis Dorard, PAPIs.io . Something is wrong in the way ML is being taught to developers. Most ML teachers like to explain how different learning algorithms work and spend tons of time on that. For a beginner who wants to start using ML, being able to choose an algorithm and set parameters looks like the #1 barrier to entry, and knowing how the different techniques work seems to be a key requirement to remove that barrier. Many practitioners argue however that you only need one technique to get started: random forests. Other techniques may sometimes outperform them, but in general, random forests are the most likely to perform best on a variety of problems (see Do we Need Hundreds of Classifiers to Solve Real World Classification Problems?), which makes them more than enough for a developer just getting started with ML. I would further argue that you don\u2019t need to know all the inner workings of (random forest) learning algorithms (and the simpler decision tree learning algorithms that they use). A high-level understanding of the algorithms, the intuitions behind them, their main parameters, their possibilities and limitations is enough. You\u2019ll know enough to start practicing and experimenting with ML, as there are great open source ML libraries (such as scikit-learn in Python) and cloud platforms that make it super easy to create predictive models from data. So, if we just give an overview of only one technique, what else can we teach? Dataiku sticker (seen at PAPIs). Their Data Science Studio makes it easy to experiment with and deploy ML models. Deploying ML models into production It turns out that, when using ML in real-world applications, most of the work takes place before and after the learning. ML instructors rarely provide an end-to-end view of what it takes to use ML in a predictive application that\u2019s deployed in production. They just explain one part of the problem, then they assume you\u2019ll figure out the rest and you\u2019ll connect the dots on your own. Like for instance, connecting the dots between the ML libraries you were taught to use in Python, R, or Matlab, and your application in production which is developed in Ruby, Swift, C++, etc. When I started my PhD almost 10 years ago, I had a friend at Yahoo who had just finished his and who was explaining to me how Software Engineers would re-write the ML researchers\u2019 code into the language used in production. As Dataiku\u2019s Florian Douetteau showed at PAPIs Connect last year, the cost of deploying Proofs of Concept into production could kill ML projects altogether. Deployment is such an important problem that he estimates top companies like Spotify and Facebook each invested more than $5M in their ML production platforms (counting 10\u201320 people dedicated to that, resources, infrastructure\u2026). Getting predictions from a model exposed as a REST API. Fortunately, today there are new and accessible solutions to this \u201clast-mile problem\u201d. They revolve around the use of REST (http) APIs. Models need to be exposed as APIs, and if scaling the number of predictions performed by a given model can be an issue, these APIs would be served on multiple endpoints with load balancers in front. Platforms-as-a service can help for that\u2014here is some info about Microsoft Azure ML\u2019s scaling capabilities , Amazon ML\u2019s , and Yhat\u2019s Analytics Load Balancer (which you can also run on your own private infrastructure/cloud). Some of these platforms allow you to use whatever ML library you want, others restrict you to their own proprietary ones. In my upcoming workshop , I\u2019ve chosen to use Azure to deploy models created with scikit-learn into APIs, and also to demonstrate how Amazon and BigML provide an even higher level of abstraction (while still providing accurate models) that can make them easier to work with in many cases. ML workflow Deployment is not the only post-learning challenge there is in real-world ML. You should also find appropriate ways to evaluate and monitor your models\u2019 performance/impact, before and after deployment. ML workflow by Azure . The ML workflow diagram above also presents some of the steps to take before learning a model, which are about preparing the right dataset for the algorithms to run on. Before actually running any algorithm you need to\u2026 Define the right ML problem to tackle for your organization Engineer features, i.e. find ways to represent the objects on which you\u2019ll be making predictions with ML Figure out when/how often you\u2019ll need to make predictions, and how much time you\u2019ll have for that (is there a way to do predictions in batches or do you absolutely need all your predictions to be real-time?) Collect data Prepare the actual dataset to run learning algorithms on, i.e. extract features from the \u201craw\u201d collected data and clean it Figure out when/how often you\u2019ll need to learn new/updated models, and how much time you\u2019ll have for that. Operational Machine Learning in 2 days What should be the purpose of an ML course for developers? It shouldn\u2019t just be about teaching something new and interesting and intellectually challenging, but also about making developers as operational as possible in their use of the new techniques they\u2019ve learnt. At PAPIs, we want to enable developers to improve their apps and create new value from data with Machine Learning. We\u2019re starting a new series of 2-day hands-on workshops in classroom settings and online . The 1st type of workshop we\u2019ve planned is an agnostic introduction to operational ML with open source and cloud platforms . Day 1 covers an intro to ML, the creation, operationalization, and evaluation of predictive models. Day 2 features model selection, ensembles, data preparation, a practical overview of advanced topics such as unsupervised learning and deep learning, and methodology for developing your own ML use case. We\u2019re using Python with libraries such as Pandas, scikit-learn, SKLL, and cloud platforms such as Microsoft Azure ML, Amazon ML, BigML and Indico. I think these platforms are great for many organizations and real-world use cases, but even if for some reason you\u2019d realize they may not be the perfect fit for you, I\u2019d still recommend using them for learning and practicing ML. ML-as-a-Service makes it much quicker to setup work environments (e.g. Azure ML has most popular libraries preinstalled and can run interactive Jupyter notebooks, which you can access from your browser) but also to experiment with ML with the higher levels of abstraction they provide (e.g. combining one-click clustering, anomaly detection, and classification models with BigML, or quickly featurizing text and images with Indico\u2019s Deep Learning API). Find out more information about PAPIs.io Operational Machine Learning with Open Source and Cloud Platforms 2-day workshops for developers - in-person and online - approached from the perspective of an application developer, providing an end-to-end view of ML integration into your applications. Bio: Louis Dorard is the author of Bootstrapping Machine Learning and co-founder of PAPIs.io . Original . Reposted with permission. Related : The Best Advice From Quora on \u2018How to Learn Machine Learning\u2019 Career Advice to Data Scientists \u2013 Go Make More Money When Good Advice Goes Bad", "title_html": "<h1 id=\"title\">What Developers Actually Need to Know About Machine Learning</h1> ", "url": "https://www.kdnuggets.com/2016/04/developers-need-know-about-machine-learning.html", "tfidf": {"tfidf": {"after": 2.04140414042, "real": 2.28103448276, "limit": 1.5186531471200002, "spotifi": 690.260869565, "shouldn": 1587.6, "fit": 3.37070063694, "new": 5.0894402770000005, "newupd": 1587.6, "organ": 3.2774566474, "panda": 111.802816901, "number": 1.10142916609, "experi": 5.61187698834, "etc": 4.2066772655, "dataset": 387.219512196, "classroom": 18.4390243902, "python": 168.8936170212, "unsupervis": 345.13043478300006, "product": 9.73589533932, "work": 6.69120539478, "tree": 4.127925117, "creation": 3.0601387818, "teach": 7.9718804921, "approach": 2.07556543339, "higher": 4.2437850842, "front": 2.32820061593, "know": 7.779810519450001, "their": 7.108353588350001, "scale": 7.493981590739999, "upcom": 13.853403141400001, "creat": 3.7478753541, "multipl": 2.74813917258, "how": 11.21752296357, "repost": 933.882352941, "present": 1.25551601423, "had": 2.0951501154799996, "hundr": 2.4698195395099996, "given": 1.35426085473, "interest": 1.60331246213, "deep": 7.2559414990799995, "beginn": 53.4545454545, "overview": 25.3610223642, "open": 3.7367017103399998, "purpos": 2.23416830847, "intro": 66.7058823529, "perform": 3.0627954085000004, "but": 4.06529671596, "demonstr": 2.64997496244, "need": 11.498098859279999, "classif": 16.134146341460003, "cost": 2.31935719503, "object": 2.3488681757700003, "studio": 4.9273743016800005, "mlasaservic": 1587.6, "applic": 17.1336067343, "integr": 2.8254137746900003, "level": 3.3088786994599997, "yahoo": 39.2, "has": 1.0436497502, "enough": 6.695908899210001, "also": 6.08859060402, "realworld": 4762.799999999999, "use": 14.414942603319998, "azur": 567.0, "resourc": 2.9487369985100003, "out": 5.30083472455, "model": 29.2683697656, "good": 1.51981619759, "concept": 2.65707112971, "cours": 2.15092805853, "browser": 68.1373390558, "absolut": 5.3472549680000006, "count": 3.48157894737, "learnt": 56.9032258065, "start": 7.600414904640001, "view": 3.2815212897799997, "not": 2.03134796238, "proof": 9.70415647922, "day": 3.55114822548, "yhat": 1587.6, "quick": 2.205, "easi": 10.5875291764, "jupyt": 1587.6, "numday": 2116.8, "then": 1.08657860516, "they": 7.21121277009, "turn": 1.3838912133899999, "last": 1.2117234010100002, "choos": 4.17899447223, "world": 1.11340206186, "scienc": 2.31969608416, "taught": 11.14105263158, "featur": 6.10850327048, "practic": 5.11304347827, "oneclick": 1587.6, "author": 1.4229631621399998, "provid": 6.07763570935, "plan": 1.5356935577500002, "valu": 2.2777618364400003, "softwar": 10.2624434389, "develop": 10.760147601480002, "entri": 3.9909502262400003, "such": 5.3075688687, "with": 16.019171343839997, "quicker": 55.5104895105, "some": 4.16146788992, "sourc": 5.09281437126, "collect": 3.28219971056, "invest": 4.16146788991, "super": 7.380753138080001, "expos": 10.07360406092, "cluster": 12.5007874016, "varieti": 2.2972073506, "platformsasa": 1587.6, "platform": 43.6325088339, "set": 2.37415881562, "info": 37.7102137767, "ani": 1.13383802314, "improv": 2.04376930999, "from": 7.00397050479, "bigml": 4762.799999999999, "privat": 2.02396736359, "matlab": 417.78947368400003, "teacher": 4.49363147467, "instanc": 3.2572835453400004, "els": 5.44444444444, "advic": 21.24353256021, "environ": 3.43561999567, "balanc": 8.90659186536, "for": 15.004725600150001, "predict": 46.66361854995, "proprietari": 41.2363636364, "workshop": 52.613090306400004, "friend": 2.20194174757, "quora": 1587.6, "seen": 1.61079545455, "practition": 18.8775267539, "assum": 2.9575260804799997, "ago": 6.05954198473, "are": 5.1495296789000005, "solut": 4.7278141751, "compani": 1.5523613963, "look": 1.9086318826599997, "popular": 1.50769230769, "intellectu": 5.963936889559999, "extract": 7.703056768560001, "postlearn": 1587.6, "think": 2.90715986083, "whatev": 7.6473988439300005, "combin": 1.69760479042, "num\u2013num": 1587.6, "forest": 14.68640148012, "dorard": 3175.2, "tackl": 19.8698372966, "remov": 2.0058117498400003, "revolv": 13.099009900999999, "wrong": 5.478260869570001, "even": 2.32922535212, "lastmil": 1587.6, "simpler": 17.9187358916, "rewrit": 32.6666666667, "place": 1.1004366812200002, "great": 2.53185551392, "papisio": 4762.799999999999, "step": 2.8279301745599996, "indico": 3175.2, "his": 1.0943682360200002, "librari": 13.41331530925, "handson": 1587.6, "scientist": 4.69426374926, "notebook": 40.1924050633, "into": 5.0751230739499995, "howev": 1.0945191313299998, "servic": 1.51300867245, "requir": 1.52844902282, "figur": 6.1030240902, "what": 3.7603031738399997, "papi": 2070.782608695, "allow": 1.2716059271100002, "workflow": 1107.627906978, "help": 1.39962972759, "main": 1.25303867403, "loui": 8.3911205074, "cover": 1.69380134429, "own": 4.71377672208, "chosen": 3.59266802444, "relat": 1.23750876919, "http": 3.17202797203, "who": 3.18837863169, "almost": 1.53584212054, "permiss": 6.280063291139999, "phd": 22.3605633803, "microsoft": 49.690140845, "were": 1.02458857696, "clean": 6.86975335353, "give": 1.3653250774, "paramet": 34.513043478200004, "onlin": 5.210370856580001, "much": 3.5826688731899994, "evalu": 13.901926444839999, "about": 5.324300757950001, "problem": 10.60048965054, "deploy": 59.34953271032, "scikitlearn": 4762.799999999999, "just": 6.6790071518500005, "perspect": 5.03520456708, "inperson": 1587.6, "cofound": 264.6, "topic": 5.457545548300001, "type": 2.0281042411900003, "anomali": 43.8563535912, "classifi": 5.2937645882, "would": 3.2486187845399996, "defin": 2.72830383227, "recommend": 3.9142011834300003, "rest": 1.9573418813999999, "ensembl": 16.746835443, "methodolog": 17.898534385599998, "intuit": 27.7068062827, "barrier": 17.33187772926, "enabl": 3.5421686747, "them": 5.4938057997000005, "load": 13.60994427776, "seri": 1.46511627907, "bad": 3.3944836433599996, "explain": 7.8014742014700005, "whenhow": 3175.2, "raw": 10.6478873239, "abl": 1.8208510150200001, "mani": 3.13280273631, "introduct": 2.7808723068799996, "the": 38.0, "kill": 2.09916699722, "monitor": 6.05723006486, "algorithm": 223.6056338032, "select": 2.02345144022, "restrict": 3.1062414400300002, "performanceimpact": 1587.6, "there": 4.16365066876, "endtoend": 3175.2, "connect": 5.653175074170001, "inform": 1.5753125620200001, "possibl": 2.8347468976, "amazon": 99.4321503132, "endpoint": 151.2, "operation": 453.6, "origin": 1.13724928367, "right": 2.8109065155799997, "spend": 4.15928739848, "setup": 34.1419354839, "take": 3.4188500466600003, "further": 1.3618116315, "code": 3.8807137619199996, "to\u2026": 1587.6, "interact": 4.4185917061, "than": 2.0655737705, "goe": 4.251740760580001, "languag": 2.29488291414, "issu": 1.43921675279, "cloud": 42.4775919732, "num": 5.0015752000500004, "money": 2.62283165373, "around": 1.21394708671, "seem": 2.29123971713, "batch": 35.6764044944, "dataiku": 3175.2, "research": 1.9420183486200002, "facebook": 28.5539568345, "may": 2.10403551786, "run": 7.7846425419, "fortun": 6.211267605630001, "peopl": 1.21320495186, "challeng": 5.11633902674, "that\u2014her": 1587.6, "machin": 20.121673003799998, "want": 5.99094339624, "which": 6.03115107, "behind": 2.0845588235299997, "bootstrap": 264.6, "actual": 3.74964572508, "easier": 7.84, "numst": 2.6297830047999997, "appropri": 4.31413043478, "like": 5.745928338750001, "estim": 2.34991119005, "abstract": 19.932203389839998, "other": 2.01984732824, "realiz": 4.89244992296, "techniqu": 18.646934460900003, "one": 4.02509982888, "show": 1.26703910615, "see": 1.27242125511, "diagram": 22.1731843575, "imag": 2.70137825421, "highlevel": 1587.6, "get": 5.35687774155, "still": 2.3732715449599997, "random": 21.5706521739, "abov": 1.90382539873, "dot": 37.7550535078, "should": 3.3286508019800003, "detect": 5.41288782816, "part": 1.04330682789, "analyt": 17.256521739100002, "access": 3.7469907953800003, "this": 1.00379362671, "find": 5.188235294129999, "time": 3.03382381044, "api": 337.78723404240003, "instructor": 22.583214793699998, "project": 1.7534791252500002, "differ": 2.4730898045, "most": 4.08385852092, "between": 1.03453668708, "swift": 13.963060685999999, "all": 2.02293577982, "top": 1.8387769284200002, "today": 1.74961428257, "ton": 10.5278514589, "reason": 1.72340425532, "someth": 6.56304257958, "solv": 7.26923076923, "case": 4.45496211768, "inner": 6.432739059969999, "that": 13.05179282875, "infrastructurecloud": 1587.6, "preinstal": 1587.6, "more": 4.0686827268, "and": 41.00258267733, "dedic": 3.20533010297, "career": 2.98757997742, "finish": 3.22879804759, "these": 3.22246278756, "prepar": 7.29037195776, "douetteau": 1587.6, "florian": 126.0, "capabl": 3.6580645161300005, "general": 1.1218202374200001, "could": 1.2043695949, "realtim": 429.081081081, "befor": 4.40144164124, "comment": 3.05954904606, "serv": 1.4668760972, "can": 8.23382973994, "make": 9.686394142740001, "way": 4.8762957844, "onli": 3.0769429549800007, "each": 1.18974820144, "often": 2.5890410959, "key": 2.28005170185, "infrastructure\u2026": 1587.6, "accur": 5.768895348840001, "advanc": 1.9997480791, "data": 23.63504891538, "oper": 6.21917539908, "perfect": 4.48601299802, "best": 3.1657028913200005, "sometim": 1.7126213592200001, "bio": 42.336000000000006, "sticker": 69.327510917, "repres": 1.46972782818, "outperform": 82.2590673575, "text": 3.12827586207, "understand": 2.96858638743, "import": 1.3401992233700002, "decis": 2.16, "engin": 4.94271481942, "app": 35.837471783299996, "have": 2.0297896822799997, "while": 1.0441988950299999, "rubi": 41.2363636364, "year": 2.0970873786400004, "rare": 2.7259615384599996, "agnost": 63.504, "altogeth": 10.8147138965, "learn": 39.48675932705, "when": 3.0623030926499997, "argu": 5.35537190082}, "logtfidf": {"after": 0.040981389296199995, "real": 0.824629060574, "limit": 0.41782385463, "spotifi": 6.5370695979699995, "shouldn": 7.369978720910001, "fit": 1.2151206268899999, "new": 0.08864973425549999, "newupd": 7.369978720910001, "organ": 0.9878410573399999, "panda": 4.7167367562999996, "number": 0.0966085784186, "experi": 1.878818861799, "etc": 1.4366730879700003, "dataset": 10.53168913328, "classroom": 2.9144693094800003, "python": 12.09197022888, "unsupervis": 5.843922417409999, "product": 2.904360819216, "work": 0.654207403638, "tree": 1.41777488775, "creation": 1.11846026847, "teach": 2.76554646144, "approach": 0.7302336145810001, "higher": 1.50461679799, "front": 0.845095701382, "know": 2.8587590831939997, "their": 0.10752353585890001, "scale": 2.64190612656, "upcom": 2.62853091663, "creat": 0.667730455542, "multipl": 1.01092401812, "how": 3.30096869851, "repost": 6.83935046985, "present": 0.227546654799, "had": 0.0929560488222, "hundr": 0.904145087046, "given": 0.303255810831, "interest": 0.47207177798199995, "deep": 2.5773469396, "beginn": 3.9788316751, "overview": 5.08013252448, "open": 0.658773114087, "purpos": 0.803869037322, "intro": 4.20029314023, "perform": 0.85236170116, "but": 0.0647694882876, "demonstr": 0.9745501918189999, "need": 2.901921307536, "classif": 4.17558147258, "cost": 0.84129007618, "object": 0.853933584803, "studio": 1.5948062501700002, "mlasaservic": 7.369978720910001, "applic": 6.15801964245, "integr": 1.03865482279, "level": 1.006924379886, "yahoo": 3.6686767468, "has": 0.0427239448548, "enough": 2.408653317507, "also": 0.0879429468, "realworld": 22.10993616273, "use": 0.4089122762424, "azur": 23.65460695645, "resourc": 1.08137694258, "out": 0.2921319545965, "model": 10.324301023554002, "good": 0.418589404907, "concept": 0.977224437103, "cours": 0.765899404133, "browser": 4.22152536034, "absolut": 1.67658333914, "count": 1.24748591139, "learnt": 4.04135203208, "start": 1.418660215746, "view": 0.9903198843459999, "not": 0.031104826015, "proof": 2.27255429674, "day": 0.5059761189510001, "yhat": 7.369978720910001, "quick": 0.790727508899, "easi": 3.3330592702999997, "jupyt": 7.369978720910001, "numday": 13.929027225599999, "then": 0.08303386523089999, "they": 0.20808896337320001, "turn": 0.324899251064, "last": 0.19204364461100001, "choos": 1.43007066072, "world": 0.107420248621, "scienc": 0.841436178891, "taught": 3.4349790812800003, "featur": 1.693549672568, "practic": 1.5995475926009999, "oneclick": 7.369978720910001, "author": 0.35274143130999996, "provid": 0.9758892216250001, "plan": 0.428982108147, "valu": 0.823193310148, "softwar": 2.32849096333, "develop": 1.607622254217, "entri": 1.38402935449, "such": 0.29847988903, "with": 0.01915986741424, "quicker": 4.01657200308, "some": 0.158294036258, "sourc": 1.587654932253, "collect": 0.99073332104, "invest": 1.42586787018, "super": 1.9988756846400002, "expos": 3.2335427258599996, "cluster": 2.52579163445, "varieti": 0.8316941898119999, "platformsasa": 7.369978720910001, "platform": 12.80924637244, "set": 0.342992022578, "info": 3.6299309802199997, "ani": 0.125608358366, "improv": 0.7147958039319999, "from": 0.0039693791820619995, "bigml": 22.10993616273, "privat": 0.705059626587, "matlab": 6.0349776541799995, "teacher": 1.5026611665399998, "instanc": 1.18089357972, "els": 1.6945957207700002, "advic": 5.87232063081, "environ": 1.2341974030299998, "balanc": 2.9872889620999996, "for": 0.004724855930955001, "predict": 14.811662139209998, "proprietari": 3.7193204796199995, "workshop": 10.306682371239999, "friend": 0.7893395836239999, "quora": 7.369978720910001, "seen": 0.47672812813, "practition": 2.93797215393, "assum": 1.08435313525, "ago": 1.80163421715, "are": 0.1473373679135, "solut": 1.55346297627, "compani": 0.439777253097, "look": 0.6463866936, "popular": 0.41058020877499996, "intellectu": 1.78573081495, "extract": 2.04161723301, "postlearn": 7.369978720910001, "think": 1.06717661175, "whatev": 2.0343655696200003, "combin": 0.529218310751, "num\u2013num": 7.369978720910001, "forest": 4.7649291228, "dorard": 14.739957441820001, "tackl": 2.98920286814, "remov": 0.6960488415880001, "revolv": 2.57253664727, "wrong": 1.70078769102, "even": 0.304777129668, "lastmil": 7.369978720910001, "simpler": 2.8858468633, "rewrit": 3.48635519, "place": 0.0957070839572, "great": 0.471610516158, "papisio": 22.10993616273, "step": 1.03954505698, "indico": 14.739957441820001, "his": 0.0901772433641, "librari": 4.934049904715, "handson": 7.369978720910001, "scientist": 1.54634128444, "notebook": 3.693678049, "into": 0.0745643161435, "howev": 0.0903151173475, "servic": 0.41410016674500005, "requir": 0.424253510675, "figur": 2.1305163364800004, "what": 0.677661890481, "papi": 19.61120879391, "allow": 0.24028061118900002, "workflow": 17.73409109463, "help": 0.336207721344, "main": 0.225571540588, "loui": 2.8680537674599997, "cover": 0.526975319156, "own": 0.656780309684, "chosen": 1.27889510877, "relat": 0.21310030165399999, "http": 1.15437112215, "who": 0.1827006989577, "almost": 0.42907884333400004, "permiss": 1.8373800586400002, "phd": 3.10729884387, "microsoft": 6.42531871906, "were": 0.024291143681099997, "clean": 1.9271282036300001, "give": 0.311392552224, "paramet": 5.696380287719999, "onlin": 1.915007708714, "much": 0.5324871879030001, "evalu": 3.8777604862599997, "about": 0.31421738737300003, "problem": 3.414844345638, "deploy": 16.03202164712, "scikitlearn": 22.10993616273, "just": 1.447657170545, "perspect": 1.61645415436, "inperson": 7.369978720910001, "cofound": 5.57821925168, "topic": 1.6969991554100001, "type": 0.707101485387, "anomali": 3.78091960208, "classifi": 1.6665296351499999, "would": 0.23885288389409998, "defin": 1.00368010925, "recommend": 1.36461126863, "rest": 0.671587369833, "ensembl": 2.81820931165, "methodolog": 2.8847188315900003, "intuit": 3.3216780971900004, "barrier": 4.3188005373400005, "enabl": 1.26473915954, "them": 0.47091663454649996, "load": 3.83530708376, "seri": 0.38193461069799994, "bad": 1.2221516561799999, "explain": 2.867101282074, "whenhow": 14.739957441820001, "raw": 2.36536149914, "abl": 0.599303982475, "mani": 0.1299472743663, "introduct": 1.02276465794, "the": 0.0, "kill": 0.741540598047, "monitor": 1.80125261058, "algorithm": 26.64353916144, "select": 0.704804687133, "restrict": 1.13341345513, "performanceimpact": 7.369978720910001, "there": 0.160391571702, "endtoend": 14.739957441820001, "connect": 1.9008151760460001, "inform": 0.454453704662, "possibl": 0.697610949782, "amazon": 10.50258964947, "endpoint": 5.01860346375, "operation": 6.117215752409999, "origin": 0.128612437587, "right": 0.68071970834, "spend": 1.42534376116, "setup": 3.5305264083199996, "take": 0.392075886591, "further": 0.308815895297, "code": 1.35601909597, "to\u2026": 7.369978720910001, "interact": 1.4858210267899998, "than": 0.0645217244364, "goe": 1.4473284897999998, "languag": 0.8306818244059999, "issu": 0.364099043934, "cloud": 9.45072931232, "num": 0.0015749519769850003, "money": 0.964254518011, "around": 0.19387710578200001, "seem": 0.829093032276, "batch": 3.5744895317400003, "dataiku": 14.739957441820001, "research": 0.663727818138, "facebook": 3.3517955196499996, "may": 0.10141999056880001, "run": 2.213574877695, "fortun": 1.8263649984099999, "peopl": 0.193265578473, "challeng": 1.8785839377900002, "that\u2014her": 7.369978720910001, "machin": 6.9617979031, "want": 2.0749098187649997, "which": 0.03107048307258, "behind": 0.7345572374320001, "bootstrap": 5.57821925168, "actual": 1.257028363296, "easier": 2.05923883436, "numst": 0.966901335107, "appropri": 1.4618957827399999, "like": 0.6952678827250001, "estim": 0.854377535975, "abstract": 4.59837900798, "other": 0.01974949583952, "realiz": 1.5876931847600002, "techniqu": 6.58121924035, "one": 0.025021406582, "show": 0.236682766013, "see": 0.240921585492, "diagram": 3.09888364694, "imag": 0.99376210729, "highlevel": 7.369978720910001, "get": 1.739307017346, "still": 0.34224444285800004, "random": 5.9181642195299995, "abov": 0.643865229816, "dot": 5.87594430786, "should": 1.018839753516, "detect": 1.68878274493, "part": 0.04239531098280001, "analyt": 2.8481901438599997, "access": 1.255611765432, "this": 0.0037864490525, "find": 1.643343990864, "time": 0.0336345565878, "api": 17.74448740428, "instructor": 3.11720692209, "project": 0.561601885907, "differ": 0.424642242624, "most": 0.08299158518239999, "between": 0.033953681165299995, "swift": 2.63641532015, "all": 0.022805264195599997, "top": 0.609100637788, "today": 0.559395353679, "ton": 2.35402426534, "reason": 0.544301552962, "someth": 2.37661424546, "solv": 1.9836504770400003, "case": 1.186218806667, "inner": 1.86140042888, "that": 0.05168992893532, "infrastructurecloud": 7.369978720910001, "preinstal": 7.369978720910001, "more": 0.06809972639999999, "and": 0.0025825958246076, "dedic": 1.16481508131, "career": 1.0944636875799998, "finish": 1.17210994649, "these": 0.2146008582024, "prepar": 2.6638268371860003, "douetteau": 7.369978720910001, "florian": 4.83628190695, "capabl": 1.2969341868100002, "general": 0.114952578063, "could": 0.18595627229000003, "realtim": 6.0616459012599995, "befor": 0.382551087518, "comment": 1.11826753454, "serv": 0.383135035608, "can": 1.136387674758, "make": 0.6614789204060999, "way": 0.7923660397400001, "onli": 0.0759728049873, "each": 0.173741689304, "often": 0.516280786702, "key": 0.82419811896, "infrastructure\u2026": 7.369978720910001, "accur": 1.75248061485, "advanc": 0.6930212121780001, "data": 8.5177440936, "oper": 1.765371857388, "perfect": 1.50096433356, "best": 0.918455865894, "sometim": 0.538025155343, "bio": 3.7456377879300002, "sticker": 4.23884181035, "repres": 0.38507723275, "outperform": 4.409873625, "text": 1.14048200999, "understand": 1.0880858756799998, "import": 0.292818277066, "decis": 0.7701082216959999, "engin": 1.809535116552, "app": 3.57899404386, "have": 0.0295700046824, "while": 0.04324998379380001, "rubi": 3.7193204796199995, "year": 0.09480447778920001, "rare": 1.00282122403, "agnost": 4.15110289604, "altogeth": 2.38090760473, "learn": 14.326785100664999, "when": 0.0616649665752, "argu": 1.969905940392}, "logidf": {"after": 0.020490694648099998, "real": 0.824629060574, "limit": 0.41782385463, "spotifi": 6.5370695979699995, "shouldn": 7.369978720910001, "fit": 1.2151206268899999, "new": 0.0177299468511, "newupd": 7.369978720910001, "organ": 0.49392052866999997, "panda": 4.7167367562999996, "number": 0.0966085784186, "experi": 0.626272953933, "etc": 1.4366730879700003, "dataset": 5.26584456664, "classroom": 2.9144693094800003, "python": 4.03065674296, "unsupervis": 5.843922417409999, "product": 0.484060136536, "work": 0.109034567273, "tree": 1.41777488775, "creation": 1.11846026847, "teach": 1.38277323072, "approach": 0.7302336145810001, "higher": 0.752308398995, "front": 0.845095701382, "know": 0.952919694398, "their": 0.015360505122700001, "scale": 1.32095306328, "upcom": 2.62853091663, "creat": 0.222576818514, "multipl": 1.01092401812, "how": 0.47156695693000006, "repost": 6.83935046985, "present": 0.227546654799, "had": 0.0464780244111, "hundr": 0.904145087046, "given": 0.303255810831, "interest": 0.47207177798199995, "deep": 1.2886734698, "beginn": 3.9788316751, "overview": 2.54006626224, "open": 0.219591038029, "purpos": 0.803869037322, "intro": 4.20029314023, "perform": 0.42618085058, "but": 0.0161923720719, "demonstr": 0.9745501918189999, "need": 0.362740163442, "classif": 2.08779073629, "cost": 0.84129007618, "object": 0.853933584803, "studio": 1.5948062501700002, "mlasaservic": 7.369978720910001, "applic": 1.23160392849, "integr": 1.03865482279, "level": 0.503462189943, "yahoo": 3.6686767468, "has": 0.0427239448548, "enough": 0.802884439169, "also": 0.0146571578, "realworld": 7.369978720910001, "use": 0.0292080197316, "azur": 4.73092139129, "resourc": 1.08137694258, "out": 0.0584263909193, "model": 0.7374500731110001, "good": 0.418589404907, "concept": 0.977224437103, "cours": 0.765899404133, "browser": 4.22152536034, "absolut": 1.67658333914, "count": 1.24748591139, "learnt": 4.04135203208, "start": 0.236443369291, "view": 0.49515994217299997, "not": 0.0155524130075, "proof": 2.27255429674, "day": 0.16865870631700003, "yhat": 7.369978720910001, "quick": 0.790727508899, "easi": 1.6665296351499999, "jupyt": 7.369978720910001, "numday": 6.964513612799999, "then": 0.08303386523089999, "they": 0.0297269947676, "turn": 0.324899251064, "last": 0.19204364461100001, "choos": 1.43007066072, "world": 0.107420248621, "scienc": 0.841436178891, "taught": 1.7174895406400001, "featur": 0.423387418142, "practic": 0.533182530867, "oneclick": 7.369978720910001, "author": 0.35274143130999996, "provid": 0.19517784432500002, "plan": 0.428982108147, "valu": 0.823193310148, "softwar": 2.32849096333, "develop": 0.178624694913, "entri": 1.38402935449, "such": 0.059695977806, "with": 0.00119749171339, "quicker": 4.01657200308, "some": 0.0395735090645, "sourc": 0.529218310751, "collect": 0.49536666052, "invest": 1.42586787018, "super": 1.9988756846400002, "expos": 1.6167713629299998, "cluster": 2.52579163445, "varieti": 0.8316941898119999, "platformsasa": 7.369978720910001, "platform": 1.8298923389200001, "set": 0.171496011289, "info": 3.6299309802199997, "ani": 0.125608358366, "improv": 0.7147958039319999, "from": 0.000567054168866, "bigml": 7.369978720910001, "privat": 0.705059626587, "matlab": 6.0349776541799995, "teacher": 1.5026611665399998, "instanc": 1.18089357972, "els": 1.6945957207700002, "advic": 1.9574402102700001, "environ": 1.2341974030299998, "balanc": 1.4936444810499998, "for": 0.00031499039539700004, "predict": 1.6457402376899999, "proprietari": 3.7193204796199995, "workshop": 2.5766705928099998, "friend": 0.7893395836239999, "quora": 7.369978720910001, "seen": 0.47672812813, "practition": 2.93797215393, "assum": 1.08435313525, "ago": 1.80163421715, "are": 0.0294674735827, "solut": 1.55346297627, "compani": 0.439777253097, "look": 0.6463866936, "popular": 0.41058020877499996, "intellectu": 1.78573081495, "extract": 2.04161723301, "postlearn": 7.369978720910001, "think": 1.06717661175, "whatev": 2.0343655696200003, "combin": 0.529218310751, "num\u2013num": 7.369978720910001, "forest": 1.5883097076, "dorard": 7.369978720910001, "tackl": 2.98920286814, "remov": 0.6960488415880001, "revolv": 2.57253664727, "wrong": 1.70078769102, "even": 0.152388564834, "lastmil": 7.369978720910001, "simpler": 2.8858468633, "rewrit": 3.48635519, "place": 0.0957070839572, "great": 0.235805258079, "papisio": 7.369978720910001, "step": 1.03954505698, "indico": 7.369978720910001, "his": 0.0901772433641, "librari": 0.986809980943, "handson": 7.369978720910001, "scientist": 1.54634128444, "notebook": 3.693678049, "into": 0.0149128632287, "howev": 0.0903151173475, "servic": 0.41410016674500005, "requir": 0.424253510675, "figur": 0.7101721121600001, "what": 0.225887296827, "papi": 6.5370695979699995, "allow": 0.24028061118900002, "workflow": 5.91136369821, "help": 0.336207721344, "main": 0.225571540588, "loui": 1.4340268837299999, "cover": 0.526975319156, "own": 0.164195077421, "chosen": 1.27889510877, "relat": 0.21310030165399999, "http": 1.15437112215, "who": 0.0609002329859, "almost": 0.42907884333400004, "permiss": 1.8373800586400002, "phd": 3.10729884387, "microsoft": 3.21265935953, "were": 0.024291143681099997, "clean": 1.9271282036300001, "give": 0.311392552224, "paramet": 2.8481901438599997, "onlin": 0.957503854357, "much": 0.17749572930100002, "evalu": 1.9388802431299998, "about": 0.0628434774746, "problem": 0.569140724273, "deploy": 2.00400270589, "scikitlearn": 7.369978720910001, "just": 0.289531434109, "perspect": 1.61645415436, "inperson": 7.369978720910001, "cofound": 5.57821925168, "topic": 1.6969991554100001, "type": 0.707101485387, "anomali": 3.78091960208, "classifi": 1.6665296351499999, "would": 0.0796176279647, "defin": 1.00368010925, "recommend": 1.36461126863, "rest": 0.671587369833, "ensembl": 2.81820931165, "methodolog": 2.8847188315900003, "intuit": 3.3216780971900004, "barrier": 2.1594002686700002, "enabl": 1.26473915954, "them": 0.0941833269093, "load": 1.91765354188, "seri": 0.38193461069799994, "bad": 1.2221516561799999, "explain": 0.955700427358, "whenhow": 7.369978720910001, "raw": 2.36536149914, "abl": 0.599303982475, "mani": 0.0433157581221, "introduct": 1.02276465794, "the": 0.0, "kill": 0.741540598047, "monitor": 1.80125261058, "algorithm": 3.33044239518, "select": 0.704804687133, "restrict": 1.13341345513, "performanceimpact": 7.369978720910001, "there": 0.0400978929255, "endtoend": 7.369978720910001, "connect": 0.633605058682, "inform": 0.454453704662, "possibl": 0.348805474891, "amazon": 3.50086321649, "endpoint": 5.01860346375, "operation": 6.117215752409999, "origin": 0.128612437587, "right": 0.34035985417, "spend": 1.42534376116, "setup": 3.5305264083199996, "take": 0.130691962197, "further": 0.308815895297, "code": 1.35601909597, "to\u2026": 7.369978720910001, "interact": 1.4858210267899998, "than": 0.0322608622182, "goe": 1.4473284897999998, "languag": 0.8306818244059999, "issu": 0.364099043934, "cloud": 2.36268232808, "num": 0.00031499039539700004, "money": 0.964254518011, "around": 0.19387710578200001, "seem": 0.829093032276, "batch": 3.5744895317400003, "dataiku": 7.369978720910001, "research": 0.663727818138, "facebook": 3.3517955196499996, "may": 0.050709995284400004, "run": 0.442714975539, "fortun": 1.8263649984099999, "peopl": 0.193265578473, "challeng": 0.9392919688950001, "that\u2014her": 7.369978720910001, "machin": 1.39235958062, "want": 0.6916366062549999, "which": 0.00517841384543, "behind": 0.7345572374320001, "bootstrap": 5.57821925168, "actual": 0.628514181648, "easier": 2.05923883436, "numst": 0.966901335107, "appropri": 1.4618957827399999, "like": 0.139053576545, "estim": 0.854377535975, "abstract": 2.29918950399, "other": 0.00987474791976, "realiz": 1.5876931847600002, "techniqu": 1.31624384807, "one": 0.0062553516455, "show": 0.236682766013, "see": 0.240921585492, "diagram": 3.09888364694, "imag": 0.99376210729, "highlevel": 7.369978720910001, "get": 0.579769005782, "still": 0.17112222142900002, "random": 1.9727214065099998, "abov": 0.643865229816, "dot": 2.93797215393, "should": 0.509419876758, "detect": 1.68878274493, "part": 0.04239531098280001, "analyt": 2.8481901438599997, "access": 0.627805882716, "this": 0.0037864490525, "find": 0.547781330288, "time": 0.0112115188626, "api": 4.43612185107, "instructor": 3.11720692209, "project": 0.561601885907, "differ": 0.212321121312, "most": 0.020747896295599998, "between": 0.033953681165299995, "swift": 2.63641532015, "all": 0.011402632097799998, "top": 0.609100637788, "today": 0.559395353679, "ton": 2.35402426534, "reason": 0.544301552962, "someth": 1.18830712273, "solv": 1.9836504770400003, "case": 0.395406268889, "inner": 1.86140042888, "that": 0.00397614837964, "infrastructurecloud": 7.369978720910001, "preinstal": 7.369978720910001, "more": 0.017024931599999998, "and": 6.29901420636e-05, "dedic": 1.16481508131, "career": 1.0944636875799998, "finish": 1.17210994649, "these": 0.0715336194008, "prepar": 0.8879422790620001, "douetteau": 7.369978720910001, "florian": 4.83628190695, "capabl": 1.2969341868100002, "general": 0.114952578063, "could": 0.18595627229000003, "realtim": 6.0616459012599995, "befor": 0.0956377718795, "comment": 1.11826753454, "serv": 0.383135035608, "can": 0.162341096394, "make": 0.07349765782289999, "way": 0.19809150993500002, "onli": 0.025324268329099998, "each": 0.173741689304, "often": 0.258140393351, "key": 0.82419811896, "infrastructure\u2026": 7.369978720910001, "accur": 1.75248061485, "advanc": 0.6930212121780001, "data": 1.2168205848, "oper": 0.441342964347, "perfect": 1.50096433356, "best": 0.459227932947, "sometim": 0.538025155343, "bio": 3.7456377879300002, "sticker": 4.23884181035, "repres": 0.38507723275, "outperform": 4.409873625, "text": 1.14048200999, "understand": 1.0880858756799998, "import": 0.292818277066, "decis": 0.7701082216959999, "engin": 0.904767558276, "app": 3.57899404386, "have": 0.0147850023412, "while": 0.04324998379380001, "rubi": 3.7193204796199995, "year": 0.047402238894600005, "rare": 1.00282122403, "agnost": 4.15110289604, "altogeth": 2.38090760473, "learn": 0.842752064745, "when": 0.0205549888584, "argu": 0.984952970196}, "freq": {"after": 2, "real": 1, "limit": 1, "spotifi": 1, "shouldn": 1, "fit": 1, "new": 5, "newupd": 1, "organ": 2, "panda": 1, "number": 1, "experi": 3, "etc": 1, "dataset": 2, "classroom": 1, "python": 3, "unsupervis": 1, "product": 6, "work": 6, "tree": 1, "creation": 1, "teach": 2, "approach": 1, "higher": 2, "front": 1, "know": 3, "their": 7, "scale": 2, "upcom": 1, "creat": 3, "multipl": 1, "how": 7, "repost": 1, "present": 1, "had": 2, "hundr": 1, "given": 1, "interest": 1, "deep": 2, "beginn": 1, "overview": 2, "open": 3, "purpos": 1, "intro": 1, "perform": 2, "but": 4, "demonstr": 1, "need": 8, "classif": 2, "cost": 1, "object": 1, "studio": 1, "mlasaservic": 1, "applic": 5, "integr": 1, "level": 2, "yahoo": 1, "has": 1, "enough": 3, "also": 6, "realworld": 3, "use": 14, "azur": 5, "resourc": 1, "out": 5, "model": 14, "good": 1, "concept": 1, "cours": 1, "browser": 1, "absolut": 1, "count": 1, "learnt": 1, "start": 6, "view": 2, "not": 2, "proof": 1, "day": 3, "yhat": 1, "quick": 1, "easi": 2, "jupyt": 1, "numday": 2, "then": 1, "they": 7, "turn": 1, "last": 1, "choos": 1, "world": 1, "scienc": 1, "taught": 2, "featur": 4, "practic": 3, "oneclick": 1, "author": 1, "provid": 5, "plan": 1, "valu": 1, "softwar": 1, "develop": 9, "entri": 1, "such": 5, "with": 16, "quicker": 1, "some": 4, "sourc": 3, "collect": 2, "invest": 1, "super": 1, "expos": 2, "cluster": 1, "varieti": 1, "platformsasa": 1, "platform": 7, "set": 2, "info": 1, "ani": 1, "improv": 1, "from": 7, "bigml": 3, "privat": 1, "matlab": 1, "teacher": 1, "instanc": 1, "els": 1, "advic": 3, "environ": 1, "balanc": 2, "for": 15, "predict": 9, "proprietari": 1, "workshop": 4, "friend": 1, "quora": 1, "seen": 1, "practition": 1, "assum": 1, "ago": 1, "are": 5, "solut": 1, "compani": 1, "look": 1, "popular": 1, "intellectu": 1, "extract": 1, "postlearn": 1, "think": 1, "whatev": 1, "combin": 1, "num\u2013num": 1, "forest": 3, "dorard": 2, "tackl": 1, "remov": 1, "revolv": 1, "wrong": 1, "even": 2, "lastmil": 1, "simpler": 1, "rewrit": 1, "place": 1, "great": 2, "papisio": 3, "step": 1, "indico": 2, "his": 1, "librari": 5, "handson": 1, "scientist": 1, "notebook": 1, "into": 5, "howev": 1, "servic": 1, "requir": 1, "figur": 3, "what": 3, "papi": 3, "allow": 1, "workflow": 3, "help": 1, "main": 1, "loui": 2, "cover": 1, "own": 4, "chosen": 1, "relat": 1, "http": 1, "who": 3, "almost": 1, "permiss": 1, "phd": 1, "microsoft": 2, "were": 1, "clean": 1, "give": 1, "paramet": 2, "onlin": 2, "much": 3, "evalu": 2, "about": 5, "problem": 6, "deploy": 8, "scikitlearn": 3, "just": 5, "perspect": 1, "inperson": 1, "cofound": 1, "topic": 1, "type": 1, "anomali": 1, "classifi": 1, "would": 3, "defin": 1, "recommend": 1, "rest": 1, "ensembl": 1, "methodolog": 1, "intuit": 1, "barrier": 2, "enabl": 1, "them": 5, "load": 2, "seri": 1, "bad": 1, "explain": 3, "whenhow": 2, "raw": 1, "abl": 1, "mani": 3, "introduct": 1, "the": 38, "kill": 1, "monitor": 1, "algorithm": 8, "select": 1, "restrict": 1, "performanceimpact": 1, "there": 4, "endtoend": 2, "connect": 3, "inform": 1, "possibl": 2, "amazon": 3, "endpoint": 1, "operation": 1, "origin": 1, "right": 2, "spend": 1, "setup": 1, "take": 3, "further": 1, "code": 1, "to\u2026": 1, "interact": 1, "than": 2, "goe": 1, "languag": 1, "issu": 1, "cloud": 4, "num": 5, "money": 1, "around": 1, "seem": 1, "batch": 1, "dataiku": 2, "research": 1, "facebook": 1, "may": 2, "run": 5, "fortun": 1, "peopl": 1, "challeng": 2, "that\u2014her": 1, "machin": 5, "want": 3, "which": 6, "behind": 1, "bootstrap": 1, "actual": 2, "easier": 1, "numst": 1, "appropri": 1, "like": 5, "estim": 1, "abstract": 2, "other": 2, "realiz": 1, "techniqu": 5, "one": 4, "show": 1, "see": 1, "diagram": 1, "imag": 1, "highlevel": 1, "get": 3, "still": 2, "random": 3, "abov": 1, "dot": 2, "should": 2, "detect": 1, "part": 1, "analyt": 1, "access": 2, "this": 1, "find": 3, "time": 3, "api": 4, "instructor": 1, "project": 1, "differ": 2, "most": 4, "between": 1, "swift": 1, "all": 2, "top": 1, "today": 1, "ton": 1, "reason": 1, "someth": 2, "solv": 1, "case": 3, "inner": 1, "that": 13, "infrastructurecloud": 1, "preinstal": 1, "more": 4, "and": 41, "dedic": 1, "career": 1, "finish": 1, "these": 3, "prepar": 3, "douetteau": 1, "florian": 1, "capabl": 1, "general": 1, "could": 1, "realtim": 1, "befor": 4, "comment": 1, "serv": 1, "can": 7, "make": 9, "way": 4, "onli": 3, "each": 1, "often": 2, "key": 1, "infrastructure\u2026": 1, "accur": 1, "advanc": 1, "data": 7, "oper": 4, "perfect": 1, "best": 2, "sometim": 1, "bio": 1, "sticker": 1, "repres": 1, "outperform": 1, "text": 1, "understand": 1, "import": 1, "decis": 1, "engin": 2, "app": 1, "have": 2, "while": 1, "rubi": 1, "year": 2, "rare": 1, "agnost": 1, "altogeth": 1, "learn": 17, "when": 3, "argu": 2}, "idf": {"after": 1.02070207021, "real": 2.28103448276, "limit": 1.5186531471200002, "spotifi": 690.260869565, "shouldn": 1587.6, "fit": 3.37070063694, "new": 1.0178880554, "newupd": 1587.6, "organ": 1.6387283237, "panda": 111.802816901, "number": 1.10142916609, "experi": 1.87062566278, "etc": 4.2066772655, "dataset": 193.609756098, "classroom": 18.4390243902, "python": 56.2978723404, "unsupervis": 345.13043478300006, "product": 1.62264922322, "work": 1.11520089913, "tree": 4.127925117, "creation": 3.0601387818, "teach": 3.98594024605, "approach": 2.07556543339, "higher": 2.1218925421, "front": 2.32820061593, "know": 2.59327017315, "their": 1.01547908405, "scale": 3.7469907953699995, "upcom": 13.853403141400001, "creat": 1.2492917847, "multipl": 2.74813917258, "how": 1.60250328051, "repost": 933.882352941, "present": 1.25551601423, "had": 1.0475750577399998, "hundr": 2.4698195395099996, "given": 1.35426085473, "interest": 1.60331246213, "deep": 3.6279707495399998, "beginn": 53.4545454545, "overview": 12.6805111821, "open": 1.24556723678, "purpos": 2.23416830847, "intro": 66.7058823529, "perform": 1.5313977042500002, "but": 1.01632417899, "demonstr": 2.64997496244, "need": 1.4372623574099999, "classif": 8.067073170730001, "cost": 2.31935719503, "object": 2.3488681757700003, "studio": 4.9273743016800005, "mlasaservic": 1587.6, "applic": 3.42672134686, "integr": 2.8254137746900003, "level": 1.6544393497299998, "yahoo": 39.2, "has": 1.0436497502, "enough": 2.2319696330700003, "also": 1.01476510067, "realworld": 1587.6, "use": 1.0296387573799999, "azur": 113.4, "resourc": 2.9487369985100003, "out": 1.06016694491, "model": 2.0905978404, "good": 1.51981619759, "concept": 2.65707112971, "cours": 2.15092805853, "browser": 68.1373390558, "absolut": 5.3472549680000006, "count": 3.48157894737, "learnt": 56.9032258065, "start": 1.26673581744, "view": 1.6407606448899998, "not": 1.01567398119, "proof": 9.70415647922, "day": 1.18371607516, "yhat": 1587.6, "quick": 2.205, "easi": 5.2937645882, "jupyt": 1587.6, "numday": 1058.4, "then": 1.08657860516, "they": 1.03017325287, "turn": 1.3838912133899999, "last": 1.2117234010100002, "choos": 4.17899447223, "world": 1.11340206186, "scienc": 2.31969608416, "taught": 5.57052631579, "featur": 1.52712581762, "practic": 1.70434782609, "oneclick": 1587.6, "author": 1.4229631621399998, "provid": 1.21552714187, "plan": 1.5356935577500002, "valu": 2.2777618364400003, "softwar": 10.2624434389, "develop": 1.1955719557200002, "entri": 3.9909502262400003, "such": 1.06151377374, "with": 1.0011982089899998, "quicker": 55.5104895105, "some": 1.04036697248, "sourc": 1.69760479042, "collect": 1.64109985528, "invest": 4.16146788991, "super": 7.380753138080001, "expos": 5.03680203046, "cluster": 12.5007874016, "varieti": 2.2972073506, "platformsasa": 1587.6, "platform": 6.2332155476999995, "set": 1.18707940781, "info": 37.7102137767, "ani": 1.13383802314, "improv": 2.04376930999, "from": 1.00056721497, "bigml": 1587.6, "privat": 2.02396736359, "matlab": 417.78947368400003, "teacher": 4.49363147467, "instanc": 3.2572835453400004, "els": 5.44444444444, "advic": 7.08117752007, "environ": 3.43561999567, "balanc": 4.45329593268, "for": 1.00031504001, "predict": 5.18484650555, "proprietari": 41.2363636364, "workshop": 13.153272576600001, "friend": 2.20194174757, "quora": 1587.6, "seen": 1.61079545455, "practition": 18.8775267539, "assum": 2.9575260804799997, "ago": 6.05954198473, "are": 1.02990593578, "solut": 4.7278141751, "compani": 1.5523613963, "look": 1.9086318826599997, "popular": 1.50769230769, "intellectu": 5.963936889559999, "extract": 7.703056768560001, "postlearn": 1587.6, "think": 2.90715986083, "whatev": 7.6473988439300005, "combin": 1.69760479042, "num\u2013num": 1587.6, "forest": 4.89546716004, "dorard": 1587.6, "tackl": 19.8698372966, "remov": 2.0058117498400003, "revolv": 13.099009900999999, "wrong": 5.478260869570001, "even": 1.16461267606, "lastmil": 1587.6, "simpler": 17.9187358916, "rewrit": 32.6666666667, "place": 1.1004366812200002, "great": 1.26592775696, "papisio": 1587.6, "step": 2.8279301745599996, "indico": 1587.6, "his": 1.0943682360200002, "librari": 2.68266306185, "handson": 1587.6, "scientist": 4.69426374926, "notebook": 40.1924050633, "into": 1.01502461479, "howev": 1.0945191313299998, "servic": 1.51300867245, "requir": 1.52844902282, "figur": 2.0343413634, "what": 1.25343439128, "papi": 690.260869565, "allow": 1.2716059271100002, "workflow": 369.209302326, "help": 1.39962972759, "main": 1.25303867403, "loui": 4.1955602537, "cover": 1.69380134429, "own": 1.17844418052, "chosen": 3.59266802444, "relat": 1.23750876919, "http": 3.17202797203, "who": 1.06279287723, "almost": 1.53584212054, "permiss": 6.280063291139999, "phd": 22.3605633803, "microsoft": 24.8450704225, "were": 1.02458857696, "clean": 6.86975335353, "give": 1.3653250774, "paramet": 17.256521739100002, "onlin": 2.6051854282900004, "much": 1.1942229577299999, "evalu": 6.9509632224199995, "about": 1.06486015159, "problem": 1.76674827509, "deploy": 7.41869158879, "scikitlearn": 1587.6, "just": 1.33580143037, "perspect": 5.03520456708, "inperson": 1587.6, "cofound": 264.6, "topic": 5.457545548300001, "type": 2.0281042411900003, "anomali": 43.8563535912, "classifi": 5.2937645882, "would": 1.0828729281799998, "defin": 2.72830383227, "recommend": 3.9142011834300003, "rest": 1.9573418813999999, "ensembl": 16.746835443, "methodolog": 17.898534385599998, "intuit": 27.7068062827, "barrier": 8.66593886463, "enabl": 3.5421686747, "them": 1.09876115994, "load": 6.80497213888, "seri": 1.46511627907, "bad": 3.3944836433599996, "explain": 2.60049140049, "whenhow": 1587.6, "raw": 10.6478873239, "abl": 1.8208510150200001, "mani": 1.04426757877, "introduct": 2.7808723068799996, "the": 1.0, "kill": 2.09916699722, "monitor": 6.05723006486, "algorithm": 27.9507042254, "select": 2.02345144022, "restrict": 3.1062414400300002, "performanceimpact": 1587.6, "there": 1.04091266719, "endtoend": 1587.6, "connect": 1.8843916913900003, "inform": 1.5753125620200001, "possibl": 1.4173734488, "amazon": 33.1440501044, "endpoint": 151.2, "operation": 453.6, "origin": 1.13724928367, "right": 1.4054532577899999, "spend": 4.15928739848, "setup": 34.1419354839, "take": 1.13961668222, "further": 1.3618116315, "code": 3.8807137619199996, "to\u2026": 1587.6, "interact": 4.4185917061, "than": 1.03278688525, "goe": 4.251740760580001, "languag": 2.29488291414, "issu": 1.43921675279, "cloud": 10.6193979933, "num": 1.00031504001, "money": 2.62283165373, "around": 1.21394708671, "seem": 2.29123971713, "batch": 35.6764044944, "dataiku": 1587.6, "research": 1.9420183486200002, "facebook": 28.5539568345, "may": 1.05201775893, "run": 1.55692850838, "fortun": 6.211267605630001, "peopl": 1.21320495186, "challeng": 2.55816951337, "that\u2014her": 1587.6, "machin": 4.02433460076, "want": 1.99698113208, "which": 1.005191845, "behind": 2.0845588235299997, "bootstrap": 264.6, "actual": 1.87482286254, "easier": 7.84, "numst": 2.6297830047999997, "appropri": 4.31413043478, "like": 1.14918566775, "estim": 2.34991119005, "abstract": 9.966101694919999, "other": 1.00992366412, "realiz": 4.89244992296, "techniqu": 3.7293868921800004, "one": 1.00627495722, "show": 1.26703910615, "see": 1.27242125511, "diagram": 22.1731843575, "imag": 2.70137825421, "highlevel": 1587.6, "get": 1.78562591385, "still": 1.1866357724799999, "random": 7.1902173913, "abov": 1.90382539873, "dot": 18.8775267539, "should": 1.6643254009900001, "detect": 5.41288782816, "part": 1.04330682789, "analyt": 17.256521739100002, "access": 1.8734953976900002, "this": 1.00379362671, "find": 1.7294117647099998, "time": 1.01127460348, "api": 84.44680851060001, "instructor": 22.583214793699998, "project": 1.7534791252500002, "differ": 1.23654490225, "most": 1.02096463023, "between": 1.03453668708, "swift": 13.963060685999999, "all": 1.01146788991, "top": 1.8387769284200002, "today": 1.74961428257, "ton": 10.5278514589, "reason": 1.72340425532, "someth": 3.28152128979, "solv": 7.26923076923, "case": 1.48498737256, "inner": 6.432739059969999, "that": 1.00398406375, "infrastructurecloud": 1587.6, "preinstal": 1587.6, "more": 1.0171706817, "and": 1.00006299213, "dedic": 3.20533010297, "career": 2.98757997742, "finish": 3.22879804759, "these": 1.07415426252, "prepar": 2.43012398592, "douetteau": 1587.6, "florian": 126.0, "capabl": 3.6580645161300005, "general": 1.1218202374200001, "could": 1.2043695949, "realtim": 429.081081081, "befor": 1.10036041031, "comment": 3.05954904606, "serv": 1.4668760972, "can": 1.17626139142, "make": 1.0762660158600001, "way": 1.2190739461, "onli": 1.0256476516600002, "each": 1.18974820144, "often": 1.29452054795, "key": 2.28005170185, "infrastructure\u2026": 1587.6, "accur": 5.768895348840001, "advanc": 1.9997480791, "data": 3.37643555934, "oper": 1.55479384977, "perfect": 4.48601299802, "best": 1.5828514456600002, "sometim": 1.7126213592200001, "bio": 42.336000000000006, "sticker": 69.327510917, "repres": 1.46972782818, "outperform": 82.2590673575, "text": 3.12827586207, "understand": 2.96858638743, "import": 1.3401992233700002, "decis": 2.16, "engin": 2.47135740971, "app": 35.837471783299996, "have": 1.0148948411399998, "while": 1.0441988950299999, "rubi": 41.2363636364, "year": 1.0485436893200002, "rare": 2.7259615384599996, "agnost": 63.504, "altogeth": 10.8147138965, "learn": 2.32275054865, "when": 1.02076769755, "argu": 2.67768595041}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  What Developers Actually Need to Know About Machine Learning</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/developers-need-know-about-machine-learning.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb What Developers Actually Need to Know About Machine Learning Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/association-rules-apriori-algorithm-tutorial.html\" rel=\"prev\" title=\"Association Rules and the Apriori Algorithm: A Tutorial\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/recommender-systems-textbook.html\" rel=\"next\" title=\"Recommender Systems: New Comprehensive Textbook by Charu Aggarwal\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/04/developers-need-know-about-machine-learning.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=47615\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/developers-need-know-about-machine-learning.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-47615 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 14-Apr, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/opinions-interviews.html\">Opinions, Interviews, Reports</a> \u00bb What Developers Actually Need to Know About Machine Learning (\u00a0<a href=\"/2016/n14.html\">16:n14</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">What Developers Actually Need to Know About Machine Learning</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/association-rules-apriori-algorithm-tutorial.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/recommender-systems-textbook.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/advice\" rel=\"tag\">Advice</a>, <a href=\"https://www.kdnuggets.com/tag/developers\" rel=\"tag\">Developers</a>, <a href=\"https://www.kdnuggets.com/tag/machine-learning\" rel=\"tag\">Machine Learning</a></div>\n<br/>\n<p class=\"excerpt\">\n     Some guidance on what, exactly, it is that developers need to know to get up to speed with machine learning.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By Louis Dorard, PAPIs.io</b>.</p>\n<p>Something is wrong in the way ML is being taught to developers.</p>\n<p>Most ML teachers like to explain how different learning algorithms work and spend tons of time on that. For a beginner who wants to start using ML, being able to choose an algorithm and set parameters looks like the #1 barrier to entry, and knowing how the different techniques work seems to be a key requirement to remove that barrier. Many practitioners argue however that you only need one technique to get started: random forests. Other techniques may sometimes outperform them, but in general, random forests are the most likely to perform best on a variety of problems (see Do we Need Hundreds of Classifiers to Solve Real World Classification Problems?), which makes them more than enough for a developer just getting started with ML.</p>\n<p>I would further argue that you don\u2019t need to know all the inner workings of (random forest) learning algorithms (and the simpler decision tree learning algorithms that they use). A high-level understanding of the algorithms, the intuitions behind them, their main parameters, their possibilities and limitations is enough. You\u2019ll know enough to start practicing and experimenting with ML, as there are great open source ML libraries (such as scikit-learn in Python) and cloud platforms that make it super easy to create predictive models from data.</p>\n<p>So, if we just give an overview of only one technique, what else can we teach?</p>\n<p><img alt=\"America's Next Top Model???\" src=\"/wp-content/uploads/dataiku-zoolander.jpeg\" width=\"99%\"><br>\n<em><center><a href=\"http://dataiku.com/\">Dataiku</a> sticker (seen at PAPIs). Their Data Science Studio makes it easy to experiment with and deploy ML models.</center></em></br></img></p>\n<p><b>Deploying ML models into production</b></p>\n<p>It turns out that, when using ML in real-world applications, most of the work takes place before and after the learning. ML instructors rarely provide an end-to-end view of what it takes to use ML in a predictive application that\u2019s deployed in production. They just explain one part of the problem, then they assume you\u2019ll figure out the rest and you\u2019ll connect the dots on your own. Like for instance, connecting the dots between the ML libraries you were taught to use in Python, R, or Matlab, and your application in production which is developed in Ruby, Swift, C++, etc.</p>\n<p>When I started my PhD almost 10 years ago, I had a friend at Yahoo who had just finished his and who was explaining to me how Software Engineers would re-write the ML researchers\u2019 code into the language used in production. As Dataiku\u2019s <a href=\"https://medium.com/u/790b578dde3a\">Florian Douetteau</a> <a href=\"http://fr.slideshare.net/Dataiku/dataiku-productive-application-to-production-pap-is-may-2015-48747796/12\">showed</a> at PAPIs Connect last year, the cost of deploying Proofs of Concept into production could kill ML projects altogether. Deployment is such an important problem that he estimates top companies like Spotify and Facebook each invested more than $5M in their ML production platforms (counting 10\u201320 people dedicated to that, resources, infrastructure\u2026).</p>\n<p><img alt=\"Prediction model via REST API\" src=\"/wp-content/uploads/prediction-model-rest-api.jpg\" width=\"99%\"/><br>\n<em><center>Getting predictions from a model exposed as a REST API.</center></em></br></p>\n<p>Fortunately, today there are new and accessible solutions to this \u201clast-mile problem\u201d. They revolve around the use of REST (http) APIs. Models need to be exposed as APIs, and if scaling the number of predictions performed by a given model can be an issue, these APIs would be served on multiple endpoints with load balancers in front. Platforms-as-a service can help for that\u2014here is some info about <a href=\"https://azure.microsoft.com/en-us/documentation/articles/machine-learning-faq/#scalability\">Microsoft Azure ML\u2019s scaling capabilities</a>, <a href=\"https://aws.amazon.com/machine-learning/faqs/#generating-predictions\">Amazon ML\u2019s</a>, and <a href=\"https://github.com/yhat/yhat-wiki/wiki/Analytics-Load-Balancer\">Yhat\u2019s Analytics Load Balancer</a> (which you can also run on your own private infrastructure/cloud). Some of these platforms allow you to use whatever ML library you want, others restrict you to their own proprietary ones. In my upcoming <a href=\"http://www.papis.io/workshops/operational-machine-learning\">workshop</a>, I\u2019ve chosen to use Azure to deploy models created with scikit-learn into APIs, and also to demonstrate how Amazon and BigML provide an even higher level of abstraction (while still providing accurate models) that can make them easier to work with in many cases.</p>\n<p><b>ML workflow</b></p>\n<p>Deployment is not the only post-learning challenge there is in real-world ML. You should also find appropriate ways to evaluate and monitor your models\u2019 performance/impact, before and after deployment.</p>\n<p><img alt=\"ML workflow\" src=\"/wp-content/uploads/ml-workflow-model.png\" width=\"99%\"/><br>\n<center><em>ML workflow <a href=\"https://blogs.msdn.microsoft.com/continuous_learning/2014/11/15/end-to-end-predictive-model-in-azureml-using-linear-regression/\">by Azure</a>.</em></center></br></p>\n<p>The ML workflow diagram above also presents some of the steps to take before learning a model, which are about preparing the right dataset for the algorithms to run on. Before actually running any algorithm you need to\u2026</p>\n<ul>\n<li>Define the right ML problem to tackle for your organization\n<li>Engineer features, i.e. find ways to represent the objects on which you\u2019ll be making predictions with ML\n<li>Figure out when/how often you\u2019ll need to make predictions, and how much time you\u2019ll have for that (is there a way to do predictions in batches or do you absolutely need all your predictions to be real-time?)\n<li>Collect data\n<li>Prepare the actual dataset to run learning algorithms on, i.e. extract features from the \u201craw\u201d collected data and clean it\n<li>Figure out when/how often you\u2019ll need to learn new/updated models, and how much time you\u2019ll have for that.\n</li></li></li></li></li></li></ul>\n<p><b>Operational Machine Learning in 2 days</b></p>\n<p>What should be the purpose of an ML course for developers? It shouldn\u2019t just be about teaching something new and interesting and intellectually challenging, but also about making developers as operational as possible in their use of the new techniques they\u2019ve learnt.</p>\n<p>At PAPIs, we want to enable developers to improve their apps and create new value from data with Machine Learning. We\u2019re starting a new series of <b>2-day hands-on workshops in classroom settings and online</b>. The 1st type of workshop we\u2019ve planned is an agnostic introduction to <a href=\"http://www.papis.io/workshops/operational-machine-learning\">operational ML with open source and cloud platforms</a>. Day 1 covers an intro to ML, the creation, operationalization, and evaluation of predictive models. Day 2 features model selection, ensembles, data preparation, a practical overview of advanced topics such as unsupervised learning and deep learning, and methodology for developing your own ML use case.</p>\n<p>We\u2019re using Python with libraries such as Pandas, scikit-learn, SKLL, and cloud platforms such as Microsoft Azure ML, Amazon ML, BigML and Indico. I think these platforms are great for many organizations and real-world use cases, but even if for some reason you\u2019d realize they may not be the perfect fit for you, I\u2019d still recommend using them for learning and practicing ML. ML-as-a-Service makes it much quicker to setup work environments (e.g. Azure ML has most popular libraries preinstalled and can run interactive Jupyter notebooks, which you can access from your browser) but also to experiment with ML with the higher levels of abstraction they provide (e.g. combining one-click clustering, anomaly detection, and classification models with BigML, or quickly featurizing text and images with Indico\u2019s Deep Learning API).</p>\n<p><a href=\"http://www.papis.io/workshops/operational-machine-learning\">Find out more information</a> about PAPIs.io Operational Machine Learning with Open Source and Cloud Platforms 2-day workshops for developers - in-person and online - approached from the perspective of an application developer, providing an end-to-end view of ML integration into your applications.</p>\n<p><b>Bio: <a href=\"https://medium.com/@louisdorard\">Louis Dorard</a></b> is the author of Bootstrapping Machine Learning and co-founder of <a href=\"http://www.papis.io/\">PAPIs.io</a>.</p>\n<p><a href=\"https://stories.papis.io/what-developers-actually-need-to-know-about-machine-learning-1a3ea2284631\">Original</a>. Reposted with permission.</p>\n<p><b>Related</b>:</p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/10/learning-machine-learning-quora.html\">The Best Advice From Quora on \u2018How to Learn Machine Learning\u2019</a>\n<li><a href=\"/2016/03/career-advice-data-scientists-make-more-money.html\">Career Advice to Data Scientists \u2013 Go Make More Money</a>\n<li><a href=\"/2016/03/when-good-advice-goes-bad.html\">When Good Advice Goes Bad</a><br>\n</br></li></li></li></ul></div></div></div></div></div></body></html>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p> <script type=\"text/javascript\">\n var disqus_shortname = 'kdnuggets';\n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n </script></p>\n\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/association-rules-apriori-algorithm-tutorial.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/recommender-systems-textbook.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end-->\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n<div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/opinions-interviews.html\">Opinions, Interviews, Reports</a> \u00bb What Developers Actually Need to Know About Machine Learning (\u00a0<a href=\"/2016/n14.html\">16:n14</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end-->\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556331737\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper-->\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.648 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 22:22:17 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "loui", "dorard", "papisio", "someth", "wrong", "the", "way", "taught", "develop", "most", "teacher", "like", "explain", "how", "differ", "learn", "algorithm", "work", "and", "spend", "ton", "time", "that", "for", "beginn", "who", "want", "start", "use", "abl", "choos", "algorithm", "and", "set", "paramet", "look", "like", "the", "num", "barrier", "entri", "and", "know", "how", "the", "differ", "techniqu", "work", "seem", "key", "requir", "remov", "that", "barrier", "mani", "practition", "argu", "howev", "that", "onli", "need", "one", "techniqu", "get", "start", "random", "forest", "other", "techniqu", "may", "sometim", "outperform", "them", "but", "general", "random", "forest", "are", "the", "most", "like", "perform", "best", "varieti", "problem", "see", "need", "hundr", "classifi", "solv", "real", "world", "classif", "problem", "which", "make", "them", "more", "than", "enough", "for", "develop", "just", "get", "start", "with", "would", "further", "argu", "that", "need", "know", "all", "the", "inner", "work", "random", "forest", "learn", "algorithm", "and", "the", "simpler", "decis", "tree", "learn", "algorithm", "that", "they", "use", "highlevel", "understand", "the", "algorithm", "the", "intuit", "behind", "them", "their", "main", "paramet", "their", "possibl", "and", "limit", "enough", "know", "enough", "start", "practic", "and", "experi", "with", "there", "are", "great", "open", "sourc", "librari", "such", "scikitlearn", "python", "and", "cloud", "platform", "that", "make", "super", "easi", "creat", "predict", "model", "from", "data", "just", "give", "overview", "onli", "one", "techniqu", "what", "els", "can", "teach", "dataiku", "sticker", "seen", "papi", "their", "data", "scienc", "studio", "make", "easi", "experi", "with", "and", "deploy", "model", "deploy", "model", "into", "product", "turn", "out", "that", "when", "use", "realworld", "applic", "most", "the", "work", "take", "place", "befor", "and", "after", "the", "learn", "instructor", "rare", "provid", "endtoend", "view", "what", "take", "use", "predict", "applic", "that", "deploy", "product", "they", "just", "explain", "one", "part", "the", "problem", "then", "they", "assum", "figur", "out", "the", "rest", "and", "connect", "the", "dot", "own", "like", "for", "instanc", "connect", "the", "dot", "between", "the", "librari", "were", "taught", "use", "python", "matlab", "and", "applic", "product", "which", "develop", "rubi", "swift", "etc", "when", "start", "phd", "almost", "num", "year", "ago", "had", "friend", "yahoo", "who", "had", "just", "finish", "his", "and", "who", "explain", "how", "softwar", "engin", "would", "rewrit", "the", "research", "code", "into", "the", "languag", "use", "product", "dataiku", "florian", "douetteau", "show", "papi", "connect", "last", "year", "the", "cost", "deploy", "proof", "concept", "into", "product", "could", "kill", "project", "altogeth", "deploy", "such", "import", "problem", "that", "estim", "top", "compani", "like", "spotifi", "and", "facebook", "each", "invest", "more", "than", "their", "product", "platform", "count", "num\u2013num", "peopl", "dedic", "that", "resourc", "infrastructure\u2026", "get", "predict", "from", "model", "expos", "fortun", "today", "there", "are", "new", "and", "access", "solut", "this", "lastmil", "problem", "they", "revolv", "around", "the", "use", "http", "api", "model", "need", "expos", "api", "and", "scale", "the", "number", "predict", "perform", "given", "model", "can", "issu", "these", "api", "would", "serv", "multipl", "endpoint", "with", "load", "balanc", "front", "platformsasa", "servic", "can", "help", "for", "that\u2014her", "some", "info", "about", "microsoft", "azur", "scale", "capabl", "amazon", "and", "yhat", "analyt", "load", "balanc", "which", "can", "also", "run", "own", "privat", "infrastructurecloud", "some", "these", "platform", "allow", "use", "whatev", "librari", "want", "other", "restrict", "their", "own", "proprietari", "one", "upcom", "workshop", "chosen", "use", "azur", "deploy", "model", "creat", "with", "scikitlearn", "into", "api", "and", "also", "demonstr", "how", "amazon", "and", "bigml", "provid", "even", "higher", "level", "abstract", "while", "still", "provid", "accur", "model", "that", "can", "make", "them", "easier", "work", "with", "mani", "case", "workflow", "deploy", "not", "the", "onli", "postlearn", "challeng", "there", "realworld", "should", "also", "find", "appropri", "way", "evalu", "and", "monitor", "model", "performanceimpact", "befor", "and", "after", "deploy", "workflow", "azur", "the", "workflow", "diagram", "abov", "also", "present", "some", "the", "step", "take", "befor", "learn", "model", "which", "are", "about", "prepar", "the", "right", "dataset", "for", "the", "algorithm", "run", "befor", "actual", "run", "ani", "algorithm", "need", "to\u2026", "defin", "the", "right", "problem", "tackl", "for", "organ", "engin", "featur", "find", "way", "repres", "the", "object", "which", "make", "predict", "with", "figur", "out", "whenhow", "often", "need", "make", "predict", "and", "how", "much", "time", "have", "for", "that", "there", "way", "predict", "batch", "absolut", "need", "all", "predict", "realtim", "collect", "data", "prepar", "the", "actual", "dataset", "run", "learn", "algorithm", "extract", "featur", "from", "the", "raw", "collect", "data", "and", "clean", "figur", "out", "whenhow", "often", "need", "learn", "newupd", "model", "and", "how", "much", "time", "have", "for", "that", "oper", "machin", "learn", "num", "day", "what", "should", "the", "purpos", "cours", "for", "develop", "shouldn", "just", "about", "teach", "someth", "new", "and", "interest", "and", "intellectu", "challeng", "but", "also", "about", "make", "develop", "oper", "possibl", "their", "use", "the", "new", "techniqu", "they", "learnt", "papi", "want", "enabl", "develop", "improv", "their", "app", "and", "creat", "new", "valu", "from", "data", "with", "machin", "learn", "start", "new", "seri", "numday", "handson", "workshop", "classroom", "set", "and", "onlin", "the", "numst", "type", "workshop", "plan", "agnost", "introduct", "oper", "with", "open", "sourc", "and", "cloud", "platform", "day", "num", "cover", "intro", "the", "creation", "operation", "and", "evalu", "predict", "model", "day", "num", "featur", "model", "select", "ensembl", "data", "prepar", "practic", "overview", "advanc", "topic", "such", "unsupervis", "learn", "and", "deep", "learn", "and", "methodolog", "for", "develop", "own", "use", "case", "use", "python", "with", "librari", "such", "panda", "scikitlearn", "and", "cloud", "platform", "such", "microsoft", "azur", "amazon", "bigml", "and", "indico", "think", "these", "platform", "are", "great", "for", "mani", "organ", "and", "realworld", "use", "case", "but", "even", "for", "some", "reason", "realiz", "they", "may", "not", "the", "perfect", "fit", "for", "still", "recommend", "use", "them", "for", "learn", "and", "practic", "mlasaservic", "make", "much", "quicker", "setup", "work", "environ", "azur", "has", "most", "popular", "librari", "preinstal", "and", "can", "run", "interact", "jupyt", "notebook", "which", "can", "access", "from", "browser", "but", "also", "experi", "with", "with", "the", "higher", "level", "abstract", "they", "provid", "combin", "oneclick", "cluster", "anomali", "detect", "and", "classif", "model", "with", "bigml", "quick", "featur", "text", "and", "imag", "with", "indico", "deep", "learn", "find", "out", "more", "inform", "about", "papisio", "oper", "machin", "learn", "with", "open", "sourc", "and", "cloud", "platform", "numday", "workshop", "for", "develop", "inperson", "and", "onlin", "approach", "from", "the", "perspect", "applic", "develop", "provid", "endtoend", "view", "integr", "into", "applic", "bio", "loui", "dorard", "the", "author", "bootstrap", "machin", "learn", "and", "cofound", "papisio", "origin", "repost", "with", "permiss", "relat", "the", "best", "advic", "from", "quora", "how", "learn", "machin", "learn", "career", "advic", "data", "scientist", "make", "more", "money", "when", "good", "advic", "goe", "bad"], "timestamp_scraper": 1556366165.783077, "title": "What Developers Actually Need to Know About Machine Learning", "read_time": 354.9, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By Louis Dorard, PAPIs.io</b>.</p>\n<p>Something is wrong in the way ML is being taught to developers.</p>\n<p>Most ML teachers like to explain how different learning algorithms work and spend tons of time on that. For a beginner who wants to start using ML, being able to choose an algorithm and set parameters looks like the #1 barrier to entry, and knowing how the different techniques work seems to be a key requirement to remove that barrier. Many practitioners argue however that you only need one technique to get started: random forests. Other techniques may sometimes outperform them, but in general, random forests are the most likely to perform best on a variety of problems (see Do we Need Hundreds of Classifiers to Solve Real World Classification Problems?), which makes them more than enough for a developer just getting started with ML.</p>\n<p>I would further argue that you don\u2019t need to know all the inner workings of (random forest) learning algorithms (and the simpler decision tree learning algorithms that they use). A high-level understanding of the algorithms, the intuitions behind them, their main parameters, their possibilities and limitations is enough. You\u2019ll know enough to start practicing and experimenting with ML, as there are great open source ML libraries (such as scikit-learn in Python) and cloud platforms that make it super easy to create predictive models from data.</p>\n<p>So, if we just give an overview of only one technique, what else can we teach?</p>\n<p><img alt=\"America's Next Top Model???\" src=\"/wp-content/uploads/dataiku-zoolander.jpeg\" width=\"99%\"><br>\n<em><center><a href=\"http://dataiku.com/\">Dataiku</a> sticker (seen at PAPIs). Their Data Science Studio makes it easy to experiment with and deploy ML models.</center></em></br></img></p>\n<p><b>Deploying ML models into production</b></p>\n<p>It turns out that, when using ML in real-world applications, most of the work takes place before and after the learning. ML instructors rarely provide an end-to-end view of what it takes to use ML in a predictive application that\u2019s deployed in production. They just explain one part of the problem, then they assume you\u2019ll figure out the rest and you\u2019ll connect the dots on your own. Like for instance, connecting the dots between the ML libraries you were taught to use in Python, R, or Matlab, and your application in production which is developed in Ruby, Swift, C++, etc.</p>\n<p>When I started my PhD almost 10 years ago, I had a friend at Yahoo who had just finished his and who was explaining to me how Software Engineers would re-write the ML researchers\u2019 code into the language used in production. As Dataiku\u2019s <a href=\"https://medium.com/u/790b578dde3a\">Florian Douetteau</a> <a href=\"http://fr.slideshare.net/Dataiku/dataiku-productive-application-to-production-pap-is-may-2015-48747796/12\">showed</a> at PAPIs Connect last year, the cost of deploying Proofs of Concept into production could kill ML projects altogether. Deployment is such an important problem that he estimates top companies like Spotify and Facebook each invested more than $5M in their ML production platforms (counting 10\u201320 people dedicated to that, resources, infrastructure\u2026).</p>\n<p><img alt=\"Prediction model via REST API\" src=\"/wp-content/uploads/prediction-model-rest-api.jpg\" width=\"99%\"/><br>\n<em><center>Getting predictions from a model exposed as a REST API.</center></em></br></p>\n<p>Fortunately, today there are new and accessible solutions to this \u201clast-mile problem\u201d. They revolve around the use of REST (http) APIs. Models need to be exposed as APIs, and if scaling the number of predictions performed by a given model can be an issue, these APIs would be served on multiple endpoints with load balancers in front. Platforms-as-a service can help for that\u2014here is some info about <a href=\"https://azure.microsoft.com/en-us/documentation/articles/machine-learning-faq/#scalability\">Microsoft Azure ML\u2019s scaling capabilities</a>, <a href=\"https://aws.amazon.com/machine-learning/faqs/#generating-predictions\">Amazon ML\u2019s</a>, and <a href=\"https://github.com/yhat/yhat-wiki/wiki/Analytics-Load-Balancer\">Yhat\u2019s Analytics Load Balancer</a> (which you can also run on your own private infrastructure/cloud). Some of these platforms allow you to use whatever ML library you want, others restrict you to their own proprietary ones. In my upcoming <a href=\"http://www.papis.io/workshops/operational-machine-learning\">workshop</a>, I\u2019ve chosen to use Azure to deploy models created with scikit-learn into APIs, and also to demonstrate how Amazon and BigML provide an even higher level of abstraction (while still providing accurate models) that can make them easier to work with in many cases.</p>\n<p><b>ML workflow</b></p>\n<p>Deployment is not the only post-learning challenge there is in real-world ML. You should also find appropriate ways to evaluate and monitor your models\u2019 performance/impact, before and after deployment.</p>\n<p><img alt=\"ML workflow\" src=\"/wp-content/uploads/ml-workflow-model.png\" width=\"99%\"/><br>\n<center><em>ML workflow <a href=\"https://blogs.msdn.microsoft.com/continuous_learning/2014/11/15/end-to-end-predictive-model-in-azureml-using-linear-regression/\">by Azure</a>.</em></center></br></p>\n<p>The ML workflow diagram above also presents some of the steps to take before learning a model, which are about preparing the right dataset for the algorithms to run on. Before actually running any algorithm you need to\u2026</p>\n<ul>\n<li>Define the right ML problem to tackle for your organization\n<li>Engineer features, i.e. find ways to represent the objects on which you\u2019ll be making predictions with ML\n<li>Figure out when/how often you\u2019ll need to make predictions, and how much time you\u2019ll have for that (is there a way to do predictions in batches or do you absolutely need all your predictions to be real-time?)\n<li>Collect data\n<li>Prepare the actual dataset to run learning algorithms on, i.e. extract features from the \u201craw\u201d collected data and clean it\n<li>Figure out when/how often you\u2019ll need to learn new/updated models, and how much time you\u2019ll have for that.\n</li></li></li></li></li></li></ul>\n<p><b>Operational Machine Learning in 2 days</b></p>\n<p>What should be the purpose of an ML course for developers? It shouldn\u2019t just be about teaching something new and interesting and intellectually challenging, but also about making developers as operational as possible in their use of the new techniques they\u2019ve learnt.</p>\n<p>At PAPIs, we want to enable developers to improve their apps and create new value from data with Machine Learning. We\u2019re starting a new series of <b>2-day hands-on workshops in classroom settings and online</b>. The 1st type of workshop we\u2019ve planned is an agnostic introduction to <a href=\"http://www.papis.io/workshops/operational-machine-learning\">operational ML with open source and cloud platforms</a>. Day 1 covers an intro to ML, the creation, operationalization, and evaluation of predictive models. Day 2 features model selection, ensembles, data preparation, a practical overview of advanced topics such as unsupervised learning and deep learning, and methodology for developing your own ML use case.</p>\n<p>We\u2019re using Python with libraries such as Pandas, scikit-learn, SKLL, and cloud platforms such as Microsoft Azure ML, Amazon ML, BigML and Indico. I think these platforms are great for many organizations and real-world use cases, but even if for some reason you\u2019d realize they may not be the perfect fit for you, I\u2019d still recommend using them for learning and practicing ML. ML-as-a-Service makes it much quicker to setup work environments (e.g. Azure ML has most popular libraries preinstalled and can run interactive Jupyter notebooks, which you can access from your browser) but also to experiment with ML with the higher levels of abstraction they provide (e.g. combining one-click clustering, anomaly detection, and classification models with BigML, or quickly featurizing text and images with Indico\u2019s Deep Learning API).</p>\n<p><a href=\"http://www.papis.io/workshops/operational-machine-learning\">Find out more information</a> about PAPIs.io Operational Machine Learning with Open Source and Cloud Platforms 2-day workshops for developers - in-person and online - approached from the perspective of an application developer, providing an end-to-end view of ML integration into your applications.</p>\n<p><b>Bio: <a href=\"https://medium.com/@louisdorard\">Louis Dorard</a></b> is the author of Bootstrapping Machine Learning and co-founder of <a href=\"http://www.papis.io/\">PAPIs.io</a>.</p>\n<p><a href=\"https://stories.papis.io/what-developers-actually-need-to-know-about-machine-learning-1a3ea2284631\">Original</a>. Reposted with permission.</p>\n<p><b>Related</b>:</p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/10/learning-machine-learning-quora.html\">The Best Advice From Quora on \u2018How to Learn Machine Learning\u2019</a>\n<li><a href=\"/2016/03/career-advice-data-scientists-make-more-money.html\">Career Advice to Data Scientists \u2013 Go Make More Money</a>\n<li><a href=\"/2016/03/when-good-advice-goes-bad.html\">When Good Advice Goes Bad</a><br>\n</br></li></li></li></ul></div> ", "website": "kdnuggets"}