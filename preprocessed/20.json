{"content": "By Yan Holtz , Queensland Brain Institute of Brisbane Python is currently the leading programming language in the field of data science, followed close by R [ref: KDnuggets ]. Data visualization is a key step in this area, and Python offers great possibilities when it comes to representing your data graphically. However, the huge number of tools and the potential complexity of the documentation makes it difficult to build a desired chart. The Python Graph Gallery is a website that displays hundreds of graphics made with python, always providing a reproducible code snippet. 400 graphics and 40 sections The gallery currently provides about 400 distinct charts organized in 40 sections. Each section is represented by a logo made by designer Conor Healy . The color depends of the topic of the graphic: distribution, correlation, part of a whole, maps, flow, evolution\u2026 This classification is inspired from the graphic continuum and should allow you to quickly find the chart you need. Of course, most common plot types like barplot , scatterplot , boxplot or histograms are present. But some less common data visualization types are present as well, like lollipop plot, bubble plot, 2D density plot or wordclouds . From easy to tricky Once you enter a chart section, several examples are displayed, from the easiest to the hardest. Usually, the first example describes how the input dataset must be formatted, and how to make the graphic using the default parameters. Explanations are provided, code is shortened to its strict minimum and commented line by line, this makes it easy to understand how the function works. Here is an overview of the most simple density plot \u00a0you can do: Progressively, examples lead you from a very basic version to highly customized charts. Each example aims to explain one particular tip, like customizing colours, flipping axes, adding several groups and so on. At the end of the section, you will find some \u2018real life examples\u2019 combining all these tips to get a nice customized figure. A focus on Matplotlib and Seaborn A bunch of libraries exist when it comes to making charts with python. I decided to rely mainly on Matplotlib and Seaborn , these are currently the main 2 tools used. Almost every type of chart is feasible with them. When it is not, I used other libraries like folium for maps or networkX for networks. Note that both Matplotlib and Seaborn have a dedicated page showing tips generic to every type of chart, like customizing axes and titles, calling different themes, controlling colours... These pages can be useful to quickly find again the every-day code snippets that we tend to forget. Visit this link\u00a0 here \u00a0for the code. Conclusion The Python Graph Gallery displays hundreds of graphics and can hopefully help you to quickly realise the chart you need. In this sense, it mainly aims to help users on a technical point of view. However, the goal is also to increase the knowledge of users in the field of data visualization: By visiting the website, you may discover new type of dataviz options that could fit your data Each section is introduced by a short description explaining when the chart type is advised A bad chart section is sometimes included at the bottom of a section, warning you about the common mistakes made on this type of chart The gallery is a project developed by Yan Holtz during his nights and holidays. Thus, please be indulgent concerning bugs, imprecisions and English language mistakes. Any bug or feedback is strongly welcome at yan.holtz.data@gmail.com or via twitter: @R_Graph_Gallery . Last but not least, note that the Python graph gallery has a twin sister: the R graph gallery . Author Bio Yan Holtz is a passionate data analyst and bioinformatician currently working for the Queensland Brain Institute of Brisbane. \u00a0He has a special attraction for data visualization which lead him to build the R and the Python graph galleries. He can be reached at: yan.holtz.data@gmail.com . Homepage: / Related: Creating Data Visualization in Matplotlib 10 Useful Python Data Visualization Libraries for Any Discipline The 5 Common Mistakes That Lead to Bad Data Visualization", "title_html": "<h1 id=\"title\">The Python Graph Gallery</h1> ", "url": "https://www.kdnuggets.com/2017/11/python-graph-gallery.html", "tfidf": {"tfidf": {"real": 2.28103448276, "enter": 1.75813953488, "easiest": 64.8, "relat": 1.23750876919, "fit": 3.37070063694, "here": 4.84615384616, "folium": 1058.4, "new": 1.0178880554, "imprecis": 108.0, "organ": 1.6387283237, "paramet": 17.256521739100002, "number": 1.10142916609, "rgraphgalleri": 1058.4, "dataset": 193.609756098, "about": 2.12972030318, "colour": 13.494262643439999, "decid": 1.9257641921400002, "sens": 2.8365195640499996, "progress": 2.44697903822, "distinct": 2.2836593786000003, "python": 506.68085106359996, "well": 1.0655748708, "wordcloud": 1058.4, "holiday": 7.12887292322, "him": 1.63434218653, "topic": 5.457545548300001, "has": 2.0872995004, "dure": 1.0503473370799998, "onc": 1.4974533106999999, "networkx": 1058.4, "visit": 4.41245136186, "should": 1.6643254009900001, "indulg": 31.0684931507, "lollipop": 360.818181818, "descript": 4.00504540868, "particular": 1.3814827706200001, "complex": 2.34021226415, "flip": 31.3136094675, "brisban": 92.8421052632, "tool": 9.99433427762, "technic": 3.1400316455699997, "plot": 26.917599186150003, "yanholtzdata": 2116.8, "how": 4.80750984153, "theme": 3.8255421686699997, "ref": 27.3253012048, "them": 1.09876115994, "present": 2.51103202846, "desir": 3.00170164492, "bunch": 40.5, "realis": 12.0, "bad": 6.788967286719999, "increas": 1.32024948025, "explain": 5.20098280098, "hundr": 4.939639079019999, "distribut": 2.7396031061299997, "reproduc": 12.6805111821, "end": 1.10680423871, "correl": 13.1860465116, "holtz": 1360.8000000000002, "strict": 4.7235941684, "basic": 2.7301805675, "depend": 2.2411067193700003, "will": 1.22481098596, "overview": 12.6805111821, "axe": 42.6201342282, "build": 3.2683479156, "snippet": 271.384615384, "special": 1.4881889763799998, "display": 8.80369685766, "barplot": 1058.4, "twitter": 33.213389121300004, "simpl": 3.3981164383599998, "sister": 3.75852272727, "but": 2.03264835798, "inspir": 2.8487349721900004, "need": 2.8745247148199997, "classif": 8.067073170730001, "exist": 1.4647107666799999, "scienc": 2.31969608416, "possibl": 1.4173734488, "point": 1.25990000794, "least": 1.6165359943000002, "common": 5.6103896103999995, "lead": 5.0657306956, "exampl": 7.5241706161, "continuum": 23.2105263158, "have": 1.0148948411399998, "hope": 2.50884955752, "everyday": 11.9548192771, "knowledg": 3.3981164383599998, "visual": 36.59269015479, "use": 5.148193786899999, "follow": 1.04640126549, "default": 21.1398135819, "discov": 2.52160101652, "code": 15.522855047679998, "mistak": 26.140504939619998, "usual": 1.72508964468, "format": 2.53125, "high": 1.14777327935, "alway": 2.06745670009, "disciplin": 6.92972501091, "advis": 5.0145293746099995, "titl": 1.87261146497, "languag": 4.58976582828, "cours": 2.15092805853, "reli": 4.16146788991, "huge": 4.38927287808, "also": 1.01476510067, "num": 7.00220528007, "field": 3.5580457194, "warn": 4.334152334150001, "short": 1.41295834817, "not": 2.03134796238, "view": 1.6407606448899998, "hardest": 58.8, "the": 41.0, "may": 1.05201775893, "difficult": 2.48957189901, "analyst": 14.8373831776, "less": 1.46904783936, "aim": 5.792046698280001, "welcom": 6.05723006486, "quick": 6.615, "pleas": 9.12938470385, "easi": 10.5875291764, "explan": 6.50922509225, "which": 1.005191845, "function": 2.495441685, "generic": 17.9592760181, "graphic": 63.25099601597001, "design": 1.45825296225, "reach": 1.49801849406, "howev": 2.1890382626599996, "last": 1.2117234010100002, "allow": 1.2716059271100002, "minimum": 6.02962400304, "kdnugget": 1058.4, "attract": 2.53326950694, "section": 17.027483576879998, "feasibl": 17.8181818182, "passion": 8.14571575167, "seaborn": 421.486725663, "thus": 1.6463756092500001, "matplotlib": 4233.6, "other": 1.00992366412, "queensland": 72.8256880734, "provid": 3.64658142561, "one": 1.00627495722, "graph": 188.55106888350002, "scatterplot": 1058.4, "offer": 1.53896859248, "custom": 14.538461538479998, "develop": 1.1955719557200002, "sever": 2.14482572278, "via": 2.2978723404299997, "get": 1.78562591385, "network": 2.59369384088, "like": 5.745928338750001, "some": 2.08073394496, "control": 1.46959178006, "both": 1.05215720061, "area": 1.3881262568900001, "conor": 206.181818182, "part": 1.04330682789, "document": 2.5409731114, "that": 6.0239043825, "version": 2.0083491461099996, "includ": 1.0190641247799999, "tip": 28.26587537091, "introduc": 1.7258397651900002, "ani": 2.26767604628, "from": 4.00226885988, "concern": 1.8852867830400002, "project": 1.7534791252500002, "differ": 1.23654490225, "step": 2.8279301745599996, "institut": 3.5584444693400004, "forget": 16.9978586724, "most": 2.04192926046, "twin": 6.954007884360001, "shorten": 11.0020790021, "tricki": 115.883211679, "for": 6.00189024006, "color": 3.8255421686699997, "all": 1.01146788991, "bottom": 6.27261951798, "with": 3.003594626969999, "program": 2.02139037433, "strong": 1.6439888163999998, "these": 3.22246278756, "are": 5.1495296789000005, "bioinformatician": 1058.4, "almost": 1.53584212054, "current": 6.1303214596, "author": 1.4229631621399998, "feedback": 24.652173913000002, "option": 4.04896710023, "call": 1.0676529926, "and": 16.00100787408, "histogram": 1058.4, "veri": 1.25880114177, "dedic": 3.20533010297, "homepag": 42.336000000000006, "dataviz": 1058.4, "work": 2.23040179826, "life": 1.37051104972, "combin": 1.69760479042, "english": 1.7432744043000001, "made": 3.21116504853, "could": 1.2043695949, "night": 2.26670474015, "focus": 2.01012914662, "librari": 8.04798918555, "tend": 3.3735656608599998, "again": 1.50883862384, "yan": 234.6206896551, "close": 1.2848818387799998, "map": 8.145715751660001, "group": 1.20996875238, "websit": 5.04320203304, "can": 4.70504556568, "flow": 4.41, "evolution\u2026": 1058.4, "describ": 1.47027227264, "make": 4.305064063440001, "whole": 2.29488291414, "bug": 54.744827586199996, "each": 3.56924460432, "heali": 112.595744681, "logo": 11.356223175999999, "great": 1.26592775696, "key": 2.28005170185, "gmailcom": 2116.8, "this": 6.02276176026, "goal": 3.28152128979, "link": 2.15151104486, "chart": 101.44408945692, "his": 1.0943682360200002, "comment": 3.05954904606, "data": 37.14079115274, "note": 2.84899057874, "boxplot": 1058.4, "sometim": 1.7126213592200001, "bio": 42.336000000000006, "come": 2.65662650602, "must": 1.9220338983099996, "repres": 2.93945565636, "potenti": 2.52080025405, "understand": 2.96858638743, "figur": 2.0343413634, "bubbl": 23.075581395300002, "first": 1.00761614623, "everi": 2.95835274388, "input": 12.2029208301, "when": 4.0830707902, "nice": 17.7583892617, "page": 4.07338037204, "galleri": 50.83806038423, "show": 1.26703910615, "help": 2.79925945518, "main": 3.7591160220899997, "type": 14.196729688330002, "find": 5.188235294129999, "line": 2.8365195640599996, "brain": 17.858267716540002, "conclus": 4.84615384615, "densiti": 14.693197593699999, "user": 15.4210781933, "creat": 1.2492917847}, "logtfidf": {"real": 0.824629060574, "enter": 0.564256167492, "easiest": 4.17130560336, "relat": 0.21310030165399999, "fit": 1.2151206268899999, "here": 1.7700763767400003, "folium": 6.964513612799999, "new": 0.0177299468511, "imprecis": 4.682131227119999, "organ": 0.49392052866999997, "paramet": 2.8481901438599997, "number": 0.0966085784186, "rgraphgalleri": 6.964513612799999, "dataset": 5.26584456664, "about": 0.1256869549492, "colour": 3.81823485036, "decid": 0.655322871893, "sens": 1.04257779501, "progress": 0.894854218108, "distinct": 0.825779146958, "python": 36.275910686639996, "well": 0.0635144383156, "wordcloud": 6.964513612799999, "holiday": 1.96415314665, "him": 0.49124039099699995, "topic": 1.6969991554100001, "has": 0.0854478897096, "dure": 0.0491209066894, "onc": 0.403765872355, "networkx": 6.964513612799999, "visit": 1.582566437666, "should": 0.509419876758, "indulg": 3.4361942237, "lollipop": 5.8883741799800005, "descript": 1.38755491845, "particular": 0.323157393804, "complex": 0.8502416364309999, "flip": 3.4440528103099997, "brisban": 7.675506153680001, "tool": 3.21774235926, "technic": 1.14423287808, "plot": 8.41671202545, "yanholtzdata": 13.929027225599999, "how": 1.4147008707900002, "theme": 1.3417002006799998, "ref": 3.3078130570499997, "them": 0.0941833269093, "present": 0.455093309598, "desir": 1.0991793428399999, "bunch": 3.70130197411, "realis": 2.48490664979, "bad": 2.4443033123599998, "increas": 0.277820718929, "explain": 1.911400854716, "hundr": 1.808290174092, "distribut": 1.00781305813, "reproduc": 2.54006626224, "end": 0.101476798618, "correl": 2.57915918803, "holtz": 18.35164725723, "strict": 1.55256998618, "basic": 1.00436774895, "depend": 0.806969815, "will": 0.202786534915, "overview": 2.54006626224, "axe": 6.11835919104, "build": 0.982274904182, "snippet": 9.82077975822, "special": 0.39755992860100003, "display": 3.22967832618, "barplot": 6.964513612799999, "twitter": 3.50295308141, "simpl": 1.2232212893899999, "sister": 1.32402598852, "but": 0.0323847441438, "inspir": 1.04687502633, "need": 0.725480326884, "classif": 2.08779073629, "exist": 0.38165779408699996, "scienc": 0.841436178891, "possibl": 0.348805474891, "point": 0.23103235903299998, "least": 0.480285584745, "common": 1.353303221084, "lead": 0.9448161194679999, "exampl": 2.0434133749949996, "continuum": 3.1446058962800003, "have": 0.0147850023412, "hope": 0.919824304455, "everyday": 2.48113448387, "knowledg": 1.2232212893899999, "visual": 11.57756844202, "use": 0.146040098658, "follow": 0.045356911094199995, "default": 3.0511581621399997, "discov": 0.924894023806, "code": 5.42407638388, "mistak": 6.494621208239999, "usual": 0.545279017064, "format": 0.9287132518729999, "high": 0.13782378654000002, "alway": 0.726319204572, "disciplin": 1.93582013145, "advis": 1.6123395734600001, "titl": 0.6273339619899999, "languag": 1.6613636488119998, "cours": 0.765899404133, "reli": 1.42586787018, "huge": 1.47916358195, "also": 0.0146571578, "num": 0.0022049327677790003, "field": 1.1521285167020001, "warn": 1.4665260511200002, "short": 0.345685625679, "not": 0.031104826015, "view": 0.49515994217299997, "hardest": 4.0741418549, "the": 0.0, "may": 0.050709995284400004, "difficult": 0.912110767588, "analyst": 2.6971498864499996, "less": 0.3846144626, "aim": 2.12667707408, "welcom": 1.80125261058, "quick": 2.3721825266970002, "pleas": 2.21149829955, "easi": 3.3330592702999997, "explan": 1.87322041569, "which": 0.00517841384543, "function": 0.914465741594, "generic": 2.8881067512700005, "graphic": 15.408405080040001, "design": 0.377239118022, "reach": 0.40414323085000003, "howev": 0.180630234695, "last": 0.19204364461100001, "allow": 0.24028061118900002, "minimum": 1.79668465441, "kdnugget": 6.964513612799999, "attract": 0.929510763678, "section": 6.043097423584, "feasibl": 2.88021938643, "passion": 2.0974921144, "seaborn": 14.83552798557, "thus": 0.49857627139300004, "matplotlib": 27.858054451199997, "other": 0.00987474791976, "queensland": 7.1898431411, "provid": 0.585533532975, "one": 0.0062553516455, "graph": 18.1496549011, "scatterplot": 6.964513612799999, "offer": 0.431112446902, "custom": 5.162013185919999, "develop": 0.178624694913, "sever": 0.13982224079379998, "via": 0.831983625414, "get": 0.579769005782, "network": 0.9530830530519999, "like": 0.6952678827250001, "some": 0.079147018129, "control": 0.38498466158600003, "both": 0.050842533389300004, "area": 0.327954821122, "conor": 5.32875839205, "part": 0.04239531098280001, "document": 0.932547122383, "that": 0.02385689027784, "version": 0.697313064259, "includ": 0.0188846813905, "tip": 6.729128913360001, "introduc": 0.5457137524260001, "ani": 0.251216716732, "from": 0.002268216675464, "concern": 0.634079948873, "project": 0.561601885907, "differ": 0.212321121312, "step": 1.03954505698, "institut": 1.152352644006, "forget": 2.8330873756700004, "most": 0.041495792591199995, "twin": 1.9393181673700002, "shorten": 2.3980842551299997, "tricki": 4.75258288807, "for": 0.0018899423723820002, "color": 1.3417002006799998, "all": 0.011402632097799998, "bottom": 1.8361940533599999, "with": 0.00359247514017, "program": 0.7037855787649999, "strong": 0.49712549393600003, "these": 0.2146008582024, "are": 0.1473373679135, "bioinformatician": 6.964513612799999, "almost": 0.42907884333400004, "current": 1.7078113113800002, "author": 0.35274143130999996, "feedback": 3.2048650877999996, "option": 1.39846181161, "call": 0.0654627744488, "and": 0.0010078422730176, "histogram": 6.964513612799999, "veri": 0.230159793238, "dedic": 1.16481508131, "homepag": 3.7456377879300002, "dataviz": 6.964513612799999, "work": 0.218069134546, "life": 0.315183699277, "combin": 0.529218310751, "english": 0.555765186335, "made": 0.2040645782919, "could": 0.18595627229000003, "night": 0.8183271204970001, "focus": 0.6981989720559999, "librari": 2.960429942829, "tend": 1.21597024462, "again": 0.411340231612, "yan": 13.07807350458, "close": 0.250666759864, "map": 2.80868986768, "group": 0.190594534797, "websit": 1.849788047612, "can": 0.649364385576, "flow": 1.4838746894600001, "evolution\u2026": 6.964513612799999, "describ": 0.385447603125, "make": 0.29399063129159997, "whole": 0.8306818244059999, "bug": 6.61907142072, "each": 0.521225067912, "heali": 4.72380392352, "logo": 2.4297658911099997, "great": 0.235805258079, "key": 0.82419811896, "gmailcom": 13.929027225599999, "this": 0.022718694315, "goal": 1.18830712273, "link": 0.7661704068449999, "chart": 25.61521384956, "his": 0.0901772433641, "comment": 1.11826753454, "data": 13.3850264328, "note": 0.707635136166, "boxplot": 6.964513612799999, "sometim": 0.538025155343, "bio": 3.7456377879300002, "come": 0.5678198130600001, "must": 0.653383947388, "repres": 0.7701544655, "potenti": 0.9245764122419999, "understand": 1.0880858756799998, "figur": 0.7101721121600001, "bubbl": 3.13877497597, "first": 0.0075872898121599995, "everi": 0.782970854842, "input": 2.50167533539, "when": 0.0822199554336, "nice": 2.8768580387299996, "page": 1.422652064822, "galleri": 13.87914601619, "show": 0.236682766013, "help": 0.672415442688, "main": 0.676714621764, "type": 4.9497103977090005, "find": 1.643343990864, "line": 0.698861228904, "brain": 4.37863879566, "conclus": 1.57818536893, "densiti": 3.9884749148000003, "user": 4.08517621376, "creat": 0.222576818514}, "logidf": {"real": 0.824629060574, "enter": 0.564256167492, "easiest": 4.17130560336, "relat": 0.21310030165399999, "fit": 1.2151206268899999, "here": 0.8850381883700001, "folium": 6.964513612799999, "new": 0.0177299468511, "imprecis": 4.682131227119999, "organ": 0.49392052866999997, "paramet": 2.8481901438599997, "number": 0.0966085784186, "rgraphgalleri": 6.964513612799999, "dataset": 5.26584456664, "about": 0.0628434774746, "colour": 1.90911742518, "decid": 0.655322871893, "sens": 1.04257779501, "progress": 0.894854218108, "distinct": 0.825779146958, "python": 4.03065674296, "well": 0.0635144383156, "wordcloud": 6.964513612799999, "holiday": 1.96415314665, "him": 0.49124039099699995, "topic": 1.6969991554100001, "has": 0.0427239448548, "dure": 0.0491209066894, "onc": 0.403765872355, "networkx": 6.964513612799999, "visit": 0.791283218833, "should": 0.509419876758, "indulg": 3.4361942237, "lollipop": 5.8883741799800005, "descript": 1.38755491845, "particular": 0.323157393804, "complex": 0.8502416364309999, "flip": 3.4440528103099997, "brisban": 3.8377530768400003, "tool": 1.60887117963, "technic": 1.14423287808, "plot": 1.68334240509, "yanholtzdata": 6.964513612799999, "how": 0.47156695693000006, "theme": 1.3417002006799998, "ref": 3.3078130570499997, "them": 0.0941833269093, "present": 0.227546654799, "desir": 1.0991793428399999, "bunch": 3.70130197411, "realis": 2.48490664979, "bad": 1.2221516561799999, "increas": 0.277820718929, "explain": 0.955700427358, "hundr": 0.904145087046, "distribut": 1.00781305813, "reproduc": 2.54006626224, "end": 0.101476798618, "correl": 2.57915918803, "holtz": 6.117215752409999, "strict": 1.55256998618, "basic": 1.00436774895, "depend": 0.806969815, "will": 0.202786534915, "overview": 2.54006626224, "axe": 3.05917959552, "build": 0.491137452091, "snippet": 4.91038987911, "special": 0.39755992860100003, "display": 1.07655944206, "barplot": 6.964513612799999, "twitter": 3.50295308141, "simpl": 1.2232212893899999, "sister": 1.32402598852, "but": 0.0161923720719, "inspir": 1.04687502633, "need": 0.362740163442, "classif": 2.08779073629, "exist": 0.38165779408699996, "scienc": 0.841436178891, "possibl": 0.348805474891, "point": 0.23103235903299998, "least": 0.480285584745, "common": 0.338325805271, "lead": 0.23620402986699998, "exampl": 0.40868267499899996, "continuum": 3.1446058962800003, "have": 0.0147850023412, "hope": 0.919824304455, "everyday": 2.48113448387, "knowledg": 1.2232212893899999, "visual": 1.6539383488600001, "use": 0.0292080197316, "follow": 0.045356911094199995, "default": 3.0511581621399997, "discov": 0.924894023806, "code": 1.35601909597, "mistak": 2.1648737360799997, "usual": 0.545279017064, "format": 0.9287132518729999, "high": 0.13782378654000002, "alway": 0.726319204572, "disciplin": 1.93582013145, "advis": 1.6123395734600001, "titl": 0.6273339619899999, "languag": 0.8306818244059999, "cours": 0.765899404133, "reli": 1.42586787018, "huge": 1.47916358195, "also": 0.0146571578, "num": 0.00031499039539700004, "field": 0.5760642583510001, "warn": 1.4665260511200002, "short": 0.345685625679, "not": 0.0155524130075, "view": 0.49515994217299997, "hardest": 4.0741418549, "the": 0.0, "may": 0.050709995284400004, "difficult": 0.912110767588, "analyst": 2.6971498864499996, "less": 0.3846144626, "aim": 1.06333853704, "welcom": 1.80125261058, "quick": 0.790727508899, "pleas": 2.21149829955, "easi": 1.6665296351499999, "explan": 1.87322041569, "which": 0.00517841384543, "function": 0.914465741594, "generic": 2.8881067512700005, "graphic": 2.20120072572, "design": 0.377239118022, "reach": 0.40414323085000003, "howev": 0.0903151173475, "last": 0.19204364461100001, "allow": 0.24028061118900002, "minimum": 1.79668465441, "kdnugget": 6.964513612799999, "attract": 0.929510763678, "section": 0.755387177948, "feasibl": 2.88021938643, "passion": 2.0974921144, "seaborn": 4.94517599519, "thus": 0.49857627139300004, "matplotlib": 6.964513612799999, "other": 0.00987474791976, "queensland": 3.59492157055, "provid": 0.19517784432500002, "one": 0.0062553516455, "graph": 3.6299309802199997, "scatterplot": 6.964513612799999, "offer": 0.431112446902, "custom": 1.2905032964799998, "develop": 0.178624694913, "sever": 0.06991112039689999, "via": 0.831983625414, "get": 0.579769005782, "network": 0.9530830530519999, "like": 0.139053576545, "some": 0.0395735090645, "control": 0.38498466158600003, "both": 0.050842533389300004, "area": 0.327954821122, "conor": 5.32875839205, "part": 0.04239531098280001, "document": 0.932547122383, "that": 0.00397614837964, "version": 0.697313064259, "includ": 0.0188846813905, "tip": 2.2430429711200004, "introduc": 0.5457137524260001, "ani": 0.125608358366, "from": 0.000567054168866, "concern": 0.634079948873, "project": 0.561601885907, "differ": 0.212321121312, "step": 1.03954505698, "institut": 0.576176322003, "forget": 2.8330873756700004, "most": 0.020747896295599998, "twin": 1.9393181673700002, "shorten": 2.3980842551299997, "tricki": 4.75258288807, "for": 0.00031499039539700004, "color": 1.3417002006799998, "all": 0.011402632097799998, "bottom": 1.8361940533599999, "with": 0.00119749171339, "program": 0.7037855787649999, "strong": 0.49712549393600003, "these": 0.0715336194008, "are": 0.0294674735827, "bioinformatician": 6.964513612799999, "almost": 0.42907884333400004, "current": 0.42695282784500005, "author": 0.35274143130999996, "feedback": 3.2048650877999996, "option": 1.39846181161, "call": 0.0654627744488, "and": 6.29901420636e-05, "histogram": 6.964513612799999, "veri": 0.230159793238, "dedic": 1.16481508131, "homepag": 3.7456377879300002, "dataviz": 6.964513612799999, "work": 0.109034567273, "life": 0.315183699277, "combin": 0.529218310751, "english": 0.555765186335, "made": 0.0680215260973, "could": 0.18595627229000003, "night": 0.8183271204970001, "focus": 0.6981989720559999, "librari": 0.986809980943, "tend": 1.21597024462, "again": 0.411340231612, "yan": 4.35935783486, "close": 0.250666759864, "map": 1.40434493384, "group": 0.190594534797, "websit": 0.924894023806, "can": 0.162341096394, "flow": 1.4838746894600001, "evolution\u2026": 6.964513612799999, "describ": 0.385447603125, "make": 0.07349765782289999, "whole": 0.8306818244059999, "bug": 3.30953571036, "each": 0.173741689304, "heali": 4.72380392352, "logo": 2.4297658911099997, "great": 0.235805258079, "key": 0.82419811896, "gmailcom": 6.964513612799999, "this": 0.0037864490525, "goal": 1.18830712273, "link": 0.7661704068449999, "chart": 2.13460115413, "his": 0.0901772433641, "comment": 1.11826753454, "data": 1.2168205848, "note": 0.353817568083, "boxplot": 6.964513612799999, "sometim": 0.538025155343, "bio": 3.7456377879300002, "come": 0.28390990653000003, "must": 0.653383947388, "repres": 0.38507723275, "potenti": 0.9245764122419999, "understand": 1.0880858756799998, "figur": 0.7101721121600001, "bubbl": 3.13877497597, "first": 0.0075872898121599995, "everi": 0.391485427421, "input": 2.50167533539, "when": 0.0205549888584, "nice": 2.8768580387299996, "page": 0.711326032411, "galleri": 1.9827351451700002, "show": 0.236682766013, "help": 0.336207721344, "main": 0.225571540588, "type": 0.707101485387, "find": 0.547781330288, "line": 0.349430614452, "brain": 2.18931939783, "conclus": 1.57818536893, "densiti": 1.9942374574000001, "user": 2.04258810688, "creat": 0.222576818514}, "freq": {"real": 1, "enter": 1, "easiest": 1, "relat": 1, "fit": 1, "here": 2, "folium": 1, "new": 1, "imprecis": 1, "organ": 1, "paramet": 1, "number": 1, "rgraphgalleri": 1, "dataset": 1, "about": 2, "colour": 2, "decid": 1, "sens": 1, "progress": 1, "distinct": 1, "python": 9, "well": 1, "wordcloud": 1, "holiday": 1, "him": 1, "topic": 1, "has": 2, "dure": 1, "onc": 1, "networkx": 1, "visit": 2, "should": 1, "indulg": 1, "lollipop": 1, "descript": 1, "particular": 1, "complex": 1, "flip": 1, "brisban": 2, "tool": 2, "technic": 1, "plot": 5, "yanholtzdata": 2, "how": 3, "theme": 1, "ref": 1, "them": 1, "present": 2, "desir": 1, "bunch": 1, "realis": 1, "bad": 2, "increas": 1, "explain": 2, "hundr": 2, "distribut": 1, "reproduc": 1, "end": 1, "correl": 1, "holtz": 3, "strict": 1, "basic": 1, "depend": 1, "will": 1, "overview": 1, "axe": 2, "build": 2, "snippet": 2, "special": 1, "display": 3, "barplot": 1, "twitter": 1, "simpl": 1, "sister": 1, "but": 2, "inspir": 1, "need": 2, "classif": 1, "exist": 1, "scienc": 1, "possibl": 1, "point": 1, "least": 1, "common": 4, "lead": 4, "exampl": 5, "continuum": 1, "have": 1, "hope": 1, "everyday": 1, "knowledg": 1, "visual": 7, "use": 5, "follow": 1, "default": 1, "discov": 1, "code": 4, "mistak": 3, "usual": 1, "format": 1, "high": 1, "alway": 1, "disciplin": 1, "advis": 1, "titl": 1, "languag": 2, "cours": 1, "reli": 1, "huge": 1, "also": 1, "num": 7, "field": 2, "warn": 1, "short": 1, "not": 2, "view": 1, "hardest": 1, "the": 41, "may": 1, "difficult": 1, "analyst": 1, "less": 1, "aim": 2, "welcom": 1, "quick": 3, "pleas": 1, "easi": 2, "explan": 1, "which": 1, "function": 1, "generic": 1, "graphic": 7, "design": 1, "reach": 1, "howev": 2, "last": 1, "allow": 1, "minimum": 1, "kdnugget": 1, "attract": 1, "section": 8, "feasibl": 1, "passion": 1, "seaborn": 3, "thus": 1, "matplotlib": 4, "other": 1, "queensland": 2, "provid": 3, "one": 1, "graph": 5, "scatterplot": 1, "offer": 1, "custom": 4, "develop": 1, "sever": 2, "via": 1, "get": 1, "network": 1, "like": 5, "some": 2, "control": 1, "both": 1, "area": 1, "conor": 1, "part": 1, "document": 1, "that": 6, "version": 1, "includ": 1, "tip": 3, "introduc": 1, "ani": 2, "from": 4, "concern": 1, "project": 1, "differ": 1, "step": 1, "institut": 2, "forget": 1, "most": 2, "twin": 1, "shorten": 1, "tricki": 1, "for": 6, "color": 1, "all": 1, "bottom": 1, "with": 3, "program": 1, "strong": 1, "these": 3, "are": 5, "bioinformatician": 1, "almost": 1, "current": 4, "author": 1, "feedback": 1, "option": 1, "call": 1, "and": 16, "histogram": 1, "veri": 1, "dedic": 1, "homepag": 1, "dataviz": 1, "work": 2, "life": 1, "combin": 1, "english": 1, "made": 3, "could": 1, "night": 1, "focus": 1, "librari": 3, "tend": 1, "again": 1, "yan": 3, "close": 1, "map": 2, "group": 1, "websit": 2, "can": 4, "flow": 1, "evolution\u2026": 1, "describ": 1, "make": 4, "whole": 1, "bug": 2, "each": 3, "heali": 1, "logo": 1, "great": 1, "key": 1, "gmailcom": 2, "this": 6, "goal": 1, "link": 1, "chart": 12, "his": 1, "comment": 1, "data": 11, "note": 2, "boxplot": 1, "sometim": 1, "bio": 1, "come": 2, "must": 1, "repres": 2, "potenti": 1, "understand": 1, "figur": 1, "bubbl": 1, "first": 1, "everi": 2, "input": 1, "when": 4, "nice": 1, "page": 2, "galleri": 7, "show": 1, "help": 2, "main": 3, "type": 7, "find": 3, "line": 2, "brain": 2, "conclus": 1, "densiti": 2, "user": 2, "creat": 1}, "idf": {"real": 2.28103448276, "enter": 1.75813953488, "easiest": 64.8, "relat": 1.23750876919, "fit": 3.37070063694, "here": 2.42307692308, "folium": 1058.4, "new": 1.0178880554, "imprecis": 108.0, "organ": 1.6387283237, "paramet": 17.256521739100002, "number": 1.10142916609, "rgraphgalleri": 1058.4, "dataset": 193.609756098, "about": 1.06486015159, "colour": 6.7471313217199995, "decid": 1.9257641921400002, "sens": 2.8365195640499996, "progress": 2.44697903822, "distinct": 2.2836593786000003, "python": 56.2978723404, "well": 1.0655748708, "wordcloud": 1058.4, "holiday": 7.12887292322, "him": 1.63434218653, "topic": 5.457545548300001, "has": 1.0436497502, "dure": 1.0503473370799998, "onc": 1.4974533106999999, "networkx": 1058.4, "visit": 2.20622568093, "should": 1.6643254009900001, "indulg": 31.0684931507, "lollipop": 360.818181818, "descript": 4.00504540868, "particular": 1.3814827706200001, "complex": 2.34021226415, "flip": 31.3136094675, "brisban": 46.4210526316, "tool": 4.99716713881, "technic": 3.1400316455699997, "plot": 5.383519837230001, "yanholtzdata": 1058.4, "how": 1.60250328051, "theme": 3.8255421686699997, "ref": 27.3253012048, "them": 1.09876115994, "present": 1.25551601423, "desir": 3.00170164492, "bunch": 40.5, "realis": 12.0, "bad": 3.3944836433599996, "increas": 1.32024948025, "explain": 2.60049140049, "hundr": 2.4698195395099996, "distribut": 2.7396031061299997, "reproduc": 12.6805111821, "end": 1.10680423871, "correl": 13.1860465116, "holtz": 453.6, "strict": 4.7235941684, "basic": 2.7301805675, "depend": 2.2411067193700003, "will": 1.22481098596, "overview": 12.6805111821, "axe": 21.3100671141, "build": 1.6341739578, "snippet": 135.692307692, "special": 1.4881889763799998, "display": 2.93456561922, "barplot": 1058.4, "twitter": 33.213389121300004, "simpl": 3.3981164383599998, "sister": 3.75852272727, "but": 1.01632417899, "inspir": 2.8487349721900004, "need": 1.4372623574099999, "classif": 8.067073170730001, "exist": 1.4647107666799999, "scienc": 2.31969608416, "possibl": 1.4173734488, "point": 1.25990000794, "least": 1.6165359943000002, "common": 1.4025974025999999, "lead": 1.2664326739, "exampl": 1.50483412322, "continuum": 23.2105263158, "have": 1.0148948411399998, "hope": 2.50884955752, "everyday": 11.9548192771, "knowledg": 3.3981164383599998, "visual": 5.22752716497, "use": 1.0296387573799999, "follow": 1.04640126549, "default": 21.1398135819, "discov": 2.52160101652, "code": 3.8807137619199996, "mistak": 8.71350164654, "usual": 1.72508964468, "format": 2.53125, "high": 1.14777327935, "alway": 2.06745670009, "disciplin": 6.92972501091, "advis": 5.0145293746099995, "titl": 1.87261146497, "languag": 2.29488291414, "cours": 2.15092805853, "reli": 4.16146788991, "huge": 4.38927287808, "also": 1.01476510067, "num": 1.00031504001, "field": 1.7790228597, "warn": 4.334152334150001, "short": 1.41295834817, "not": 1.01567398119, "view": 1.6407606448899998, "hardest": 58.8, "the": 1.0, "may": 1.05201775893, "difficult": 2.48957189901, "analyst": 14.8373831776, "less": 1.46904783936, "aim": 2.8960233491400005, "welcom": 6.05723006486, "quick": 2.205, "pleas": 9.12938470385, "easi": 5.2937645882, "explan": 6.50922509225, "which": 1.005191845, "function": 2.495441685, "generic": 17.9592760181, "graphic": 9.035856573710001, "design": 1.45825296225, "reach": 1.49801849406, "howev": 1.0945191313299998, "last": 1.2117234010100002, "allow": 1.2716059271100002, "minimum": 6.02962400304, "kdnugget": 1058.4, "attract": 2.53326950694, "section": 2.1284354471099998, "feasibl": 17.8181818182, "passion": 8.14571575167, "seaborn": 140.495575221, "thus": 1.6463756092500001, "matplotlib": 1058.4, "other": 1.00992366412, "queensland": 36.4128440367, "provid": 1.21552714187, "one": 1.00627495722, "graph": 37.7102137767, "scatterplot": 1058.4, "offer": 1.53896859248, "custom": 3.6346153846199996, "develop": 1.1955719557200002, "sever": 1.07241286139, "via": 2.2978723404299997, "get": 1.78562591385, "network": 2.59369384088, "like": 1.14918566775, "some": 1.04036697248, "control": 1.46959178006, "both": 1.05215720061, "area": 1.3881262568900001, "conor": 206.181818182, "part": 1.04330682789, "document": 2.5409731114, "that": 1.00398406375, "version": 2.0083491461099996, "includ": 1.0190641247799999, "tip": 9.42195845697, "introduc": 1.7258397651900002, "ani": 1.13383802314, "from": 1.00056721497, "concern": 1.8852867830400002, "project": 1.7534791252500002, "differ": 1.23654490225, "step": 2.8279301745599996, "institut": 1.7792222346700002, "forget": 16.9978586724, "most": 1.02096463023, "twin": 6.954007884360001, "shorten": 11.0020790021, "tricki": 115.883211679, "for": 1.00031504001, "color": 3.8255421686699997, "all": 1.01146788991, "bottom": 6.27261951798, "with": 1.0011982089899998, "program": 2.02139037433, "strong": 1.6439888163999998, "these": 1.07415426252, "are": 1.02990593578, "bioinformatician": 1058.4, "almost": 1.53584212054, "current": 1.5325803649, "author": 1.4229631621399998, "feedback": 24.652173913000002, "option": 4.04896710023, "call": 1.0676529926, "and": 1.00006299213, "histogram": 1058.4, "veri": 1.25880114177, "dedic": 3.20533010297, "homepag": 42.336000000000006, "dataviz": 1058.4, "work": 1.11520089913, "life": 1.37051104972, "combin": 1.69760479042, "english": 1.7432744043000001, "made": 1.07038834951, "could": 1.2043695949, "night": 2.26670474015, "focus": 2.01012914662, "librari": 2.68266306185, "tend": 3.3735656608599998, "again": 1.50883862384, "yan": 78.2068965517, "close": 1.2848818387799998, "map": 4.0728578758300005, "group": 1.20996875238, "websit": 2.52160101652, "can": 1.17626139142, "flow": 4.41, "evolution\u2026": 1058.4, "describ": 1.47027227264, "make": 1.0762660158600001, "whole": 2.29488291414, "bug": 27.372413793099998, "each": 1.18974820144, "heali": 112.595744681, "logo": 11.356223175999999, "great": 1.26592775696, "key": 2.28005170185, "gmailcom": 1058.4, "this": 1.00379362671, "goal": 3.28152128979, "link": 2.15151104486, "chart": 8.45367412141, "his": 1.0943682360200002, "comment": 3.05954904606, "data": 3.37643555934, "note": 1.42449528937, "boxplot": 1058.4, "sometim": 1.7126213592200001, "bio": 42.336000000000006, "come": 1.32831325301, "must": 1.9220338983099996, "repres": 1.46972782818, "potenti": 2.52080025405, "understand": 2.96858638743, "figur": 2.0343413634, "bubbl": 23.075581395300002, "first": 1.00761614623, "everi": 1.47917637194, "input": 12.2029208301, "when": 1.02076769755, "nice": 17.7583892617, "page": 2.03669018602, "galleri": 7.26258005489, "show": 1.26703910615, "help": 1.39962972759, "main": 1.25303867403, "type": 2.0281042411900003, "find": 1.7294117647099998, "line": 1.4182597820299998, "brain": 8.929133858270001, "conclus": 4.84615384615, "densiti": 7.3465987968499995, "user": 7.71053909665, "creat": 1.2492917847}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  The Python Graph Gallery</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/11/python-graph-gallery.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb The Python Graph Gallery Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2017/11/capsule-networks-shaking-up-ai.html\" rel=\"prev\" title=\"Capsule Networks Are Shaking up AI\u200a \u2013 Here\u2019s How to Use Them\"/>\n<link href=\"https://www.kdnuggets.com/2017/11/rework-deep-learning-robotics-healthcare-summits.html\" rel=\"next\" title=\"Deep Learning in Robotics and Healthcare Summits: Join &amp; save with KDnuggets offer\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2017/11/python-graph-gallery.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=74643\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2017/11/python-graph-gallery.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-74643 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 16-Nov, 2017  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/11/index.html\">Nov</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/11/opinions-interviews.html\">Opinions, Interviews</a> \u00bb The Python Graph Gallery (\u00a0<a href=\"/2017/n45.html\">17:n45</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">The Python Graph Gallery</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/11/capsule-networks-shaking-up-ai.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/11/rework-deep-learning-robotics-healthcare-summits.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/data-visualization\" rel=\"tag\">Data Visualization</a>, <a href=\"https://www.kdnuggets.com/tag/matplotlib\" rel=\"tag\">Matplotlib</a>, <a href=\"https://www.kdnuggets.com/tag/python\" rel=\"tag\">Python</a>, <a href=\"https://www.kdnuggets.com/tag/seaborn\" rel=\"tag\">Seaborn</a></div>\n<br/>\n<p class=\"excerpt\">\n     Welcome to the Python Graph Gallery, a website that displays hundreds of python charts with their reproducible code snippets.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><strong>By <a href=\"https://holtzyan.wordpress.com/\">Yan Holtz</a>, Queensland Brain Institute of Brisbane</strong></p>\n<p><a href=\"https://www.python.org/\">Python</a> is currently the leading programming language in the field of data science, followed close by <a href=\"https://www.r-project.org/\">R</a> [ref: <a href=\"https://www.kdnuggets.com/2017/08/python-overtakes-r-leader-analytics-data-science.html\">KDnuggets</a>]. Data visualization is a key step in this area, and Python offers <a href=\"https://python-graph-gallery.com/all-charts/\">great possibilities</a> when it comes to representing your data graphically. However, the huge number of tools and the potential complexity of the documentation makes it difficult to build a desired chart.</p>\n<p>The <a href=\"https://www.python-graph-gallery.com/\">Python Graph Gallery</a> is a website that displays hundreds of graphics made with python, always providing a reproducible code snippet.</p>\n<p><strong>400 graphics and 40 sections</strong></p>\n<p>The gallery currently provides about 400 distinct charts organized in 40 sections. Each section is represented by a logo made by designer <a href=\"http://www.conor.fr/indexEN.html\">Conor Healy</a>. The color depends of the topic of the graphic: distribution, correlation, part of a whole, maps, flow, evolution\u2026 This classification is inspired from the <a href=\"https://policyviz.com/2014/09/09/graphic-continuum/\">graphic continuum</a> and should allow you to quickly find the chart you need.</p>\n<p><img alt=\"Python Graph Gallery 1\" src=\"/images/python-graph-gallery1-609.jpg\" width=\"90%\"/></p>\n<p>Of course, most common plot types like <a href=\"https://python-graph-gallery.com/barplot/\">barplot</a>, <a href=\"http://python-graph-gallery.com/scatter-plot/\">scatterplot</a>, <a href=\"http://python-graph-gallery.com/boxplot/\">boxplot</a> or <a href=\"http://python-graph-gallery.com/histogram/\">histograms</a> are present. But some less common data visualization types are present as well, like <a href=\"https://python-graph-gallery.com/lollipop-plot/\">lollipop</a> plot, <a href=\"https://python-graph-gallery.com/bubble-plot/\">bubble</a> plot, <a href=\"https://python-graph-gallery.com/2d-density-plot/\">2D density</a> plot or <a href=\"https://python-graph-gallery.com/wordcloud/\">wordclouds</a>.</p>\n<p><strong>From easy to tricky</strong></p>\n<p>Once you enter a chart section, several examples are displayed, from the easiest to the hardest. Usually, the first example describes how the input dataset must be formatted, and how to make the graphic using the default parameters. Explanations are provided, code is shortened to its strict minimum and commented line by line, this makes it easy to understand how the function works. Here is an overview of the <a href=\"https://python-graph-gallery.com/70-basic-density-plot-with-seaborn/\"><span style=\"font-weight: 400;\">most simple density plot</span></a>\u00a0you can do:</p>\n<p><img alt=\"\" class=\"aligncenter wp-image-74647\" height=\"406\" src=\"/wp-content/uploads/python-graph-gallery-2-2.jpg\" width=\"396\"/></p>\n<p>Progressively, examples lead you from a very basic version to highly customized charts. Each example aims to explain one particular tip, like customizing colours, flipping axes, adding several groups and so on. At the end of the section, you will find some \u2018real life examples\u2019 combining all these tips to get a nice customized figure.</p>\n<p><img align=\"center\" alt=\"Python Graph Gallery 3\" class=\"aligncenter\" height=\"400\" src=\"/images/python-graph-gallery3-391.jpg\" width=\"391\"/></p>\n<p><strong>A focus on Matplotlib and Seaborn</strong></p>\n<p>A bunch of libraries exist when it comes to making charts with python. I decided to rely mainly on <a href=\"https://python-graph-gallery.com/matplotlib/\">Matplotlib</a> and <a href=\"https://python-graph-gallery.com/seaborn/\">Seaborn</a>, these are currently the main 2 tools used. Almost every type of chart is feasible with them. When it is not, I used other libraries like <a href=\"https://python-graph-gallery.com/map/\">folium</a> for maps or <a href=\"https://python-graph-gallery.com/network-chart/\">networkX</a> for networks.</p>\n<p>Note that both Matplotlib and Seaborn have a dedicated page showing tips generic to every type of chart, like customizing axes and titles, calling different themes, controlling colours... These pages can be useful to quickly find again the every-day code snippets that we tend to forget.</p>\n<p><img align=\"center\" alt=\"Python Graph Gallery 4\" class=\"aligncenter\" src=\"/images/python-graph-gallery4-202.jpg\" width=\"202\"/></p>\n<p>Visit this link\u00a0<a href=\"https://python-graph-gallery.com/191-custom-axis-on-matplotlib-chart/\">here</a>\u00a0for the code.</p>\n<p><strong>Conclusion</strong><br>\nThe <a href=\"http://www.python-graph-gallery.com/\"><span style=\"font-weight: 400;\">Python Graph Gallery</span></a> displays hundreds of graphics and can hopefully help you to quickly realise the chart you need. In this sense, it mainly aims to help users on a technical point of view.</br></p>\n<p>However, the goal is also to increase the knowledge of users in the field of data visualization:</p>\n<ul class='\"three_ul'>\n<li>By visiting the website, you may discover new type of dataviz options that could fit your data</li>\n<li>Each section is introduced by a short description explaining when the chart type is advised</li>\n<li>A bad chart section is sometimes included at the bottom of a section, warning you about the common mistakes made on this type of chart</li>\n</ul>\n<p>The gallery is a project developed by Yan Holtz during his nights and holidays. Thus, please be indulgent concerning bugs, imprecisions and English language mistakes. Any bug or feedback is strongly welcome at <a href=\"mailto:yan.holtz.data@gmail.com\"><span style=\"font-weight: 400;\">yan.holtz.data@gmail.com</span></a><span style=\"font-weight: 400;\"> or via twitter: </span><a href=\"https://twitter.com/R_Graph_Gallery?lang=en\"><span style=\"font-weight: 400;\">@R_Graph_Gallery</span></a><span style=\"font-weight: 400;\">. Last but not least, note that the Python graph gallery has a twin sister: the </span><a href=\"http://www.r-graph-gallery.com/\"><span style=\"font-weight: 400;\">R graph gallery</span></a>.</p>\n<p><strong>Author Bio</strong></p>\n<p><a href=\"https://holtzyan.wordpress.com/\"><span style=\"font-weight: 400;\">Yan Holtz</span></a><span style=\"font-weight: 400;\"> is a passionate data analyst and bioinformatician currently working for the Queensland Brain Institute of Brisbane. \u00a0He has a special attraction for data visualization which lead him to build the </span><a href=\"http://www.r-graph-gallery.com/\"><span style=\"font-weight: 400;\">R</span></a><span style=\"font-weight: 400;\"> and the </span><a href=\"https://www.python-graph-gallery.com/\"><span style=\"font-weight: 400;\">Python</span></a><span style=\"font-weight: 400;\"> graph galleries. He can be reached at: <a href=\"mailto:yan.holtz.data@gmail.com\">yan.holtz.data@gmail.com</a>.</span></p>\n<p>Homepage: <a href=\"https://holtzyan.wordpress.com/\">https://holtzyan.wordpress.com/</a></p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2017/01/datascience-data-visualization-matplotlib.html\">Creating Data Visualization in Matplotlib</a></li>\n<li><a href=\"https://www.kdnuggets.com/2016/06/python-data-visualization-libraries.html\">10 Useful Python Data Visualization Libraries for Any Discipline</a></li>\n<li><a href=\"https://www.kdnuggets.com/2017/10/5-common-mistakes-bad-data-visualization.html\">The 5 Common Mistakes That Lead to Bad Data Visualization</a></li>\n</ul>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2017/11/capsule-networks-shaking-up-ai.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2017/11/rework-deep-learning-robotics-healthcare-summits.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2017/index.html\">2017</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/11/index.html\">Nov</a> \u00bb <a href=\"https://www.kdnuggets.com/2017/11/opinions-interviews.html\">Opinions, Interviews</a> \u00bb The Python Graph Gallery (\u00a0<a href=\"/2017/n45.html\">17:n45</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556328838\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.619 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 21:33:58 -->\n<!-- Compression = gzip -->", "content_tokenized": ["yan", "holtz", "queensland", "brain", "institut", "brisban", "python", "current", "the", "lead", "program", "languag", "the", "field", "data", "scienc", "follow", "close", "ref", "kdnugget", "data", "visual", "key", "step", "this", "area", "and", "python", "offer", "great", "possibl", "when", "come", "repres", "data", "graphic", "howev", "the", "huge", "number", "tool", "and", "the", "potenti", "complex", "the", "document", "make", "difficult", "build", "desir", "chart", "the", "python", "graph", "galleri", "websit", "that", "display", "hundr", "graphic", "made", "with", "python", "alway", "provid", "reproduc", "code", "snippet", "num", "graphic", "and", "num", "section", "the", "galleri", "current", "provid", "about", "num", "distinct", "chart", "organ", "num", "section", "each", "section", "repres", "logo", "made", "design", "conor", "heali", "the", "color", "depend", "the", "topic", "the", "graphic", "distribut", "correl", "part", "whole", "map", "flow", "evolution\u2026", "this", "classif", "inspir", "from", "the", "graphic", "continuum", "and", "should", "allow", "quick", "find", "the", "chart", "need", "cours", "most", "common", "plot", "type", "like", "barplot", "scatterplot", "boxplot", "histogram", "are", "present", "but", "some", "less", "common", "data", "visual", "type", "are", "present", "well", "like", "lollipop", "plot", "bubbl", "plot", "densiti", "plot", "wordcloud", "from", "easi", "tricki", "onc", "enter", "chart", "section", "sever", "exampl", "are", "display", "from", "the", "easiest", "the", "hardest", "usual", "the", "first", "exampl", "describ", "how", "the", "input", "dataset", "must", "format", "and", "how", "make", "the", "graphic", "use", "the", "default", "paramet", "explan", "are", "provid", "code", "shorten", "strict", "minimum", "and", "comment", "line", "line", "this", "make", "easi", "understand", "how", "the", "function", "work", "here", "overview", "the", "most", "simpl", "densiti", "plot", "can", "progress", "exampl", "lead", "from", "veri", "basic", "version", "high", "custom", "chart", "each", "exampl", "aim", "explain", "one", "particular", "tip", "like", "custom", "colour", "flip", "axe", "sever", "group", "and", "the", "end", "the", "section", "will", "find", "some", "real", "life", "exampl", "combin", "all", "these", "tip", "get", "nice", "custom", "figur", "focus", "matplotlib", "and", "seaborn", "bunch", "librari", "exist", "when", "come", "make", "chart", "with", "python", "decid", "reli", "main", "matplotlib", "and", "seaborn", "these", "are", "current", "the", "main", "num", "tool", "use", "almost", "everi", "type", "chart", "feasibl", "with", "them", "when", "not", "use", "other", "librari", "like", "folium", "for", "map", "networkx", "for", "network", "note", "that", "both", "matplotlib", "and", "seaborn", "have", "dedic", "page", "show", "tip", "generic", "everi", "type", "chart", "like", "custom", "axe", "and", "titl", "call", "differ", "theme", "control", "colour", "these", "page", "can", "use", "quick", "find", "again", "the", "everyday", "code", "snippet", "that", "tend", "forget", "visit", "this", "link", "here", "for", "the", "code", "conclus", "the", "python", "graph", "galleri", "display", "hundr", "graphic", "and", "can", "hope", "help", "quick", "realis", "the", "chart", "need", "this", "sens", "main", "aim", "help", "user", "technic", "point", "view", "howev", "the", "goal", "also", "increas", "the", "knowledg", "user", "the", "field", "data", "visual", "visit", "the", "websit", "may", "discov", "new", "type", "dataviz", "option", "that", "could", "fit", "data", "each", "section", "introduc", "short", "descript", "explain", "when", "the", "chart", "type", "advis", "bad", "chart", "section", "sometim", "includ", "the", "bottom", "section", "warn", "about", "the", "common", "mistak", "made", "this", "type", "chart", "the", "galleri", "project", "develop", "yan", "holtz", "dure", "his", "night", "and", "holiday", "thus", "pleas", "indulg", "concern", "bug", "imprecis", "and", "english", "languag", "mistak", "ani", "bug", "feedback", "strong", "welcom", "yanholtzdata", "gmailcom", "via", "twitter", "rgraphgalleri", "last", "but", "not", "least", "note", "that", "the", "python", "graph", "galleri", "has", "twin", "sister", "the", "graph", "galleri", "author", "bio", "yan", "holtz", "passion", "data", "analyst", "and", "bioinformatician", "current", "work", "for", "the", "queensland", "brain", "institut", "brisban", "has", "special", "attract", "for", "data", "visual", "which", "lead", "him", "build", "the", "and", "the", "python", "graph", "galleri", "can", "reach", "yanholtzdata", "gmailcom", "homepag", "relat", "creat", "data", "visual", "matplotlib", "num", "use", "python", "data", "visual", "librari", "for", "ani", "disciplin", "the", "num", "common", "mistak", "that", "lead", "bad", "data", "visual"], "timestamp_scraper": 1556367474.92324, "title": "The Python Graph Gallery", "read_time": 207.0, "content_html": "<div class=\"post\" id=\"post-\">\n<p><strong>By <a href=\"https://holtzyan.wordpress.com/\">Yan Holtz</a>, Queensland Brain Institute of Brisbane</strong></p>\n<p><a href=\"https://www.python.org/\">Python</a> is currently the leading programming language in the field of data science, followed close by <a href=\"https://www.r-project.org/\">R</a> [ref: <a href=\"https://www.kdnuggets.com/2017/08/python-overtakes-r-leader-analytics-data-science.html\">KDnuggets</a>]. Data visualization is a key step in this area, and Python offers <a href=\"https://python-graph-gallery.com/all-charts/\">great possibilities</a> when it comes to representing your data graphically. However, the huge number of tools and the potential complexity of the documentation makes it difficult to build a desired chart.</p>\n<p>The <a href=\"https://www.python-graph-gallery.com/\">Python Graph Gallery</a> is a website that displays hundreds of graphics made with python, always providing a reproducible code snippet.</p>\n<p><strong>400 graphics and 40 sections</strong></p>\n<p>The gallery currently provides about 400 distinct charts organized in 40 sections. Each section is represented by a logo made by designer <a href=\"http://www.conor.fr/indexEN.html\">Conor Healy</a>. The color depends of the topic of the graphic: distribution, correlation, part of a whole, maps, flow, evolution\u2026 This classification is inspired from the <a href=\"https://policyviz.com/2014/09/09/graphic-continuum/\">graphic continuum</a> and should allow you to quickly find the chart you need.</p>\n<p><img alt=\"Python Graph Gallery 1\" src=\"/images/python-graph-gallery1-609.jpg\" width=\"90%\"/></p>\n<p>Of course, most common plot types like <a href=\"https://python-graph-gallery.com/barplot/\">barplot</a>, <a href=\"http://python-graph-gallery.com/scatter-plot/\">scatterplot</a>, <a href=\"http://python-graph-gallery.com/boxplot/\">boxplot</a> or <a href=\"http://python-graph-gallery.com/histogram/\">histograms</a> are present. But some less common data visualization types are present as well, like <a href=\"https://python-graph-gallery.com/lollipop-plot/\">lollipop</a> plot, <a href=\"https://python-graph-gallery.com/bubble-plot/\">bubble</a> plot, <a href=\"https://python-graph-gallery.com/2d-density-plot/\">2D density</a> plot or <a href=\"https://python-graph-gallery.com/wordcloud/\">wordclouds</a>.</p>\n<p><strong>From easy to tricky</strong></p>\n<p>Once you enter a chart section, several examples are displayed, from the easiest to the hardest. Usually, the first example describes how the input dataset must be formatted, and how to make the graphic using the default parameters. Explanations are provided, code is shortened to its strict minimum and commented line by line, this makes it easy to understand how the function works. Here is an overview of the <a href=\"https://python-graph-gallery.com/70-basic-density-plot-with-seaborn/\"><span style=\"font-weight: 400;\">most simple density plot</span></a>\u00a0you can do:</p>\n<p><img alt=\"\" class=\"aligncenter wp-image-74647\" height=\"406\" src=\"/wp-content/uploads/python-graph-gallery-2-2.jpg\" width=\"396\"/></p>\n<p>Progressively, examples lead you from a very basic version to highly customized charts. Each example aims to explain one particular tip, like customizing colours, flipping axes, adding several groups and so on. At the end of the section, you will find some \u2018real life examples\u2019 combining all these tips to get a nice customized figure.</p>\n<p><img align=\"center\" alt=\"Python Graph Gallery 3\" class=\"aligncenter\" height=\"400\" src=\"/images/python-graph-gallery3-391.jpg\" width=\"391\"/></p>\n<p><strong>A focus on Matplotlib and Seaborn</strong></p>\n<p>A bunch of libraries exist when it comes to making charts with python. I decided to rely mainly on <a href=\"https://python-graph-gallery.com/matplotlib/\">Matplotlib</a> and <a href=\"https://python-graph-gallery.com/seaborn/\">Seaborn</a>, these are currently the main 2 tools used. Almost every type of chart is feasible with them. When it is not, I used other libraries like <a href=\"https://python-graph-gallery.com/map/\">folium</a> for maps or <a href=\"https://python-graph-gallery.com/network-chart/\">networkX</a> for networks.</p>\n<p>Note that both Matplotlib and Seaborn have a dedicated page showing tips generic to every type of chart, like customizing axes and titles, calling different themes, controlling colours... These pages can be useful to quickly find again the every-day code snippets that we tend to forget.</p>\n<p><img align=\"center\" alt=\"Python Graph Gallery 4\" class=\"aligncenter\" src=\"/images/python-graph-gallery4-202.jpg\" width=\"202\"/></p>\n<p>Visit this link\u00a0<a href=\"https://python-graph-gallery.com/191-custom-axis-on-matplotlib-chart/\">here</a>\u00a0for the code.</p>\n<p><strong>Conclusion</strong><br>\nThe <a href=\"http://www.python-graph-gallery.com/\"><span style=\"font-weight: 400;\">Python Graph Gallery</span></a> displays hundreds of graphics and can hopefully help you to quickly realise the chart you need. In this sense, it mainly aims to help users on a technical point of view.</br></p>\n<p>However, the goal is also to increase the knowledge of users in the field of data visualization:</p>\n<ul class='\"three_ul'>\n<li>By visiting the website, you may discover new type of dataviz options that could fit your data</li>\n<li>Each section is introduced by a short description explaining when the chart type is advised</li>\n<li>A bad chart section is sometimes included at the bottom of a section, warning you about the common mistakes made on this type of chart</li>\n</ul>\n<p>The gallery is a project developed by Yan Holtz during his nights and holidays. Thus, please be indulgent concerning bugs, imprecisions and English language mistakes. Any bug or feedback is strongly welcome at <a href=\"mailto:yan.holtz.data@gmail.com\"><span style=\"font-weight: 400;\">yan.holtz.data@gmail.com</span></a><span style=\"font-weight: 400;\"> or via twitter: </span><a href=\"https://twitter.com/R_Graph_Gallery?lang=en\"><span style=\"font-weight: 400;\">@R_Graph_Gallery</span></a><span style=\"font-weight: 400;\">. Last but not least, note that the Python graph gallery has a twin sister: the </span><a href=\"http://www.r-graph-gallery.com/\"><span style=\"font-weight: 400;\">R graph gallery</span></a>.</p>\n<p><strong>Author Bio</strong></p>\n<p><a href=\"https://holtzyan.wordpress.com/\"><span style=\"font-weight: 400;\">Yan Holtz</span></a><span style=\"font-weight: 400;\"> is a passionate data analyst and bioinformatician currently working for the Queensland Brain Institute of Brisbane. \u00a0He has a special attraction for data visualization which lead him to build the </span><a href=\"http://www.r-graph-gallery.com/\"><span style=\"font-weight: 400;\">R</span></a><span style=\"font-weight: 400;\"> and the </span><a href=\"https://www.python-graph-gallery.com/\"><span style=\"font-weight: 400;\">Python</span></a><span style=\"font-weight: 400;\"> graph galleries. He can be reached at: <a href=\"mailto:yan.holtz.data@gmail.com\">yan.holtz.data@gmail.com</a>.</span></p>\n<p>Homepage: <a href=\"https://holtzyan.wordpress.com/\">https://holtzyan.wordpress.com/</a></p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"https://www.kdnuggets.com/2017/01/datascience-data-visualization-matplotlib.html\">Creating Data Visualization in Matplotlib</a></li>\n<li><a href=\"https://www.kdnuggets.com/2016/06/python-data-visualization-libraries.html\">10 Useful Python Data Visualization Libraries for Any Discipline</a></li>\n<li><a href=\"https://www.kdnuggets.com/2017/10/5-common-mistakes-bad-data-visualization.html\">The 5 Common Mistakes That Lead to Bad Data Visualization</a></li>\n</ul>\n</div> ", "website": "kdnuggets"}