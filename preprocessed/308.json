{"content": "By Taposh Dutta-Roy . Basics of GPU Computing for Data Scientists GPU\u2019s have become the new core for image analytics. More and more data scientists are looking into using GPU for image processing. In this article I review the basics of GPU\u2019s that are needed for a data scientist and list a frame work discussed in literature for suitability of GPU for an algorithm. Lets start with what is a GPU? Graphics Processing Unit (GPU) were originally created for rendering graphics. However due to their high performance and low cost they have become the new standard of image processing. Their application areas include image restoration, segmentation (labeling), de-noising, filtering, interpolation and reconstruction. A web search on what is a GPU would result to\u00a0: \u201cA graphics processing unit ( GPU ) is a computer chip that performs rapid mathematical calculations, primarily for the purpose of rendering images.\u201d What is GPU Computing? Nvidia\u2019s blog defines GPU computing is the use of a graphics processing unit (GPU) together with a CPU to accelerate scientific, analytics, engineering, consumer, and enterprise applications. They also say if CPU is the brain then GPU is Soul of the computer. GPU\u2019s used for general-purpose computations have a highly data parallel architecture. They are composed of a number of cores. Each of these cores have a number of functional units, such as arithmetic and logic units (ALUs) etc. One or more of these functional units are used to process each thread of execution. These group of functional units that help the thread are called \u201cthread processors\u201d . All thread processors in a core of GPU perform the same instructions, as they share the same control unit . This means that GPUs can perform the same instruction on each pixel of an image in parallel. GPU architectures are complex and differ from manufacture to manufacture. The two main players in GPU market are Nvidia and AMD. Nvidia calls thread processors as CUDA (Compute Unified Device Architecture) cores, AMD calls them as Stream Processors (SP)\u00a0. The main difference between a thread processor and a CPU core is that each CPU core can perform different instructions on different data in parallel because each CPU core has separate control unit. Researchers have defined core as a processing unit with an independent flow of control. Based on this definition, scientists are referring to a group of thread processors that share the same control unit as cores. GPU\u2019s are constructed to fit many thread processors on a chip while CPU\u2019s are focused on advanced control units and large caches. There are 2 main frameworks for GPU programming\u200a\u2014\u200a OpenCL and CUDA. CUDA programming language can be used with Nvidia only where as OpenCL is an open standard for parallel computing on different devices including GPUs, CPUs and FPGAs. There are a few image processing libraries that provide GPU implementation\u200a\u2014\u200aOpenCV,ArrayFire, Nvidia Performance Primities (NPP), CUVLIB, Intel Integrated Performance Primitivies, OpenCL Integrated Performance Primitives and the Insight Took Kit (ITK). Out of these the larger ones are OpenCV (supports CUDA and OpenCL) and ITK (supports only OpenCL). Algorithm suitability for GPU usage Erik Smistad et.al. discuss 5 factors that define the suitability of an algorithm towards a GPU implementation. These are\u200a\u2014\u200aData parallelism, thread count, branch divergence, memory usage and synchronization. I have created this mapping table for easy reference using the framework. GPU suitability decision for your algorithm As a data scientist knowing this will help you selecting the suitability of GPU for your algorithm. Nvidia CUDA is more popular since most apple laptops have them but others are getting steam as well. Let me know if you have questions and comments. Original . Related: Popular Deep Learning Tools \u2013 a review Where to Learn Deep Learning \u2013 Courses, Tutorials, Software CuDNN \u2013 A new library for Deep Learning", "title_html": "<h1 id=\"title\">Basics of GPU Computing for Data Scientists</h1> ", "url": "https://www.kdnuggets.com/2016/04/basics-gpu-computing-data-scientists.html", "tfidf": {"tfidf": {"base": 1.14628158845, "relat": 1.23750876919, "label": 4.47715736041, "alus": 1587.6, "web": 5.17133550489, "fit": 3.37070063694, "laptop": 69.327510917, "factor": 2.89127663449, "new": 3.0536641662, "were": 1.02458857696, "reconstruct": 6.67058823529, "would": 1.0828729281799998, "number": 2.20285833218, "togeth": 1.58095996813, "parallel": 22.895875396599997, "etc": 4.2066772655, "function": 7.486325055, "stream": 6.5118949959000005, "logic": 8.929133858270001, "kit": 17.542541436500002, "tabl": 3.82093862816, "devic": 10.01640378548, "chip": 34.475570032600004, "nvidia": 2721.6000000000004, "toward": 1.6303142329, "know": 5.1865403463, "them": 2.19752231988, "primiti": 1587.6, "defin": 8.184911496809999, "render": 11.9548192771, "where": 2.13430127042, "complex": 2.34021226415, "creat": 2.4985835694, "tool": 4.99716713881, "start": 1.26673581744, "took": 1.4009883515700001, "articl": 2.01805008262, "instruct": 12.507352941179999, "segment": 7.55640171347, "insight": 11.8037174721, "they": 4.12069301148, "look": 1.9086318826599997, "execut": 2.2363713199, "standard": 3.7831526271800007, "due": 1.23789473684, "frame": 6.280063291139999, "smistad": 1587.6, "support": 2.5371154614400004, "deep": 10.88391224862, "mani": 1.04426757877, "will": 1.22481098596, "data": 23.63504891538, "the": 19.0, "low": 2.13072070863, "open": 1.24556723678, "provid": 1.21552714187, "purpos": 2.23416830847, "diverg": 14.1497326203, "select": 2.02345144022, "manufactur": 6.7157360405999995, "perform": 12.251181634000002, "but": 1.01632417899, "definit": 3.24, "need": 1.4372623574099999, "there": 2.08182533438, "denois": 1587.6, "arithmet": 38.911764705900005, "num": 2.00063008002, "applic": 6.85344269372, "review": 4.419821826280001, "origin": 2.27449856734, "has": 1.0436497502, "have": 8.119158729119999, "integr": 5.650827549380001, "enterpris": 6.414545454550001, "cpus": 174.46153846200002, "synchron": 26.0262295082, "out": 1.06016694491, "high": 2.2955465587, "basic": 5.460361135, "unit": 13.84736153508, "comment": 3.05954904606, "cours": 2.15092805853, "tutori": 59.4606741573, "also": 1.01476510067, "count": 3.48157894737, "mean": 1.44906900329, "branch": 3.14563106796, "acceler": 8.15408320493, "etal": 1587.6, "mathemat": 7.391061452510001, "usag": 12.855060728739998, "research": 1.9420183486200002, "cudnn": 1587.6, "literatur": 3.68096452585, "area": 1.3881262568900001, "becom": 2.24984057252, "popular": 3.01538461538, "easi": 5.2937645882, "compos": 2.5060773480700003, "primarili": 2.43459592087, "then": 1.08657860516, "separ": 1.6012102874399998, "graphic": 36.143426294840005, "scientif": 4.15275961287, "primit": 13.7573656846, "share": 3.7132499123000002, "pixel": 86.28260869569999, "larger": 2.2407904022599996, "blog": 14.1876675603, "construct": 1.9320920043799998, "into": 1.01502461479, "such": 1.06151377374, "other": 1.00992366412, "refer": 2.6004914005, "calcul": 6.12972972973, "one": 2.01254991444, "two": 1.01379310345, "softwar": 10.2624434389, "fpgas": 1587.6, "algorithm": 139.753521127, "becaus": 1.1495184997499999, "imag": 18.909647779470003, "cach": 49.0, "get": 1.78562591385, "implement": 7.15296237892, "suitabl": 31.190569744599998, "control": 7.3479589003, "processor": 265.86602870800004, "process": 13.56198611856, "independ": 1.58950740889, "analyt": 34.513043478200004, "memori": 2.57392996109, "steam": 12.25, "includ": 2.0381282495599997, "filter": 16.8893617021, "consum": 4.93043478261, "well": 1.0655748708, "languag": 2.29488291414, "howev": 1.0945191313299998, "question": 2.20408163265, "from": 1.00056721497, "engin": 2.47135740971, "work": 1.11520089913, "differ": 6.182724511249999, "list": 1.36321483771, "market": 2.36602086438, "most": 1.02096463023, "between": 1.03453668708, "arrayfir": 1587.6, "player": 3.54375, "thread": 218.1435114501, "for": 16.00504064016, "core": 46.231799650599996, "discuss": 4.39352428394, "all": 1.01146788991, "primitivi": 1587.6, "with": 4.004792835959999, "program": 4.04278074866, "taposh": 1587.6, "are": 15.4485890367, "intel": 54.5567010309, "result": 1.14611608432, "that": 8.03187251, "cost": 2.31935719503, "architectur": 15.38372093022, "call": 3.2029589778, "more": 4.0686827268, "and": 17.00107086621, "duttaroy": 1587.6, "soul": 6.813733905580001, "restor": 2.97526236882, "these": 5.3707713126000005, "erik": 27.0, "focus": 2.01012914662, "librari": 5.3653261237, "map": 4.0728578758300005, "group": 2.41993750476, "can": 3.52878417426, "flow": 4.41, "comput": 31.422068283040005, "search": 3.2539454806299997, "onli": 2.0512953033200003, "each": 5.948741007200001, "their": 2.0309581681, "few": 1.31729173581, "this": 5.0189681335500005, "framework": 16.400826446279996, "generalpurpos": 1587.6, "advanc": 1.9997480791, "say": 1.7544480053, "opencv": 3175.2, "unifi": 7.60709151893, "interpol": 50.4, "scientist": 23.4713187463, "sinc": 1.08368600683, "opencl": 7938.0, "appl": 13.6980155306, "rapid": 2.62586834271, "gpus": 2116.8, "decis": 2.16, "what": 3.7603031738399997, "let": 6.97233201582, "use": 6.177832544279999, "while": 1.0441988950299999, "help": 2.79925945518, "main": 3.7591160220899997, "larg": 1.18574949585, "learn": 9.2910021946, "brain": 8.929133858270001, "same": 4.47431832592}, "logtfidf": {"base": 0.13652330228700002, "relat": 0.21310030165399999, "label": 1.49898832727, "alus": 7.369978720910001, "web": 1.6431309733200001, "fit": 1.2151206268899999, "laptop": 4.23884181035, "factor": 1.06169814662, "new": 0.0531898405533, "were": 0.024291143681099997, "reconstruct": 1.89770804724, "would": 0.0796176279647, "number": 0.1932171568372, "togeth": 0.458032237308, "parallel": 7.6075943411, "etc": 1.4366730879700003, "function": 2.743397224782, "stream": 1.8736305038599999, "logic": 2.18931939783, "kit": 2.8646288702, "tabl": 1.34049610661, "devic": 3.2221538940599994, "chip": 5.694207555299999, "nvidia": 36.70329451446, "toward": 0.48877277716000006, "know": 1.905839388796, "them": 0.1883666538186, "primiti": 7.369978720910001, "defin": 3.01104032775, "render": 3.5759746066199996, "where": 0.1299842774914, "complex": 0.8502416364309999, "creat": 0.445153637028, "tool": 1.60887117963, "start": 0.236443369291, "took": 0.337177952953, "articl": 0.702131739574, "instruct": 4.28311325397, "segment": 2.02239511306, "insight": 2.46841452187, "they": 0.1189079790704, "look": 0.6463866936, "execut": 0.804854605864, "standard": 1.27482101964, "due": 0.21341214386399998, "frame": 1.8373800586400002, "smistad": 7.369978720910001, "support": 0.475761220074, "deep": 3.8660204094, "mani": 0.0433157581221, "will": 0.202786534915, "data": 8.5177440936, "the": 0.0, "low": 0.7564602833490001, "open": 0.219591038029, "provid": 0.19517784432500002, "purpos": 0.803869037322, "diverg": 2.64969572782, "select": 0.704804687133, "manufactur": 2.42261250964, "perform": 3.40944680464, "but": 0.0161923720719, "definit": 1.1755733298, "need": 0.362740163442, "there": 0.080195785851, "denois": 7.369978720910001, "arithmet": 3.6612966394999997, "num": 0.0006299807907940001, "applic": 2.46320785698, "review": 1.5859044078420002, "origin": 0.257224875174, "has": 0.0427239448548, "have": 0.1182800187296, "integr": 2.07730964558, "enterpris": 1.8585681389, "cpus": 5.16170430739, "synchron": 3.25910485674, "out": 0.0584263909193, "high": 0.27564757308000004, "basic": 2.0087354979, "unit": 1.718256741804, "comment": 1.11826753454, "cours": 0.765899404133, "tutori": 4.0853151555, "also": 0.0146571578, "count": 1.24748591139, "mean": 0.37092128352, "branch": 1.14601452756, "acceler": 2.0985188085299997, "etal": 7.369978720910001, "mathemat": 2.00027135827, "usag": 3.72118076856, "research": 0.663727818138, "cudnn": 7.369978720910001, "literatur": 1.3031748172600002, "area": 0.327954821122, "becom": 0.23542435297800002, "popular": 0.8211604175499999, "easi": 1.6665296351499999, "compos": 0.918718721148, "primarili": 0.8897807965100001, "then": 0.08303386523089999, "separ": 0.470759772949, "graphic": 8.80480290288, "scientif": 1.42377308021, "primit": 2.62157436683, "share": 1.237520599494, "pixel": 4.45762805629, "larger": 0.806828661778, "blog": 2.65237310559, "construct": 0.658603355972, "into": 0.0149128632287, "such": 0.059695977806, "other": 0.00987474791976, "refer": 0.525106493596, "calcul": 1.8131506592099997, "one": 0.012510703291, "two": 0.0136988443582, "softwar": 2.32849096333, "fpgas": 7.369978720910001, "algorithm": 16.6522119759, "becaus": 0.139343158825, "imag": 6.95633475103, "cach": 3.89182029811, "get": 0.579769005782, "implement": 2.54875881814, "suitabl": 9.1533894246, "control": 1.92492330793, "processor": 25.45957666966, "process": 4.2226335922, "independ": 0.463424162503, "analyt": 5.696380287719999, "memori": 0.9454338986599999, "steam": 2.50552593699, "includ": 0.037769362781, "filter": 2.82668393864, "consum": 1.5954271753600002, "well": 0.0635144383156, "languag": 0.8306818244059999, "howev": 0.0903151173475, "question": 0.790310929014, "from": 0.000567054168866, "engin": 0.904767558276, "work": 0.109034567273, "differ": 1.0616056065600001, "list": 0.309845761506, "market": 0.8612095839370001, "most": 0.020747896295599998, "between": 0.033953681165299995, "arrayfir": 7.369978720910001, "player": 1.26518548849, "thread": 28.691357204430002, "for": 0.005039846326352001, "core": 15.310827724500001, "discuss": 1.57396904524, "all": 0.011402632097799998, "primitivi": 7.369978720910001, "with": 0.00478996685356, "program": 1.4075711575299998, "taposh": 7.369978720910001, "are": 0.4420121037405, "intel": 3.9992405467300003, "result": 0.136378908381, "that": 0.03180918703712, "cost": 0.84129007618, "architectur": 4.90409273757, "call": 0.1963883233464, "more": 0.06809972639999999, "and": 0.0010708324150812, "duttaroy": 7.369978720910001, "soul": 1.9189402673400002, "restor": 1.09033222631, "these": 0.357668097004, "erik": 3.295836866, "focus": 0.6981989720559999, "librari": 1.973619961886, "map": 1.40434493384, "group": 0.381189069594, "can": 0.487023289182, "flow": 1.4838746894600001, "comput": 10.94455132752, "search": 1.1798682540899998, "onli": 0.050648536658199995, "each": 0.86870844652, "their": 0.030721010245400002, "few": 0.275577913653, "this": 0.0189322452625, "framework": 4.20836909214, "generalpurpos": 7.369978720910001, "advanc": 0.6930212121780001, "say": 0.562154280552, "opencv": 14.739957441820001, "unifi": 2.02908090683, "interpol": 3.9199911750800003, "scientist": 7.7317064222, "sinc": 0.0803681994577, "opencl": 36.849893604550005, "appl": 2.61725097056, "rapid": 0.965411638564, "gpus": 13.929027225599999, "decis": 0.7701082216959999, "what": 0.677661890481, "let": 2.4976051345599997, "use": 0.1752481183896, "while": 0.04324998379380001, "help": 0.672415442688, "main": 0.676714621764, "larg": 0.17037506060600002, "learn": 3.37100825898, "brain": 2.18931939783, "same": 0.448238598416}, "logidf": {"base": 0.13652330228700002, "relat": 0.21310030165399999, "label": 1.49898832727, "alus": 7.369978720910001, "web": 1.6431309733200001, "fit": 1.2151206268899999, "laptop": 4.23884181035, "factor": 1.06169814662, "new": 0.0177299468511, "were": 0.024291143681099997, "reconstruct": 1.89770804724, "would": 0.0796176279647, "number": 0.0966085784186, "togeth": 0.458032237308, "parallel": 1.52151886822, "etc": 1.4366730879700003, "function": 0.914465741594, "stream": 1.8736305038599999, "logic": 2.18931939783, "kit": 2.8646288702, "tabl": 1.34049610661, "devic": 1.6110769470299997, "chip": 2.8471037776499997, "nvidia": 6.117215752409999, "toward": 0.48877277716000006, "know": 0.952919694398, "them": 0.0941833269093, "primiti": 7.369978720910001, "defin": 1.00368010925, "render": 1.7879873033099998, "where": 0.0649921387457, "complex": 0.8502416364309999, "creat": 0.222576818514, "tool": 1.60887117963, "start": 0.236443369291, "took": 0.337177952953, "articl": 0.702131739574, "instruct": 1.42770441799, "segment": 2.02239511306, "insight": 2.46841452187, "they": 0.0297269947676, "look": 0.6463866936, "execut": 0.804854605864, "standard": 0.63741050982, "due": 0.21341214386399998, "frame": 1.8373800586400002, "smistad": 7.369978720910001, "support": 0.237880610037, "deep": 1.2886734698, "mani": 0.0433157581221, "will": 0.202786534915, "data": 1.2168205848, "the": 0.0, "low": 0.7564602833490001, "open": 0.219591038029, "provid": 0.19517784432500002, "purpos": 0.803869037322, "diverg": 2.64969572782, "select": 0.704804687133, "manufactur": 1.21130625482, "perform": 0.42618085058, "but": 0.0161923720719, "definit": 1.1755733298, "need": 0.362740163442, "there": 0.0400978929255, "denois": 7.369978720910001, "arithmet": 3.6612966394999997, "num": 0.00031499039539700004, "applic": 1.23160392849, "review": 0.7929522039210001, "origin": 0.128612437587, "has": 0.0427239448548, "have": 0.0147850023412, "integr": 1.03865482279, "enterpris": 1.8585681389, "cpus": 5.16170430739, "synchron": 3.25910485674, "out": 0.0584263909193, "high": 0.13782378654000002, "basic": 1.00436774895, "unit": 0.143188061817, "comment": 1.11826753454, "cours": 0.765899404133, "tutori": 4.0853151555, "also": 0.0146571578, "count": 1.24748591139, "mean": 0.37092128352, "branch": 1.14601452756, "acceler": 2.0985188085299997, "etal": 7.369978720910001, "mathemat": 2.00027135827, "usag": 1.86059038428, "research": 0.663727818138, "cudnn": 7.369978720910001, "literatur": 1.3031748172600002, "area": 0.327954821122, "becom": 0.11771217648900001, "popular": 0.41058020877499996, "easi": 1.6665296351499999, "compos": 0.918718721148, "primarili": 0.8897807965100001, "then": 0.08303386523089999, "separ": 0.470759772949, "graphic": 2.20120072572, "scientif": 1.42377308021, "primit": 2.62157436683, "share": 0.618760299747, "pixel": 4.45762805629, "larger": 0.806828661778, "blog": 2.65237310559, "construct": 0.658603355972, "into": 0.0149128632287, "such": 0.059695977806, "other": 0.00987474791976, "refer": 0.262553246798, "calcul": 1.8131506592099997, "one": 0.0062553516455, "two": 0.0136988443582, "softwar": 2.32849096333, "fpgas": 7.369978720910001, "algorithm": 3.33044239518, "becaus": 0.139343158825, "imag": 0.99376210729, "cach": 3.89182029811, "get": 0.579769005782, "implement": 1.27437940907, "suitabl": 1.83067788492, "control": 0.38498466158600003, "processor": 3.63708238138, "process": 0.527829199025, "independ": 0.463424162503, "analyt": 2.8481901438599997, "memori": 0.9454338986599999, "steam": 2.50552593699, "includ": 0.0188846813905, "filter": 2.82668393864, "consum": 1.5954271753600002, "well": 0.0635144383156, "languag": 0.8306818244059999, "howev": 0.0903151173475, "question": 0.790310929014, "from": 0.000567054168866, "engin": 0.904767558276, "work": 0.109034567273, "differ": 0.212321121312, "list": 0.309845761506, "market": 0.8612095839370001, "most": 0.020747896295599998, "between": 0.033953681165299995, "arrayfir": 7.369978720910001, "player": 1.26518548849, "thread": 3.18792857827, "for": 0.00031499039539700004, "core": 1.53108277245, "discuss": 0.78698452262, "all": 0.011402632097799998, "primitivi": 7.369978720910001, "with": 0.00119749171339, "program": 0.7037855787649999, "taposh": 7.369978720910001, "are": 0.0294674735827, "intel": 3.9992405467300003, "result": 0.136378908381, "that": 0.00397614837964, "cost": 0.84129007618, "architectur": 1.63469757919, "call": 0.0654627744488, "more": 0.017024931599999998, "and": 6.29901420636e-05, "duttaroy": 7.369978720910001, "soul": 1.9189402673400002, "restor": 1.09033222631, "these": 0.0715336194008, "erik": 3.295836866, "focus": 0.6981989720559999, "librari": 0.986809980943, "map": 1.40434493384, "group": 0.190594534797, "can": 0.162341096394, "flow": 1.4838746894600001, "comput": 1.36806891594, "search": 1.1798682540899998, "onli": 0.025324268329099998, "each": 0.173741689304, "their": 0.015360505122700001, "few": 0.275577913653, "this": 0.0037864490525, "framework": 2.10418454607, "generalpurpos": 7.369978720910001, "advanc": 0.6930212121780001, "say": 0.562154280552, "opencv": 7.369978720910001, "unifi": 2.02908090683, "interpol": 3.9199911750800003, "scientist": 1.54634128444, "sinc": 0.0803681994577, "opencl": 7.369978720910001, "appl": 2.61725097056, "rapid": 0.965411638564, "gpus": 6.964513612799999, "decis": 0.7701082216959999, "what": 0.225887296827, "let": 1.2488025672799998, "use": 0.0292080197316, "while": 0.04324998379380001, "help": 0.336207721344, "main": 0.225571540588, "larg": 0.17037506060600002, "learn": 0.842752064745, "brain": 2.18931939783, "same": 0.112059649604}, "freq": {"base": 1, "relat": 1, "label": 1, "alus": 1, "web": 1, "fit": 1, "laptop": 1, "factor": 1, "new": 3, "were": 1, "reconstruct": 1, "would": 1, "number": 2, "togeth": 1, "parallel": 5, "etc": 1, "function": 3, "stream": 1, "logic": 1, "kit": 1, "tabl": 1, "devic": 2, "chip": 2, "nvidia": 6, "toward": 1, "know": 2, "them": 2, "primiti": 1, "defin": 3, "render": 2, "where": 2, "complex": 1, "creat": 2, "tool": 1, "start": 1, "took": 1, "articl": 1, "instruct": 3, "segment": 1, "insight": 1, "they": 4, "look": 1, "execut": 1, "standard": 2, "due": 1, "frame": 1, "smistad": 1, "support": 2, "deep": 3, "mani": 1, "will": 1, "data": 7, "the": 19, "low": 1, "open": 1, "provid": 1, "purpos": 1, "diverg": 1, "select": 1, "manufactur": 2, "perform": 8, "but": 1, "definit": 1, "need": 1, "there": 2, "denois": 1, "arithmet": 1, "num": 2, "applic": 2, "review": 2, "origin": 2, "has": 1, "have": 8, "integr": 2, "enterpris": 1, "cpus": 1, "synchron": 1, "out": 1, "high": 2, "basic": 2, "unit": 12, "comment": 1, "cours": 1, "tutori": 1, "also": 1, "count": 1, "mean": 1, "branch": 1, "acceler": 1, "etal": 1, "mathemat": 1, "usag": 2, "research": 1, "cudnn": 1, "literatur": 1, "area": 1, "becom": 2, "popular": 2, "easi": 1, "compos": 1, "primarili": 1, "then": 1, "separ": 1, "graphic": 4, "scientif": 1, "primit": 1, "share": 2, "pixel": 1, "larger": 1, "blog": 1, "construct": 1, "into": 1, "such": 1, "other": 1, "refer": 2, "calcul": 1, "one": 2, "two": 1, "softwar": 1, "fpgas": 1, "algorithm": 5, "becaus": 1, "imag": 7, "cach": 1, "get": 1, "implement": 2, "suitabl": 5, "control": 5, "processor": 7, "process": 8, "independ": 1, "analyt": 2, "memori": 1, "steam": 1, "includ": 2, "filter": 1, "consum": 1, "well": 1, "languag": 1, "howev": 1, "question": 1, "from": 1, "engin": 1, "work": 1, "differ": 5, "list": 1, "market": 1, "most": 1, "between": 1, "arrayfir": 1, "player": 1, "thread": 9, "for": 16, "core": 10, "discuss": 2, "all": 1, "primitivi": 1, "with": 4, "program": 2, "taposh": 1, "are": 15, "intel": 1, "result": 1, "that": 8, "cost": 1, "architectur": 3, "call": 3, "more": 4, "and": 17, "duttaroy": 1, "soul": 1, "restor": 1, "these": 5, "erik": 1, "focus": 1, "librari": 2, "map": 1, "group": 2, "can": 3, "flow": 1, "comput": 8, "search": 1, "onli": 2, "each": 5, "their": 2, "few": 1, "this": 5, "framework": 2, "generalpurpos": 1, "advanc": 1, "say": 1, "opencv": 2, "unifi": 1, "interpol": 1, "scientist": 5, "sinc": 1, "opencl": 5, "appl": 1, "rapid": 1, "gpus": 2, "decis": 1, "what": 3, "let": 2, "use": 6, "while": 1, "help": 2, "main": 3, "larg": 1, "learn": 4, "brain": 1, "same": 4}, "idf": {"base": 1.14628158845, "relat": 1.23750876919, "label": 4.47715736041, "alus": 1587.6, "web": 5.17133550489, "fit": 3.37070063694, "laptop": 69.327510917, "factor": 2.89127663449, "new": 1.0178880554, "were": 1.02458857696, "reconstruct": 6.67058823529, "would": 1.0828729281799998, "number": 1.10142916609, "togeth": 1.58095996813, "parallel": 4.57917507932, "etc": 4.2066772655, "function": 2.495441685, "stream": 6.5118949959000005, "logic": 8.929133858270001, "kit": 17.542541436500002, "tabl": 3.82093862816, "devic": 5.00820189274, "chip": 17.237785016300002, "nvidia": 453.6, "toward": 1.6303142329, "know": 2.59327017315, "them": 1.09876115994, "primiti": 1587.6, "defin": 2.72830383227, "render": 5.97740963855, "where": 1.06715063521, "complex": 2.34021226415, "creat": 1.2492917847, "tool": 4.99716713881, "start": 1.26673581744, "took": 1.4009883515700001, "articl": 2.01805008262, "instruct": 4.169117647059999, "segment": 7.55640171347, "insight": 11.8037174721, "they": 1.03017325287, "look": 1.9086318826599997, "execut": 2.2363713199, "standard": 1.8915763135900003, "due": 1.23789473684, "frame": 6.280063291139999, "smistad": 1587.6, "support": 1.2685577307200002, "deep": 3.6279707495399998, "mani": 1.04426757877, "will": 1.22481098596, "data": 3.37643555934, "the": 1.0, "low": 2.13072070863, "open": 1.24556723678, "provid": 1.21552714187, "purpos": 2.23416830847, "diverg": 14.1497326203, "select": 2.02345144022, "manufactur": 3.3578680202999998, "perform": 1.5313977042500002, "but": 1.01632417899, "definit": 3.24, "need": 1.4372623574099999, "there": 1.04091266719, "denois": 1587.6, "arithmet": 38.911764705900005, "num": 1.00031504001, "applic": 3.42672134686, "review": 2.2099109131400003, "origin": 1.13724928367, "has": 1.0436497502, "have": 1.0148948411399998, "integr": 2.8254137746900003, "enterpris": 6.414545454550001, "cpus": 174.46153846200002, "synchron": 26.0262295082, "out": 1.06016694491, "high": 1.14777327935, "basic": 2.7301805675, "unit": 1.15394679459, "comment": 3.05954904606, "cours": 2.15092805853, "tutori": 59.4606741573, "also": 1.01476510067, "count": 3.48157894737, "mean": 1.44906900329, "branch": 3.14563106796, "acceler": 8.15408320493, "etal": 1587.6, "mathemat": 7.391061452510001, "usag": 6.427530364369999, "research": 1.9420183486200002, "cudnn": 1587.6, "literatur": 3.68096452585, "area": 1.3881262568900001, "becom": 1.12492028626, "popular": 1.50769230769, "easi": 5.2937645882, "compos": 2.5060773480700003, "primarili": 2.43459592087, "then": 1.08657860516, "separ": 1.6012102874399998, "graphic": 9.035856573710001, "scientif": 4.15275961287, "primit": 13.7573656846, "share": 1.8566249561500001, "pixel": 86.28260869569999, "larger": 2.2407904022599996, "blog": 14.1876675603, "construct": 1.9320920043799998, "into": 1.01502461479, "such": 1.06151377374, "other": 1.00992366412, "refer": 1.30024570025, "calcul": 6.12972972973, "one": 1.00627495722, "two": 1.01379310345, "softwar": 10.2624434389, "fpgas": 1587.6, "algorithm": 27.9507042254, "becaus": 1.1495184997499999, "imag": 2.70137825421, "cach": 49.0, "get": 1.78562591385, "implement": 3.57648118946, "suitabl": 6.23811394892, "control": 1.46959178006, "processor": 37.980861244, "process": 1.69524826482, "independ": 1.58950740889, "analyt": 17.256521739100002, "memori": 2.57392996109, "steam": 12.25, "includ": 1.0190641247799999, "filter": 16.8893617021, "consum": 4.93043478261, "well": 1.0655748708, "languag": 2.29488291414, "howev": 1.0945191313299998, "question": 2.20408163265, "from": 1.00056721497, "engin": 2.47135740971, "work": 1.11520089913, "differ": 1.23654490225, "list": 1.36321483771, "market": 2.36602086438, "most": 1.02096463023, "between": 1.03453668708, "arrayfir": 1587.6, "player": 3.54375, "thread": 24.2381679389, "for": 1.00031504001, "core": 4.623179965059999, "discuss": 2.19676214197, "all": 1.01146788991, "primitivi": 1587.6, "with": 1.0011982089899998, "program": 2.02139037433, "taposh": 1587.6, "are": 1.02990593578, "intel": 54.5567010309, "result": 1.14611608432, "that": 1.00398406375, "cost": 2.31935719503, "architectur": 5.12790697674, "call": 1.0676529926, "more": 1.0171706817, "and": 1.00006299213, "duttaroy": 1587.6, "soul": 6.813733905580001, "restor": 2.97526236882, "these": 1.07415426252, "erik": 27.0, "focus": 2.01012914662, "librari": 2.68266306185, "map": 4.0728578758300005, "group": 1.20996875238, "can": 1.17626139142, "flow": 4.41, "comput": 3.9277585353800006, "search": 3.2539454806299997, "onli": 1.0256476516600002, "each": 1.18974820144, "their": 1.01547908405, "few": 1.31729173581, "this": 1.00379362671, "framework": 8.200413223139998, "generalpurpos": 1587.6, "advanc": 1.9997480791, "say": 1.7544480053, "opencv": 1587.6, "unifi": 7.60709151893, "interpol": 50.4, "scientist": 4.69426374926, "sinc": 1.08368600683, "opencl": 1587.6, "appl": 13.6980155306, "rapid": 2.62586834271, "gpus": 1058.4, "decis": 2.16, "what": 1.25343439128, "let": 3.48616600791, "use": 1.0296387573799999, "while": 1.0441988950299999, "help": 1.39962972759, "main": 1.25303867403, "larg": 1.18574949585, "learn": 2.32275054865, "brain": 8.929133858270001, "same": 1.11857958148}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Basics of GPU Computing for Data Scientists</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/basics-gpu-computing-data-scientists.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Basics of GPU Computing for Data Scientists Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/odsc-east-2016-journey-data-scientist.html\" rel=\"prev\" title=\"ODSC East 2016: 3 ways to become a better Data Scientist\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/vip-invitation-marketing-analytics-data-science-conference.html\" rel=\"next\" title=\"VIP Invitation to the Marketing Analytics &amp; Data Science Conference\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/04/basics-gpu-computing-data-scientists.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=47455\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/basics-gpu-computing-data-scientists.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-47455 single-format-standard post-template post-template-fullwidth-php\">\n<div class=\"main_wrapper\"><!-- publ: 7-Apr, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb Basics of GPU Computing for Data Scientists (\u00a0<a href=\"/2016/n13.html\">16:n13</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Basics of GPU Computing for Data Scientists</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/odsc-east-2016-journey-data-scientist.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/vip-invitation-marketing-analytics-data-science-conference.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <span class=\"http-likes\" style=\"float: left; font-size:14px\">http likes 206</span> <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/algorithms\" rel=\"tag\">Algorithms</a>, <a href=\"https://www.kdnuggets.com/tag/cuda\" rel=\"tag\">CUDA</a>, <a href=\"https://www.kdnuggets.com/tag/data-science\" rel=\"tag\">Data Science</a>, <a href=\"https://www.kdnuggets.com/tag/gpu\" rel=\"tag\">GPU</a>, <a href=\"https://www.kdnuggets.com/tag/nvidia\" rel=\"tag\">NVIDIA</a></div>\n<br/>\n<p class=\"excerpt\">\n     With the rise of neural network in data science, the demand for computationally extensive machines lead to GPUs. Learn how you can get started with GPUs &amp; algorithms which could leverage them.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><b>By <a href=\"https://medium.com/@taposhdr\">Taposh Dutta-Roy</a></b>.</p>\n<p><img alt=\"\" class=\"progressiveMedia-image js-progressiveMedia-image\" data-src=\"https://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\" src=\"https://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\" width=\"99%\"/></p>\n<p><noscript class=\"js-progressiveMedia-inner\">&lt;img class=\u201dprogressiveMedia-noscript js-progressiveMedia-inner\u201d src=\u201dhttps://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\u201d&gt;</noscript></p>\n<h3>Basics of GPU Computing for Data Scientists</h3>\n<p>GPU\u2019s have become the new core for image analytics. More and more data scientists are looking into using GPU for image processing. In this article I review the basics of GPU\u2019s that are needed for a data scientist and list a frame work discussed in <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">literature</a> for suitability of GPU for an algorithm.</p>\n<h3>Lets start with what is a GPU?</h3>\n<p>Graphics Processing Unit (GPU) were originally created for rendering graphics. However due to their high performance and low cost they have become the new standard of image processing. Their application areas include image restoration, segmentation (labeling), de-noising, filtering, interpolation and reconstruction. A web search on what is a GPU would result to\u00a0: \u201cA <strong class=\"markup--strong markup--p-strong\">graphics processing unit</strong> (<strong class=\"markup--strong markup--p-strong\">GPU</strong>) is a computer chip that performs rapid mathematical calculations, primarily for the purpose of rendering images.\u201d</p>\n<h3>What is GPU Computing?</h3>\n<p><a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.nvidia.com/object/what-is-gpu-computing.html\" href=\"http://www.nvidia.com/object/what-is-gpu-computing.html\" rel=\"nofollow\">Nvidia\u2019s blog</a> defines GPU computing is the use of a graphics processing unit (GPU) together with a CPU to accelerate scientific, analytics, engineering, consumer, and enterprise applications. <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://blogs.nvidia.com/blog/2009/12/16/whats-the-difference-between-a-cpu-and-a-gpu/\" href=\"https://blogs.nvidia.com/blog/2009/12/16/whats-the-difference-between-a-cpu-and-a-gpu/\" rel=\"nofollow\">They also say</a> if CPU is the brain then GPU is Soul of the computer.</p>\n<p>GPU\u2019s used for general-purpose computations have a highly data parallel architecture. They are composed of a number of cores. Each of these cores have a number of functional units, such as arithmetic and logic units (ALUs) etc. One or more of these functional units are used to process each thread of execution. These group of functional units that help the thread are called <strong class=\"markup--strong markup--p-strong\">\u201cthread processors\u201d</strong>. <em class=\"markup--em markup--p-em\">All thread processors in a core of GPU perform the same instructions, as they share the same control unit</em>. This means that GPUs can perform the same instruction on each pixel of an image in parallel. GPU architectures are complex and differ from manufacture to manufacture. The two main players in GPU market are Nvidia and AMD. Nvidia calls thread processors as CUDA (Compute Unified Device Architecture) cores, AMD calls them as Stream Processors (SP)\u00a0.</p>\n<p>The main difference between a thread processor and a CPU core is that each CPU core can perform different instructions on different data in parallel because each CPU core has separate control unit. <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4490125\" href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4490125\" rel=\"nofollow\">Researchers</a> have defined core as a processing unit with an independent flow of control. Based on this definition, <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">scientists</a> are referring to a group of thread processors that share the same control unit as cores. GPU\u2019s are constructed to fit many thread processors on a chip while CPU\u2019s are focused on advanced control units and large caches.</p>\n<p>There are 2 main frameworks for GPU programming\u200a\u2014\u200a<a class=\"markup--anchor markup--p-anchor\" data-href=\"https://www.khronos.org/opencl/\" href=\"https://www.khronos.org/opencl/\" rel=\"nofollow\">OpenCL</a> and CUDA. CUDA programming language can be used with Nvidia only where as OpenCL is an open standard for parallel computing on different devices including GPUs, CPUs and FPGAs. There are a few image processing libraries that provide GPU implementation\u200a\u2014\u200aOpenCV,ArrayFire, Nvidia Performance Primities (NPP), CUVLIB, Intel Integrated Performance Primitivies, OpenCL Integrated Performance Primitives and the Insight Took Kit (ITK). Out of these the larger ones are OpenCV (supports CUDA and OpenCL) and ITK (supports only OpenCL).</p>\n<h3>Algorithm suitability for GPU usage</h3>\n<p><a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">Erik Smistad et.al.</a> discuss 5 factors that define the suitability of an algorithm towards a GPU implementation. These are\u200a\u2014\u200aData parallelism, thread count, branch divergence, memory usage and synchronization. I have created this mapping table for easy reference using the framework.</p>\n<figure class=\"graf--figure graf-after--p\" id=\"6ac0\"><img alt=\"\" class=\"progressiveMedia-thumbnail js-progressiveMedia-thumbnail\" crossorigin=\"anonymous\" src=\"https://cdn-images-1.medium.com/freeze/max/30/1*ilLV8F27FaBh8ZpM5doC0w.png?q=20\"/><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" height=\"22\" width=\"75\"></canvas><img alt=\"\" class=\"progressiveMedia-image js-progressiveMedia-image\" data-src=\"https://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\" src=\"https://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\" width=\"99%\"/><br>\n<noscript class=\"js-progressiveMedia-inner\">&lt;img class=\u201dprogressiveMedia-noscript js-progressiveMedia-inner\u201d src=\u201dhttps://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\u201d&gt;</noscript><figcaption class=\"imageCaption\">GPU suitability decision for your algorithm</figcaption></br></figure>\n<p>As a data scientist knowing this will help you selecting the suitability of GPU for your algorithm. Nvidia CUDA is more popular since most apple laptops have them but others are getting steam as well. Let me know if you have questions and comments.</p>\n<p><a href=\"https://medium.com/@taposhdr/gpu-s-have-become-the-new-core-for-image-analytics-b8ba8bd8d8f3#.pjywke4uy\">Original</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/06/popular-deep-learning-tools.html\" target=\"_blank\">Popular Deep Learning Tools \u2013 a review</a></li>\n<li><a href=\"/2014/05/learn-deep-learning-courses-tutorials-overviews.html\" target=\"_blank\">Where to Learn Deep Learning \u2013 Courses, Tutorials, Software</a></li>\n<li><a href=\"/2014/09/cudnn-new-library-deep-learning.html\" target=\"_blank\">CuDNN \u2013 A new library for Deep Learning</a></li>\n</ul>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/odsc-east-2016-journey-data-scientist.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/vip-invitation-marketing-analytics-data-science-conference.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb Basics of GPU Computing for Data Scientists (\u00a0<a href=\"/2016/n13.html\">16:n13</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556336988\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.629 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-26 23:49:48 -->\n<!-- Compression = gzip -->", "content_tokenized": ["taposh", "duttaroy", "basic", "comput", "for", "data", "scientist", "have", "becom", "the", "new", "core", "for", "imag", "analyt", "more", "and", "more", "data", "scientist", "are", "look", "into", "use", "for", "imag", "process", "this", "articl", "review", "the", "basic", "that", "are", "need", "for", "data", "scientist", "and", "list", "frame", "work", "discuss", "literatur", "for", "suitabl", "for", "algorithm", "let", "start", "with", "what", "graphic", "process", "unit", "were", "origin", "creat", "for", "render", "graphic", "howev", "due", "their", "high", "perform", "and", "low", "cost", "they", "have", "becom", "the", "new", "standard", "imag", "process", "their", "applic", "area", "includ", "imag", "restor", "segment", "label", "denois", "filter", "interpol", "and", "reconstruct", "web", "search", "what", "would", "result", "graphic", "process", "unit", "comput", "chip", "that", "perform", "rapid", "mathemat", "calcul", "primarili", "for", "the", "purpos", "render", "imag", "what", "comput", "nvidia", "blog", "defin", "comput", "the", "use", "graphic", "process", "unit", "togeth", "with", "acceler", "scientif", "analyt", "engin", "consum", "and", "enterpris", "applic", "they", "also", "say", "the", "brain", "then", "soul", "the", "comput", "use", "for", "generalpurpos", "comput", "have", "high", "data", "parallel", "architectur", "they", "are", "compos", "number", "core", "each", "these", "core", "have", "number", "function", "unit", "such", "arithmet", "and", "logic", "unit", "alus", "etc", "one", "more", "these", "function", "unit", "are", "use", "process", "each", "thread", "execut", "these", "group", "function", "unit", "that", "help", "the", "thread", "are", "call", "thread", "processor", "all", "thread", "processor", "core", "perform", "the", "same", "instruct", "they", "share", "the", "same", "control", "unit", "this", "mean", "that", "gpus", "can", "perform", "the", "same", "instruct", "each", "pixel", "imag", "parallel", "architectur", "are", "complex", "and", "differ", "from", "manufactur", "manufactur", "the", "two", "main", "player", "market", "are", "nvidia", "and", "nvidia", "call", "thread", "processor", "comput", "unifi", "devic", "architectur", "core", "call", "them", "stream", "processor", "the", "main", "differ", "between", "thread", "processor", "and", "core", "that", "each", "core", "can", "perform", "differ", "instruct", "differ", "data", "parallel", "becaus", "each", "core", "has", "separ", "control", "unit", "research", "have", "defin", "core", "process", "unit", "with", "independ", "flow", "control", "base", "this", "definit", "scientist", "are", "refer", "group", "thread", "processor", "that", "share", "the", "same", "control", "unit", "core", "are", "construct", "fit", "mani", "thread", "processor", "chip", "while", "are", "focus", "advanc", "control", "unit", "and", "larg", "cach", "there", "are", "num", "main", "framework", "for", "program", "opencl", "and", "program", "languag", "can", "use", "with", "nvidia", "onli", "where", "opencl", "open", "standard", "for", "parallel", "comput", "differ", "devic", "includ", "gpus", "cpus", "and", "fpgas", "there", "are", "few", "imag", "process", "librari", "that", "provid", "implement", "opencv", "arrayfir", "nvidia", "perform", "primiti", "intel", "integr", "perform", "primitivi", "opencl", "integr", "perform", "primit", "and", "the", "insight", "took", "kit", "out", "these", "the", "larger", "one", "are", "opencv", "support", "and", "opencl", "and", "support", "onli", "opencl", "algorithm", "suitabl", "for", "usag", "erik", "smistad", "etal", "discuss", "num", "factor", "that", "defin", "the", "suitabl", "algorithm", "toward", "implement", "these", "are", "data", "parallel", "thread", "count", "branch", "diverg", "memori", "usag", "and", "synchron", "have", "creat", "this", "map", "tabl", "for", "easi", "refer", "use", "the", "framework", "suitabl", "decis", "for", "algorithm", "data", "scientist", "know", "this", "will", "help", "select", "the", "suitabl", "for", "algorithm", "nvidia", "more", "popular", "sinc", "most", "appl", "laptop", "have", "them", "but", "other", "are", "get", "steam", "well", "let", "know", "have", "question", "and", "comment", "origin", "relat", "popular", "deep", "learn", "tool", "review", "where", "learn", "deep", "learn", "cours", "tutori", "softwar", "cudnn", "new", "librari", "for", "deep", "learn"], "timestamp_scraper": 1556366026.921358, "title": "Basics of GPU Computing for Data Scientists", "read_time": 189.29999999999998, "content_html": "<div class=\"post\" id=\"post-\">\n<p><b>By <a href=\"https://medium.com/@taposhdr\">Taposh Dutta-Roy</a></b>.</p>\n<p><img alt=\"\" class=\"progressiveMedia-image js-progressiveMedia-image\" data-src=\"https://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\" src=\"https://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\" width=\"99%\"/></p>\n<p><noscript class=\"js-progressiveMedia-inner\">&lt;img class=\u201dprogressiveMedia-noscript js-progressiveMedia-inner\u201d src=\u201dhttps://cdn-images-1.medium.com/max/800/1*NE6xvopsFMVugZVphl5XAQ.png\u201d&gt;</noscript></p>\n<h3>Basics of GPU Computing for Data Scientists</h3>\n<p>GPU\u2019s have become the new core for image analytics. More and more data scientists are looking into using GPU for image processing. In this article I review the basics of GPU\u2019s that are needed for a data scientist and list a frame work discussed in <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">literature</a> for suitability of GPU for an algorithm.</p>\n<h3>Lets start with what is a GPU?</h3>\n<p>Graphics Processing Unit (GPU) were originally created for rendering graphics. However due to their high performance and low cost they have become the new standard of image processing. Their application areas include image restoration, segmentation (labeling), de-noising, filtering, interpolation and reconstruction. A web search on what is a GPU would result to\u00a0: \u201cA <strong class=\"markup--strong markup--p-strong\">graphics processing unit</strong> (<strong class=\"markup--strong markup--p-strong\">GPU</strong>) is a computer chip that performs rapid mathematical calculations, primarily for the purpose of rendering images.\u201d</p>\n<h3>What is GPU Computing?</h3>\n<p><a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.nvidia.com/object/what-is-gpu-computing.html\" href=\"http://www.nvidia.com/object/what-is-gpu-computing.html\" rel=\"nofollow\">Nvidia\u2019s blog</a> defines GPU computing is the use of a graphics processing unit (GPU) together with a CPU to accelerate scientific, analytics, engineering, consumer, and enterprise applications. <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://blogs.nvidia.com/blog/2009/12/16/whats-the-difference-between-a-cpu-and-a-gpu/\" href=\"https://blogs.nvidia.com/blog/2009/12/16/whats-the-difference-between-a-cpu-and-a-gpu/\" rel=\"nofollow\">They also say</a> if CPU is the brain then GPU is Soul of the computer.</p>\n<p>GPU\u2019s used for general-purpose computations have a highly data parallel architecture. They are composed of a number of cores. Each of these cores have a number of functional units, such as arithmetic and logic units (ALUs) etc. One or more of these functional units are used to process each thread of execution. These group of functional units that help the thread are called <strong class=\"markup--strong markup--p-strong\">\u201cthread processors\u201d</strong>. <em class=\"markup--em markup--p-em\">All thread processors in a core of GPU perform the same instructions, as they share the same control unit</em>. This means that GPUs can perform the same instruction on each pixel of an image in parallel. GPU architectures are complex and differ from manufacture to manufacture. The two main players in GPU market are Nvidia and AMD. Nvidia calls thread processors as CUDA (Compute Unified Device Architecture) cores, AMD calls them as Stream Processors (SP)\u00a0.</p>\n<p>The main difference between a thread processor and a CPU core is that each CPU core can perform different instructions on different data in parallel because each CPU core has separate control unit. <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4490125\" href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4490125\" rel=\"nofollow\">Researchers</a> have defined core as a processing unit with an independent flow of control. Based on this definition, <a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">scientists</a> are referring to a group of thread processors that share the same control unit as cores. GPU\u2019s are constructed to fit many thread processors on a chip while CPU\u2019s are focused on advanced control units and large caches.</p>\n<p>There are 2 main frameworks for GPU programming\u200a\u2014\u200a<a class=\"markup--anchor markup--p-anchor\" data-href=\"https://www.khronos.org/opencl/\" href=\"https://www.khronos.org/opencl/\" rel=\"nofollow\">OpenCL</a> and CUDA. CUDA programming language can be used with Nvidia only where as OpenCL is an open standard for parallel computing on different devices including GPUs, CPUs and FPGAs. There are a few image processing libraries that provide GPU implementation\u200a\u2014\u200aOpenCV,ArrayFire, Nvidia Performance Primities (NPP), CUVLIB, Intel Integrated Performance Primitivies, OpenCL Integrated Performance Primitives and the Insight Took Kit (ITK). Out of these the larger ones are OpenCV (supports CUDA and OpenCL) and ITK (supports only OpenCL).</p>\n<h3>Algorithm suitability for GPU usage</h3>\n<p><a class=\"markup--anchor markup--p-anchor\" data-href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" href=\"http://www.sciencedirect.com/science/article/pii/S1361841514001819\" rel=\"nofollow\">Erik Smistad et.al.</a> discuss 5 factors that define the suitability of an algorithm towards a GPU implementation. These are\u200a\u2014\u200aData parallelism, thread count, branch divergence, memory usage and synchronization. I have created this mapping table for easy reference using the framework.</p>\n<figure class=\"graf--figure graf-after--p\" id=\"6ac0\"><img alt=\"\" class=\"progressiveMedia-thumbnail js-progressiveMedia-thumbnail\" crossorigin=\"anonymous\" src=\"https://cdn-images-1.medium.com/freeze/max/30/1*ilLV8F27FaBh8ZpM5doC0w.png?q=20\"/><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" height=\"22\" width=\"75\"></canvas><img alt=\"\" class=\"progressiveMedia-image js-progressiveMedia-image\" data-src=\"https://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\" src=\"https://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\" width=\"99%\"/><br>\n<noscript class=\"js-progressiveMedia-inner\">&lt;img class=\u201dprogressiveMedia-noscript js-progressiveMedia-inner\u201d src=\u201dhttps://cdn-images-1.medium.com/max/800/1*ilLV8F27FaBh8ZpM5doC0w.png\u201d&gt;</noscript><figcaption class=\"imageCaption\">GPU suitability decision for your algorithm</figcaption></br></figure>\n<p>As a data scientist knowing this will help you selecting the suitability of GPU for your algorithm. Nvidia CUDA is more popular since most apple laptops have them but others are getting steam as well. Let me know if you have questions and comments.</p>\n<p><a href=\"https://medium.com/@taposhdr/gpu-s-have-become-the-new-core-for-image-analytics-b8ba8bd8d8f3#.pjywke4uy\">Original</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/06/popular-deep-learning-tools.html\" target=\"_blank\">Popular Deep Learning Tools \u2013 a review</a></li>\n<li><a href=\"/2014/05/learn-deep-learning-courses-tutorials-overviews.html\" target=\"_blank\">Where to Learn Deep Learning \u2013 Courses, Tutorials, Software</a></li>\n<li><a href=\"/2014/09/cudnn-new-library-deep-learning.html\" target=\"_blank\">CuDNN \u2013 A new library for Deep Learning</a></li>\n</ul>\n</div> ", "website": "kdnuggets"}