{"content": "By Kenneth Soo, Stanford . Take a look at the picture below and try to identify what it is: One should be able to tell that it is a giraffe, despite it being strangely fat. We recognize images and objects instantly, even if these images are presented in a form that is different from what we have seen before. We do this with the 80 billion neurons in our brain working together to transmit information. This remarkable system of neurons is also the inspiration behind a widely-used machine learning technique called\u00a0 Artificial Neural Networks \u00a0(ANN). Some computers using this technique have even out-performed humans in recognizing images. The Problem \u00a0 Image recognition is important for many of the advanced technologies we use today. It is used in visual surveillance, guiding autonomous vehicles and even identifying ailments from X-ray images. Most modern smartphones also come with image recognition apps that convert handwriting into typed words. In this chapter we will look at how we can train an ANN algorithm to recognize images of handwritten digits. We will be using the images from the famous MNIST (Mixed National Institute of Standards and Technology) database. Handwritten digits in the MNIST database An Illustration \u00a0 In this section, we present the performance of an ANN model in recognizing handwritten digits, before explaining how the model works in the next section. An ANN model is trained by giving it examples of 10,000 handwritten digits, together with the correct digits they represent. This allows the ANN model to understand how the handwriting translates into actual digits. After the ANN model is trained, we can test how well the model performs by giving it 1,000 new handwritten digits without the correct answer. The model is then required to recognize the actual digit. At the start, the ANN translates handwritten images into pixels \u2013 a language it understands. Black pixels are given the value \u201c0\u201d and white pixels the value \u201c1\u201d. Each pixel in an image is called a\u00a0 variable . Out of the 1,000 handwritten images that the model was asked to recognize, it correctly identified 922 of them, which is a 92.2% accuracy. We can use a contingency table to view the results, as shown below: Contingency table showing the performance of the ANN model. For example, the first row tells us that out of 85 images of digit \u201c0\u201ds given to the model, 84 were correctly identified and 1 was wrongly identified as \u201c6\u201d. The last column indicates prediction accuracy. From the table, we can see that when given a handwritten image of either \u201c0\u201d or \u201c1\u201d, the model almost always identifies it correctly. On the other hand, the digit \u201c5\u201d is the trickiest to identify. An advantage of using a contingency table is that it tells us the frequency of mis-identification. Image of the digit \u201c2\u201d are misidentified as \u201c7\u201d or \u201c8\u201d about 8% of the time. Let\u2019s take an in-depth look at some of these misidentified digits: While the images may look obviously like a digit \u201c2\u201d to human eyes, the ANN is sometimes unable to recognize certain features of images, like the tail of the digit \u201c2\u201d (explained in Limitations section). Another interesting observation is how the model confuses digits \u201c3\u201d and \u201c5\u201d about 10% of the time: The Neurons That Inspired the Network \u00a0 Our brain has a large network of interlinked neurons, which act as a highway for information to be transmitted from point A to point B. When different information is sent from A to B, the brain activates different sets of neurons, and so essentially uses a different route to get from A to B. This is how a typical neuron looks like: A brain neuron and its main components At each neuron, dendrites receive incoming signals sent by other neurons. If the neuron receives a high enough level of signals within a certain period of time, the neuron sends an electrical pulse into the terminals. These outgoing signals are then received by other neurons. Technical Explanation I: How The Model Works \u00a0 A simple Artificial Neural Network map, showing two scenarios with two different inputs but with the same output. Activated neurons along the path are shown in red. Similarly, in the ANN model, we have an input node, which is the image we give the model, and an output node, which is the digit that the model recognizes. The main characteristics of an ANN model is as such: Step 1 . When the input node is given an image, it activates a unique set of neurons in the first layer, starting a chain reaction that would pave a unique path to the output node. In Scenario 1, neurons A, B, and D are activated in layer 1. Step 2 . The activated neurons send signals to\u00a0 every \u00a0connected neuron in the next layer. This directly affects which neurons are activated in the next layer. In Scenario 1, neuron A sends a signal to E and G, neuron B sends a signal to E, and neuron D sends a signal to F and G. Step 3 . In the next layer, each neuron is governed by a\u00a0 rule \u00a0on what combinations of received signals would activate the neuron. In Scenario 1, neuron E is activated by the signals from A and B. However, for neuron F and G, their neurons\u2019\u00a0 rules \u00a0tell them that they have not received the right signals to be activated, and hence they remain grey. Step 4 . Steps 2-3 are repeated for all the remaining layers (it is possible for the model to have more than 2 layers), until we are left with the output node. Step 5 . The output node deduces the correct digit based on signals received from neurons in the layer directly preceding it (layer 2). Each combination of activated neurons in layer 2 leads to one solution, though each solution can be represented by different combinations of activated neurons. In Scenarios 1 & 2, two images are fed as input. Because the images are different, the network activates different neural paths from input to the output. However, the output is still recognizes both images as the digit \u201c6\u201d. Technical Explanation II: Training The Model \u00a0 We need to first decide the number of layers and number of neurons in each layer for our ANN model. While there is no limit, a good start is to use 3 layers, with the number of neurons being proportional to the number of variables. For the digit recognizer ANN, we used 3 layers with 500 neurons each. The two key factors involved in training a model are: A metric to evaluate the model\u2019s accuracy Rules that govern whether neurons are activated or not A common metric to evaluate model accuracy is the sum of the squared errors (SSE). Put simply, a squared error denotes how close a predicted digit is to the actual digit. The ANN model will try to minimize the SSE by changing the rules that govern neuron activation, and these changes are determined by a mathematical concept known as\u00a0 differentiation . Each neuron\u2019s rule has two components \u2013 the weight (i.e. strength) of incoming signals [w], and the minimum received signal strength required for activation [m]. In the following example, we illustrate the rules for neuron G. Zero weight is given to the signals from A and B (i.e. no connection), and weights of 1, 2, and -1 are given to the signals from C, D, and E respectively. The m-value for G is 2, so G is activated if: D is activated and E is not activated, or if, C and D are activated. An example of a \u2019s rule. The value below G indicates the received signal strength Limitations \u00a0 Computationally Expensive . Training an ANN model takes more time and CPU power\u00a0 compared to training other types of models (e.g. random forests). Moreover, the performance of ANN models may not necessarily be superior. Although ANN is not a new technique, it has only been used more frequently in recent years because of hardware advances that made its computing feasible. However, ANN is the basis for more advanced models, like Deep Neural Networks (DNN) which were used by Google in Oct 2015 and Mar 2016 to defeat human champions in the game of\u00a0 Go , widely viewed as an unsolved \u201cgrand challenge\u201d for Artificial Intelligence. Lack of feature recognition . The ANN is unable to recognize images if they take on slight variations in shape, or are placed in a different location. For example, if we want our ANN model to recognize images of cats, and suppose our training examples always feature cats at the bottom of the image, then the ANN model would not recognize the same cats if they appear at the top, or the same cats of larger sizes. An advanced version of ANN called Convolutional Neural Networks (CNN) solves this problem by looking at various regions of the image. In fact, CNNs are also more efficient, and are widely used in image and video recognition. For more information, check out a previous post on\u00a0 Introduction to Convolutional Neural Network . Additional Notes For Advanced Readers", "title_html": "<h1 id=\"title\">Artificial Neural Networks (ANN) Introduction, Part 1</h1> ", "url": "https://www.kdnuggets.com/2016/12/artificial-neural-networks-intro-part-1.html", "tfidf": {"tfidf": {"after": 1.02070207021, "hand": 1.6152202665600002, "googl": 11.388809182200001, "vehicl": 4.6928761454300005, "basi": 2.42122922068, "form": 1.12755681818, "red": 2.22228443449, "signal": 81.99354422208, "wide": 3.1196698762, "neuron": 2313.9109311732, "grand": 3.06486486486, "addit": 1.24634950542, "would": 3.2486187845399996, "fat": 15.5342465753, "number": 4.40571666436, "follow": 1.04640126549, "incom": 7.84, "recogn": 33.144050104360005, "pictur": 3.4953764861300005, "govern": 4.52823730746, "well": 1.0655748708, "whether": 2.20683903253, "misidentifi": 356.76404494400003, "technic": 6.280063291139999, "their": 1.01547908405, "translat": 5.71490280778, "post": 2.23826307627, "chapter": 3.6147540983599997, "how": 12.82002624408, "test": 2.65707112971, "reaction": 4.67904509284, "present": 2.51103202846, "high": 1.14777327935, "given": 8.12556512838, "word": 1.7965372864099998, "interest": 1.60331246213, "deep": 3.6279707495399998, "will": 3.67443295788, "scenario": 76.99321047549999, "outgo": 48.1090909091, "confus": 4.1451697127900005, "strength": 12.08219178081, "tabl": 15.28375451264, "below": 6.76822509591, "perform": 6.125590817000001, "but": 1.01632417899, "certain": 3.6155773172400005, "need": 1.4372623574099999, "our": 11.78794178795, "pave": 12.25, "point": 2.51980001588, "kenneth": 9.72198407838, "key": 2.28005170185, "level": 1.6544393497299998, "has": 3.1309492505999996, "enough": 2.2319696330700003, "region": 1.7647843486, "soo": 294.0, "champion": 5.03680203046, "handwritten": 482.9201520912, "defeat": 2.87869446963, "out": 3.18050083473, "model": 62.717935212, "good": 1.51981619759, "alway": 4.13491340018, "concept": 2.65707112971, "determin": 2.1658935879900003, "have": 5.0744742057, "togeth": 3.16191993626, "view": 3.2815212897799997, "not": 6.09404388714, "involv": 1.4498630137000001, "compon": 8.18983750322, "respect": 1.6443293630200002, "minim": 6.10850327049, "like": 4.596742671, "shown": 5.53846153846, "solv": 7.26923076923, "though": 1.36076112111, "then": 3.25973581548, "oct": 28.4007155635, "they": 5.15086626435, "anoth": 1.13643521832, "last": 1.2117234010100002, "let": 3.48616600791, "minimum": 6.02962400304, "pixel": 345.13043478279997, "larger": 2.2407904022599996, "section": 6.385306341329999, "node": 266.0782122906, "featur": 4.58137745286, "handwrit": 149.0704225352, "simpl": 3.3981164383599998, "appear": 1.3214582986499999, "preced": 4.435875943, "algorithm": 27.9507042254, "valu": 6.833285509320001, "convolut": 202.242038216, "either": 1.5830092731099998, "look": 11.451791295959998, "moreov": 7.56, "such": 1.06151377374, "accuraci": 51.0482315112, "network": 20.74955072704, "lack": 1.9271667880599999, "transmit": 19.636363636360002, "some": 2.08073394496, "should": 1.6643254009900001, "put": 1.65806788512, "locat": 1.59766529134, "mar": 8.26875, "result": 1.14611608432, "version": 2.0083491461099996, "receiv": 10.443877970560001, "set": 2.37415881562, "two": 5.0689655172500006, "interlink": 170.709677419, "fed": 12.5402843602, "outperform": 82.2590673575, "from": 12.00680657964, "answer": 4.64890190337, "allow": 1.2716059271100002, "limit": 4.555959441360001, "work": 3.34560269739, "num": 50.0157520005, "technolog": 5.206953099380001, "puls": 22.843165467600002, "brain": 35.716535433080004, "left": 1.4398693996, "for": 16.00504064016, "predict": 10.3696930111, "remark": 3.8515283842800003, "output": 53.73887814316001, "bottom": 6.27261951798, "seen": 1.61079545455, "with": 8.009585671919998, "new": 2.0357761108, "characterist": 3.6724496877199995, "are": 19.56821277982, "solut": 9.4556283502, "explan": 13.0184501845, "frequent": 2.10501193317, "sent": 4.65367140554, "path": 13.926315789479998, "video": 3.29719626168, "metric": 44.470588235200005, "strang": 10.150895140700001, "combin": 5.09281437126, "forest": 4.89546716004, "column": 7.078020508250001, "compar": 1.8662278123900002, "map": 4.0728578758300005, "wrong": 5.478260869570001, "even": 3.49383802818, "give": 4.095975232200001, "train": 15.492559160799999, "step": 16.96758104736, "error": 12.08219178082, "ailment": 54.0, "ask": 2.1744966443, "lead": 1.2664326739, "note": 1.42449528937, "row": 5.549108703250001, "period": 1.3430335843, "machin": 4.02433460076, "into": 4.06009845916, "requir": 3.05689804564, "conting": 41.742331288200006, "rout": 3.1619199362700003, "what": 3.7603031738399997, "techniqu": 11.18816067654, "main": 2.50607734806, "termin": 4.86397058824, "larg": 1.18574949585, "denot": 10.1965317919, "grey": 10.6981132075, "smartphon": 77.443902439, "base": 1.14628158845, "fact": 1.73375559681, "decid": 1.9257641921400002, "squar": 6.53333333334, "game": 2.57978550536, "mvalu": 547.448275862, "eye": 3.39375801625, "factor": 2.89127663449, "black": 1.94917127072, "human": 5.68964281449, "layer": 113.98153846155999, "evalu": 13.901926444839999, "henc": 5.390831918509999, "about": 2.12972030318, "problem": 3.53349655018, "superior": 4.68595041322, "neural": 356.7640449438, "trickiest": 547.448275862, "billion": 4.8669527897, "onli": 1.0256476516600002, "correct": 21.978772496519998, "simpli": 2.5192002538900002, "frequenc": 8.8102108768, "them": 2.19752231988, "check": 6.50655737705, "expens": 3.5453327378300004, "recognit": 17.60088691796, "place": 1.1004366812200002, "start": 3.8002074523200005, "guid": 2.49113447356, "giraff": 176.4, "explain": 5.20098280098, "standard": 1.8915763135900003, "digit": 92.73880389438001, "until": 1.14852058164, "abl": 1.8208510150200001, "mani": 1.04426757877, "introduct": 2.7808723068799996, "the": 114.0, "tail": 12.520504731900001, "misidentif": 547.448275862, "same": 3.35573874444, "show": 2.5340782123, "there": 1.04091266719, "connect": 3.7687833827800006, "inform": 6.301250248080001, "advanc": 9.9987403955, "possibl": 1.4173734488, "hardwar": 18.8104265403, "repres": 2.93945565636, "right": 1.4054532577899999, "illustr": 7.3228782287800005, "slight": 3.25327868852, "take": 4.55846672888, "visual": 5.22752716497, "previous": 1.42846859816, "tri": 3.7089125102199993, "reader": 6.437956204380001, "than": 1.03278688525, "power": 1.3396337861799998, "indic": 4.1652892562, "also": 3.04429530201, "typic": 2.2541530597799997, "modern": 1.5319888063299998, "observ": 2.22446406053, "mathemat": 7.391061452510001, "white": 1.86930413282, "mix": 2.7852631578900002, "may": 2.10403551786, "zero": 8.75192943771, "challeng": 2.55816951337, "want": 1.99698113208, "advantag": 3.32412060302, "convert": 3.2740771293099997, "system": 1.38739840951, "act": 1.4318181818200002, "unsolv": 72.4931506849, "howev": 3.2835573939899994, "essenti": 2.9280708225700005, "various": 1.3323262839899999, "although": 1.14968498805, "variabl": 17.494214876039997, "actual": 5.62446858762, "identifi": 16.11309264901, "were": 2.04917715392, "which": 6.03115107, "databas": 16.49454545454, "intellig": 4.19334389857, "activ": 27.81667281451, "other": 4.03969465648, "uniqu": 6.03191489362, "without": 1.29547123623, "one": 2.01254991444, "inspir": 5.697469944380001, "known": 1.0859097127200001, "see": 1.27242125511, "deduc": 37.0934579439, "becaus": 2.2990369994999997, "imag": 70.23583460946, "get": 1.78562591385, "still": 1.1866357724799999, "random": 7.1902173913, "highway": 7.28925619835, "autonom": 11.086592178800002, "sum": 6.681818181819999, "both": 1.05215720061, "electr": 3.62135036496, "languag": 2.29488291414, "despit": 1.60606980273, "rule": 12.19087319002, "repeat": 2.8771293947099994, "next": 5.9802241265600005, "necessarili": 7.33302540416, "widelyus": 547.448275862, "this": 9.03414264039, "proport": 5.26741871267, "time": 4.04509841392, "variat": 4.704, "chang": 2.3617970842, "similar": 1.37514075357, "differ": 11.128904120249999, "been": 1.0239277652399998, "institut": 1.7792222346700002, "most": 1.02096463023, "stanford": 12.6, "obvious": 6.44841592201, "along": 1.2973768080399999, "all": 1.01146788991, "top": 1.8387769284200002, "input": 61.0146041505, "today": 1.74961428257, "suppos": 4.23021582734, "recent": 1.54405757635, "almost": 1.53584212054, "feasibl": 17.8181818182, "that": 14.055776892499999, "xray": 547.448275862, "weight": 14.636754763379997, "famous": 2.28201811125, "call": 3.2029589778, "object": 2.3488681757700003, "more": 6.1030240902, "and": 31.001952756029997, "indepth": 547.448275862, "these": 4.29661705008, "cat": 42.1393497012, "artifici": 24.949188056580002, "made": 1.07038834951, "befor": 2.20072082062, "type": 4.056208482380001, "close": 1.2848818387799998, "affect": 2.4794627518400003, "can": 5.8813069571, "comput": 11.783275606140002, "unabl": 6.6163784121599996, "each": 9.51798561152, "size": 2.49387370405, "remain": 2.33196239718, "common": 1.4025974025999999, "chain": 5.17639387023, "cnns": 547.448275862, "shape": 3.20338983051, "behind": 2.0845588235299997, "surveil": 19.1507840772, "sometim": 1.7126213592200001, "instant": 11.504347826099998, "come": 1.32831325301, "exampl": 9.02900473932, "tell": 13.44569129792, "send": 18.7526576896, "understand": 5.93717277486, "differenti": 7.759530791789999, "dendrit": 223.605633803, "direct": 2.44452998692, "import": 1.3401992233700002, "first": 3.0228484386899996, "everi": 1.47917637194, "app": 35.837471783299996, "use": 12.355665088559999, "while": 2.0883977900599997, "year": 1.0485436893200002, "within": 1.2369302688, "learn": 2.32275054865, "when": 3.0623030926499997, "effici": 5.09335899904, "nation": 1.22632473351}, "logtfidf": {"after": 0.020490694648099998, "hand": 0.479471335336, "googl": 2.43263122258, "vehicl": 1.54604564512, "basi": 0.884275353639, "form": 0.120053184191, "red": 0.798535691347, "signal": 26.144828686879997, "wide": 0.8891600135079999, "neuron": 149.87431718172002, "grand": 1.12000347865, "addit": 0.220218882972, "would": 0.23885288389409998, "fat": 2.7430470431400003, "number": 0.3864343136744, "follow": 0.045356911094199995, "incom": 2.7321833075999997, "recogn": 12.166880167403, "pictur": 1.25144109124, "govern": 1.235161379262, "well": 0.0635144383156, "whether": 0.791561189647, "misidentifi": 10.36785488834, "technic": 2.28846575616, "their": 0.015360505122700001, "translat": 2.0998602200599996, "post": 0.8057001527009999, "chapter": 1.2850238307100001, "how": 3.7725356554400005, "test": 0.977224437103, "reaction": 1.54309404912, "present": 0.455093309598, "high": 0.13782378654000002, "given": 1.8195348649860001, "word": 0.585861082385, "interest": 0.47207177798199995, "deep": 1.2886734698, "will": 0.6083596047450001, "scenario": 13.671396649450001, "outgo": 3.87347115944, "confus": 1.4219437317299999, "strength": 4.179360978569999, "tabl": 5.36198442644, "below": 2.440879775808, "perform": 1.70472340232, "but": 0.0161923720719, "certain": 1.184208725562, "need": 0.362740163442, "our": 4.288196070910001, "pave": 2.50552593699, "point": 0.46206471806599997, "kenneth": 2.27438972093, "key": 0.82419811896, "level": 0.503462189943, "has": 0.1281718345644, "enough": 0.802884439169, "region": 0.568028500824, "soo": 5.6835797673399995, "champion": 1.6167713629299998, "handwritten": 32.803278253840006, "defeat": 1.05733688222, "out": 0.1752791727579, "model": 22.12350219333, "good": 0.418589404907, "alway": 1.452638409144, "concept": 0.977224437103, "determin": 0.772833019022, "have": 0.07392501170600001, "togeth": 0.916064474616, "view": 0.9903198843459999, "not": 0.093314478045, "involv": 0.371469078658, "compon": 2.81949375246, "respect": 0.49733261904, "minim": 1.80968177926, "like": 0.55621430618, "shown": 2.03713916198, "solv": 1.9836504770400003, "though": 0.308044191079, "then": 0.24910159569269996, "oct": 3.34641434075, "they": 0.148634973838, "anoth": 0.127896361652, "last": 0.19204364461100001, "let": 1.2488025672799998, "minimum": 1.79668465441, "pixel": 17.83051222516, "larger": 0.806828661778, "section": 2.266161533844, "node": 22.752184965, "featur": 1.2701622544259998, "handwrit": 8.62254329638, "simpl": 1.2232212893899999, "appear": 0.278735898493, "preced": 1.48972510314, "algorithm": 3.33044239518, "valu": 2.469579930444, "convolut": 9.2326360171, "either": 0.459327638815, "look": 3.8783201616, "moreov": 2.02287119019, "such": 0.059695977806, "accuraci": 10.1859061624, "network": 7.624664424415999, "lack": 0.656050938907, "transmit": 4.56847190866, "some": 0.079147018129, "should": 0.509419876758, "put": 0.505652999854, "locat": 0.46854337067199997, "mar": 2.1124833488799997, "result": 0.136378908381, "version": 0.697313064259, "receiv": 2.132595399376, "set": 0.342992022578, "two": 0.06849422179100001, "interlink": 5.13996432075, "fed": 2.5289462112, "outperform": 4.409873625, "from": 0.0068046500263919995, "answer": 1.5366310419, "allow": 0.24028061118900002, "limit": 1.25347156389, "work": 0.327103701819, "num": 0.015749519769850003, "technolog": 1.91369537271, "puls": 3.12865196834, "brain": 8.75727759132, "left": 0.364552414753, "for": 0.005039846326352001, "predict": 3.2914804753799998, "remark": 1.34847005245, "output": 14.267586047890001, "bottom": 1.8361940533599999, "seen": 0.47672812813, "with": 0.00957993370712, "new": 0.0354598937022, "characterist": 1.30085892924, "are": 0.5598819980713, "solut": 3.10692595254, "explan": 3.74644083138, "frequent": 0.7443211360850001, "sent": 1.689018554176, "path": 4.605503951549999, "video": 1.19307248967, "metric": 6.203361703119999, "strang": 2.3175618928, "combin": 1.587654932253, "forest": 1.5883097076, "column": 1.95699427938, "compar": 0.6239191809269999, "map": 1.40434493384, "wrong": 1.70078769102, "even": 0.45716569450200006, "give": 0.9341776566719999, "train": 5.287346502712, "step": 6.23727034188, "error": 3.5971708686, "ailment": 3.9889840465599997, "ask": 0.776797209847, "lead": 0.23620402986699998, "note": 0.353817568083, "row": 1.71363732085, "period": 0.294930924153, "machin": 1.39235958062, "into": 0.0596514529148, "requir": 0.84850702135, "conting": 7.89871039212, "rout": 1.15117941787, "what": 0.677661890481, "techniqu": 3.94873154421, "main": 0.451143081176, "termin": 1.5818550978200001, "larg": 0.17037506060600002, "denot": 2.3220476420700003, "grey": 2.37006739018, "smartphon": 4.34955383476, "base": 0.13652330228700002, "fact": 0.5502899207949999, "decid": 0.655322871893, "squar": 2.36754019402, "game": 0.9477062580210001, "mvalu": 6.305267983919999, "eye": 1.22193786676, "factor": 1.06169814662, "black": 0.667404292867, "human": 1.920105549729, "layer": 29.357708272900005, "evalu": 3.8777604862599997, "henc": 1.68469971782, "about": 0.1256869549492, "problem": 1.138281448546, "superior": 1.5445687581299998, "neural": 24.511890933, "trickiest": 6.305267983919999, "billion": 1.5824680307199999, "onli": 0.025324268329099998, "correct": 7.789905790860001, "simpli": 0.923941491586, "frequenc": 2.1759113757299997, "them": 0.1883666538186, "check": 1.87281049562, "expens": 1.26563201674, "recognit": 5.926619730880001, "place": 0.0957070839572, "start": 0.709330107873, "guid": 0.912738218589, "giraff": 5.17275414357, "explain": 1.911400854716, "standard": 0.63741050982, "digit": 31.19055541875, "until": 0.138474663439, "abl": 0.599303982475, "mani": 0.0433157581221, "introduct": 1.02276465794, "the": 0.0, "tail": 2.5273676789099997, "misidentif": 6.305267983919999, "same": 0.336178948812, "show": 0.473365532026, "there": 0.0400978929255, "connect": 1.267210117364, "inform": 1.817814818648, "advanc": 3.46510606089, "possibl": 0.348805474891, "hardwar": 2.93441131931, "repres": 0.7701544655, "right": 0.34035985417, "illustr": 2.5957125415599998, "slight": 1.17966331506, "take": 0.522767848788, "visual": 1.6539383488600001, "previous": 0.356602960063, "tri": 1.23518305832, "reader": 1.8622111301800002, "than": 0.0322608622182, "power": 0.292396282715, "indic": 1.4672770838299998, "also": 0.0439714734, "typic": 0.812774319158, "modern": 0.426566764719, "observ": 0.7995160149320001, "mathemat": 2.00027135827, "white": 0.625566240123, "mix": 1.02434236008, "may": 0.10141999056880001, "zero": 2.1692741832299998, "challeng": 0.9392919688950001, "want": 0.6916366062549999, "advantag": 1.20120515883, "convert": 1.1860360368, "system": 0.327430345585, "act": 0.358945092473, "unsolv": 4.283492084090001, "howev": 0.27094535204250003, "essenti": 1.07434378384, "various": 0.28692650007, "although": 0.139487981418, "variabl": 4.3374461344, "actual": 1.885542544944, "identifi": 5.836054003304, "were": 0.048582287362199994, "which": 0.03107048307258, "databas": 4.21976513436, "intellig": 1.43349848213, "activ": 7.242735462396, "other": 0.03949899167904, "uniqu": 2.2078346818, "without": 0.258874517941, "one": 0.012510703291, "inspir": 2.09375005266, "known": 0.0824180805992, "see": 0.240921585492, "deduc": 3.6134406183199994, "becaus": 0.27868631765, "imag": 25.83781478954, "get": 0.579769005782, "still": 0.17112222142900002, "random": 1.9727214065099998, "highway": 1.9864015104099997, "autonom": 2.4057364663799996, "sum": 1.89939013342, "both": 0.050842533389300004, "electr": 1.28684698528, "languag": 0.8306818244059999, "despit": 0.473790078298, "rule": 3.883441964759, "repeat": 1.0567930591299999, "next": 1.608654741996, "necessarili": 1.99238817347, "widelyus": 6.305267983919999, "this": 0.0340780414725, "proport": 1.66154043472, "time": 0.0448460754504, "variat": 1.5484132106, "chang": 0.332551250116, "similar": 0.318556092114, "differ": 1.910890091808, "been": 0.023645982368400004, "institut": 0.576176322003, "most": 0.020747896295599998, "stanford": 2.53369681396, "obvious": 1.86383450716, "along": 0.260344385917, "all": 0.011402632097799998, "top": 0.609100637788, "input": 12.50837667695, "today": 0.559395353679, "suppos": 1.44225301477, "recent": 0.434413741288, "almost": 0.42907884333400004, "feasibl": 2.88021938643, "that": 0.05566607731496, "xray": 6.305267983919999, "weight": 4.7547705783600005, "famous": 0.825060187979, "call": 0.1963883233464, "object": 0.853933584803, "more": 0.10214958959999998, "and": 0.0019526944039716, "indepth": 6.305267983919999, "these": 0.2861344776032, "cat": 9.41875046112, "artifici": 6.3546869705399995, "made": 0.0680215260973, "befor": 0.191275543759, "type": 1.414202970774, "close": 0.250666759864, "affect": 0.908041904384, "can": 0.8117054819699999, "comput": 4.104206747819999, "unabl": 2.39280194408, "each": 1.389933514432, "size": 0.9138372060609999, "remain": 0.30712592618, "common": 0.338325805271, "chain": 1.64410864979, "cnns": 6.305267983919999, "shape": 1.16420957115, "behind": 0.7345572374320001, "surveil": 2.9523436587700003, "sometim": 0.538025155343, "instant": 2.4427250357499997, "come": 0.28390990653000003, "exampl": 2.4520960499939997, "tell": 4.84945737604, "send": 6.6094878669, "understand": 2.1761717513599996, "differenti": 2.0489218673900003, "dendrit": 5.40988393686, "direct": 0.401411378992, "import": 0.292818277066, "first": 0.02276186943648, "everi": 0.391485427421, "app": 3.57899404386, "use": 0.3504962367792, "while": 0.08649996758760002, "year": 0.047402238894600005, "within": 0.21263272059799998, "learn": 0.842752064745, "when": 0.0616649665752, "effici": 1.62793753414, "nation": 0.204021674798}, "logidf": {"after": 0.020490694648099998, "hand": 0.479471335336, "googl": 2.43263122258, "vehicl": 1.54604564512, "basi": 0.884275353639, "form": 0.120053184191, "red": 0.798535691347, "signal": 1.6340517929299998, "wide": 0.44458000675399995, "neuron": 4.16317547727, "grand": 1.12000347865, "addit": 0.220218882972, "would": 0.0796176279647, "fat": 2.7430470431400003, "number": 0.0966085784186, "follow": 0.045356911094199995, "incom": 1.3660916537999999, "recogn": 0.935913859031, "pictur": 1.25144109124, "govern": 0.411720459754, "well": 0.0635144383156, "whether": 0.791561189647, "misidentifi": 5.18392744417, "technic": 1.14423287808, "their": 0.015360505122700001, "translat": 1.0499301100299998, "post": 0.8057001527009999, "chapter": 1.2850238307100001, "how": 0.47156695693000006, "test": 0.977224437103, "reaction": 1.54309404912, "present": 0.227546654799, "high": 0.13782378654000002, "given": 0.303255810831, "word": 0.585861082385, "interest": 0.47207177798199995, "deep": 1.2886734698, "will": 0.202786534915, "scenario": 2.73427932989, "outgo": 3.87347115944, "confus": 1.4219437317299999, "strength": 1.3931203261899998, "tabl": 1.34049610661, "below": 0.813626591936, "perform": 0.42618085058, "but": 0.0161923720719, "certain": 0.592104362781, "need": 0.362740163442, "our": 0.8576392141820001, "pave": 2.50552593699, "point": 0.23103235903299998, "kenneth": 2.27438972093, "key": 0.82419811896, "level": 0.503462189943, "has": 0.0427239448548, "enough": 0.802884439169, "region": 0.568028500824, "soo": 5.6835797673399995, "champion": 1.6167713629299998, "handwritten": 4.100409781730001, "defeat": 1.05733688222, "out": 0.0584263909193, "model": 0.7374500731110001, "good": 0.418589404907, "alway": 0.726319204572, "concept": 0.977224437103, "determin": 0.772833019022, "have": 0.0147850023412, "togeth": 0.458032237308, "view": 0.49515994217299997, "not": 0.0155524130075, "involv": 0.371469078658, "compon": 1.40974687623, "respect": 0.49733261904, "minim": 1.80968177926, "like": 0.139053576545, "shown": 1.01856958099, "solv": 1.9836504770400003, "though": 0.308044191079, "then": 0.08303386523089999, "oct": 3.34641434075, "they": 0.0297269947676, "anoth": 0.127896361652, "last": 0.19204364461100001, "let": 1.2488025672799998, "minimum": 1.79668465441, "pixel": 4.45762805629, "larger": 0.806828661778, "section": 0.755387177948, "node": 3.7920308275, "featur": 0.423387418142, "handwrit": 4.31127164819, "simpl": 1.2232212893899999, "appear": 0.278735898493, "preced": 1.48972510314, "algorithm": 3.33044239518, "valu": 0.823193310148, "convolut": 4.61631800855, "either": 0.459327638815, "look": 0.6463866936, "moreov": 2.02287119019, "such": 0.059695977806, "accuraci": 2.5464765406, "network": 0.9530830530519999, "lack": 0.656050938907, "transmit": 2.28423595433, "some": 0.0395735090645, "should": 0.509419876758, "put": 0.505652999854, "locat": 0.46854337067199997, "mar": 2.1124833488799997, "result": 0.136378908381, "version": 0.697313064259, "receiv": 0.266574424922, "set": 0.171496011289, "two": 0.0136988443582, "interlink": 5.13996432075, "fed": 2.5289462112, "outperform": 4.409873625, "from": 0.000567054168866, "answer": 1.5366310419, "allow": 0.24028061118900002, "limit": 0.41782385463, "work": 0.109034567273, "num": 0.00031499039539700004, "technolog": 0.956847686355, "puls": 3.12865196834, "brain": 2.18931939783, "left": 0.364552414753, "for": 0.00031499039539700004, "predict": 1.6457402376899999, "remark": 1.34847005245, "output": 2.03822657827, "bottom": 1.8361940533599999, "seen": 0.47672812813, "with": 0.00119749171339, "new": 0.0177299468511, "characterist": 1.30085892924, "are": 0.0294674735827, "solut": 1.55346297627, "explan": 1.87322041569, "frequent": 0.7443211360850001, "sent": 0.844509277088, "path": 1.5351679838499999, "video": 1.19307248967, "metric": 3.1016808515599994, "strang": 2.3175618928, "combin": 0.529218310751, "forest": 1.5883097076, "column": 1.95699427938, "compar": 0.6239191809269999, "map": 1.40434493384, "wrong": 1.70078769102, "even": 0.152388564834, "give": 0.311392552224, "train": 0.660918312839, "step": 1.03954505698, "error": 1.7985854343, "ailment": 3.9889840465599997, "ask": 0.776797209847, "lead": 0.23620402986699998, "note": 0.353817568083, "row": 1.71363732085, "period": 0.294930924153, "machin": 1.39235958062, "into": 0.0149128632287, "requir": 0.424253510675, "conting": 2.63290346404, "rout": 1.15117941787, "what": 0.225887296827, "techniqu": 1.31624384807, "main": 0.225571540588, "termin": 1.5818550978200001, "larg": 0.17037506060600002, "denot": 2.3220476420700003, "grey": 2.37006739018, "smartphon": 4.34955383476, "base": 0.13652330228700002, "fact": 0.5502899207949999, "decid": 0.655322871893, "squar": 1.18377009701, "game": 0.9477062580210001, "mvalu": 6.305267983919999, "eye": 1.22193786676, "factor": 1.06169814662, "black": 0.667404292867, "human": 0.640035183243, "layer": 2.0969791623500003, "evalu": 1.9388802431299998, "henc": 1.68469971782, "about": 0.0628434774746, "problem": 0.569140724273, "superior": 1.5445687581299998, "neural": 4.0853151555, "trickiest": 6.305267983919999, "billion": 1.5824680307199999, "onli": 0.025324268329099998, "correct": 1.29831763181, "simpli": 0.923941491586, "frequenc": 2.1759113757299997, "them": 0.0941833269093, "check": 1.87281049562, "expens": 1.26563201674, "recognit": 1.4816549327200002, "place": 0.0957070839572, "start": 0.236443369291, "guid": 0.912738218589, "giraff": 5.17275414357, "explain": 0.955700427358, "standard": 0.63741050982, "digit": 1.48526454375, "until": 0.138474663439, "abl": 0.599303982475, "mani": 0.0433157581221, "introduct": 1.02276465794, "the": 0.0, "tail": 2.5273676789099997, "misidentif": 6.305267983919999, "same": 0.112059649604, "show": 0.236682766013, "there": 0.0400978929255, "connect": 0.633605058682, "inform": 0.454453704662, "advanc": 0.6930212121780001, "possibl": 0.348805474891, "hardwar": 2.93441131931, "repres": 0.38507723275, "right": 0.34035985417, "illustr": 1.2978562707799999, "slight": 1.17966331506, "take": 0.130691962197, "visual": 1.6539383488600001, "previous": 0.356602960063, "tri": 0.61759152916, "reader": 1.8622111301800002, "than": 0.0322608622182, "power": 0.292396282715, "indic": 0.7336385419149999, "also": 0.0146571578, "typic": 0.812774319158, "modern": 0.426566764719, "observ": 0.7995160149320001, "mathemat": 2.00027135827, "white": 0.625566240123, "mix": 1.02434236008, "may": 0.050709995284400004, "zero": 2.1692741832299998, "challeng": 0.9392919688950001, "want": 0.6916366062549999, "advantag": 1.20120515883, "convert": 1.1860360368, "system": 0.327430345585, "act": 0.358945092473, "unsolv": 4.283492084090001, "howev": 0.0903151173475, "essenti": 1.07434378384, "various": 0.28692650007, "although": 0.139487981418, "variabl": 2.1687230672, "actual": 0.628514181648, "identifi": 0.833722000472, "were": 0.024291143681099997, "which": 0.00517841384543, "databas": 2.10988256718, "intellig": 1.43349848213, "activ": 0.381196603284, "other": 0.00987474791976, "uniqu": 1.1039173409, "without": 0.258874517941, "one": 0.0062553516455, "inspir": 1.04687502633, "known": 0.0824180805992, "see": 0.240921585492, "deduc": 3.6134406183199994, "becaus": 0.139343158825, "imag": 0.99376210729, "get": 0.579769005782, "still": 0.17112222142900002, "random": 1.9727214065099998, "highway": 1.9864015104099997, "autonom": 2.4057364663799996, "sum": 1.89939013342, "both": 0.050842533389300004, "electr": 1.28684698528, "languag": 0.8306818244059999, "despit": 0.473790078298, "rule": 0.554777423537, "repeat": 1.0567930591299999, "next": 0.402163685499, "necessarili": 1.99238817347, "widelyus": 6.305267983919999, "this": 0.0037864490525, "proport": 1.66154043472, "time": 0.0112115188626, "variat": 1.5484132106, "chang": 0.166275625058, "similar": 0.318556092114, "differ": 0.212321121312, "been": 0.023645982368400004, "institut": 0.576176322003, "most": 0.020747896295599998, "stanford": 2.53369681396, "obvious": 1.86383450716, "along": 0.260344385917, "all": 0.011402632097799998, "top": 0.609100637788, "input": 2.50167533539, "today": 0.559395353679, "suppos": 1.44225301477, "recent": 0.434413741288, "almost": 0.42907884333400004, "feasibl": 2.88021938643, "that": 0.00397614837964, "xray": 6.305267983919999, "weight": 1.58492352612, "famous": 0.825060187979, "call": 0.0654627744488, "object": 0.853933584803, "more": 0.017024931599999998, "and": 6.29901420636e-05, "indepth": 6.305267983919999, "these": 0.0715336194008, "cat": 2.35468761528, "artifici": 2.11822899018, "made": 0.0680215260973, "befor": 0.0956377718795, "type": 0.707101485387, "close": 0.250666759864, "affect": 0.908041904384, "can": 0.162341096394, "comput": 1.36806891594, "unabl": 1.19640097204, "each": 0.173741689304, "size": 0.9138372060609999, "remain": 0.15356296309, "common": 0.338325805271, "chain": 1.64410864979, "cnns": 6.305267983919999, "shape": 1.16420957115, "behind": 0.7345572374320001, "surveil": 2.9523436587700003, "sometim": 0.538025155343, "instant": 2.4427250357499997, "come": 0.28390990653000003, "exampl": 0.40868267499899996, "tell": 1.21236434401, "send": 1.32189757338, "understand": 1.0880858756799998, "differenti": 2.0489218673900003, "dendrit": 5.40988393686, "direct": 0.200705689496, "import": 0.292818277066, "first": 0.0075872898121599995, "everi": 0.391485427421, "app": 3.57899404386, "use": 0.0292080197316, "while": 0.04324998379380001, "year": 0.047402238894600005, "within": 0.21263272059799998, "learn": 0.842752064745, "when": 0.0205549888584, "effici": 1.62793753414, "nation": 0.204021674798}, "freq": {"after": 1, "hand": 1, "googl": 1, "vehicl": 1, "basi": 1, "form": 1, "red": 1, "signal": 16, "wide": 2, "neuron": 36, "grand": 1, "addit": 1, "would": 3, "fat": 1, "number": 4, "follow": 1, "incom": 2, "recogn": 13, "pictur": 1, "govern": 3, "well": 1, "whether": 1, "misidentifi": 2, "technic": 2, "their": 1, "translat": 2, "post": 1, "chapter": 1, "how": 8, "test": 1, "reaction": 1, "present": 2, "high": 1, "given": 6, "word": 1, "interest": 1, "deep": 1, "will": 3, "scenario": 5, "outgo": 1, "confus": 1, "strength": 3, "tabl": 4, "below": 3, "perform": 4, "but": 1, "certain": 2, "need": 1, "our": 5, "pave": 1, "point": 2, "kenneth": 1, "key": 1, "level": 1, "has": 3, "enough": 1, "region": 1, "soo": 1, "champion": 1, "handwritten": 8, "defeat": 1, "out": 3, "model": 30, "good": 1, "alway": 2, "concept": 1, "determin": 1, "have": 5, "togeth": 2, "view": 2, "not": 6, "involv": 1, "compon": 2, "respect": 1, "minim": 1, "like": 4, "shown": 2, "solv": 1, "though": 1, "then": 3, "oct": 1, "they": 5, "anoth": 1, "last": 1, "let": 1, "minimum": 1, "pixel": 4, "larger": 1, "section": 3, "node": 6, "featur": 3, "handwrit": 2, "simpl": 1, "appear": 1, "preced": 1, "algorithm": 1, "valu": 3, "convolut": 2, "either": 1, "look": 6, "moreov": 1, "such": 1, "accuraci": 4, "network": 8, "lack": 1, "transmit": 2, "some": 2, "should": 1, "put": 1, "locat": 1, "mar": 1, "result": 1, "version": 1, "receiv": 8, "set": 2, "two": 5, "interlink": 1, "fed": 1, "outperform": 1, "from": 12, "answer": 1, "allow": 1, "limit": 3, "work": 3, "num": 50, "technolog": 2, "puls": 1, "brain": 4, "left": 1, "for": 16, "predict": 2, "remark": 1, "output": 7, "bottom": 1, "seen": 1, "with": 8, "new": 2, "characterist": 1, "are": 19, "solut": 2, "explan": 2, "frequent": 1, "sent": 2, "path": 3, "video": 1, "metric": 2, "strang": 1, "combin": 3, "forest": 1, "column": 1, "compar": 1, "map": 1, "wrong": 1, "even": 3, "give": 3, "train": 8, "step": 6, "error": 2, "ailment": 1, "ask": 1, "lead": 1, "note": 1, "row": 1, "period": 1, "machin": 1, "into": 4, "requir": 2, "conting": 3, "rout": 1, "what": 3, "techniqu": 3, "main": 2, "termin": 1, "larg": 1, "denot": 1, "grey": 1, "smartphon": 1, "base": 1, "fact": 1, "decid": 1, "squar": 2, "game": 1, "mvalu": 1, "eye": 1, "factor": 1, "black": 1, "human": 3, "layer": 14, "evalu": 2, "henc": 1, "about": 2, "problem": 2, "superior": 1, "neural": 6, "trickiest": 1, "billion": 1, "onli": 1, "correct": 6, "simpli": 1, "frequenc": 1, "them": 2, "check": 1, "expens": 1, "recognit": 4, "place": 1, "start": 3, "guid": 1, "giraff": 1, "explain": 2, "standard": 1, "digit": 21, "until": 1, "abl": 1, "mani": 1, "introduct": 1, "the": 114, "tail": 1, "misidentif": 1, "same": 3, "show": 2, "there": 1, "connect": 2, "inform": 4, "advanc": 5, "possibl": 1, "hardwar": 1, "repres": 2, "right": 1, "illustr": 2, "slight": 1, "take": 4, "visual": 1, "previous": 1, "tri": 2, "reader": 1, "than": 1, "power": 1, "indic": 2, "also": 3, "typic": 1, "modern": 1, "observ": 1, "mathemat": 1, "white": 1, "mix": 1, "may": 2, "zero": 1, "challeng": 1, "want": 1, "advantag": 1, "convert": 1, "system": 1, "act": 1, "unsolv": 1, "howev": 3, "essenti": 1, "various": 1, "although": 1, "variabl": 2, "actual": 3, "identifi": 7, "were": 2, "which": 6, "databas": 2, "intellig": 1, "activ": 19, "other": 4, "uniqu": 2, "without": 1, "one": 2, "inspir": 2, "known": 1, "see": 1, "deduc": 1, "becaus": 2, "imag": 26, "get": 1, "still": 1, "random": 1, "highway": 1, "autonom": 1, "sum": 1, "both": 1, "electr": 1, "languag": 1, "despit": 1, "rule": 7, "repeat": 1, "next": 4, "necessarili": 1, "widelyus": 1, "this": 9, "proport": 1, "time": 4, "variat": 1, "chang": 2, "similar": 1, "differ": 9, "been": 1, "institut": 1, "most": 1, "stanford": 1, "obvious": 1, "along": 1, "all": 1, "top": 1, "input": 5, "today": 1, "suppos": 1, "recent": 1, "almost": 1, "feasibl": 1, "that": 14, "xray": 1, "weight": 3, "famous": 1, "call": 3, "object": 1, "more": 6, "and": 31, "indepth": 1, "these": 4, "cat": 4, "artifici": 3, "made": 1, "befor": 2, "type": 2, "close": 1, "affect": 1, "can": 5, "comput": 3, "unabl": 2, "each": 8, "size": 1, "remain": 2, "common": 1, "chain": 1, "cnns": 1, "shape": 1, "behind": 1, "surveil": 1, "sometim": 1, "instant": 1, "come": 1, "exampl": 6, "tell": 4, "send": 5, "understand": 2, "differenti": 1, "dendrit": 1, "direct": 2, "import": 1, "first": 3, "everi": 1, "app": 1, "use": 12, "while": 2, "year": 1, "within": 1, "learn": 1, "when": 3, "effici": 1, "nation": 1}, "idf": {"after": 1.02070207021, "hand": 1.6152202665600002, "googl": 11.388809182200001, "vehicl": 4.6928761454300005, "basi": 2.42122922068, "form": 1.12755681818, "red": 2.22228443449, "signal": 5.12459651388, "wide": 1.5598349381, "neuron": 64.2753036437, "grand": 3.06486486486, "addit": 1.24634950542, "would": 1.0828729281799998, "fat": 15.5342465753, "number": 1.10142916609, "follow": 1.04640126549, "incom": 3.92, "recogn": 2.54954231572, "pictur": 3.4953764861300005, "govern": 1.50941243582, "well": 1.0655748708, "whether": 2.20683903253, "misidentifi": 178.38202247200002, "technic": 3.1400316455699997, "their": 1.01547908405, "translat": 2.85745140389, "post": 2.23826307627, "chapter": 3.6147540983599997, "how": 1.60250328051, "test": 2.65707112971, "reaction": 4.67904509284, "present": 1.25551601423, "high": 1.14777327935, "given": 1.35426085473, "word": 1.7965372864099998, "interest": 1.60331246213, "deep": 3.6279707495399998, "will": 1.22481098596, "scenario": 15.3986420951, "outgo": 48.1090909091, "confus": 4.1451697127900005, "strength": 4.02739726027, "tabl": 3.82093862816, "below": 2.25607503197, "perform": 1.5313977042500002, "but": 1.01632417899, "certain": 1.8077886586200003, "need": 1.4372623574099999, "our": 2.35758835759, "pave": 12.25, "point": 1.25990000794, "kenneth": 9.72198407838, "key": 2.28005170185, "level": 1.6544393497299998, "has": 1.0436497502, "enough": 2.2319696330700003, "region": 1.7647843486, "soo": 294.0, "champion": 5.03680203046, "handwritten": 60.3650190114, "defeat": 2.87869446963, "out": 1.06016694491, "model": 2.0905978404, "good": 1.51981619759, "alway": 2.06745670009, "concept": 2.65707112971, "determin": 2.1658935879900003, "have": 1.0148948411399998, "togeth": 1.58095996813, "view": 1.6407606448899998, "not": 1.01567398119, "involv": 1.4498630137000001, "compon": 4.09491875161, "respect": 1.6443293630200002, "minim": 6.10850327049, "like": 1.14918566775, "shown": 2.76923076923, "solv": 7.26923076923, "though": 1.36076112111, "then": 1.08657860516, "oct": 28.4007155635, "they": 1.03017325287, "anoth": 1.13643521832, "last": 1.2117234010100002, "let": 3.48616600791, "minimum": 6.02962400304, "pixel": 86.28260869569999, "larger": 2.2407904022599996, "section": 2.1284354471099998, "node": 44.3463687151, "featur": 1.52712581762, "handwrit": 74.5352112676, "simpl": 3.3981164383599998, "appear": 1.3214582986499999, "preced": 4.435875943, "algorithm": 27.9507042254, "valu": 2.2777618364400003, "convolut": 101.121019108, "either": 1.5830092731099998, "look": 1.9086318826599997, "moreov": 7.56, "such": 1.06151377374, "accuraci": 12.7620578778, "network": 2.59369384088, "lack": 1.9271667880599999, "transmit": 9.818181818180001, "some": 1.04036697248, "should": 1.6643254009900001, "put": 1.65806788512, "locat": 1.59766529134, "mar": 8.26875, "result": 1.14611608432, "version": 2.0083491461099996, "receiv": 1.3054847463200001, "set": 1.18707940781, "two": 1.01379310345, "interlink": 170.709677419, "fed": 12.5402843602, "outperform": 82.2590673575, "from": 1.00056721497, "answer": 4.64890190337, "allow": 1.2716059271100002, "limit": 1.5186531471200002, "work": 1.11520089913, "num": 1.00031504001, "technolog": 2.6034765496900003, "puls": 22.843165467600002, "brain": 8.929133858270001, "left": 1.4398693996, "for": 1.00031504001, "predict": 5.18484650555, "remark": 3.8515283842800003, "output": 7.676982591880001, "bottom": 6.27261951798, "seen": 1.61079545455, "with": 1.0011982089899998, "new": 1.0178880554, "characterist": 3.6724496877199995, "are": 1.02990593578, "solut": 4.7278141751, "explan": 6.50922509225, "frequent": 2.10501193317, "sent": 2.32683570277, "path": 4.6421052631599995, "video": 3.29719626168, "metric": 22.235294117600002, "strang": 10.150895140700001, "combin": 1.69760479042, "forest": 4.89546716004, "column": 7.078020508250001, "compar": 1.8662278123900002, "map": 4.0728578758300005, "wrong": 5.478260869570001, "even": 1.16461267606, "give": 1.3653250774, "train": 1.9365698950999999, "step": 2.8279301745599996, "error": 6.04109589041, "ailment": 54.0, "ask": 2.1744966443, "lead": 1.2664326739, "note": 1.42449528937, "row": 5.549108703250001, "period": 1.3430335843, "machin": 4.02433460076, "into": 1.01502461479, "requir": 1.52844902282, "conting": 13.9141104294, "rout": 3.1619199362700003, "what": 1.25343439128, "techniqu": 3.7293868921800004, "main": 1.25303867403, "termin": 4.86397058824, "larg": 1.18574949585, "denot": 10.1965317919, "grey": 10.6981132075, "smartphon": 77.443902439, "base": 1.14628158845, "fact": 1.73375559681, "decid": 1.9257641921400002, "squar": 3.26666666667, "game": 2.57978550536, "mvalu": 547.448275862, "eye": 3.39375801625, "factor": 2.89127663449, "black": 1.94917127072, "human": 1.8965476048299998, "layer": 8.14153846154, "evalu": 6.9509632224199995, "henc": 5.390831918509999, "about": 1.06486015159, "problem": 1.76674827509, "superior": 4.68595041322, "neural": 59.4606741573, "trickiest": 547.448275862, "billion": 4.8669527897, "onli": 1.0256476516600002, "correct": 3.6631287494199998, "simpli": 2.5192002538900002, "frequenc": 8.8102108768, "them": 1.09876115994, "check": 6.50655737705, "expens": 3.5453327378300004, "recognit": 4.40022172949, "place": 1.1004366812200002, "start": 1.26673581744, "guid": 2.49113447356, "giraff": 176.4, "explain": 2.60049140049, "standard": 1.8915763135900003, "digit": 4.416133518780001, "until": 1.14852058164, "abl": 1.8208510150200001, "mani": 1.04426757877, "introduct": 2.7808723068799996, "the": 1.0, "tail": 12.520504731900001, "misidentif": 547.448275862, "same": 1.11857958148, "show": 1.26703910615, "there": 1.04091266719, "connect": 1.8843916913900003, "inform": 1.5753125620200001, "advanc": 1.9997480791, "possibl": 1.4173734488, "hardwar": 18.8104265403, "repres": 1.46972782818, "right": 1.4054532577899999, "illustr": 3.6614391143900002, "slight": 3.25327868852, "take": 1.13961668222, "visual": 5.22752716497, "previous": 1.42846859816, "tri": 1.8544562551099997, "reader": 6.437956204380001, "than": 1.03278688525, "power": 1.3396337861799998, "indic": 2.0826446281, "also": 1.01476510067, "typic": 2.2541530597799997, "modern": 1.5319888063299998, "observ": 2.22446406053, "mathemat": 7.391061452510001, "white": 1.86930413282, "mix": 2.7852631578900002, "may": 1.05201775893, "zero": 8.75192943771, "challeng": 2.55816951337, "want": 1.99698113208, "advantag": 3.32412060302, "convert": 3.2740771293099997, "system": 1.38739840951, "act": 1.4318181818200002, "unsolv": 72.4931506849, "howev": 1.0945191313299998, "essenti": 2.9280708225700005, "various": 1.3323262839899999, "although": 1.14968498805, "variabl": 8.747107438019999, "actual": 1.87482286254, "identifi": 2.30187037843, "were": 1.02458857696, "which": 1.005191845, "databas": 8.24727272727, "intellig": 4.19334389857, "activ": 1.46403541129, "other": 1.00992366412, "uniqu": 3.01595744681, "without": 1.29547123623, "one": 1.00627495722, "inspir": 2.8487349721900004, "known": 1.0859097127200001, "see": 1.27242125511, "deduc": 37.0934579439, "becaus": 1.1495184997499999, "imag": 2.70137825421, "get": 1.78562591385, "still": 1.1866357724799999, "random": 7.1902173913, "highway": 7.28925619835, "autonom": 11.086592178800002, "sum": 6.681818181819999, "both": 1.05215720061, "electr": 3.62135036496, "languag": 2.29488291414, "despit": 1.60606980273, "rule": 1.7415533128599998, "repeat": 2.8771293947099994, "next": 1.4950560316400001, "necessarili": 7.33302540416, "widelyus": 547.448275862, "this": 1.00379362671, "proport": 5.26741871267, "time": 1.01127460348, "variat": 4.704, "chang": 1.1808985421, "similar": 1.37514075357, "differ": 1.23654490225, "been": 1.0239277652399998, "institut": 1.7792222346700002, "most": 1.02096463023, "stanford": 12.6, "obvious": 6.44841592201, "along": 1.2973768080399999, "all": 1.01146788991, "top": 1.8387769284200002, "input": 12.2029208301, "today": 1.74961428257, "suppos": 4.23021582734, "recent": 1.54405757635, "almost": 1.53584212054, "feasibl": 17.8181818182, "that": 1.00398406375, "xray": 547.448275862, "weight": 4.878918254459999, "famous": 2.28201811125, "call": 1.0676529926, "object": 2.3488681757700003, "more": 1.0171706817, "and": 1.00006299213, "indepth": 547.448275862, "these": 1.07415426252, "cat": 10.5348374253, "artifici": 8.31639601886, "made": 1.07038834951, "befor": 1.10036041031, "type": 2.0281042411900003, "close": 1.2848818387799998, "affect": 2.4794627518400003, "can": 1.17626139142, "comput": 3.9277585353800006, "unabl": 3.3081892060799998, "each": 1.18974820144, "size": 2.49387370405, "remain": 1.16598119859, "common": 1.4025974025999999, "chain": 5.17639387023, "cnns": 547.448275862, "shape": 3.20338983051, "behind": 2.0845588235299997, "surveil": 19.1507840772, "sometim": 1.7126213592200001, "instant": 11.504347826099998, "come": 1.32831325301, "exampl": 1.50483412322, "tell": 3.36142282448, "send": 3.75053153792, "understand": 2.96858638743, "differenti": 7.759530791789999, "dendrit": 223.605633803, "direct": 1.22226499346, "import": 1.3401992233700002, "first": 1.00761614623, "everi": 1.47917637194, "app": 35.837471783299996, "use": 1.0296387573799999, "while": 1.0441988950299999, "year": 1.0485436893200002, "within": 1.2369302688, "learn": 2.32275054865, "when": 1.02076769755, "effici": 5.09335899904, "nation": 1.22632473351}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Artificial Neural Networks (ANN) Introduction, Part 1</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/12/artificial-neural-networks-intro-part-1.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Artificial Neural Networks (ANN) Introduction, Part 1 Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/12/data-science-trends-2017.html\" rel=\"prev\" title=\"Data Science Trends To Look Out For In 2017\"/>\n<link href=\"https://www.kdnuggets.com/2016/12/big-data-ecosystem-science.html\" rel=\"next\" title=\"The big data ecosystem for science: Physics, LHC, and Cosmology\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/12/artificial-neural-networks-intro-part-1.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=58831\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/12/artificial-neural-networks-intro-part-1.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-58831 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 8-Dec, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Artificial Neural Networks (ANN) Introduction, Part 1 (\u00a0<a href=\"/2016/n44.html\">16:n44</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">Artificial Neural Networks (ANN) Introduction, Part 1</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/12/data-science-trends-2017.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/12/big-data-ecosystem-science.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <span class=\"http-likes\" style=\"float: left; font-size:14px\">http likes 145</span> <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/algobeans\" rel=\"tag\">Algobeans</a>, <a href=\"https://www.kdnuggets.com/tag/image-recognition\" rel=\"tag\">Image Recognition</a>, <a href=\"https://www.kdnuggets.com/tag/mnist\" rel=\"tag\">MNIST</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a></div>\n<br/>\n<p class=\"excerpt\">\n     This intro to ANNs will look at how we can train an algorithm to recognize images of handwritten digits. We will be using the images from the famous MNIST (Mixed National Institute of Standards and Technology) database.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<p><b>By Kenneth Soo, Stanford</b>.</p>\n<p>Take a look at the picture below and try to identify what it is:</p>\n<p><center><img alt=\"fat_giraffe_ANN\" src=\"https://annalyzin.files.wordpress.com/2016/03/fat_giraffe_w1.jpeg?w=217&amp;h=300\" width=\"60%\"/></center></p>\n<p>One should be able to tell that it is a giraffe, despite it being strangely fat. We recognize images and objects instantly, even if these images are presented in a form that is different from what we have seen before. We do this with the 80 billion neurons in our brain working together to transmit information. This remarkable system of neurons is also the inspiration behind a widely-used machine learning technique called\u00a0<em>Artificial Neural Networks</em>\u00a0(ANN). Some computers using this technique have even out-performed humans in recognizing images.</p>\n<h3>The Problem</h3>\n<p>\u00a0<br>\nImage recognition is important for many of the advanced technologies we use today. It is used in visual surveillance, guiding autonomous vehicles and even identifying ailments from X-ray images. Most modern smartphones also come with image recognition apps that convert handwriting into typed words.</br></p>\n<p>In this chapter we will look at how we can train an ANN algorithm to recognize images of handwritten digits. We will be using the images from the famous MNIST (Mixed National Institute of Standards and Technology) database.</p>\n<p><img alt=\"MNIST_ANN.png\" src=\"https://annalyzin.files.wordpress.com/2016/03/mnist2.png?w=620\" width=\"99%\"/><br>\n<center><em>Handwritten digits in the MNIST database</em></center></br></p>\n<h3>An Illustration</h3>\n<p>\u00a0<br>\nIn this section, we present the performance of an ANN model in recognizing handwritten digits, before explaining how the model works in the next section.</br></p>\n<p>An ANN model is trained by giving it examples of 10,000 handwritten digits, together with the correct digits they represent. This allows the ANN model to understand how the handwriting translates into actual digits. After the ANN model is trained, we can test how well the model performs by giving it 1,000 new handwritten digits without the correct answer. The model is then required to recognize the actual digit.</p>\n<p>At the start, the ANN translates handwritten images into pixels \u2013 a language it understands. Black pixels are given the value \u201c0\u201d and white pixels the value \u201c1\u201d. Each pixel in an image is called a\u00a0<em>variable</em>.</p>\n<p>Out of the 1,000 handwritten images that the model was asked to recognize, it correctly identified 922 of them, which is a 92.2% accuracy. We can use a contingency table to view the results, as shown below:</p>\n<p><img alt=\"ANN Handwriting Contingency Table\" src=\"https://annalyzin.files.wordpress.com/2016/03/contingency-table.png?w=620\" width=\"99%\"/><br>\n<center><em>Contingency table showing the performance of the ANN model. For example, the first row tells us that out of 85 images of digit \u201c0\u201ds given to the model, 84 were correctly identified and 1 was wrongly identified as \u201c6\u201d. The last column indicates prediction accuracy.</em></center></br></p>\n<p>From the table, we can see that when given a handwritten image of either \u201c0\u201d or \u201c1\u201d, the model almost always identifies it correctly. On the other hand, the digit \u201c5\u201d is the trickiest to identify. An advantage of using a contingency table is that it tells us the frequency of mis-identification. Image of the digit \u201c2\u201d are misidentified as \u201c7\u201d or \u201c8\u201d about 8% of the time. Let\u2019s take an in-depth look at some of these misidentified digits:</p>\n<p><img alt=\"ANN Mis-Identification Errors\" src=\"https://annalyzin.files.wordpress.com/2016/03/errors1.png?w=500&amp;h=239\" width=\"99%\"/></p>\n<p>While the images may look obviously like a digit \u201c2\u201d to human eyes, the ANN is sometimes unable to recognize certain features of images, like the tail of the digit \u201c2\u201d (explained in Limitations section). Another interesting observation is how the model confuses digits \u201c3\u201d and \u201c5\u201d about 10% of the time:</p>\n<p><img alt=\"ANN Mis-Identification Errors\" src=\"https://annalyzin.files.wordpress.com/2016/03/errors2.png?w=500&amp;h=239\" width=\"99%\"/></p>\n<h3>The Neurons That Inspired the Network</h3>\n<p>\u00a0<br/>\nOur brain has a large network of interlinked neurons, which act as a highway for information to be transmitted from point A to point B. When different information is sent from A to B, the brain activates different sets of neurons, and so essentially uses a different route to get from A to B. This is how a typical neuron looks like:</p>\n<p><img alt=\"Neuron Illustration\" src=\"https://annalyzin.files.wordpress.com/2016/03/neuron-illustrated.png?w=620\" width=\"99%\"/><br/>\n<center><em>A brain neuron and its main components</em></center></p>\n<p>At each neuron, dendrites receive incoming signals sent by other neurons. If the neuron receives a high enough level of signals within a certain period of time, the neuron sends an electrical pulse into the terminals. These outgoing signals are then received by other neurons.</p>\n<h3>Technical Explanation I: How The Model Works</h3>\n<p>\u00a0<br/>\n<img alt=\"ANN Tutorial Overview.png\" src=\"https://annalyzin.files.wordpress.com/2016/03/ann-1.png?w=620\" width=\"99%\"/><br/>\n<center><em>A simple Artificial Neural Network map, showing two scenarios with two different inputs but with the same output. Activated neurons along the path are shown in red.</em></center></p>\n<p>Similarly, in the ANN model, we have an input node, which is the image we give the model, and an output node, which is the digit that the model recognizes. The main characteristics of an ANN model is as such:</p>\n<p><strong>Step 1</strong>. When the input node is given an image, it activates a unique set of neurons in the first layer, starting a chain reaction that would pave a unique path to the output node. In Scenario 1, neurons A, B, and D are activated in layer 1.</p>\n<p><strong>Step 2</strong>. The activated neurons send signals to\u00a0<em>every</em>\u00a0connected neuron in the next layer. This directly affects which neurons are activated in the next layer. In Scenario 1, neuron A sends a signal to E and G, neuron B sends a signal to E, and neuron D sends a signal to F and G.</p>\n<p><strong>Step 3</strong>. In the next layer, each neuron is governed by a\u00a0<em>rule</em>\u00a0on what combinations of received signals would activate the neuron. In Scenario 1, neuron E is activated by the signals from A and B. However, for neuron F and G, their neurons\u2019\u00a0<em>rules</em>\u00a0tell them that they have not received the right signals to be activated, and hence they remain grey.</p>\n<p><strong>Step 4</strong>. Steps 2-3 are repeated for all the remaining layers (it is possible for the model to have more than 2 layers), until we are left with the output node.</p>\n<p><strong>Step 5</strong>. The output node deduces the correct digit based on signals received from neurons in the layer directly preceding it (layer 2). Each combination of activated neurons in layer 2 leads to one solution, though each solution can be represented by different combinations of activated neurons. In Scenarios 1 &amp; 2, two images are fed as input. Because the images are different, the network activates different neural paths from input to the output. However, the output is still recognizes both images as the digit \u201c6\u201d.</p>\n<h3>Technical Explanation II: Training The Model</h3>\n<p>\u00a0<br/>\nWe need to first decide the number of layers and number of neurons in each layer for our ANN model. While there is no limit, a good start is to use 3 layers, with the number of neurons being proportional to the number of variables. For the digit recognizer ANN, we used 3 layers with 500 neurons each. The two key factors involved in training a model are:</p>\n<ul>\n<li>A metric to evaluate the model\u2019s accuracy\n<li>Rules that govern whether neurons are activated or not\n</li></li></ul>\n<p>A common metric to evaluate model accuracy is the sum of the squared errors (SSE). Put simply, a squared error denotes how close a predicted digit is to the actual digit. The ANN model will try to minimize the SSE by changing the rules that govern neuron activation, and these changes are determined by a mathematical concept known as\u00a0<em>differentiation</em>.</p>\n<p>Each neuron\u2019s rule has two components \u2013 the weight (i.e. strength) of incoming signals [w], and the minimum received signal strength required for activation [m]. In the following example, we illustrate the rules for neuron G. Zero weight is given to the signals from A and B (i.e. no connection), and weights of 1, 2, and -1 are given to the signals from C, D, and E respectively. The m-value for G is 2, so G is activated if:</p>\n<ul>\n<li>D is activated and E is not activated, or if,\n<li>C and D are activated.\n</li></li></ul>\n<p><img alt=\"ANN Animation.gif\" src=\"https://annalyzin.files.wordpress.com/2016/03/annanimation-cropped.gif?w=620\" width=\"99%\"/><br/>\n<center><em>An example of a neuron(G)\u2019s rule. The value below G indicates the received signal strength</em></center></p>\n<h3>Limitations</h3>\n<p>\u00a0<br/>\n<strong>Computationally Expensive</strong>. Training an ANN model takes more time and CPU power\u00a0 compared to training other types of models (e.g. random forests). Moreover, the performance of ANN models may not necessarily be superior. Although ANN is not a new technique, it has only been used more frequently in recent years because of hardware advances that made its computing feasible. However, ANN is the basis for more advanced models, like Deep Neural Networks (DNN) which were used by Google in Oct 2015 and Mar 2016 to defeat human champions in the game of\u00a0<em>Go</em>, widely viewed as an unsolved \u201cgrand challenge\u201d for Artificial Intelligence.</p>\n<p><strong>Lack of feature recognition</strong>. The ANN is unable to recognize images if they take on slight variations in shape, or are placed in a different location. For example, if we want our ANN model to recognize images of cats, and suppose our training examples always feature cats at the bottom of the image, then the ANN model would not recognize the same cats if they appear at the top, or the same cats of larger sizes. An advanced version of ANN called Convolutional Neural Networks (CNN) solves this problem by looking at various regions of the image. In fact, CNNs are also more efficient, and are widely used in image and video recognition. For more information, check out a previous post on\u00a0<a href=\"https://annalyzin.wordpress.com/2016/01/26/introduction-to-convolutional-neural-network/\" target=\"_blank\">Introduction to Convolutional Neural Network</a>.</p>\n<h3>Additional Notes For Advanced Readers</h3></div></div></div></div></div></body></html>\n<p>\u00a0<br/>\n<em>[This section is intended for readers who have mathematics or computer science background and wish to implement their own ANN.]</em></p>\n<p>The neuron\u2019s rule described in the technical explanation is a mathematical function called \u201cactivation function\u201d. It gives zero output when the input is low, and gives positive output when the input is sufficiently high. Commonly-used activation functions include the sigmoid function and rectifier function. The output node is also governed by a function, and softmax (a generalization of the logistic function) is usually used. As such, the ANN can be viewed as \u201ca grand function of functions\u201d. This is also why we use differentiation to find the correct weights through gradient descent. Lastly, note that it is essential to normalize the input data during implementation.</p>\n<p>Try out ANN: C++ code by Ben Graham:<br/>\n<a href=\"https://github.com/btgraham/Batchwise-Dropout\" target=\"_blank\">github.com/btgraham/Batchwise-Dropout</a></p>\n<p>or Python code by Michael Nielsen:<br/>\n<a href=\"https://github.com/mnielsen/neural-networks-and-deep-learning\" target=\"_blank\">github.com/mnielsen/neural-networks-and-deep-learning</a></p>\n<p>Did you learn something useful today? We would be glad to inform you when we have new tutorials, so that your learning continues!</p>\n<p>Sign up below to get bite-sized tutorials delivered to your inbox:</p>\n<p><center><a href=\"http://eepurl.com/cbVFY1\" target=\"_blank\"><img alt=\"Free Data Science Tutorials\" data-pin-nopin=\"true\" src=\"https://annalyzin.files.wordpress.com/2016/08/sign-up-button-transparent-bg-and-cropped.png?w=340&amp;h=55\" width=\"50%\"/></a></center></p>\n<p><b>Bio: <a href=\"https://www.linkedin.com/in/sookenneth\" target=\"_blank\">Kenneth Soo</a></b> was the top student in the University of Warwick for all 3 years as a math/statistics undergraduate, and is completing his MS in Statistics at Stanford University.</p>\n<p><a href=\"https://algobeans.com/2016/03/13/how-do-computers-recognise-handwriting-using-artificial-neural-networks/\" target=\"_blank\">Original</a>. Reposted with permission.</p>\n<p>For more posts like this, visit: <a href=\"https://algobeans.com/\" target=\"_blank\">algobeans.com</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2016/10/deep-learning-key-terms-explained.html\">Deep Learning Key Terms, Explained</a>\n<li><a href=\"/2016/09/reandom-forest-criminal-tutorial.html\">Random Forest: A Criminal Tutorial</a>\n<li><a href=\"/2016/09/decision-trees-disastrous-overview.html\">Decision Trees: A Disastrous Tutorial</a>\n</li></li></li></ul>\n\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/12/data-science-trends-2017.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/12/big-data-ecosystem-science.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end-->\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a><li> <a href=\"https://www.kdnuggets.com/2019/04/graduating-gans-understanding-generative-adversarial-networks.html\">Graduating in GANs: Going From Understanding Generative Advers...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/datax-join-new-generation-ai-technologists.html\">Join the new generation of AI technologists</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-tweets-apr17-apr23.html\">Top tweets, Apr 17\u201323: The History of Artificial #NeuralN...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/activestate-top-10-python-use-cases.html\">Top 10 Python Use Cases</a><li> <a href=\"https://www.kdnuggets.com/2019/04/future-generative-adversarial-networks.html\">Generative Adversarial Networks \u2013 Key Milestones and Sta...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/attention-craving-rnn-building-transformer-networks.html\">Attention Craving RNNS: Building Up To Transformer Networks</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/04-24-fors-marsh-group-lead-data-scientist.html\">Fors Marsh Group: Lead Data Scientist [Arlington, VA]</a><li> <a href=\"https://www.kdnuggets.com/2019/n16.html\">KDnuggets 19:n16, Apr 24: Data Visualization in Python with...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/paw-mega-paw-las-vegas-lower-rates-end-friday.html\">Lower Rates End Friday for Mega-PAW Vegas \u2013 the Largest Pred...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/top-news-week-0415-0421.html\">Top Stories, Apr 15-21: Data Visualization in Python: Matplotl...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/wharton-customer-analytics-initiative-conference.html\">Wharton Customer Analytics Initiative Annual Conference in Phi...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/machine-learning-graph-analytics.html\">Machine Learning and Deep Link Graph Analytics: A Powerful Com...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/best-masters-data-science-analytics-online.html\">2019 Best Masters in Data Science and Analytics \u2013 Online</a><li> <a href=\"https://www.kdnuggets.com/2019/04/worth-studying-data-science-masters.html\">Was it Worth Studying a Data Science Masters?</a><li> <a href=\"https://www.kdnuggets.com/2019/04/approach-pre-trained-deep-learning-models-caution.html\">Approach pre-trained deep learning models with caution</a><li> <a href=\"https://www.kdnuggets.com/2019/04/coursera-earn-deep-learning-certificate.html\">Earn a Deep Learning Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/04/octoparse-scrape-data-website.html\">Easy Way to Scrape Data from Website By Yourself</a><li> <a href=\"https://www.kdnuggets.com/2019/04/ai-environment.html\">AI Supporting The Earth</a><li> <a href=\"https://www.kdnuggets.com/2019/04/mueller-report-word-cloud-brief-tutorial-r.html\">The Mueller Report Word Cloud: A brief tutorial in R</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/12/index.html\">Dec</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/12/tutorials.html\">Tutorials, Overviews</a> \u00bb Artificial Neural Networks (ANN) Introduction, Part 1 (\u00a0<a href=\"/2016/n44.html\">16:n44</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end-->\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556342348\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper-->\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.769 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 01:19:08 -->\n<!-- Compression = gzip -->", "content_tokenized": ["kenneth", "soo", "stanford", "take", "look", "the", "pictur", "below", "and", "tri", "identifi", "what", "one", "should", "abl", "tell", "that", "giraff", "despit", "strang", "fat", "recogn", "imag", "and", "object", "instant", "even", "these", "imag", "are", "present", "form", "that", "differ", "from", "what", "have", "seen", "befor", "this", "with", "the", "num", "billion", "neuron", "our", "brain", "work", "togeth", "transmit", "inform", "this", "remark", "system", "neuron", "also", "the", "inspir", "behind", "widelyus", "machin", "learn", "techniqu", "call", "artifici", "neural", "network", "some", "comput", "use", "this", "techniqu", "have", "even", "outperform", "human", "recogn", "imag", "the", "problem", "imag", "recognit", "import", "for", "mani", "the", "advanc", "technolog", "use", "today", "use", "visual", "surveil", "guid", "autonom", "vehicl", "and", "even", "identifi", "ailment", "from", "xray", "imag", "most", "modern", "smartphon", "also", "come", "with", "imag", "recognit", "app", "that", "convert", "handwrit", "into", "type", "word", "this", "chapter", "will", "look", "how", "can", "train", "algorithm", "recogn", "imag", "handwritten", "digit", "will", "use", "the", "imag", "from", "the", "famous", "mix", "nation", "institut", "standard", "and", "technolog", "databas", "handwritten", "digit", "the", "databas", "illustr", "this", "section", "present", "the", "perform", "model", "recogn", "handwritten", "digit", "befor", "explain", "how", "the", "model", "work", "the", "next", "section", "model", "train", "give", "exampl", "num", "handwritten", "digit", "togeth", "with", "the", "correct", "digit", "they", "repres", "this", "allow", "the", "model", "understand", "how", "the", "handwrit", "translat", "into", "actual", "digit", "after", "the", "model", "train", "can", "test", "how", "well", "the", "model", "perform", "give", "num", "new", "handwritten", "digit", "without", "the", "correct", "answer", "the", "model", "then", "requir", "recogn", "the", "actual", "digit", "the", "start", "the", "translat", "handwritten", "imag", "into", "pixel", "languag", "understand", "black", "pixel", "are", "given", "the", "valu", "num", "and", "white", "pixel", "the", "valu", "num", "each", "pixel", "imag", "call", "variabl", "out", "the", "num", "handwritten", "imag", "that", "the", "model", "ask", "recogn", "correct", "identifi", "num", "them", "which", "num", "accuraci", "can", "use", "conting", "tabl", "view", "the", "result", "shown", "below", "conting", "tabl", "show", "the", "perform", "the", "model", "for", "exampl", "the", "first", "row", "tell", "that", "out", "num", "imag", "digit", "num", "given", "the", "model", "num", "were", "correct", "identifi", "and", "num", "wrong", "identifi", "num", "the", "last", "column", "indic", "predict", "accuraci", "from", "the", "tabl", "can", "see", "that", "when", "given", "handwritten", "imag", "either", "num", "num", "the", "model", "almost", "alway", "identifi", "correct", "the", "other", "hand", "the", "digit", "num", "the", "trickiest", "identifi", "advantag", "use", "conting", "tabl", "that", "tell", "the", "frequenc", "misidentif", "imag", "the", "digit", "num", "are", "misidentifi", "num", "num", "about", "num", "the", "time", "let", "take", "indepth", "look", "some", "these", "misidentifi", "digit", "while", "the", "imag", "may", "look", "obvious", "like", "digit", "num", "human", "eye", "the", "sometim", "unabl", "recogn", "certain", "featur", "imag", "like", "the", "tail", "the", "digit", "num", "explain", "limit", "section", "anoth", "interest", "observ", "how", "the", "model", "confus", "digit", "num", "and", "num", "about", "num", "the", "time", "the", "neuron", "that", "inspir", "the", "network", "our", "brain", "has", "larg", "network", "interlink", "neuron", "which", "act", "highway", "for", "inform", "transmit", "from", "point", "point", "when", "differ", "inform", "sent", "from", "the", "brain", "activ", "differ", "set", "neuron", "and", "essenti", "use", "differ", "rout", "get", "from", "this", "how", "typic", "neuron", "look", "like", "brain", "neuron", "and", "main", "compon", "each", "neuron", "dendrit", "receiv", "incom", "signal", "sent", "other", "neuron", "the", "neuron", "receiv", "high", "enough", "level", "signal", "within", "certain", "period", "time", "the", "neuron", "send", "electr", "puls", "into", "the", "termin", "these", "outgo", "signal", "are", "then", "receiv", "other", "neuron", "technic", "explan", "how", "the", "model", "work", "simpl", "artifici", "neural", "network", "map", "show", "two", "scenario", "with", "two", "differ", "input", "but", "with", "the", "same", "output", "activ", "neuron", "along", "the", "path", "are", "shown", "red", "similar", "the", "model", "have", "input", "node", "which", "the", "imag", "give", "the", "model", "and", "output", "node", "which", "the", "digit", "that", "the", "model", "recogn", "the", "main", "characterist", "model", "such", "step", "num", "when", "the", "input", "node", "given", "imag", "activ", "uniqu", "set", "neuron", "the", "first", "layer", "start", "chain", "reaction", "that", "would", "pave", "uniqu", "path", "the", "output", "node", "scenario", "num", "neuron", "and", "are", "activ", "layer", "num", "step", "num", "the", "activ", "neuron", "send", "signal", "everi", "connect", "neuron", "the", "next", "layer", "this", "direct", "affect", "which", "neuron", "are", "activ", "the", "next", "layer", "scenario", "num", "neuron", "send", "signal", "and", "neuron", "send", "signal", "and", "neuron", "send", "signal", "and", "step", "num", "the", "next", "layer", "each", "neuron", "govern", "rule", "what", "combin", "receiv", "signal", "would", "activ", "the", "neuron", "scenario", "num", "neuron", "activ", "the", "signal", "from", "and", "howev", "for", "neuron", "and", "their", "neuron", "rule", "tell", "them", "that", "they", "have", "not", "receiv", "the", "right", "signal", "activ", "and", "henc", "they", "remain", "grey", "step", "num", "step", "num", "are", "repeat", "for", "all", "the", "remain", "layer", "possibl", "for", "the", "model", "have", "more", "than", "num", "layer", "until", "are", "left", "with", "the", "output", "node", "step", "num", "the", "output", "node", "deduc", "the", "correct", "digit", "base", "signal", "receiv", "from", "neuron", "the", "layer", "direct", "preced", "layer", "num", "each", "combin", "activ", "neuron", "layer", "num", "lead", "one", "solut", "though", "each", "solut", "can", "repres", "differ", "combin", "activ", "neuron", "scenario", "num", "num", "two", "imag", "are", "fed", "input", "becaus", "the", "imag", "are", "differ", "the", "network", "activ", "differ", "neural", "path", "from", "input", "the", "output", "howev", "the", "output", "still", "recogn", "both", "imag", "the", "digit", "num", "technic", "explan", "train", "the", "model", "need", "first", "decid", "the", "number", "layer", "and", "number", "neuron", "each", "layer", "for", "our", "model", "while", "there", "limit", "good", "start", "use", "num", "layer", "with", "the", "number", "neuron", "proport", "the", "number", "variabl", "for", "the", "digit", "recogn", "use", "num", "layer", "with", "num", "neuron", "each", "the", "two", "key", "factor", "involv", "train", "model", "are", "metric", "evalu", "the", "model", "accuraci", "rule", "that", "govern", "whether", "neuron", "are", "activ", "not", "common", "metric", "evalu", "model", "accuraci", "the", "sum", "the", "squar", "error", "put", "simpli", "squar", "error", "denot", "how", "close", "predict", "digit", "the", "actual", "digit", "the", "model", "will", "tri", "minim", "the", "chang", "the", "rule", "that", "govern", "neuron", "activ", "and", "these", "chang", "are", "determin", "mathemat", "concept", "known", "differenti", "each", "neuron", "rule", "has", "two", "compon", "the", "weight", "strength", "incom", "signal", "and", "the", "minimum", "receiv", "signal", "strength", "requir", "for", "activ", "the", "follow", "exampl", "illustr", "the", "rule", "for", "neuron", "zero", "weight", "given", "the", "signal", "from", "and", "connect", "and", "weight", "num", "num", "and", "num", "are", "given", "the", "signal", "from", "and", "respect", "the", "mvalu", "for", "num", "activ", "activ", "and", "not", "activ", "and", "are", "activ", "exampl", "rule", "the", "valu", "below", "indic", "the", "receiv", "signal", "strength", "limit", "comput", "expens", "train", "model", "take", "more", "time", "and", "power", "compar", "train", "other", "type", "model", "random", "forest", "moreov", "the", "perform", "model", "may", "not", "necessarili", "superior", "although", "not", "new", "techniqu", "has", "onli", "been", "use", "more", "frequent", "recent", "year", "becaus", "hardwar", "advanc", "that", "made", "comput", "feasibl", "howev", "the", "basi", "for", "more", "advanc", "model", "like", "deep", "neural", "network", "which", "were", "use", "googl", "oct", "num", "and", "mar", "num", "defeat", "human", "champion", "the", "game", "wide", "view", "unsolv", "grand", "challeng", "for", "artifici", "intellig", "lack", "featur", "recognit", "the", "unabl", "recogn", "imag", "they", "take", "slight", "variat", "shape", "are", "place", "differ", "locat", "for", "exampl", "want", "our", "model", "recogn", "imag", "cat", "and", "suppos", "our", "train", "exampl", "alway", "featur", "cat", "the", "bottom", "the", "imag", "then", "the", "model", "would", "not", "recogn", "the", "same", "cat", "they", "appear", "the", "top", "the", "same", "cat", "larger", "size", "advanc", "version", "call", "convolut", "neural", "network", "solv", "this", "problem", "look", "various", "region", "the", "imag", "fact", "cnns", "are", "also", "more", "effici", "and", "are", "wide", "use", "imag", "and", "video", "recognit", "for", "more", "inform", "check", "out", "previous", "post", "introduct", "convolut", "neural", "network", "addit", "note", "for", "advanc", "reader"], "timestamp_scraper": 1556365495.470364, "title": "Artificial Neural Networks (ANN) Introduction, Part 1", "read_time": 459.9, "content_html": "<div class=\"post\" id=\"post-\">\n<p><b>By Kenneth Soo, Stanford</b>.</p>\n<p>Take a look at the picture below and try to identify what it is:</p>\n<p><center><img alt=\"fat_giraffe_ANN\" src=\"https://annalyzin.files.wordpress.com/2016/03/fat_giraffe_w1.jpeg?w=217&amp;h=300\" width=\"60%\"/></center></p>\n<p>One should be able to tell that it is a giraffe, despite it being strangely fat. We recognize images and objects instantly, even if these images are presented in a form that is different from what we have seen before. We do this with the 80 billion neurons in our brain working together to transmit information. This remarkable system of neurons is also the inspiration behind a widely-used machine learning technique called\u00a0<em>Artificial Neural Networks</em>\u00a0(ANN). Some computers using this technique have even out-performed humans in recognizing images.</p>\n<h3>The Problem</h3>\n<p>\u00a0<br>\nImage recognition is important for many of the advanced technologies we use today. It is used in visual surveillance, guiding autonomous vehicles and even identifying ailments from X-ray images. Most modern smartphones also come with image recognition apps that convert handwriting into typed words.</br></p>\n<p>In this chapter we will look at how we can train an ANN algorithm to recognize images of handwritten digits. We will be using the images from the famous MNIST (Mixed National Institute of Standards and Technology) database.</p>\n<p><img alt=\"MNIST_ANN.png\" src=\"https://annalyzin.files.wordpress.com/2016/03/mnist2.png?w=620\" width=\"99%\"/><br>\n<center><em>Handwritten digits in the MNIST database</em></center></br></p>\n<h3>An Illustration</h3>\n<p>\u00a0<br>\nIn this section, we present the performance of an ANN model in recognizing handwritten digits, before explaining how the model works in the next section.</br></p>\n<p>An ANN model is trained by giving it examples of 10,000 handwritten digits, together with the correct digits they represent. This allows the ANN model to understand how the handwriting translates into actual digits. After the ANN model is trained, we can test how well the model performs by giving it 1,000 new handwritten digits without the correct answer. The model is then required to recognize the actual digit.</p>\n<p>At the start, the ANN translates handwritten images into pixels \u2013 a language it understands. Black pixels are given the value \u201c0\u201d and white pixels the value \u201c1\u201d. Each pixel in an image is called a\u00a0<em>variable</em>.</p>\n<p>Out of the 1,000 handwritten images that the model was asked to recognize, it correctly identified 922 of them, which is a 92.2% accuracy. We can use a contingency table to view the results, as shown below:</p>\n<p><img alt=\"ANN Handwriting Contingency Table\" src=\"https://annalyzin.files.wordpress.com/2016/03/contingency-table.png?w=620\" width=\"99%\"/><br>\n<center><em>Contingency table showing the performance of the ANN model. For example, the first row tells us that out of 85 images of digit \u201c0\u201ds given to the model, 84 were correctly identified and 1 was wrongly identified as \u201c6\u201d. The last column indicates prediction accuracy.</em></center></br></p>\n<p>From the table, we can see that when given a handwritten image of either \u201c0\u201d or \u201c1\u201d, the model almost always identifies it correctly. On the other hand, the digit \u201c5\u201d is the trickiest to identify. An advantage of using a contingency table is that it tells us the frequency of mis-identification. Image of the digit \u201c2\u201d are misidentified as \u201c7\u201d or \u201c8\u201d about 8% of the time. Let\u2019s take an in-depth look at some of these misidentified digits:</p>\n<p><img alt=\"ANN Mis-Identification Errors\" src=\"https://annalyzin.files.wordpress.com/2016/03/errors1.png?w=500&amp;h=239\" width=\"99%\"/></p>\n<p>While the images may look obviously like a digit \u201c2\u201d to human eyes, the ANN is sometimes unable to recognize certain features of images, like the tail of the digit \u201c2\u201d (explained in Limitations section). Another interesting observation is how the model confuses digits \u201c3\u201d and \u201c5\u201d about 10% of the time:</p>\n<p><img alt=\"ANN Mis-Identification Errors\" src=\"https://annalyzin.files.wordpress.com/2016/03/errors2.png?w=500&amp;h=239\" width=\"99%\"/></p>\n<h3>The Neurons That Inspired the Network</h3>\n<p>\u00a0<br/>\nOur brain has a large network of interlinked neurons, which act as a highway for information to be transmitted from point A to point B. When different information is sent from A to B, the brain activates different sets of neurons, and so essentially uses a different route to get from A to B. This is how a typical neuron looks like:</p>\n<p><img alt=\"Neuron Illustration\" src=\"https://annalyzin.files.wordpress.com/2016/03/neuron-illustrated.png?w=620\" width=\"99%\"/><br/>\n<center><em>A brain neuron and its main components</em></center></p>\n<p>At each neuron, dendrites receive incoming signals sent by other neurons. If the neuron receives a high enough level of signals within a certain period of time, the neuron sends an electrical pulse into the terminals. These outgoing signals are then received by other neurons.</p>\n<h3>Technical Explanation I: How The Model Works</h3>\n<p>\u00a0<br/>\n<img alt=\"ANN Tutorial Overview.png\" src=\"https://annalyzin.files.wordpress.com/2016/03/ann-1.png?w=620\" width=\"99%\"/><br/>\n<center><em>A simple Artificial Neural Network map, showing two scenarios with two different inputs but with the same output. Activated neurons along the path are shown in red.</em></center></p>\n<p>Similarly, in the ANN model, we have an input node, which is the image we give the model, and an output node, which is the digit that the model recognizes. The main characteristics of an ANN model is as such:</p>\n<p><strong>Step 1</strong>. When the input node is given an image, it activates a unique set of neurons in the first layer, starting a chain reaction that would pave a unique path to the output node. In Scenario 1, neurons A, B, and D are activated in layer 1.</p>\n<p><strong>Step 2</strong>. The activated neurons send signals to\u00a0<em>every</em>\u00a0connected neuron in the next layer. This directly affects which neurons are activated in the next layer. In Scenario 1, neuron A sends a signal to E and G, neuron B sends a signal to E, and neuron D sends a signal to F and G.</p>\n<p><strong>Step 3</strong>. In the next layer, each neuron is governed by a\u00a0<em>rule</em>\u00a0on what combinations of received signals would activate the neuron. In Scenario 1, neuron E is activated by the signals from A and B. However, for neuron F and G, their neurons\u2019\u00a0<em>rules</em>\u00a0tell them that they have not received the right signals to be activated, and hence they remain grey.</p>\n<p><strong>Step 4</strong>. Steps 2-3 are repeated for all the remaining layers (it is possible for the model to have more than 2 layers), until we are left with the output node.</p>\n<p><strong>Step 5</strong>. The output node deduces the correct digit based on signals received from neurons in the layer directly preceding it (layer 2). Each combination of activated neurons in layer 2 leads to one solution, though each solution can be represented by different combinations of activated neurons. In Scenarios 1 &amp; 2, two images are fed as input. Because the images are different, the network activates different neural paths from input to the output. However, the output is still recognizes both images as the digit \u201c6\u201d.</p>\n<h3>Technical Explanation II: Training The Model</h3>\n<p>\u00a0<br/>\nWe need to first decide the number of layers and number of neurons in each layer for our ANN model. While there is no limit, a good start is to use 3 layers, with the number of neurons being proportional to the number of variables. For the digit recognizer ANN, we used 3 layers with 500 neurons each. The two key factors involved in training a model are:</p>\n<ul>\n<li>A metric to evaluate the model\u2019s accuracy\n<li>Rules that govern whether neurons are activated or not\n</li></li></ul>\n<p>A common metric to evaluate model accuracy is the sum of the squared errors (SSE). Put simply, a squared error denotes how close a predicted digit is to the actual digit. The ANN model will try to minimize the SSE by changing the rules that govern neuron activation, and these changes are determined by a mathematical concept known as\u00a0<em>differentiation</em>.</p>\n<p>Each neuron\u2019s rule has two components \u2013 the weight (i.e. strength) of incoming signals [w], and the minimum received signal strength required for activation [m]. In the following example, we illustrate the rules for neuron G. Zero weight is given to the signals from A and B (i.e. no connection), and weights of 1, 2, and -1 are given to the signals from C, D, and E respectively. The m-value for G is 2, so G is activated if:</p>\n<ul>\n<li>D is activated and E is not activated, or if,\n<li>C and D are activated.\n</li></li></ul>\n<p><img alt=\"ANN Animation.gif\" src=\"https://annalyzin.files.wordpress.com/2016/03/annanimation-cropped.gif?w=620\" width=\"99%\"/><br/>\n<center><em>An example of a neuron(G)\u2019s rule. The value below G indicates the received signal strength</em></center></p>\n<h3>Limitations</h3>\n<p>\u00a0<br/>\n<strong>Computationally Expensive</strong>. Training an ANN model takes more time and CPU power\u00a0 compared to training other types of models (e.g. random forests). Moreover, the performance of ANN models may not necessarily be superior. Although ANN is not a new technique, it has only been used more frequently in recent years because of hardware advances that made its computing feasible. However, ANN is the basis for more advanced models, like Deep Neural Networks (DNN) which were used by Google in Oct 2015 and Mar 2016 to defeat human champions in the game of\u00a0<em>Go</em>, widely viewed as an unsolved \u201cgrand challenge\u201d for Artificial Intelligence.</p>\n<p><strong>Lack of feature recognition</strong>. The ANN is unable to recognize images if they take on slight variations in shape, or are placed in a different location. For example, if we want our ANN model to recognize images of cats, and suppose our training examples always feature cats at the bottom of the image, then the ANN model would not recognize the same cats if they appear at the top, or the same cats of larger sizes. An advanced version of ANN called Convolutional Neural Networks (CNN) solves this problem by looking at various regions of the image. In fact, CNNs are also more efficient, and are widely used in image and video recognition. For more information, check out a previous post on\u00a0<a href=\"https://annalyzin.wordpress.com/2016/01/26/introduction-to-convolutional-neural-network/\" target=\"_blank\">Introduction to Convolutional Neural Network</a>.</p>\n<h3>Additional Notes For Advanced Readers</h3></div> ", "website": "kdnuggets"}