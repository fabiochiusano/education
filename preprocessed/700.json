{"content": "comments By Suresh Kondamudi , CleverTap . Dealing with large datasets is often daunting. With limited computing resources, particularly memory, it can be challenging to perform even basic tasks like counting distinct elements, membership check, filtering duplicate elements, finding minimum, maximum, top-n elements, or set operations like union, intersection, similarity and so on. Probabilistic data structures to the rescue Probabilistic data structures can come in pretty handy in these cases, in that they dramatically reduce memory requirements, while still providing acceptable accuracy. Moreover, you get time efficiencies, as lookups (and adds) rely on multiple independent hash functions, which can be parallelized. We use structures like Bloom filters , MinHash , Count-min sketch , HyperLogLog extensively to solve a variety of problems. One fairly straightforward example is presented below. The problem We manage mobile push notifications for our customers, and one of the things we need to guard against is sending multiple notifications to the same user for the same campaign. Push notifications are routed to individual devices/users based on push notification tokens generated by the mobile platforms. Because of their size (anywhere from 32b to 4kb), it\u2019s non-performant for us to index push tokens or use them as the primary user key. On certain mobile platforms, when a user uninstalls and subsequently re-installs the same app, we lose our primary user key and create a new user profile for that device. Typically, in that case, the mobile platform will generate a new push notification token for that user on the reinstall. However, that is not always guaranteed. So, in a small number of cases we can end up with multiple user records in our system having the same push notification token. As a result, to prevent sending multiple notifications to the same user for the same campaign, we need to filter for a relatively small number of duplicate push tokens from a total dataset that runs from hundreds of millions to billions of records. To give you a sense of proportion, the memory required to filter just 100 Million push tokens is 100M * 256 = 25 GB! The solution \u2013 Bloom filter The idea is very simple. Allocate a bit array of size Choose independent hash functions \u00a0 \u00a0whose range is For each data element, compute hashes and turn on bits For membership query , apply hashes and check if all the corresponding bits are \u2018on\u2019 Note that bits might be turned \u2018on\u2019 by hash collisions leading to false positives i,e a non-existing element may be reported to exist and the goal is to minimise this. On hash functions Hash functions for Bloom filter should be independent and uniformly distributed. Cryptographic hashes like MD5 or SHA-1 are not good choices for performance reasons. Some of the suitable fast hashes are MurmurHash , FNV hashes and Jenkin\u2019s Hashes . We use MurmurHash \u2013 It\u2019s fast \u2013 10x faster than MD5 Good distribution \u2013 passes chi-squared test for uniformity Avalanche effect \u2013 sensitive to even slightest input changes Independent enough Sizing the Bloom filter Sizing the bit array involves choosing optimal number of hash functions to minimise false-positive probability. With bits, hash functions and elements, the false positive probability i,e the probability of all the corresponding bits are \u2018on\u2019 falsely when the element doesn\u2019t exist for given , optimal k that minimises i,e so, for 100 Million push tokens with 0.001 error probability This is significant improvement from 25 GB. Original . Related: Data is Ugly \u2013 Tales of Data Cleaning Doing Data Science: A Kaggle Walkthrough \u2013 Cleaning Data The Inconvenient Truth About Data Science", "title_html": "<h1 id=\"title\">How to Remove Duplicates in Large Datasets</h1> ", "url": "https://www.kdnuggets.com/2016/04/clevertap-remove-duplicates-large-datasets.html", "tfidf": {"tfidf": {"avalanch": 66.15, "base": 1.14628158845, "relat": 2.47501753838, "deal": 2.18346857379, "anywher": 10.1638924456, "countmin": 793.8, "scienc": 4.63939216832, "report": 1.3634489866, "new": 2.0357761108, "maximum": 4.80072573329, "clean": 13.73950670706, "give": 1.3653250774, "number": 3.30428749827, "parallel": 4.57917507932, "dataset": 387.219512196, "about": 1.06486015159, "function": 14.97265011, "user": 61.6843127732, "nonperform": 793.8, "distinct": 2.2836593786000003, "just": 1.33580143037, "duplic": 39.5910224438, "devic": 5.00820189274, "note": 1.42449528937, "clevertap": 793.8, "minhash": 793.8, "can": 4.70504556568, "collis": 18.3325635104, "check": 13.0131147541, "fair": 3.20533010297, "particular": 1.3814827706200001, "creat": 1.2492917847, "their": 1.01547908405, "multipl": 10.99255669032, "uninstal": 793.8, "run": 1.55692850838, "thing": 2.4065484311099996, "billion": 4.8669527897, "million": 5.183717892900001, "present": 1.25551601423, "they": 1.03017325287, "truth": 5.745928338759999, "than": 1.03278688525, "hundr": 2.4698195395099996, "distribut": 5.479206212259999, "end": 1.10680423871, "lose": 3.0851146521599997, "guarante": 6.57119205298, "will": 1.22481098596, "the": 26.0, "generat": 4.10550814584, "individu": 1.8004082558400003, "ugli": 33.6355932203, "lookup": 223.605633803, "provid": 1.21552714187, "sketch": 10.956521739100001, "below": 2.25607503197, "perform": 3.0627954085000004, "same": 6.71147748888, "slightest": 90.72, "certain": 1.8077886586200003, "need": 2.8745247148199997, "our": 7.07276507277, "exist": 2.9294215333599998, "record": 2.84669176976, "key": 4.5601034037, "prevent": 2.16117615029, "origin": 1.13724928367, "given": 1.35426085473, "custom": 3.6346153846199996, "mobil": 19.58790869832, "membership": 14.1686746988, "pass": 1.61818367139, "use": 3.0889162721399996, "numkb": 387.219512195, "count": 3.48157894737, "subsequ": 1.7534791252500002, "notif": 476.9613733906, "resourc": 2.9487369985100003, "profil": 4.8314059647, "becaus": 1.1495184997499999, "good": 3.03963239518, "alway": 2.06745670009, "basic": 2.7301805675, "rescu": 6.3656776263, "oper": 1.55479384977, "reli": 4.16146788991, "optim": 23.0755813954, "typic": 2.2541530597799997, "daunt": 102.425806452, "not": 2.03134796238, "involv": 1.4498630137000001, "exampl": 1.50483412322, "task": 3.88641370869, "them": 1.09876115994, "signific": 1.4529147982100001, "kaggl": 793.8, "may": 1.05201775893, "challeng": 2.55816951337, "nonexist": 77.82352941180001, "test": 2.65707112971, "guard": 4.07808887747, "problem": 3.53349655018, "index": 6.9969149405, "system": 1.38739840951, "extens": 1.99171998495, "howev": 1.0945191313299998, "effect": 1.3963060686000002, "choos": 8.35798894446, "minimum": 6.02962400304, "token": 235.94904458579998, "uniform": 11.446286950260001, "which": 1.005191845, "hash": 1779.2068965580002, "simpl": 3.3981164383599998, "alloc": 10.5558510638, "appli": 2.2972073506, "numb": 14.782122905, "one": 2.01254991444, "array": 20.2888178914, "chisquar": 793.8, "intersect": 12.660287081300002, "some": 1.04036697248, "accuraci": 12.7620578778, "get": 1.78562591385, "still": 1.1866357724799999, "like": 4.596742671, "fast": 9.7458563536, "manag": 1.6448404475799998, "push": 33.76275992442, "small": 2.7189587258, "should": 1.6643254009900001, "add": 4.61243463103, "result": 1.14611608432, "turn": 2.7677824267799997, "independ": 6.35802963556, "murmurhash": 1587.6, "element": 16.52029136317, "memori": 7.7217898832700005, "varieti": 2.2972073506, "structur": 6.174228675149999, "filter": 118.2255319147, "straightforward": 27.7552447552, "numx": 28.8654545455, "set": 1.18707940781, "this": 2.00758725342, "pretti": 15.75, "rang": 1.7848229342299997, "proport": 5.26741871267, "and": 11.000692913429999, "from": 4.00226885988, "chang": 1.1808985421, "bit": 58.33700787404, "similar": 1.37514075357, "limit": 1.5186531471200002, "num": 6.00189024006, "veri": 1.25880114177, "idea": 2.0930784443, "union": 2.11736463057, "bloom": 101.28229665079999, "for": 14.00441056014, "reinstal": 466.94117647, "all": 2.02293577982, "suitabl": 6.23811394892, "devicesus": 793.8, "app": 35.837471783299996, "with": 5.005991044949999, "handi": 102.425806452, "reason": 1.72340425532, "are": 5.1495296789000005, "solut": 4.7278141751, "solv": 7.26923076923, "case": 4.45496211768, "jenkin": 26.154859967100002, "sens": 2.8365195640499996, "walkthrough": 793.8, "whose": 1.73508196721, "falseposit": 793.8, "improv": 2.04376930999, "moreov": 7.56, "correspond": 6.64963350786, "minimis": 159.2909698998, "these": 1.07415426252, "posit": 2.74505057492, "cryptograph": 135.692307692, "faster": 7.61438848921, "sensit": 8.4672, "comment": 3.05954904606, "probabilist": 254.016, "kondamudi": 793.8, "platform": 18.6996466431, "comput": 7.855517070760001, "queri": 56.2978723404, "total": 1.5460122699399999, "each": 1.18974820144, "size": 9.9754948162, "larg": 1.18574949585, "topn": 793.8, "suresh": 305.307692308, "goal": 3.28152128979, "tale": 7.10653536258, "error": 6.04109589041, "time": 1.01127460348, "choic": 3.1319786940200003, "primari": 4.4746335963999995, "lead": 1.2664326739, "data": 27.01148447472, "reduc": 1.98698372966, "fals": 18.64839467502, "accept": 1.7377408056, "probabl": 10.58223629396, "come": 1.32831325301, "might": 2.1561863370900003, "that": 8.03187251, "enough": 2.2319696330700003, "send": 7.50106307584, "requir": 3.05689804564, "hyperloglog": 793.8, "rout": 3.1619199362700003, "campaign": 4.957377049180001, "input": 12.2029208301, "have": 1.0148948411399998, "while": 1.0441988950299999, "against": 1.2902072328299998, "dramat": 3.9849397590400004, "often": 1.29452054795, "find": 1.7294117647099998, "inconveni": 60.59541984729999, "when": 2.0415353951, "even": 2.32922535212, "effici": 5.09335899904}, "logtfidf": {"avalanch": 4.19192489056, "base": 0.13652330228700002, "relat": 0.42620060330799997, "deal": 0.780914701253, "anywher": 2.3188414835, "countmin": 6.676831540349999, "scienc": 1.682872357782, "report": 0.31001750903700004, "new": 0.0354598937022, "maximum": 1.5687671009200002, "clean": 3.8542564072600003, "give": 0.311392552224, "number": 0.2898257352558, "parallel": 1.52151886822, "dataset": 10.53168913328, "about": 0.0628434774746, "function": 5.486794449564, "user": 16.34070485504, "nonperform": 6.676831540349999, "distinct": 0.825779146958, "just": 0.289531434109, "duplic": 5.97091041208, "devic": 1.6110769470299997, "note": 0.353817568083, "clevertap": 6.676831540349999, "minhash": 6.676831540349999, "can": 0.649364385576, "collis": 2.9086789053400004, "check": 3.74562099124, "fair": 1.16481508131, "particular": 0.323157393804, "creat": 0.222576818514, "their": 0.015360505122700001, "multipl": 4.04369607248, "uninstal": 6.676831540349999, "run": 0.442714975539, "thing": 0.8781935346799999, "billion": 1.5824680307199999, "million": 1.640730750282, "present": 0.227546654799, "they": 0.0297269947676, "truth": 1.74849148898, "than": 0.0322608622182, "hundr": 0.904145087046, "distribut": 2.01562611626, "end": 0.101476798618, "lose": 1.1265888210600001, "guarante": 1.8826952548500002, "will": 0.202786534915, "the": 0.0, "generat": 1.438364683472, "individu": 0.588013447985, "ugli": 3.5155848283199997, "lookup": 5.40988393686, "provid": 0.19517784432500002, "sketch": 2.39393487158, "below": 0.813626591936, "perform": 0.85236170116, "same": 0.672357897624, "slightest": 4.50777783998, "certain": 0.592104362781, "need": 0.725480326884, "our": 2.5729176425460003, "exist": 0.7633155881739999, "record": 0.706020713906, "key": 1.64839623792, "prevent": 0.7706525875229999, "origin": 0.128612437587, "given": 0.303255810831, "custom": 1.2905032964799998, "mobil": 6.354472446440001, "membership": 3.9157726802, "pass": 0.48130432974, "use": 0.0876240591948, "numkb": 5.958991747200001, "count": 1.24748591139, "subsequ": 0.561601885907, "notif": 29.550677522380003, "resourc": 1.08137694258, "profil": 1.5751375153100002, "becaus": 0.139343158825, "good": 0.837178809814, "alway": 0.726319204572, "basic": 1.00436774895, "rescu": 1.8509206876599997, "oper": 0.441342964347, "reli": 1.42586787018, "optim": 4.891255590819999, "typic": 0.812774319158, "daunt": 4.62913869698, "not": 0.031104826015, "involv": 0.371469078658, "exampl": 0.40868267499899996, "task": 1.35748680661, "them": 0.0941833269093, "signific": 0.373571744332, "kaggl": 6.676831540349999, "may": 0.050709995284400004, "challeng": 0.9392919688950001, "nonexist": 4.35444382006, "test": 0.977224437103, "guard": 1.40562846629, "problem": 1.138281448546, "index": 1.94546932912, "system": 0.327430345585, "extens": 0.6889985794750001, "howev": 0.0903151173475, "effect": 0.333830227158, "choos": 2.86014132144, "minimum": 1.79668465441, "token": 24.623940039230003, "uniform": 3.48903642606, "which": 0.00517841384543, "hash": 63.94665709639999, "simpl": 1.2232212893899999, "alloc": 2.35668030939, "appli": 0.8316941898119999, "numb": 2.69341853883, "one": 0.012510703291, "array": 4.63384542186, "chisquar": 6.676831540349999, "intersect": 2.53847009271, "some": 0.0395735090645, "accuraci": 2.5464765406, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.55621430618, "fast": 3.1673900494800002, "manag": 0.497643387158, "push": 11.89920456324, "small": 0.614203610118, "should": 0.509419876758, "add": 1.52875583713, "result": 0.136378908381, "turn": 0.649798502128, "independ": 1.853696650012, "murmurhash": 13.353663080699999, "element": 6.010754791138999, "memori": 2.8363016959799996, "varieti": 0.8316941898119999, "structur": 2.1653150254050004, "filter": 19.78678757048, "straightforward": 3.3234248225200003, "numx": 3.36264553568, "set": 0.171496011289, "this": 0.007572898105, "pretti": 2.75684036527, "rang": 0.579319213803, "proport": 1.66154043472, "and": 0.0006928915626996, "from": 0.002268216675464, "chang": 0.166275625058, "bit": 14.84228568438, "similar": 0.318556092114, "limit": 0.41782385463, "num": 0.0018899423723820002, "veri": 0.230159793238, "idea": 0.73863592212, "union": 0.750172216607, "bloom": 12.926469093080001, "for": 0.0044098655355580005, "reinstal": 10.90611221746, "all": 0.022805264195599997, "suitabl": 1.83067788492, "devicesus": 6.676831540349999, "app": 3.57899404386, "with": 0.00598745856695, "handi": 4.62913869698, "reason": 0.544301552962, "are": 0.1473373679135, "solut": 1.55346297627, "solv": 1.9836504770400003, "case": 1.186218806667, "jenkin": 3.2640350228400004, "sens": 1.04257779501, "walkthrough": 6.676831540349999, "whose": 0.5510546556329999, "falseposit": 6.676831540349999, "improv": 0.7147958039319999, "moreov": 2.02287119019, "correspond": 2.40282912198, "minimis": 11.91636072153, "these": 0.0715336194008, "posit": 0.633304637216, "cryptograph": 4.91038987911, "faster": 2.03003967967, "sensit": 2.1361998755, "comment": 1.11826753454, "probabilist": 9.6885001532, "kondamudi": 6.676831540349999, "platform": 5.48967701676, "comput": 2.73613783188, "queri": 4.03065674296, "total": 0.43567888670500005, "each": 0.173741689304, "size": 3.6553488242439998, "larg": 0.17037506060600002, "topn": 6.676831540349999, "suresh": 5.721320095319999, "goal": 1.18830712273, "tale": 1.9610148342700002, "error": 1.7985854343, "time": 0.0112115188626, "choic": 1.14166497543, "primari": 1.610554579828, "lead": 0.23620402986699998, "data": 9.7345646784, "reduc": 0.686617775143, "fals": 5.4814433319299996, "accept": 0.552585882007, "probabl": 3.891529651652, "come": 0.28390990653000003, "might": 0.7683410765340001, "that": 0.03180918703712, "enough": 0.802884439169, "send": 2.64379514676, "requir": 0.84850702135, "hyperloglog": 6.676831540349999, "rout": 1.15117941787, "campaign": 1.8154591991440001, "input": 2.50167533539, "have": 0.0147850023412, "while": 0.04324998379380001, "against": 0.254802851078, "dramat": 1.3825221952000002, "often": 0.258140393351, "find": 0.547781330288, "inconveni": 4.10421931014, "when": 0.0411099777168, "even": 0.304777129668, "effici": 1.62793753414}, "logidf": {"avalanch": 4.19192489056, "base": 0.13652330228700002, "relat": 0.21310030165399999, "deal": 0.780914701253, "anywher": 2.3188414835, "countmin": 6.676831540349999, "scienc": 0.841436178891, "report": 0.31001750903700004, "new": 0.0177299468511, "maximum": 1.5687671009200002, "clean": 1.9271282036300001, "give": 0.311392552224, "number": 0.0966085784186, "parallel": 1.52151886822, "dataset": 5.26584456664, "about": 0.0628434774746, "function": 0.914465741594, "user": 2.04258810688, "nonperform": 6.676831540349999, "distinct": 0.825779146958, "just": 0.289531434109, "duplic": 2.98545520604, "devic": 1.6110769470299997, "note": 0.353817568083, "clevertap": 6.676831540349999, "minhash": 6.676831540349999, "can": 0.162341096394, "collis": 2.9086789053400004, "check": 1.87281049562, "fair": 1.16481508131, "particular": 0.323157393804, "creat": 0.222576818514, "their": 0.015360505122700001, "multipl": 1.01092401812, "uninstal": 6.676831540349999, "run": 0.442714975539, "thing": 0.8781935346799999, "billion": 1.5824680307199999, "million": 0.5469102500940001, "present": 0.227546654799, "they": 0.0297269947676, "truth": 1.74849148898, "than": 0.0322608622182, "hundr": 0.904145087046, "distribut": 1.00781305813, "end": 0.101476798618, "lose": 1.1265888210600001, "guarante": 1.8826952548500002, "will": 0.202786534915, "the": 0.0, "generat": 0.719182341736, "individu": 0.588013447985, "ugli": 3.5155848283199997, "lookup": 5.40988393686, "provid": 0.19517784432500002, "sketch": 2.39393487158, "below": 0.813626591936, "perform": 0.42618085058, "same": 0.112059649604, "slightest": 4.50777783998, "certain": 0.592104362781, "need": 0.362740163442, "our": 0.8576392141820001, "exist": 0.38165779408699996, "record": 0.353010356953, "key": 0.82419811896, "prevent": 0.7706525875229999, "origin": 0.128612437587, "given": 0.303255810831, "custom": 1.2905032964799998, "mobil": 1.5886181116100002, "membership": 1.9578863401, "pass": 0.48130432974, "use": 0.0292080197316, "numkb": 5.958991747200001, "count": 1.24748591139, "subsequ": 0.561601885907, "notif": 4.22152536034, "resourc": 1.08137694258, "profil": 1.5751375153100002, "becaus": 0.139343158825, "good": 0.418589404907, "alway": 0.726319204572, "basic": 1.00436774895, "rescu": 1.8509206876599997, "oper": 0.441342964347, "reli": 1.42586787018, "optim": 2.4456277954099996, "typic": 0.812774319158, "daunt": 4.62913869698, "not": 0.0155524130075, "involv": 0.371469078658, "exampl": 0.40868267499899996, "task": 1.35748680661, "them": 0.0941833269093, "signific": 0.373571744332, "kaggl": 6.676831540349999, "may": 0.050709995284400004, "challeng": 0.9392919688950001, "nonexist": 4.35444382006, "test": 0.977224437103, "guard": 1.40562846629, "problem": 0.569140724273, "index": 1.94546932912, "system": 0.327430345585, "extens": 0.6889985794750001, "howev": 0.0903151173475, "effect": 0.333830227158, "choos": 1.43007066072, "minimum": 1.79668465441, "token": 3.5177057198900004, "uniform": 1.74451821303, "which": 0.00517841384543, "hash": 4.918973622799999, "simpl": 1.2232212893899999, "alloc": 2.35668030939, "appli": 0.8316941898119999, "numb": 2.69341853883, "one": 0.0062553516455, "array": 2.31692271093, "chisquar": 6.676831540349999, "intersect": 2.53847009271, "some": 0.0395735090645, "accuraci": 2.5464765406, "get": 0.579769005782, "still": 0.17112222142900002, "like": 0.139053576545, "fast": 1.5836950247400001, "manag": 0.497643387158, "push": 1.32213384036, "small": 0.307101805059, "should": 0.509419876758, "add": 1.52875583713, "result": 0.136378908381, "turn": 0.324899251064, "independ": 0.463424162503, "murmurhash": 6.676831540349999, "element": 0.8586792558769999, "memori": 0.9454338986599999, "varieti": 0.8316941898119999, "structur": 0.7217716751350001, "filter": 2.82668393864, "straightforward": 3.3234248225200003, "numx": 3.36264553568, "set": 0.171496011289, "this": 0.0037864490525, "pretti": 2.75684036527, "rang": 0.579319213803, "proport": 1.66154043472, "and": 6.29901420636e-05, "from": 0.000567054168866, "chang": 0.166275625058, "bit": 2.12032652634, "similar": 0.318556092114, "limit": 0.41782385463, "num": 0.00031499039539700004, "veri": 0.230159793238, "idea": 0.73863592212, "union": 0.750172216607, "bloom": 3.2316172732700004, "for": 0.00031499039539700004, "reinstal": 5.45305610873, "all": 0.011402632097799998, "suitabl": 1.83067788492, "devicesus": 6.676831540349999, "app": 3.57899404386, "with": 0.00119749171339, "handi": 4.62913869698, "reason": 0.544301552962, "are": 0.0294674735827, "solut": 1.55346297627, "solv": 1.9836504770400003, "case": 0.395406268889, "jenkin": 3.2640350228400004, "sens": 1.04257779501, "walkthrough": 6.676831540349999, "whose": 0.5510546556329999, "falseposit": 6.676831540349999, "improv": 0.7147958039319999, "moreov": 2.02287119019, "correspond": 1.20141456099, "minimis": 3.97212024051, "these": 0.0715336194008, "posit": 0.316652318608, "cryptograph": 4.91038987911, "faster": 2.03003967967, "sensit": 2.1361998755, "comment": 1.11826753454, "probabilist": 4.8442500766, "kondamudi": 6.676831540349999, "platform": 1.8298923389200001, "comput": 1.36806891594, "queri": 4.03065674296, "total": 0.43567888670500005, "each": 0.173741689304, "size": 0.9138372060609999, "larg": 0.17037506060600002, "topn": 6.676831540349999, "suresh": 5.721320095319999, "goal": 1.18830712273, "tale": 1.9610148342700002, "error": 1.7985854343, "time": 0.0112115188626, "choic": 1.14166497543, "primari": 0.805277289914, "lead": 0.23620402986699998, "data": 1.2168205848, "reduc": 0.686617775143, "fals": 1.8271477773099998, "accept": 0.552585882007, "probabl": 0.972882412913, "come": 0.28390990653000003, "might": 0.7683410765340001, "that": 0.00397614837964, "enough": 0.802884439169, "send": 1.32189757338, "requir": 0.424253510675, "hyperloglog": 6.676831540349999, "rout": 1.15117941787, "campaign": 0.9077295995720001, "input": 2.50167533539, "have": 0.0147850023412, "while": 0.04324998379380001, "against": 0.254802851078, "dramat": 1.3825221952000002, "often": 0.258140393351, "find": 0.547781330288, "inconveni": 4.10421931014, "when": 0.0205549888584, "even": 0.152388564834, "effici": 1.62793753414}, "freq": {"avalanch": 1, "base": 1, "relat": 2, "deal": 1, "anywher": 1, "countmin": 1, "scienc": 2, "report": 1, "new": 2, "maximum": 1, "clean": 2, "give": 1, "number": 3, "parallel": 1, "dataset": 2, "about": 1, "function": 6, "user": 8, "nonperform": 1, "distinct": 1, "just": 1, "duplic": 2, "devic": 1, "note": 1, "clevertap": 1, "minhash": 1, "can": 4, "collis": 1, "check": 2, "fair": 1, "particular": 1, "creat": 1, "their": 1, "multipl": 4, "uninstal": 1, "run": 1, "thing": 1, "billion": 1, "million": 3, "present": 1, "they": 1, "truth": 1, "than": 1, "hundr": 1, "distribut": 2, "end": 1, "lose": 1, "guarante": 1, "will": 1, "the": 26, "generat": 2, "individu": 1, "ugli": 1, "lookup": 1, "provid": 1, "sketch": 1, "below": 1, "perform": 2, "same": 6, "slightest": 1, "certain": 1, "need": 2, "our": 3, "exist": 2, "record": 2, "key": 2, "prevent": 1, "origin": 1, "given": 1, "custom": 1, "mobil": 4, "membership": 2, "pass": 1, "use": 3, "numkb": 1, "count": 1, "subsequ": 1, "notif": 7, "resourc": 1, "profil": 1, "becaus": 1, "good": 2, "alway": 1, "basic": 1, "rescu": 1, "oper": 1, "reli": 1, "optim": 2, "typic": 1, "daunt": 1, "not": 2, "involv": 1, "exampl": 1, "task": 1, "them": 1, "signific": 1, "kaggl": 1, "may": 1, "challeng": 1, "nonexist": 1, "test": 1, "guard": 1, "problem": 2, "index": 1, "system": 1, "extens": 1, "howev": 1, "effect": 1, "choos": 2, "minimum": 1, "token": 7, "uniform": 2, "which": 1, "hash": 13, "simpl": 1, "alloc": 1, "appli": 1, "numb": 1, "one": 2, "array": 2, "chisquar": 1, "intersect": 1, "some": 1, "accuraci": 1, "get": 1, "still": 1, "like": 4, "fast": 2, "manag": 1, "push": 9, "small": 2, "should": 1, "add": 1, "result": 1, "turn": 2, "independ": 4, "murmurhash": 2, "element": 7, "memori": 3, "varieti": 1, "structur": 3, "filter": 7, "straightforward": 1, "numx": 1, "set": 1, "this": 2, "pretti": 1, "rang": 1, "proport": 1, "and": 11, "from": 4, "chang": 1, "bit": 7, "similar": 1, "limit": 1, "num": 6, "veri": 1, "idea": 1, "union": 1, "bloom": 4, "for": 14, "reinstal": 2, "all": 2, "suitabl": 1, "devicesus": 1, "app": 1, "with": 5, "handi": 1, "reason": 1, "are": 5, "solut": 1, "solv": 1, "case": 3, "jenkin": 1, "sens": 1, "walkthrough": 1, "whose": 1, "falseposit": 1, "improv": 1, "moreov": 1, "correspond": 2, "minimis": 3, "these": 1, "posit": 2, "cryptograph": 1, "faster": 1, "sensit": 1, "comment": 1, "probabilist": 2, "kondamudi": 1, "platform": 3, "comput": 2, "queri": 1, "total": 1, "each": 1, "size": 4, "larg": 1, "topn": 1, "suresh": 1, "goal": 1, "tale": 1, "error": 1, "time": 1, "choic": 1, "primari": 2, "lead": 1, "data": 8, "reduc": 1, "fals": 3, "accept": 1, "probabl": 4, "come": 1, "might": 1, "that": 8, "enough": 1, "send": 2, "requir": 2, "hyperloglog": 1, "rout": 1, "campaign": 2, "input": 1, "have": 1, "while": 1, "against": 1, "dramat": 1, "often": 1, "find": 1, "inconveni": 1, "when": 2, "even": 2, "effici": 1}, "idf": {"avalanch": 66.15, "base": 1.14628158845, "relat": 1.23750876919, "deal": 2.18346857379, "anywher": 10.1638924456, "countmin": 793.8, "scienc": 2.31969608416, "report": 1.3634489866, "new": 1.0178880554, "maximum": 4.80072573329, "clean": 6.86975335353, "give": 1.3653250774, "number": 1.10142916609, "parallel": 4.57917507932, "dataset": 193.609756098, "about": 1.06486015159, "function": 2.495441685, "user": 7.71053909665, "nonperform": 793.8, "distinct": 2.2836593786000003, "just": 1.33580143037, "duplic": 19.7955112219, "devic": 5.00820189274, "note": 1.42449528937, "clevertap": 793.8, "minhash": 793.8, "can": 1.17626139142, "collis": 18.3325635104, "check": 6.50655737705, "fair": 3.20533010297, "particular": 1.3814827706200001, "creat": 1.2492917847, "their": 1.01547908405, "multipl": 2.74813917258, "uninstal": 793.8, "run": 1.55692850838, "thing": 2.4065484311099996, "billion": 4.8669527897, "million": 1.7279059643, "present": 1.25551601423, "they": 1.03017325287, "truth": 5.745928338759999, "than": 1.03278688525, "hundr": 2.4698195395099996, "distribut": 2.7396031061299997, "end": 1.10680423871, "lose": 3.0851146521599997, "guarante": 6.57119205298, "will": 1.22481098596, "the": 1.0, "generat": 2.05275407292, "individu": 1.8004082558400003, "ugli": 33.6355932203, "lookup": 223.605633803, "provid": 1.21552714187, "sketch": 10.956521739100001, "below": 2.25607503197, "perform": 1.5313977042500002, "same": 1.11857958148, "slightest": 90.72, "certain": 1.8077886586200003, "need": 1.4372623574099999, "our": 2.35758835759, "exist": 1.4647107666799999, "record": 1.42334588488, "key": 2.28005170185, "prevent": 2.16117615029, "origin": 1.13724928367, "given": 1.35426085473, "custom": 3.6346153846199996, "mobil": 4.89697717458, "membership": 7.0843373494, "pass": 1.61818367139, "use": 1.0296387573799999, "numkb": 387.219512195, "count": 3.48157894737, "subsequ": 1.7534791252500002, "notif": 68.1373390558, "resourc": 2.9487369985100003, "profil": 4.8314059647, "becaus": 1.1495184997499999, "good": 1.51981619759, "alway": 2.06745670009, "basic": 2.7301805675, "rescu": 6.3656776263, "oper": 1.55479384977, "reli": 4.16146788991, "optim": 11.5377906977, "typic": 2.2541530597799997, "daunt": 102.425806452, "not": 1.01567398119, "involv": 1.4498630137000001, "exampl": 1.50483412322, "task": 3.88641370869, "them": 1.09876115994, "signific": 1.4529147982100001, "kaggl": 793.8, "may": 1.05201775893, "challeng": 2.55816951337, "nonexist": 77.82352941180001, "test": 2.65707112971, "guard": 4.07808887747, "problem": 1.76674827509, "index": 6.9969149405, "system": 1.38739840951, "extens": 1.99171998495, "howev": 1.0945191313299998, "effect": 1.3963060686000002, "choos": 4.17899447223, "minimum": 6.02962400304, "token": 33.7070063694, "uniform": 5.7231434751300005, "which": 1.005191845, "hash": 136.862068966, "simpl": 3.3981164383599998, "alloc": 10.5558510638, "appli": 2.2972073506, "numb": 14.782122905, "one": 1.00627495722, "array": 10.1444089457, "chisquar": 793.8, "intersect": 12.660287081300002, "some": 1.04036697248, "accuraci": 12.7620578778, "get": 1.78562591385, "still": 1.1866357724799999, "like": 1.14918566775, "fast": 4.8729281768, "manag": 1.6448404475799998, "push": 3.75141776938, "small": 1.3594793629, "should": 1.6643254009900001, "add": 4.61243463103, "result": 1.14611608432, "turn": 1.3838912133899999, "independ": 1.58950740889, "murmurhash": 793.8, "element": 2.36004162331, "memori": 2.57392996109, "varieti": 2.2972073506, "structur": 2.0580762250499998, "filter": 16.8893617021, "straightforward": 27.7552447552, "numx": 28.8654545455, "set": 1.18707940781, "this": 1.00379362671, "pretti": 15.75, "rang": 1.7848229342299997, "proport": 5.26741871267, "and": 1.00006299213, "from": 1.00056721497, "chang": 1.1808985421, "bit": 8.33385826772, "similar": 1.37514075357, "limit": 1.5186531471200002, "num": 1.00031504001, "veri": 1.25880114177, "idea": 2.0930784443, "union": 2.11736463057, "bloom": 25.320574162699998, "for": 1.00031504001, "reinstal": 233.470588235, "all": 1.01146788991, "suitabl": 6.23811394892, "devicesus": 793.8, "app": 35.837471783299996, "with": 1.0011982089899998, "handi": 102.425806452, "reason": 1.72340425532, "are": 1.02990593578, "solut": 4.7278141751, "solv": 7.26923076923, "case": 1.48498737256, "jenkin": 26.154859967100002, "sens": 2.8365195640499996, "walkthrough": 793.8, "whose": 1.73508196721, "falseposit": 793.8, "improv": 2.04376930999, "moreov": 7.56, "correspond": 3.32481675393, "minimis": 53.0969899666, "these": 1.07415426252, "posit": 1.37252528746, "cryptograph": 135.692307692, "faster": 7.61438848921, "sensit": 8.4672, "comment": 3.05954904606, "probabilist": 127.008, "kondamudi": 793.8, "platform": 6.2332155476999995, "comput": 3.9277585353800006, "queri": 56.2978723404, "total": 1.5460122699399999, "each": 1.18974820144, "size": 2.49387370405, "larg": 1.18574949585, "topn": 793.8, "suresh": 305.307692308, "goal": 3.28152128979, "tale": 7.10653536258, "error": 6.04109589041, "time": 1.01127460348, "choic": 3.1319786940200003, "primari": 2.2373167981999997, "lead": 1.2664326739, "data": 3.37643555934, "reduc": 1.98698372966, "fals": 6.21613155834, "accept": 1.7377408056, "probabl": 2.64555907349, "come": 1.32831325301, "might": 2.1561863370900003, "that": 1.00398406375, "enough": 2.2319696330700003, "send": 3.75053153792, "requir": 1.52844902282, "hyperloglog": 793.8, "rout": 3.1619199362700003, "campaign": 2.4786885245900003, "input": 12.2029208301, "have": 1.0148948411399998, "while": 1.0441988950299999, "against": 1.2902072328299998, "dramat": 3.9849397590400004, "often": 1.29452054795, "find": 1.7294117647099998, "inconveni": 60.59541984729999, "when": 1.02076769755, "even": 1.16461267606, "effici": 5.09335899904}}, "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  How to Remove Duplicates in Large Datasets</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/clevertap-remove-duplicates-large-datasets.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb How to Remove Duplicates in Large Datasets Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/top-data-science-courses-udemy.html\" rel=\"prev\" title=\"Top Data Science Courses on Udemy\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/top-tweets-apr12-26.html\" rel=\"next\" title=\"Top KDnuggets tweets, Apr 12-26: The Race For AI: Google, Facebook, Amazon, Apple; Comprehensive Guide to Learning #Python\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2016/04/clevertap-remove-duplicates-large-datasets.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=48517\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2016/04/clevertap-remove-duplicates-large-datasets.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-48517 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 27-Apr, 2016  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb How to Remove Duplicates in Large Datasets (\u00a0<a href=\"/2016/n16.html\">16:n16</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\">How to Remove Duplicates in Large Datasets</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/top-data-science-courses-udemy.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/top-tweets-apr12-26.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/clevertap\" rel=\"tag\">CleverTap</a>, <a href=\"https://www.kdnuggets.com/tag/data-cleaning\" rel=\"tag\">Data Cleaning</a>, <a href=\"https://www.kdnuggets.com/tag/data-preparation\" rel=\"tag\">Data Preparation</a></div>\n<br/>\n<p class=\"excerpt\">\n     Dealing with huge datasets can be tricky, especially the data cleaning process. One of such processing is de-duplication, find out how you can solve this using the statistical techniques.\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://blog.clevertap.com/author/suresh/ \">Suresh Kondamudi</a>, CleverTap</b>.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://blog.clevertap.com/wp-content/uploads/2016/04/big-data.png\" width=\"99%\"/></p>\n<p>Dealing with large datasets is often daunting. With limited computing resources, particularly memory, it can be challenging to perform even basic tasks like counting distinct elements, membership check, filtering duplicate elements, finding minimum, maximum, top-n elements, or set operations like union, intersection, similarity and so on.</p>\n<p><strong>Probabilistic data structures to the rescue</strong></p>\n<p>Probabilistic data structures can come in pretty handy in these cases, in that they dramatically reduce memory requirements, while still providing acceptable accuracy. Moreover, you get time efficiencies, as lookups (and adds) rely on multiple independent hash functions, which can be parallelized. We use structures like <a href=\"https://en.wikipedia.org/wiki/Bloom_filter\">Bloom filters</a>, <a href=\"https://en.wikipedia.org/wiki/MinHash\">MinHash</a>, <a href=\"https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch\">Count-min sketch</a>, <a href=\"https://en.wikipedia.org/wiki/HyperLogLog\">HyperLogLog</a> extensively to solve a variety of problems. One fairly straightforward example is presented below.</p>\n<p><strong>The problem</strong></p>\n<p>We manage <a href=\"https://clevertap.com/push-notifications/\" target=\"_blank\">mobile push notifications</a> for our customers, and one of the things we need to guard against is sending multiple notifications to the same user for the same campaign. Push notifications are routed to individual devices/users based on push notification tokens generated by the mobile platforms. Because of their size (anywhere from 32b to 4kb), it\u2019s non-performant for us to index push tokens or use them as the primary user key.</p>\n<p>On certain mobile platforms, when a user uninstalls and subsequently re-installs the same app, we lose our primary user key and create a new user profile for that device. Typically, in that case, the mobile platform will generate a new push notification token for that user on the reinstall. However, that is not always guaranteed. So, in a small number of cases we can end up with multiple user records in our system having the same push notification token.</p>\n<p>As a result, to prevent sending multiple notifications to the same user for the same campaign, we need to filter for a relatively small number of duplicate push tokens from a total dataset that runs from hundreds of millions to billions of records. To give you a sense of proportion, the memory required to filter just 100 Million push tokens is 100M * 256 = 25 GB!</p>\n<p><strong>The solution \u2013 Bloom filter</strong></p>\n<p>The idea is very simple.</p>\n<ul class=\"three_ul\">\n<li>Allocate a bit array of size <img alt=\"m \" src=\"//s0.wp.com/latex.php?latex=m+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m \"/></li>\n<li>Choose <img alt=\"k \" src=\"//s0.wp.com/latex.php?latex=k+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k \"/> independent hash functions \u00a0<img alt=\"h_i(x) \" src=\"//s0.wp.com/latex.php?latex=h_i%28x%29+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"h_i(x) \"/> \u00a0whose range is <img alt=\"[ 0 .. m-1 ] \" src=\"//s0.wp.com/latex.php?latex=%5B+0+..+m-1+%5D+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"[ 0 .. m-1 ] \"/></li>\n<li>For each data element, compute hashes and turn on bits <img alt=\"Bloom filter\" class=\"wp-image-2088 aligncenter\" src=\"https://blog.clevertap.com/wp-content/uploads/2016/03/bloom-filter.jpg\" width=\"99%\"/></li>\n<li>For membership query <img alt=\"q \" src=\"//s0.wp.com/latex.php?latex=q+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"q \"/>, apply hashes and check if all the corresponding bits are \u2018on\u2019</li>\n</ul>\n<p>Note that bits might be turned \u2018on\u2019 by hash collisions leading to false positives i,e a non-existing element may be reported to exist and the goal is to minimise this.</p>\n<p><strong>On hash functions</strong></p>\n<p>Hash functions for Bloom filter should be independent and uniformly distributed. Cryptographic hashes like MD5 or SHA-1 are not good choices for performance reasons. Some of the suitable fast hashes are <a href=\"https://en.wikipedia.org/wiki/MurmurHash\">MurmurHash</a>, <a href=\"https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\">FNV hashes</a> and <a href=\"https://en.wikipedia.org/wiki/Jenkins_hash_function\">Jenkin\u2019s Hashes</a>.</p>\n<p>We use MurmurHash \u2013</p>\n<ul class=\"three_ul\">\n<li>It\u2019s fast \u2013 10x faster than MD5</li>\n<li>Good distribution \u2013 passes chi-squared test for uniformity</li>\n<li>Avalanche effect \u2013 sensitive to even slightest input changes</li>\n<li>Independent enough</li>\n</ul>\n<p><strong>Sizing the Bloom filter</strong></p>\n<p>Sizing the bit array involves choosing optimal number of hash functions to minimise false-positive probability.</p>\n<p>With <img alt=\"m\" src=\"//s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=000&amp;s=0\"/> bits, <img alt=\"k\" src=\"//s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k\"/> hash functions and <img alt=\"n\" src=\"//s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"n\"/> elements, the false positive probability i,e the probability of all the corresponding <img alt=\"k\" src=\"//s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k\"/> bits are \u2018on\u2019 falsely when the element doesn\u2019t exist</p>\n<p><img alt=\"p = ( 1 - [ 1 - \\frac{1}{m}]^{kn} )^k \\approx ( 1 - e^{-\\frac{kn}{m}})^k \" src=\"//s0.wp.com/latex.php?latex=p+%3D+%28+1+-+%5B+1+-+%5Cfrac%7B1%7D%7Bm%7D%5D%5E%7Bkn%7D+%29%5Ek+%5Capprox+%28+1+-+e%5E%7B-%5Cfrac%7Bkn%7D%7Bm%7D%7D%29%5Ek+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"p = ( 1 - [ 1 - \\frac{1}{m}]^{kn} )^k \\approx ( 1 - e^{-\\frac{kn}{m}})^k \" width=\"50%\"/></p>\n<p>for given <img alt=\"m, n \" src=\"//s0.wp.com/latex.php?latex=m%2C+n+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m, n \"/>, optimal k that minimises <img alt=\"p \" src=\"//s0.wp.com/latex.php?latex=p+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"p \"/></p>\n<p>i,e <img alt=\"\\frac{dp}{dk} = 0 \\implies k = \\frac{m}{n}ln(2)\" src=\"//s0.wp.com/latex.php?latex=%5Cfrac%7Bdp%7D%7Bdk%7D+%3D+0+%5Cimplies+k+%3D+%5Cfrac%7Bm%7D%7Bn%7Dln%282%29&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"\\frac{dp}{dk} = 0 \\implies k = \\frac{m}{n}ln(2)\" width=\"30%\"/></p>\n<p><img alt=\"\\implies m = -\\frac{nln(p)}{(ln(2))^2} \" src=\"//s0.wp.com/latex.php?latex=%5Cimplies+m+%3D+-%5Cfrac%7Bnln%28p%29%7D%7B%28ln%282%29%29%5E2%7D+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"\\implies m = -\\frac{nln(p)}{(ln(2))^2} \" width=\"25%\"/></p>\n<p>so, for 100 Million push tokens with 0.001 error probability</p>\n<p><img alt=\"m = -\\frac{100000000*ln(0.001)}{(ln(2))^2} = 171 MB \" src=\"//s0.wp.com/latex.php?latex=m+%3D+-%5Cfrac%7B100000000%2Aln%280.001%29%7D%7B%28ln%282%29%29%5E2%7D+%3D+171+MB+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m = -\\frac{100000000*ln(0.001)}{(ln(2))^2} = 171 MB \" width=\"45%\"/></p>\n<p>This is significant improvement from 25 GB.</p>\n<p><a href=\"https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/ \">Original</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/08/data-ugly-tales-data-cleaning.html\" target=\"_blank\">Data is Ugly \u2013 Tales of Data Cleaning</a></li>\n<li><a href=\"/2016/03/doing-data-science-kaggle-walkthrough-cleaning-data.html\" target=\"_blank\">Doing Data Science: A Kaggle Walkthrough \u2013 Cleaning Data</a></li>\n<li><a href=\"/2015/05/data-science-inconvenient-truth.html\" target=\"_blank\">The Inconvenient Truth About Data Science</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p><script type=\"text/javascript\">// <![CDATA[\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n\n// ]]&gt;</script></p>\n</div>\n<div class=\"page-link\"></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2016/04/top-data-science-courses-udemy.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2016/04/top-tweets-apr12-26.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-1-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-2-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-3-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-4-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-5-another-10-books');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-6-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/best-data-visualization-techniques.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-mp-7-best-data-viz');\"><b>Best Data Visualization Techniques for small and large data</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-1-another-10-courses');\"><b>Another 10 Free Must-See Courses for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2019/04/top-10-coding-mistakes-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-2-mistakes');\"><b>Top 10 Coding Mistakes Made by Data Scientists</b></a>\n<li> <a href=\"/2019/03/r-vs-python-data-visualization.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-3-r-py-viz');\"><b>R vs Python for Data Visualization</b></a>\n<li> <a href=\"/2019/03/deep-learning-toolset-overview.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-4-dl-toolset');\"><b>The Deep Learning Toolset \u2014 An Overview</b></a>\n<li> <a href=\"/2019/04/data-visualization-python-matplotlib-seaborn.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-5-plt-sea-viz');\"><b>Data Visualization in Python: Matplotlib vs Seaborn</b></a>\n<li> <a href=\"/2019/04/introduction-time-series-forecasting-simple-neural-networks-lstm.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-6-ts-intro');\"><b>An Introduction on Time Series Forecasting with Simple Neural Networks &amp; LSTM</b></a>\n<li> <a href=\"/2019/04/recognize-good-data-scientist-job-from-bad.html\" onclick=\"ga('send','pageview','/x/pbc/2019/04-23-ms-7-recognize');\"><b>How to Recognize a Good Data Scientist Job From a Bad One</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/04/datarobot-delivering-trusted-ai-microsoft.html\">Delivering Trusted AI with DataRobot and Microsoft</a><li> <a href=\"https://www.kdnuggets.com/2019/04/formulated-ai-data-production-landscape.html\">AI and the data production landscape</a><li> <a href=\"https://www.kdnuggets.com/2019/04/most-desired-skill-data-science.html\">The most desired skill in data science</a><li> <a href=\"https://www.kdnuggets.com/2019/04/projects-include-data-science-portfolio.html\">Projects to Include in a Data Science Portfolio</a><li> <a href=\"https://www.kdnuggets.com/2019/04/rework-meet-worlds-leading-ai-deep-learning-experts.html\">Meet the World\u2019s Leading AI &amp; Deep Learning ...</a><li> <a href=\"https://www.kdnuggets.com/2019/04/problem-data-science-job-postings.html\">The problem with data science job postings</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2016/index.html\">2016</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/index.html\">Apr</a> \u00bb <a href=\"https://www.kdnuggets.com/2016/04/tutorials.html\">Tutorials, Overviews</a> \u00bb How to Remove Duplicates in Large Datasets (\u00a0<a href=\"/2016/n16.html\">16:n16</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1556340817\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"center\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"center\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></body></html>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n\n\n<!-- Dynamic page generated in 0.636 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-04-27 00:53:37 -->\n<!-- Compression = gzip -->", "content_tokenized": ["comment", "suresh", "kondamudi", "clevertap", "deal", "with", "larg", "dataset", "often", "daunt", "with", "limit", "comput", "resourc", "particular", "memori", "can", "challeng", "perform", "even", "basic", "task", "like", "count", "distinct", "element", "membership", "check", "filter", "duplic", "element", "find", "minimum", "maximum", "topn", "element", "set", "oper", "like", "union", "intersect", "similar", "and", "probabilist", "data", "structur", "the", "rescu", "probabilist", "data", "structur", "can", "come", "pretti", "handi", "these", "case", "that", "they", "dramat", "reduc", "memori", "requir", "while", "still", "provid", "accept", "accuraci", "moreov", "get", "time", "effici", "lookup", "and", "add", "reli", "multipl", "independ", "hash", "function", "which", "can", "parallel", "use", "structur", "like", "bloom", "filter", "minhash", "countmin", "sketch", "hyperloglog", "extens", "solv", "varieti", "problem", "one", "fair", "straightforward", "exampl", "present", "below", "the", "problem", "manag", "mobil", "push", "notif", "for", "our", "custom", "and", "one", "the", "thing", "need", "guard", "against", "send", "multipl", "notif", "the", "same", "user", "for", "the", "same", "campaign", "push", "notif", "are", "rout", "individu", "devicesus", "base", "push", "notif", "token", "generat", "the", "mobil", "platform", "becaus", "their", "size", "anywher", "from", "numb", "numkb", "nonperform", "for", "index", "push", "token", "use", "them", "the", "primari", "user", "key", "certain", "mobil", "platform", "when", "user", "uninstal", "and", "subsequ", "reinstal", "the", "same", "app", "lose", "our", "primari", "user", "key", "and", "creat", "new", "user", "profil", "for", "that", "devic", "typic", "that", "case", "the", "mobil", "platform", "will", "generat", "new", "push", "notif", "token", "for", "that", "user", "the", "reinstal", "howev", "that", "not", "alway", "guarante", "small", "number", "case", "can", "end", "with", "multipl", "user", "record", "our", "system", "have", "the", "same", "push", "notif", "token", "result", "prevent", "send", "multipl", "notif", "the", "same", "user", "for", "the", "same", "campaign", "need", "filter", "for", "relat", "small", "number", "duplic", "push", "token", "from", "total", "dataset", "that", "run", "from", "hundr", "million", "billion", "record", "give", "sens", "proport", "the", "memori", "requir", "filter", "just", "num", "million", "push", "token", "num", "num", "the", "solut", "bloom", "filter", "the", "idea", "veri", "simpl", "alloc", "bit", "array", "size", "choos", "independ", "hash", "function", "whose", "rang", "for", "each", "data", "element", "comput", "hash", "and", "turn", "bit", "for", "membership", "queri", "appli", "hash", "and", "check", "all", "the", "correspond", "bit", "are", "note", "that", "bit", "might", "turn", "hash", "collis", "lead", "fals", "posit", "nonexist", "element", "may", "report", "exist", "and", "the", "goal", "minimis", "this", "hash", "function", "hash", "function", "for", "bloom", "filter", "should", "independ", "and", "uniform", "distribut", "cryptograph", "hash", "like", "are", "not", "good", "choic", "for", "perform", "reason", "some", "the", "suitabl", "fast", "hash", "are", "murmurhash", "hash", "and", "jenkin", "hash", "use", "murmurhash", "fast", "numx", "faster", "than", "good", "distribut", "pass", "chisquar", "test", "for", "uniform", "avalanch", "effect", "sensit", "even", "slightest", "input", "chang", "independ", "enough", "size", "the", "bloom", "filter", "size", "the", "bit", "array", "involv", "choos", "optim", "number", "hash", "function", "minimis", "falseposit", "probabl", "with", "bit", "hash", "function", "and", "element", "the", "fals", "posit", "probabl", "the", "probabl", "all", "the", "correspond", "bit", "are", "fals", "when", "the", "element", "exist", "for", "given", "optim", "that", "minimis", "for", "num", "million", "push", "token", "with", "num", "error", "probabl", "this", "signific", "improv", "from", "num", "origin", "relat", "data", "ugli", "tale", "data", "clean", "data", "scienc", "kaggl", "walkthrough", "clean", "data", "the", "inconveni", "truth", "about", "data", "scienc"], "timestamp_scraper": 1556366130.869235, "title": "How to Remove Duplicates in Large Datasets", "read_time": 178.5, "content_html": "<div class=\"post\" id=\"post-\">\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"#comments\">comments</a></div>\n<p><b>By <a href=\"https://blog.clevertap.com/author/suresh/ \">Suresh Kondamudi</a>, CleverTap</b>.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://blog.clevertap.com/wp-content/uploads/2016/04/big-data.png\" width=\"99%\"/></p>\n<p>Dealing with large datasets is often daunting. With limited computing resources, particularly memory, it can be challenging to perform even basic tasks like counting distinct elements, membership check, filtering duplicate elements, finding minimum, maximum, top-n elements, or set operations like union, intersection, similarity and so on.</p>\n<p><strong>Probabilistic data structures to the rescue</strong></p>\n<p>Probabilistic data structures can come in pretty handy in these cases, in that they dramatically reduce memory requirements, while still providing acceptable accuracy. Moreover, you get time efficiencies, as lookups (and adds) rely on multiple independent hash functions, which can be parallelized. We use structures like <a href=\"https://en.wikipedia.org/wiki/Bloom_filter\">Bloom filters</a>, <a href=\"https://en.wikipedia.org/wiki/MinHash\">MinHash</a>, <a href=\"https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch\">Count-min sketch</a>, <a href=\"https://en.wikipedia.org/wiki/HyperLogLog\">HyperLogLog</a> extensively to solve a variety of problems. One fairly straightforward example is presented below.</p>\n<p><strong>The problem</strong></p>\n<p>We manage <a href=\"https://clevertap.com/push-notifications/\" target=\"_blank\">mobile push notifications</a> for our customers, and one of the things we need to guard against is sending multiple notifications to the same user for the same campaign. Push notifications are routed to individual devices/users based on push notification tokens generated by the mobile platforms. Because of their size (anywhere from 32b to 4kb), it\u2019s non-performant for us to index push tokens or use them as the primary user key.</p>\n<p>On certain mobile platforms, when a user uninstalls and subsequently re-installs the same app, we lose our primary user key and create a new user profile for that device. Typically, in that case, the mobile platform will generate a new push notification token for that user on the reinstall. However, that is not always guaranteed. So, in a small number of cases we can end up with multiple user records in our system having the same push notification token.</p>\n<p>As a result, to prevent sending multiple notifications to the same user for the same campaign, we need to filter for a relatively small number of duplicate push tokens from a total dataset that runs from hundreds of millions to billions of records. To give you a sense of proportion, the memory required to filter just 100 Million push tokens is 100M * 256 = 25 GB!</p>\n<p><strong>The solution \u2013 Bloom filter</strong></p>\n<p>The idea is very simple.</p>\n<ul class=\"three_ul\">\n<li>Allocate a bit array of size <img alt=\"m \" src=\"//s0.wp.com/latex.php?latex=m+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m \"/></li>\n<li>Choose <img alt=\"k \" src=\"//s0.wp.com/latex.php?latex=k+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k \"/> independent hash functions \u00a0<img alt=\"h_i(x) \" src=\"//s0.wp.com/latex.php?latex=h_i%28x%29+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"h_i(x) \"/> \u00a0whose range is <img alt=\"[ 0 .. m-1 ] \" src=\"//s0.wp.com/latex.php?latex=%5B+0+..+m-1+%5D+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"[ 0 .. m-1 ] \"/></li>\n<li>For each data element, compute hashes and turn on bits <img alt=\"Bloom filter\" class=\"wp-image-2088 aligncenter\" src=\"https://blog.clevertap.com/wp-content/uploads/2016/03/bloom-filter.jpg\" width=\"99%\"/></li>\n<li>For membership query <img alt=\"q \" src=\"//s0.wp.com/latex.php?latex=q+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"q \"/>, apply hashes and check if all the corresponding bits are \u2018on\u2019</li>\n</ul>\n<p>Note that bits might be turned \u2018on\u2019 by hash collisions leading to false positives i,e a non-existing element may be reported to exist and the goal is to minimise this.</p>\n<p><strong>On hash functions</strong></p>\n<p>Hash functions for Bloom filter should be independent and uniformly distributed. Cryptographic hashes like MD5 or SHA-1 are not good choices for performance reasons. Some of the suitable fast hashes are <a href=\"https://en.wikipedia.org/wiki/MurmurHash\">MurmurHash</a>, <a href=\"https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\">FNV hashes</a> and <a href=\"https://en.wikipedia.org/wiki/Jenkins_hash_function\">Jenkin\u2019s Hashes</a>.</p>\n<p>We use MurmurHash \u2013</p>\n<ul class=\"three_ul\">\n<li>It\u2019s fast \u2013 10x faster than MD5</li>\n<li>Good distribution \u2013 passes chi-squared test for uniformity</li>\n<li>Avalanche effect \u2013 sensitive to even slightest input changes</li>\n<li>Independent enough</li>\n</ul>\n<p><strong>Sizing the Bloom filter</strong></p>\n<p>Sizing the bit array involves choosing optimal number of hash functions to minimise false-positive probability.</p>\n<p>With <img alt=\"m\" src=\"//s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=000&amp;s=0\"/> bits, <img alt=\"k\" src=\"//s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k\"/> hash functions and <img alt=\"n\" src=\"//s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"n\"/> elements, the false positive probability i,e the probability of all the corresponding <img alt=\"k\" src=\"//s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"k\"/> bits are \u2018on\u2019 falsely when the element doesn\u2019t exist</p>\n<p><img alt=\"p = ( 1 - [ 1 - \\frac{1}{m}]^{kn} )^k \\approx ( 1 - e^{-\\frac{kn}{m}})^k \" src=\"//s0.wp.com/latex.php?latex=p+%3D+%28+1+-+%5B+1+-+%5Cfrac%7B1%7D%7Bm%7D%5D%5E%7Bkn%7D+%29%5Ek+%5Capprox+%28+1+-+e%5E%7B-%5Cfrac%7Bkn%7D%7Bm%7D%7D%29%5Ek+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"p = ( 1 - [ 1 - \\frac{1}{m}]^{kn} )^k \\approx ( 1 - e^{-\\frac{kn}{m}})^k \" width=\"50%\"/></p>\n<p>for given <img alt=\"m, n \" src=\"//s0.wp.com/latex.php?latex=m%2C+n+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m, n \"/>, optimal k that minimises <img alt=\"p \" src=\"//s0.wp.com/latex.php?latex=p+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"p \"/></p>\n<p>i,e <img alt=\"\\frac{dp}{dk} = 0 \\implies k = \\frac{m}{n}ln(2)\" src=\"//s0.wp.com/latex.php?latex=%5Cfrac%7Bdp%7D%7Bdk%7D+%3D+0+%5Cimplies+k+%3D+%5Cfrac%7Bm%7D%7Bn%7Dln%282%29&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"\\frac{dp}{dk} = 0 \\implies k = \\frac{m}{n}ln(2)\" width=\"30%\"/></p>\n<p><img alt=\"\\implies m = -\\frac{nln(p)}{(ln(2))^2} \" src=\"//s0.wp.com/latex.php?latex=%5Cimplies+m+%3D+-%5Cfrac%7Bnln%28p%29%7D%7B%28ln%282%29%29%5E2%7D+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"\\implies m = -\\frac{nln(p)}{(ln(2))^2} \" width=\"25%\"/></p>\n<p>so, for 100 Million push tokens with 0.001 error probability</p>\n<p><img alt=\"m = -\\frac{100000000*ln(0.001)}{(ln(2))^2} = 171 MB \" src=\"//s0.wp.com/latex.php?latex=m+%3D+-%5Cfrac%7B100000000%2Aln%280.001%29%7D%7B%28ln%282%29%29%5E2%7D+%3D+171+MB+&amp;bg=ffffff&amp;fg=000&amp;s=0\" title=\"m = -\\frac{100000000*ln(0.001)}{(ln(2))^2} = 171 MB \" width=\"45%\"/></p>\n<p>This is significant improvement from 25 GB.</p>\n<p><a href=\"https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/ \">Original</a>.</p>\n<p><b>Related:</b></p>\n<ul class=\"three_ul\">\n<li><a href=\"/2015/08/data-ugly-tales-data-cleaning.html\" target=\"_blank\">Data is Ugly \u2013 Tales of Data Cleaning</a></li>\n<li><a href=\"/2016/03/doing-data-science-kaggle-walkthrough-cleaning-data.html\" target=\"_blank\">Doing Data Science: A Kaggle Walkthrough \u2013 Cleaning Data</a></li>\n<li><a href=\"/2015/05/data-science-inconvenient-truth.html\" target=\"_blank\">The Inconvenient Truth About Data Science</a></li>\n</ul>\n<p><a name=\"comments\"></a></p>\n<div id=\"disqus_thread\"></div>\n<p><script type=\"text/javascript\">// <![CDATA[\n var disqus_shortname = 'kdnuggets'; \n (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = 'https://kdnuggets.disqus.com/embed.js';\n (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })();\n\n// ]]&gt;</script></p>\n</div> ", "website": "kdnuggets"}