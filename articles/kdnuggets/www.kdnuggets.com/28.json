{"content": "\n By Ahmed Gad, KDnuggets Contributor. \n  comments \n  \n This tutorial builds artificial neural network in Python using NumPy from scratch in order to do an image classification application for the Fruits360 dataset. Everything (i.e. images and source codes) used in this tutorial, rather than the color Fruits360 images, are exclusive rights for my book cited as \"Ahmed Fawzy Gad 'Practical Computer Vision Applications Using Deep Learning with CNNs'. Dec. 2018, Apress, 978-1-4842-4167-7 \". The book is available at Springer at this link: https://springer.com/us/book/9781484241660 . \n The source code used in this tutorial is available in my GitHub page here: https://github.com/ahmedfgad/NumPyANN \n The example being used in the book is about classification of the Fruits360 image dataset using artificial neural network (ANN). The example does not assume that the reader neither extracted the features nor implemented the ANN as it discusses what the suitable set of features for use are and also how to implement the ANN in NumPy from scratch. The Fruits360 dataset has 60 classes of fruits such as apple, guava, avocado, banana, cherry, dates, kiwi, peach, and more. For making things simpler, it just works on 4 selected classes which are apple Braeburn, lemon Meyer, mango, and raspberry. Each class has around 491 images for training and another 162 for testing. The image size is 100x100 pixels. \n \u00a0 \n Feature Extraction \n \u00a0\nThe book starts by selecting the suitable set of features in order to achieve the highest classification accuracy. Based on the sample images from the 4 selected classes shown below, it seems that their color is different. This is why the color features are suitable ones for use in this task. \n  \n The RGB color space does not isolates color information from other types of information such as illumination. Thus, if the RGB is used for representing the images, the 3 channels will be involved in the calculations. For such a reason, it is better to use a color space that isolates the color information into a single channel such as HSV. The color channel in this case is the hue channel (H). The next figure shows the hue channel of the 4 samples presented previously. We can notice how the hue value for each image is different from the other images. \n  \n The hue channel size is still 100x100. If the entire channel is applied to the ANN, then the input layer will have 10,000 neurons. The network is still huge. In order to reduce the amounts of data being used, we can use the histogram for representing the hue channel. The histogram will have 360 bins reflecting the number of possible values for the hue value. Here are the histograms for the 4 sample images. Using a 360 bins histogram for the hue channel, it seems that every fruit votes to some specific bins of the histogram. There is less overlap among the different classes compared to using any channel from the RGB color space. For example, the bins in the apple histogram range from 0 to 10 compared to mango with its bins range from 90 to 110. The margin between each of the classes makes it easier to reduce the ambiguity in classification and thus increasing the prediction accuracy. \n  \n Here is the code that calculates the hue channel histogram from the 4 images. \n \n\r\nimport numpy\r\nimport skimage.io, skimage.color\r\nimport matplotlib.pyplot\r\n\r\nraspberry = skimage.io.imread(fname=\"raspberry.jpg\", as_grey=False)\r\napple = skimage.io.imread(fname=\"apple.jpg\", as_grey=False)\r\nmango = skimage.io.imread(fname=\"mango.jpg\", as_grey=False)\r\nlemon = skimage.io.imread(fname=\"lemon.jpg\", as_grey=False)\r\n\r\napple_hsv = skimage.color.rgb2hsv(rgb=apple)\r\nmango_hsv = skimage.color.rgb2hsv(rgb=mango)\r\nraspberry_hsv = skimage.color.rgb2hsv(rgb=raspberry)\r\nlemon_hsv = skimage.color.rgb2hsv(rgb=lemon)\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\nhsv_fruits_data = [apple_hsv, raspberry_hsv, mango_hsv, lemon_hsv]\r\nidx = 0\r\nfor hsv_fruit_data in hsv_fruits_data:\r\nfruit = fruits[idx]\r\nhist = numpy.histogram(a=hsv_fruit_data[:, :, 0], bins=360)\r\nmatplotlib.pyplot.bar(left=numpy.arange(360), height=hist[0])\r\nmatplotlib.pyplot.savefig(fruit+\"-hue-histogram.jpg\", bbox_inches=\"tight\")\r\nmatplotlib.pyplot.close(\"all\")\r\nidx = idx + 1\r\n\n \n  \n By looping through all images in the 4 image classes used, we can extract the features from all images. The next code does this. According to the number of images in the 4 classes (1,962) and the feature vector length extracted from each image (360), a NumPy array of zeros is created and saved in the dataset_features variable. In order to store the class label for each image, another NumPy array named outputs is created. The class label for apple is 0, lemon is 1, mango is 2, and raspberry is 3. The code expects that it runs in a root directory in which there are 4 folders named according to the fruits names listed in the list named fruits. It loops through all images in all folders, extract the hue histogram from each of them, assign each image a class label, and finally saves the extracted features and the class labels using the pickle library. You can also use NumPy for saving the resultant NumPy arrays rather than pickle. \n \n\r\nimport numpy\r\nimport skimage.io, skimage.color, skimage.feature\r\nimport os\r\nimport pickle\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\n#492+490+490+490=1,962\r\n\r\ndataset_features = numpy.zeros(shape=(1962, 360))\r\noutputs = numpy.zeros(shape=(1962))\r\nidx = 0\r\nclass_label = 0\r\n\r\nfor fruit_dir in fruits:\r\n  curr_dir = os.path.join(os.path.sep, fruit_dir)\r\n  all_imgs = os.listdir(os.getcwd()+curr_dir)\r\n  for img_file in all_imgs:\r\n    fruit_data = skimage.io.imread(fname=os.getcwd()+curr_dir+img_file, as_grey=False)\r\n    fruit_data_hsv = skimage.color.rgb2hsv(rgb=fruit_data)\r\n    hist = numpy.histogram(a=fruit_data_hsv[:, :, 0], bins=360)\r\n    dataset_features[idx, :] = hist[0]\r\n    outputs[idx] = class_label\r\n    idx = idx + 1\r\n  class_label = class_label + 1\r\n\r\nwith open(\"dataset_features.pkl\", \"wb\") as f:\r\n  pickle.dump(\"dataset_features.pkl\", f)\r\n\r\nwith open(\"outputs.pkl\", \"wb\") as f:\r\n  pickle.dump(outputs, f)\r\n\n \n  \n Currently, each image is represented using a feature vector of 360 elements. Such elements are filtered in order to just keep the most relevant elements for differentiating the 4 classes. The reduced feature vector length is 102 rather than 360. Using less elements helps to do faster training than before. The dataset_features variable shape will be 1962x102. You can read more in the book for reducing the feature vector length. \n Up to this point, the training data (features and class labels) are ready. Next is implement the ANN using NumPy. \n", "title": "Artificial Neural Network Implementation using NumPy and Image Classification", "content_html": "<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/ahmed-gad\" rel=\"author\" title=\"Posts by Ahmed Gad\">Ahmed Gad</a>, KDnuggets Contributor.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html?page=2#comments\">comments</a></div>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://media.licdn.com/media/gcrc/dms/image/C5612AQEFTgLp7700rQ/article-cover_image-shrink_720_1280/0?e=1556150400&amp;v=beta&amp;t=MyPUxFYFO7YkdI1jxcML1IlED2ZooeutKw6JJ4xE2Pk\" width=\"99%\"/></p>\n<p>This tutorial builds artificial neural network in Python using NumPy from scratch in order to do an image classification application for the Fruits360 dataset. Everything (i.e. images and source codes) used in this tutorial, rather than the color Fruits360 images, are exclusive rights for my book cited as <em><b>\"Ahmed Fawzy Gad 'Practical Computer Vision Applications Using Deep Learning with CNNs'. Dec. 2018, Apress, 978-1-4842-4167-7 \"</b></em>. The book is available at Springer at this link: <a href=\"https://springer.com/us/book/9781484241660\">https://springer.com/us/book/9781484241660</a> .</p>\n<p>The source code used in this tutorial is available in my GitHub page here: <a href=\"https://github.com/ahmedfgad/NumPyANN\">https://github.com/ahmedfgad/NumPyANN</a></p>\n<p>The example being used in the book is about classification of the Fruits360 image dataset using artificial neural network (ANN). The example does not assume that the reader neither extracted the features nor implemented the ANN as it discusses what the suitable set of features for use are and also how to implement the ANN in NumPy from scratch. The Fruits360 dataset has 60 classes of fruits such as apple, guava, avocado, banana, cherry, dates, kiwi, peach, and more. For making things simpler, it just works on 4 selected classes which are apple Braeburn, lemon Meyer, mango, and raspberry. Each class has around 491 images for training and another 162 for testing. The image size is 100x100 pixels.</p>\n<p>\u00a0</p>\n<h3>Feature Extraction</h3>\n<p>\u00a0<br>\nThe book starts by selecting the suitable set of features in order to achieve the highest classification accuracy. Based on the sample images from the 4 selected classes shown below, it seems that their color is different. This is why the color features are suitable ones for use in this task.</br></p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image1-1.jpg\" width=\"99%\"/></p>\n<p>The RGB color space does not isolates color information from other types of information such as illumination. Thus, if the RGB is used for representing the images, the 3 channels will be involved in the calculations. For such a reason, it is better to use a color space that isolates the color information into a single channel such as HSV. The color channel in this case is the hue channel (H). The next figure shows the hue channel of the 4 samples presented previously. We can notice how the hue value for each image is different from the other images.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image2.jpg\" width=\"99%\"/></p>\n<p>The hue channel size is still 100x100. If the entire channel is applied to the ANN, then the input layer will have 10,000 neurons. The network is still huge. In order to reduce the amounts of data being used, we can use the histogram for representing the hue channel. The histogram will have 360 bins reflecting the number of possible values for the hue value. Here are the histograms for the 4 sample images. Using a 360 bins histogram for the hue channel, it seems that every fruit votes to some specific bins of the histogram. There is less overlap among the different classes compared to using any channel from the RGB color space. For example, the bins in the apple histogram range from 0 to 10 compared to mango with its bins range from 90 to 110. The margin between each of the classes makes it easier to reduce the ambiguity in classification and thus increasing the prediction accuracy.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image3-2.png\" width=\"99%\"/></p>\n<p>Here is the code that calculates the hue channel histogram from the 4 images.</p>\n<div style=\"width:98%;border:1px solid #ccc;overflow:auto;padding-left:10px;padding-bottom:10px;padding-top:10px\">\n<pre>\r\nimport numpy\r\nimport skimage.io, skimage.color\r\nimport matplotlib.pyplot\r\n\r\nraspberry = skimage.io.imread(fname=\"raspberry.jpg\", as_grey=False)\r\napple = skimage.io.imread(fname=\"apple.jpg\", as_grey=False)\r\nmango = skimage.io.imread(fname=\"mango.jpg\", as_grey=False)\r\nlemon = skimage.io.imread(fname=\"lemon.jpg\", as_grey=False)\r\n\r\napple_hsv = skimage.color.rgb2hsv(rgb=apple)\r\nmango_hsv = skimage.color.rgb2hsv(rgb=mango)\r\nraspberry_hsv = skimage.color.rgb2hsv(rgb=raspberry)\r\nlemon_hsv = skimage.color.rgb2hsv(rgb=lemon)\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\nhsv_fruits_data = [apple_hsv, raspberry_hsv, mango_hsv, lemon_hsv]\r\nidx = 0\r\nfor hsv_fruit_data in hsv_fruits_data:\r\nfruit = fruits[idx]\r\nhist = numpy.histogram(a=hsv_fruit_data[:, :, 0], bins=360)\r\nmatplotlib.pyplot.bar(left=numpy.arange(360), height=hist[0])\r\nmatplotlib.pyplot.savefig(fruit+\"-hue-histogram.jpg\", bbox_inches=\"tight\")\r\nmatplotlib.pyplot.close(\"all\")\r\nidx = idx + 1\r\n</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>By looping through all images in the 4 image classes used, we can extract the features from all images. The next code does this. According to the number of images in the 4 classes (1,962) and the feature vector length extracted from each image (360), a NumPy array of zeros is created and saved in the <strong>dataset_features</strong> variable. In order to store the class label for each image, another NumPy array named <strong>outputs</strong> is created. The class label for apple is 0, lemon is 1, mango is 2, and raspberry is 3. The code expects that it runs in a root directory in which there are 4 folders named according to the fruits names listed in the list named <strong>fruits</strong>. It loops through all images in all folders, extract the hue histogram from each of them, assign each image a class label, and finally saves the extracted features and the class labels using the pickle library. You can also use NumPy for saving the resultant NumPy arrays rather than pickle.</p>\n<div style=\"width:98%;border:1px solid #ccc;overflow:auto;padding-left:10px;padding-bottom:10px;padding-top:10px\">\n<pre>\r\nimport numpy\r\nimport skimage.io, skimage.color, skimage.feature\r\nimport os\r\nimport pickle\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\n#492+490+490+490=1,962\r\n\r\ndataset_features = numpy.zeros(shape=(1962, 360))\r\noutputs = numpy.zeros(shape=(1962))\r\nidx = 0\r\nclass_label = 0\r\n\r\nfor fruit_dir in fruits:\r\n  curr_dir = os.path.join(os.path.sep, fruit_dir)\r\n  all_imgs = os.listdir(os.getcwd()+curr_dir)\r\n  for img_file in all_imgs:\r\n    fruit_data = skimage.io.imread(fname=os.getcwd()+curr_dir+img_file, as_grey=False)\r\n    fruit_data_hsv = skimage.color.rgb2hsv(rgb=fruit_data)\r\n    hist = numpy.histogram(a=fruit_data_hsv[:, :, 0], bins=360)\r\n    dataset_features[idx, :] = hist[0]\r\n    outputs[idx] = class_label\r\n    idx = idx + 1\r\n  class_label = class_label + 1\r\n\r\nwith open(\"dataset_features.pkl\", \"wb\") as f:\r\n  pickle.dump(\"dataset_features.pkl\", f)\r\n\r\nwith open(\"outputs.pkl\", \"wb\") as f:\r\n  pickle.dump(outputs, f)\r\n</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>Currently, each image is represented using a feature vector of 360 elements. Such elements are filtered in order to just keep the most relevant elements for differentiating the 4 classes. The reduced feature vector length is 102 rather than 360. Using less elements helps to do faster training than before. The <strong>dataset_features</strong> variable shape will be <strong>1962x102</strong>. You can read more in the book for reducing the feature vector length.</p>\n<p>Up to this point, the training data (features and class labels) are ready. Next is implement the ANN using NumPy.</p>\n</div>", "html": "<!DOCTYPE html>\n\n<html lang=\"en-US\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head profile=\"http://gmpg.org/xfn/11\">\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n<title>  Artificial Neural Network Implementation using NumPy and Image Classification</title>\n<link href=\"/wp-content/themes/kdn17/images/favicon.ico\" rel=\"shortcut icon\"/>\n<link href=\"/wp-content/themes/kdn17/style.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"/wp-content/themes/kdn17/js/jquery-1.9.1.min.js\" type=\"text/javascript\"></script>\n<script src=\"/aps/kda_all.js\" type=\"text/javascript\"></script>\n<link href=\"/feed/\" rel=\"alternate\" title=\"KDnuggets: Analytics, Big Data, Data Mining and Data Science Feed\" type=\"application/rss+xml\"/>\n<link href=\"//s.w.org\" rel=\"dns-prefetch\"/>\n<link href=\"https://www.kdnuggets.com/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/comments/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html/feed\" rel=\"alternate\" title=\"KDnuggets \u00bb Artificial Neural Network Implementation using NumPy and Image Classification Comments Feed\" type=\"application/rss+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-json/\" rel=\"https://api.w.org/\"/>\n<link href=\"https://www.kdnuggets.com/xmlrpc.php?rsd\" rel=\"EditURI\" title=\"RSD\" type=\"application/rsd+xml\"/>\n<link href=\"https://www.kdnuggets.com/wp-includes/wlwmanifest.xml\" rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\"/>\n<link href=\"https://www.kdnuggets.com/2019/02/top-tweets-feb13-19.html\" rel=\"prev\" title=\"Top KDnuggets tweets, Feb 13-19: Intro to Scikit Learn: The Gold Standard of Python ML; The Essential Data Science Venn Diagram\"/>\n<link href=\"https://www.kdnuggets.com/2019/02/deep-learning-nlp-rnn-cnn.html\" rel=\"next\" title=\"Deep Learning for Natural Language Processing (NLP)\u200a \u2013 using RNNs &amp; CNNs\"/>\n<meta content=\"WordPress 4.9.10\" name=\"generator\">\n<link href=\"https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html\" rel=\"canonical\"/>\n<link href=\"https://www.kdnuggets.com/?p=90689\" rel=\"shortlink\"/>\n<link href=\"https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html\" rel=\"canonical\"/>\n<!-- BEGIN ExactMetrics v5.3.7 Universal Analytics - https://exactmetrics.com/ -->\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-361129-1', 'auto');\n  ga('send', 'pageview');\n</script>\n<!-- END ExactMetrics Universal Analytics -->\n</meta></head>\n<body class=\"post-template-default single single-post postid-90689 single-format-standard\">\n<div class=\"main_wrapper\"><!-- publ: 21-Feb, 2019  -->\n<div id=\"wrapper\">\n<div id=\"header\">\n<div id=\"header_log\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<h1>KDnuggets</h1>\n<div class=\"text-container\">\n            \u00a0\u00a0<a href=\"/news/subscribe.html\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a> \u00a0|\n <a href=\"https://twitter.com/kdnuggets\" target=\"_blank\"><img alt=\"Twitter\" height=\"48\" src=\"/images/tw_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n <a href=\"https://www.facebook.com/kdnuggets\" target=\"_blank\"><img alt=\"Facebook\" height=\"48\" src=\"/images/fb_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \u00a0\u00a0\n<a href=\"https://www.linkedin.com/groups/54257/\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"48\" src=\"/images/in_c48.png\" style=\"vertical-align: bottom\" width=\"48\"/></a> \n\u00a0|\u00a0 <a href=\"/contact.html\"><b>Contact</b></a>\n</div>\n</div>\n<div class=\"search\">\n<form action=\"/\" id=\"searchform\" method=\"get\">\n<input id=\"s\" name=\"s\" placeholder=\"search KDnuggets\" type=\"text\" value=\"\"/>\n<input type=\"submit\" value=\"Search\"/></form>\n</div>\n<div href=\"#\" id=\"pull\">\n<img class=\"menu\" src=\"/images/menu-30.png\">\n<div class=\"logo\">\n<a href=\"/\"></a>\n</div>\n<img class=\"search-icon\" src=\"/images/search-icon.png\">\n</img></img></div>\n<div id=\"pull-menu\">\n<div class=\"navigation\"><ul class=\"menu\" id=\"menu-menu\"><li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-1070\" id=\"menu-item-1070\"><a href=\"/software/index.html\" title=\"Data Science Software\">SOFTWARE</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13756\" id=\"menu-item-13756\"><a href=\"/news/index.html\" title=\"News\">News/Blog</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-46286\" id=\"menu-item-46286\"><a href=\"/news/top-stories.html\">Top stories</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-42152\" id=\"menu-item-42152\"><a href=\"https://www.kdnuggets.com/opinions/index.html\" title=\"Opinions\">Opinions</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-46415\" id=\"menu-item-46415\"><a href=\"https://www.kdnuggets.com/tutorials/index.html\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13364\" id=\"menu-item-13364\"><a href=\"/jobs/index.html\" title=\"Jobs in Analytics, Data Science\">JOBS</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-63505\" id=\"menu-item-63505\"><a href=\"https://www.kdnuggets.com/companies/index.html\">Companies</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13366\" id=\"menu-item-13366\"><a href=\"/courses/index.html\">Courses</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-1499\" id=\"menu-item-1499\"><a href=\"https://www.kdnuggets.com/datasets/index.html\">Datasets</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-14286\" id=\"menu-item-14286\"><a href=\"https://www.kdnuggets.com/education/index.html\" title=\"Education in Analytics, Big Data, Data Science\">EDUCATION</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-51558\" id=\"menu-item-51558\"><a href=\"https://www.kdnuggets.com/education/analytics-data-mining-certificates.html\" title=\"Certificates in Analytics, Big Data, Data Science\">Certificates</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-14752\" id=\"menu-item-14752\"><a href=\"/meetings/index.html\">Meetings</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-13721\" id=\"menu-item-13721\"><a href=\"/webcasts/index.html\" title=\"Webcasts and Webinars\">Webinars</a></li>\n</ul></div></div>\n</div> <!--#header end-->\n<div id=\"spacer\">\n         \u00a0\n      </div>\n<div id=\"content_wrapper\">\n<div id=\"ad_wrapper\">\n<script type=\"text/javascript\">\n\tjQuery(function() {\n   \t    var pull        = $('#pull');\n            menu        = $('#header .navigation ul');\n            menuImage = $('#header img.menu');\n            mobileMenu        = $('#pull-menu-mobile');\n            search = $('img.search-icon');\n            searchBar = $('div.search');\n            searchClick = false;\n            search.on('click', function() {\n                  searchBar.slideToggle();\n                  searchClick = true;\n            });  \n     \t    $(menuImage).on('click', function(e) {\n\t        //e.preventDefault();\n                if (!searchClick) {\n                  menu.slideToggle();\n                }\n                searchClick = false;\n\t    });\n           /* pullMobile.on('click', function(e) {\n              e.preventDefault();\n                if (!searchClick) {\n                  mobileMenu.slideToggle();\n                }\n                searchClick = false;\n\t    });*/\n            \n\t});\n\tkpath = '/'; kda_top(); kda_sid_init(); kda_sid_n=3;\n\t</script>\n</div> <div class=\"breadcumb\">\n<br/>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/02/index.html\">Feb</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/02/tutorials.html\">Tutorials, Overviews</a> \u00bb Artificial Neural Network Implementation using NumPy and Image Classification (\u00a0<a href=\"/2019/n09.html\">19:n09</a>\u00a0)    </div>\n<div class=\"single\" id=\"content\">\n<div id=\"post-header\">\n<h1 id=\"title\"><img align=\"right\" alt=\"Gold Blog\" src=\"/images/tkb-1902-g.png\" width=\"94\"/>Artificial Neural Network Implementation using NumPy and Image Classification</h1>\n<div class=\"pagi\">\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/02/top-tweets-feb13-19.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"> <strong>Previous post</strong></img></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/02/deep-learning-nlp-rnn-cnn.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/>\u00a0<br/>\u00a0\n    <div class=\"addthis_native_toolbox\"></div>\n</div>\n<div class=\"tag-data\">Tags: <a href=\"https://www.kdnuggets.com/tag/deep-learning\" rel=\"tag\">Deep Learning</a>, <a href=\"https://www.kdnuggets.com/tag/machine-learning\" rel=\"tag\">Machine Learning</a>, <a href=\"https://www.kdnuggets.com/tag/neural-networks\" rel=\"tag\">Neural Networks</a>, <a href=\"https://www.kdnuggets.com/tag/numpy\" rel=\"tag\">numpy</a>, <a href=\"https://www.kdnuggets.com/tag/python\" rel=\"tag\">Python</a></div>\n<br/>\n<p class=\"excerpt\">\n     This tutorial builds artificial neural network in Python using NumPy from scratch in order to do an image classification application for the Fruits360 dataset\n  </p>\n</div>\n<div id=\"post-header-ad\">\n<script type=\"text/javascript\">kda_sid_write(1); kda_sid_n=2;</script>\n</div>\n<hr class=\"grey-line\"/><br/>\n<div class=\"post\" id=\"post-\">\n<div class=\"author-link\"><b>By <a href=\"https://www.kdnuggets.com/author/ahmed-gad\" rel=\"author\" title=\"Posts by Ahmed Gad\">Ahmed Gad</a>, KDnuggets Contributor.</b></div>\n<div align=\"right\"><img alt=\"c\" height=\"12\" src=\"/images/comment.gif\" width=\"16\"/> <a href=\"/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html?page=2#comments\">comments</a></div>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://media.licdn.com/media/gcrc/dms/image/C5612AQEFTgLp7700rQ/article-cover_image-shrink_720_1280/0?e=1556150400&amp;v=beta&amp;t=MyPUxFYFO7YkdI1jxcML1IlED2ZooeutKw6JJ4xE2Pk\" width=\"99%\"/></p>\n<p>This tutorial builds artificial neural network in Python using NumPy from scratch in order to do an image classification application for the Fruits360 dataset. Everything (i.e. images and source codes) used in this tutorial, rather than the color Fruits360 images, are exclusive rights for my book cited as <em><b>\"Ahmed Fawzy Gad 'Practical Computer Vision Applications Using Deep Learning with CNNs'. Dec. 2018, Apress, 978-1-4842-4167-7 \"</b></em>. The book is available at Springer at this link: <a href=\"https://springer.com/us/book/9781484241660\">https://springer.com/us/book/9781484241660</a> .</p>\n<p>The source code used in this tutorial is available in my GitHub page here: <a href=\"https://github.com/ahmedfgad/NumPyANN\">https://github.com/ahmedfgad/NumPyANN</a></p>\n<p>The example being used in the book is about classification of the Fruits360 image dataset using artificial neural network (ANN). The example does not assume that the reader neither extracted the features nor implemented the ANN as it discusses what the suitable set of features for use are and also how to implement the ANN in NumPy from scratch. The Fruits360 dataset has 60 classes of fruits such as apple, guava, avocado, banana, cherry, dates, kiwi, peach, and more. For making things simpler, it just works on 4 selected classes which are apple Braeburn, lemon Meyer, mango, and raspberry. Each class has around 491 images for training and another 162 for testing. The image size is 100x100 pixels.</p>\n<p>\u00a0</p>\n<h3>Feature Extraction</h3>\n<p>\u00a0<br>\nThe book starts by selecting the suitable set of features in order to achieve the highest classification accuracy. Based on the sample images from the 4 selected classes shown below, it seems that their color is different. This is why the color features are suitable ones for use in this task.</br></p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image1-1.jpg\" width=\"99%\"/></p>\n<p>The RGB color space does not isolates color information from other types of information such as illumination. Thus, if the RGB is used for representing the images, the 3 channels will be involved in the calculations. For such a reason, it is better to use a color space that isolates the color information into a single channel such as HSV. The color channel in this case is the hue channel (H). The next figure shows the hue channel of the 4 samples presented previously. We can notice how the hue value for each image is different from the other images.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image2.jpg\" width=\"99%\"/></p>\n<p>The hue channel size is still 100x100. If the entire channel is applied to the ANN, then the input layer will have 10,000 neurons. The network is still huge. In order to reduce the amounts of data being used, we can use the histogram for representing the hue channel. The histogram will have 360 bins reflecting the number of possible values for the hue value. Here are the histograms for the 4 sample images. Using a 360 bins histogram for the hue channel, it seems that every fruit votes to some specific bins of the histogram. There is less overlap among the different classes compared to using any channel from the RGB color space. For example, the bins in the apple histogram range from 0 to 10 compared to mango with its bins range from 90 to 110. The margin between each of the classes makes it easier to reduce the ambiguity in classification and thus increasing the prediction accuracy.</p>\n<p><img alt=\"\" class=\"aligncenter\" src=\"https://www.kdnuggets.com/wp-content/uploads/image3-2.png\" width=\"99%\"/></p>\n<p>Here is the code that calculates the hue channel histogram from the 4 images.</p>\n<div style=\"width:98%;border:1px solid #ccc;overflow:auto;padding-left:10px;padding-bottom:10px;padding-top:10px\">\n<pre>\r\nimport numpy\r\nimport skimage.io, skimage.color\r\nimport matplotlib.pyplot\r\n\r\nraspberry = skimage.io.imread(fname=\"raspberry.jpg\", as_grey=False)\r\napple = skimage.io.imread(fname=\"apple.jpg\", as_grey=False)\r\nmango = skimage.io.imread(fname=\"mango.jpg\", as_grey=False)\r\nlemon = skimage.io.imread(fname=\"lemon.jpg\", as_grey=False)\r\n\r\napple_hsv = skimage.color.rgb2hsv(rgb=apple)\r\nmango_hsv = skimage.color.rgb2hsv(rgb=mango)\r\nraspberry_hsv = skimage.color.rgb2hsv(rgb=raspberry)\r\nlemon_hsv = skimage.color.rgb2hsv(rgb=lemon)\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\nhsv_fruits_data = [apple_hsv, raspberry_hsv, mango_hsv, lemon_hsv]\r\nidx = 0\r\nfor hsv_fruit_data in hsv_fruits_data:\r\nfruit = fruits[idx]\r\nhist = numpy.histogram(a=hsv_fruit_data[:, :, 0], bins=360)\r\nmatplotlib.pyplot.bar(left=numpy.arange(360), height=hist[0])\r\nmatplotlib.pyplot.savefig(fruit+\"-hue-histogram.jpg\", bbox_inches=\"tight\")\r\nmatplotlib.pyplot.close(\"all\")\r\nidx = idx + 1\r\n</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>By looping through all images in the 4 image classes used, we can extract the features from all images. The next code does this. According to the number of images in the 4 classes (1,962) and the feature vector length extracted from each image (360), a NumPy array of zeros is created and saved in the <strong>dataset_features</strong> variable. In order to store the class label for each image, another NumPy array named <strong>outputs</strong> is created. The class label for apple is 0, lemon is 1, mango is 2, and raspberry is 3. The code expects that it runs in a root directory in which there are 4 folders named according to the fruits names listed in the list named <strong>fruits</strong>. It loops through all images in all folders, extract the hue histogram from each of them, assign each image a class label, and finally saves the extracted features and the class labels using the pickle library. You can also use NumPy for saving the resultant NumPy arrays rather than pickle.</p>\n<div style=\"width:98%;border:1px solid #ccc;overflow:auto;padding-left:10px;padding-bottom:10px;padding-top:10px\">\n<pre>\r\nimport numpy\r\nimport skimage.io, skimage.color, skimage.feature\r\nimport os\r\nimport pickle\r\n\r\nfruits = [\"apple\", \"raspberry\", \"mango\", \"lemon\"]\r\n#492+490+490+490=1,962\r\n\r\ndataset_features = numpy.zeros(shape=(1962, 360))\r\noutputs = numpy.zeros(shape=(1962))\r\nidx = 0\r\nclass_label = 0\r\n\r\nfor fruit_dir in fruits:\r\n  curr_dir = os.path.join(os.path.sep, fruit_dir)\r\n  all_imgs = os.listdir(os.getcwd()+curr_dir)\r\n  for img_file in all_imgs:\r\n    fruit_data = skimage.io.imread(fname=os.getcwd()+curr_dir+img_file, as_grey=False)\r\n    fruit_data_hsv = skimage.color.rgb2hsv(rgb=fruit_data)\r\n    hist = numpy.histogram(a=fruit_data_hsv[:, :, 0], bins=360)\r\n    dataset_features[idx, :] = hist[0]\r\n    outputs[idx] = class_label\r\n    idx = idx + 1\r\n  class_label = class_label + 1\r\n\r\nwith open(\"dataset_features.pkl\", \"wb\") as f:\r\n  pickle.dump(\"dataset_features.pkl\", f)\r\n\r\nwith open(\"outputs.pkl\", \"wb\") as f:\r\n  pickle.dump(outputs, f)\r\n</pre>\n</div>\n<p><br class=\"blank\"/></p>\n<p>Currently, each image is represented using a feature vector of 360 elements. Such elements are filtered in order to just keep the most relevant elements for differentiating the 4 classes. The reduced feature vector length is 102 rather than 360. Using less elements helps to do faster training than before. The <strong>dataset_features</strong> variable shape will be <strong>1962x102</strong>. You can read more in the book for reducing the feature vector length.</p>\n<p>Up to this point, the training data (features and class labels) are ready. Next is implement the ANN using NumPy.</p>\n</div>\n<div class=\"page-link\"><p>Pages: 1 <a href=\"https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html/2\">2</a></p></div>\n<div class=\"pagi\">\n<hr class=\"grey-line\"/>\n<div class=\"pagi-left\">\n<a href=\"https://www.kdnuggets.com/2019/02/top-tweets-feb13-19.html\" rel=\"prev\"><img height=\"10\" src=\"/images/prv.gif\" width=\"8\"/> <strong>Previous post</strong></a></div>\n<div class=\"pagi-right\">\n<a href=\"https://www.kdnuggets.com/2019/02/deep-learning-nlp-rnn-cnn.html\" rel=\"next\"><strong>Next post</strong> <img height=\"10\" src=\"/images/nxt.gif\" width=\"8\"/></a></div>\n<br/><br/>\n<div>\n<hr class=\"grey-line\"/><br/>\n<h2>Top Stories Past 30 Days</h2>\n<table align=\"center\" cellpadding=\"3\" cellspacing=\"10\" class=\"latn\" width=\"100%\">\n<tr>\n<td valign=\"top\" width=\"50%\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Popular</b></th></tr>\n<tr><td>\n<ol class=\"three_ol\"><li> <a href=\"/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-1-another-10');\"><b>Another 10 Free Must-Read Books for Machine Learning and Data Science</b></a>\n<li> <a href=\"/2018/05/simplilearn-9-must-have-skills-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-2-simplilearn');\"><b>9 Must-have skills you need to become a Data Scientist, updated</b></a>\n<li> <a href=\"/2019/03/data-science-job-applications.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-3-tell-you');\"><b>What no one will tell you about data science job applications</b></a>\n<li> <a href=\"/2019/03/typical-data-scientist-2019.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-4-typical');\"><b>Who is a typical Data Scientist in 2019?</b></a>\n<li> <a href=\"/2019/02/asking-great-questions-data-scientist.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-5-great-questions');\"><b>Asking Great Questions as a Data Scientist</b></a>\n<li> <a href=\"/2019/03/pareto-principle-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-6-pareto');\"><b>The Pareto Principle for Data Scientists</b></a>\n<li> <a href=\"/2019/03/women-ai-big-data-science-machine-learning.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-mp-7-19-inspiring-women');\"><b>19 Inspiring Women in AI, Big Data, Data Science, Machine Learning</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td> <td valign=\"top\">\n<table cellpadding=\"3\" cellspacing=\"2\">\n<tr><th><b>Most Shared</b></th></tr>\n<tr><td><ol class=\"three_ol\">\n<li> <a href=\"/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-1-ann-genetic');\"><b>Artificial Neural Networks Optimization using Genetic Algorithm with Python</b></a>\n<li> <a href=\"/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-2-ann-numpy-images');\"><b>Artificial Neural Network Implementation using NumPy and Image Classification</b></a>\n<li> <a href=\"/2019/02/setup-python-environment-machine-learning.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-3-py-ml-setup');\"><b>How to Setup a Python Environment for Machine Learning</b></a>\n<li> <a href=\"/2019/03/typical-data-scientist-2019.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-4-typical');\"><b>Who is a typical Data Scientist in 2019?</b></a>\n<li> <a href=\"/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-5-azure-cert');\"><b>8 Reasons Why You Should Get a Microsoft Azure Certification</b></a>\n<li> <a href=\"/2019/03/pareto-principle-data-scientists.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-6-pareto');\"><b>The Pareto Principle for Data Scientists</b></a>\n<li> <a href=\"/2019/02/running-r-and-python-in-jupyter.html\" onclick=\"ga('send','pageview','/x/pbc/2019/03-26-ms-7-r-python-jupyter');\"><b>Running R and Python in Jupyter</b></a>\n</li></li></li></li></li></li></li></ol>\n</td></tr>\n</table>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<!--#content end--></div>\n<div id=\"sidebar\">\n<div class=\"latn\">\n<h3><b><a href=\"/news/index.html\">Latest News</a></b></h3>\n<ul style=\"font-size:14px; margin-top:5px\">\n<li> <a href=\"https://www.kdnuggets.com/2019/03/datathon-data-science-hackathon-april.html\">Datathon 2019: The International Data Science Hackathon...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/random-forest-python.html\">Explaining Random Forest (with Python Implementation)</a><li> <a href=\"https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html\">A Beginner\u2019s Guide to Linear Regression in Python wit...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/interpolation-autoencoders-adversarial-regularizer.html\">Interpolation in Autoencoders via an Adversarial Regula...</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/03-29-cisco-machine-learning-engineer-support-bot-b.html\">Cisco: Machine Learning Engineer/Support Bot Designer [...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/delaware-gain-skills-need-data-driven-career.html\">Gain the Skills You Need to Level-Up in Your Data-Drive...</a></li></li></li></li></li></li></ul>\n</div>\n<div>\n<script type=\"text/javascript\">kda_sid_write(kda_sid_n);</script>\n</div>\n<br/><script src=\"/aps/sbm.js\" type=\"text/javascript\"></script>\n<div class=\"latn\" style=\"margin-top: 15px;\">\n<h3><b>More Recent Stories</b></h3>\n<ul class=\"next-posts\">\n<li> <a href=\"https://www.kdnuggets.com/2019/03/delaware-gain-skills-need-data-driven-career.html\">Gain the Skills You Need to Level-Up in Your Data-Driven Career</a><li> <a href=\"https://www.kdnuggets.com/2019/03/d3js-graph-gallery-data-visualization.html\">D3.js Graph Gallery for Data Visualization</a><li> <a href=\"https://www.kdnuggets.com/2019/03/7-gotchas-data-engineers-google-bigquery.html\">7 \u201cGotchas\u201d for Data Engineers New to Google BigQuery</a><li> <a href=\"https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html\">The Deep Learning Toolset\u200a\u2014\u200aAn Overview</a><li> <a href=\"https://www.kdnuggets.com/2019/03/top-tweets-mar20-26.html\">Top tweets, Mar 20-26: 10 More Free Must-Read Books for Mac...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/ieg-network-google-intel-facebook.html\">Network with Google, Intel, Facebook, LinkedIn &amp; more</a><li> <a href=\"https://www.kdnuggets.com/2019/03/activestate-python-programmer.html\">[PDF] Python: The Programmer\u2019s Lingua Franca</a><li> <a href=\"https://www.kdnuggets.com/2019/03/explainable-ai.html\">Explainable AI or Halting Faulty Models ahead of Disaster</a><li> <a href=\"https://www.kdnuggets.com/2019/03/how-choose-right-chart-type.html\">How to Choose the Right Chart Type</a><li> <a href=\"https://www.kdnuggets.com/2019/03/data-pipelines-luigi-airflow-everything-need-know.html\">Data Pipelines, Luigi, Airflow: Everything you need to know</a><li> <a href=\"https://www.kdnuggets.com/2019/n12.html\">KDnuggets 19:n12, Mar 27: My Best Tips for Agile Data Scien...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/top-news-week-0318-0324.html\">Top Stories, Mar 18-24: Another 10 Free Must-Read Books for Ma...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/databricks-solve-big-problems-data-science-ebook.html\">How to solve 4 big problems in data science \u2013 eBook.</a><li> <a href=\"https://www.kdnuggets.com/2019/03/four-levels-analytics-maturity.html\">The Four Levels of Analytics Maturity</a><li> <a href=\"https://www.kdnuggets.com/2019/03/pedestrian-detection-aerial-images-retinanet.html\">Pedestrian Detection in Aerial Images Using RetinaNet</a><li> <a href=\"https://www.kdnuggets.com/2019/03/data-science-decision-makers.html\">Data Science for Decision Makers: A Discussion with Dr Stelios...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/coursera-earn-ibm-data-science-certificate.html\">Earn an IBM Data Science Certificate</a><li> <a href=\"https://www.kdnuggets.com/2019/03/databricks-scaling-big-data-ai-spark-ai-summit-2019.html\">Scaling Big Data and AI \u2013 Spark + AI Summit 2019</a><li> <a href=\"https://www.kdnuggets.com/jobs/19/03-25-pear-therapeutics-data-scientist.html\">Pear Therapeutics: Data Scientist (Analytics) [San Francisco, ...</a><li> <a href=\"https://www.kdnuggets.com/2019/03/ai-black-box-explanation-problem.html\">The AI Black Box Explanation Problem</a></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n</div>\n</div><div class=\"breadcrumbs_bottom\">\n<div class=\"breadcumb\">\n<br>\n<a href=\"/\">KDnuggets Home</a> \u00bb <a href=\"/news/index.html\">News</a> \u00bb <a href=\"/2019/index.html\">2019</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/02/index.html\">Feb</a> \u00bb <a href=\"https://www.kdnuggets.com/2019/02/tutorials.html\">Tutorials, Overviews</a> \u00bb Artificial Neural Network Implementation using NumPy and Image Classification (\u00a0<a href=\"/2019/n09.html\">19:n09</a>\u00a0)    </br></div>\n</div>\n<!--#content_wrapper end--></div>\n<br>\n<div id=\"footer\">\n<br/>\u00a9 2019 KDnuggets. <a href=\"/about/index.html\">About KDnuggets</a>. \u00a0<a href=\"/news/privacy-policy.html\">Privacy policy</a>. <a href=\"/terms-of-service.html\">Terms of Service</a><br/>\u00a0\n<div class=\"kd_bottom\">\n<div class=\"footer-container\">\n<div class=\"footer-news\">\n<a href=\"/news/subscribe.html\" onclick=\"_gaq.push(['_trackPageview','/x/bot/sub']);\" target=\"_blank\"><b>Subscribe to KDnuggets News</b></a>\n</div>\n<div class=\"footer-sm\">\n<a href=\"https://twitter.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/twt']);\" target=\"_blank\"><img height=\"32\" src=\"/images/tw_c48.png\" width=\"32\"/></a>\n<a href=\"https://facebook.com/kdnuggets\" onclick=\"_gaq.push(['_trackPageview','/x/bot/fb']);\" target=\"_blank\"><img alt=\"Facebook\" height=\"32\" src=\"/images/fb_c48.png\" width=\"32\"/></a>\n<a href=\"https://www.linkedin.com/groups/54257\" onclick=\"_gaq.push(['_trackPageview','/x/bot/in']);\" target=\"_blank\"><img alt=\"LinkedIn\" height=\"32\" src=\"/images/in_c48.png\" width=\"32\"/></a>\n</div>\n</div>\n<div class=\"close-footer\">X</div>\n</div>\n<script type=\"text/javascript\">\n  jQuery('.close-footer').click(\n      function(){       \n         jQuery('.kd_bottom').hide();\n      }\n   );\n</script> </div>\n<div class=\"clear\"><!--blank--></div>\n</br></div>\n<div style=\"display: none;\"><div id=\"boxzilla-box-82996-content\"><script type=\"text/javascript\">(function() {\n\tif (!window.mc4wp) {\n\t\twindow.mc4wp = {\n\t\t\tlisteners: [],\n\t\t\tforms    : {\n\t\t\t\ton: function (event, callback) {\n\t\t\t\t\twindow.mc4wp.listeners.push({\n\t\t\t\t\t\tevent   : event,\n\t\t\t\t\t\tcallback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n</script><!-- MailChimp for WordPress v4.1.14 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form class=\"mc4wp-form mc4wp-form-77281\" data-id=\"77281\" data-name=\"Subscribe to KDnuggets News\" id=\"mc4wp-form-1\" method=\"post\"><div class=\"mc4wp-form-fields\"><div class=\"header-container\">\n<img align=\"left\" src=\"/wp-content/uploads/envelope.png\"><a href=\"/news/subscribe.html\">Get KDnuggets, a leading newsletter on AI, \r\n  Data Science, and Machine Learning</a>\n</img></div>\n<div class=\"form-fields\">\n<div class=\"field-container\"><label>Email:</label><input maxlength=\"60\" name=\"EMAIL\" placeholder=\"Your email\" required=\"\" size=\"30\" type=\"email\"/></div>\n<div class=\"field-container submit-container\"><div class=\"form-button\" onclick=\"document.getElementById('mc4wp-form-1').submit()\">Sign Up</div></div>\n</div>\n<label style=\"display: none !important;\">Leave this field empty if you're human: <input autocomplete=\"off\" name=\"_mc4wp_honeypot\" tabindex=\"-1\" type=\"text\" value=\"\"/></label><input name=\"_mc4wp_timestamp\" type=\"hidden\" value=\"1554078120\"/><input name=\"_mc4wp_form_id\" type=\"hidden\" value=\"77281\"/><input name=\"_mc4wp_form_element_id\" type=\"hidden\" value=\"mc4wp-form-1\"/></div><div class=\"mc4wp-response\"></div></form><!-- / MailChimp for WordPress Plugin -->\n</div></div><script type=\"text/javascript\">(function() {function addEventListener(element,event,handler) {\n\tif(element.addEventListener) {\n\t\telement.addEventListener(event,handler, false);\n\t} else if(element.attachEvent){\n\t\telement.attachEvent('on'+event,handler);\n\t}\n}function maybePrefixUrlField() {\n\tif(this.value.trim() !== '' && this.value.indexOf('http') !== 0) {\n\t\tthis.value = \"http://\" + this.value;\n\t}\n}\n\nvar urlFields = document.querySelectorAll('.mc4wp-form input[type=\"url\"]');\nif( urlFields && urlFields.length > 0 ) {\n\tfor( var j=0; j < urlFields.length; j++ ) {\n\t\taddEventListener(urlFields[j],'blur',maybePrefixUrlField);\n\t}\n}/* test if browser supports date fields */\nvar testInput = document.createElement('input');\ntestInput.setAttribute('type', 'date');\nif( testInput.type !== 'date') {\n\n\t/* add placeholder & pattern to all date fields */\n\tvar dateFields = document.querySelectorAll('.mc4wp-form input[type=\"date\"]');\n\tfor(var i=0; i<dateFields.length; i++) {\n\t\tif(!dateFields[i].placeholder) {\n\t\t\tdateFields[i].placeholder = 'YYYY-MM-DD';\n\t\t}\n\t\tif(!dateFields[i].pattern) {\n\t\t\tdateFields[i].pattern = '[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';\n\t\t}\n\t}\n}\n\n})();</script><script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_options = {\"testMode\":\"\",\"boxes\":[{\"id\":82996,\"icon\":\"&times;\",\"content\":\"\",\"css\":{\"background_color\":\"#eeee22\",\"width\":600,\"border_width\":2,\"border_style\":\"double\",\"position\":\"bottom-left\"},\"trigger\":{\"method\":\"time_on_page\",\"value\":\"3\"},\"animation\":\"fade\",\"cookie\":{\"triggered\":0,\"dismissed\":336},\"rehide\":true,\"position\":\"bottom-left\",\"screenWidthCondition\":{\"condition\":\"larger\",\"value\":500},\"closable\":true,\"post\":{\"id\":82996,\"title\":\"Subscribe to KDnuggets\",\"slug\":\"subscribe-to-kdnuggets\"}}]};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla/assets/js/script.min.js?ver=3.2.5\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar boxzilla_stats_config = {\"ajaxurl\":\"https:\\/\\/www.kdnuggets.com\\/wp-admin\\/admin-ajax.php?action=boxzilla_stats_track\"};\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/boxzilla-stats/assets/js/tracking.min.js?ver=1.0.4\" type=\"text/javascript\"></script>\n<script src=\"https://www.kdnuggets.com/wp-includes/js/wp-embed.min.js?ver=4.9.10\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar mc4wp_forms_config = [];\n/* ]]> */\n</script>\n<script src=\"https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/forms-api.min.js?ver=4.1.14\" type=\"text/javascript\"></script>\n<!--[if lte IE 9]>\n<script type='text/javascript' src='https://www.kdnuggets.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js?ver=4.1.14'></script>\n<![endif]-->\n<!--/.main_wrapper--></div>\n<script src=\"https://s7.addthis.com/js/300/addthis_widget.js#pubid=gpsaddthis\" type=\"text/javascript\"></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.734 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2019-03-31 20:22:00 -->\n<!-- Compression = gzip -->", "url": "https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html", "title_html": "<h1 id=\"title\"><img align=\"right\" alt=\"Gold Blog\" src=\"/images/tkb-1902-g.png\" width=\"94\"/>Artificial Neural Network Implementation using NumPy and Image Classification</h1>"}