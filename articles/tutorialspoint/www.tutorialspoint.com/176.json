{"content": "\n PL/SQL - Packages \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n In this chapter, we will discuss the Packages in PL/SQL. Packages are schema objects that groups logically related PL/SQL types, variables, and subprograms. \n A package will have two mandatory parts \u2212 \n \nPackage specification\nPackage body or definition\n \n Package Specification \n The specification is the interface to the package. It just DECLARES the types, variables, constants, exceptions, cursors, and subprograms that can be referenced from outside the package. In other words, it contains all information about the content of the package, but excludes the code for the subprograms. \n All objects placed in the specification are called public objects. Any subprogram not in the package specification but coded in the package body is called a private object. \n The following code snippet shows a package specification having a single procedure. You can have many global variables defined and multiple procedures or functions inside a package. \n \nCREATE PACKAGE cust_sal AS \n   PROCEDURE find_sal(c_id customers.id%type); \nEND cust_sal; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nPackage created.\n \n Package Body \n The package body has the codes for various methods declared in the package specification and other private declarations, which are hidden from the code outside the package. \n The CREATE PACKAGE BODY Statement is used for creating the package body. The following code snippet shows the package body declaration for the cust_sal package created above. I assumed that we already have CUSTOMERS table created in our database as mentioned in the PL/SQL - Variables chapter. \n \nCREATE OR REPLACE PACKAGE BODY cust_sal AS  \n   \n   PROCEDURE find_sal(c_id customers.id%TYPE) IS \n   c_sal customers.salary%TYPE; \n   BEGIN \n      SELECT salary INTO c_sal \n      FROM customers \n      WHERE id = c_id; \n      dbms_output.put_line('Salary: '|| c_sal); \n   END find_sal; \nEND cust_sal; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nPackage body created.\n \n Using the Package Elements \n The package elements (variables, procedures or functions) are accessed with the following syntax \u2212 \n \npackage_name.element_name;\n \n Consider, we already have created the above package in our database schema, the following program uses the find_sal method of the cust_sal package \u2212 \n \nDECLARE \n   code customers.id%type := &cc_id; \nBEGIN \n   cust_sal.find_sal(code); \nEND; \n/\n \n When the above code is executed at the SQL prompt, it prompts to enter the customer ID and when you enter an ID, it displays the corresponding salary as follows \u2212 \n \nEnter value for cc_id: 1 \nSalary: 3000 \n\nPL/SQL procedure successfully completed. \n \n Example \n The following program provides a more complete package. We will use the CUSTOMERS table stored in our database with the following records \u2212 \n \nSelect * from customers;  \n\n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  3000.00 | \n|  2 | Khilan   |  25 | Delhi     |  3000.00 | \n|  3 | kaushik  |  23 | Kota      |  3000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  7500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  9500.00 | \n|  6 | Komal    |  22 | MP        |  5500.00 | \n+----+----------+-----+-----------+----------+\n \n The Package Specification \n \nCREATE OR REPLACE PACKAGE c_package AS \n   -- Adds a customer \n   PROCEDURE addCustomer(c_id   customers.id%type, \n   c_name  customerS.No.ame%type, \n   c_age  customers.age%type, \n   c_addr customers.address%type,  \n   c_sal  customers.salary%type); \n   \n   -- Removes a customer \n   PROCEDURE delCustomer(c_id  customers.id%TYPE); \n   --Lists all customers \n   PROCEDURE listCustomer; \n  \nEND c_package; \n/\n \n When the above code is executed at the SQL prompt, it creates the above package and displays the following result \u2212 \n \nPackage created.\n \n Creating the Package Body \n \nCREATE OR REPLACE PACKAGE BODY c_package AS \n   PROCEDURE addCustomer(c_id  customers.id%type, \n      c_name customerS.No.ame%type, \n      c_age  customers.age%type, \n      c_addr  customers.address%type,  \n      c_sal   customers.salary%type) \n   IS \n   BEGIN \n      INSERT INTO customers (id,name,age,address,salary) \n         VALUES(c_id, c_name, c_age, c_addr, c_sal); \n   END addCustomer; \n   \n   PROCEDURE delCustomer(c_id   customers.id%type) IS \n   BEGIN \n      DELETE FROM customers \n      WHERE id = c_id; \n   END delCustomer;  \n   \n   PROCEDURE listCustomer IS \n   CURSOR c_customers is \n      SELECT  name FROM customers; \n   TYPE c_list is TABLE OF customerS.No.ame%type; \n   name_list c_list := c_list(); \n   counter integer :=0; \n   BEGIN \n      FOR n IN c_customers LOOP \n      counter := counter +1; \n      name_list.extend; \n      name_list(counter) := n.name; \n      dbms_output.put_line('Customer(' ||counter|| ')'||name_list(counter)); \n      END LOOP; \n   END listCustomer;\n   \nEND c_package; \n/\n \n The above example makes use of the nested table. We will discuss the concept of nested table in the next chapter. \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nPackage body created.\n \n Using The Package \n The following program uses the methods declared and defined in the package c_package. \n \nDECLARE \n   code customers.id%type:= 8; \nBEGIN \n   c_package.addcustomer(7, 'Rajnish', 25, 'Chennai', 3500); \n   c_package.addcustomer(8, 'Subham', 32, 'Delhi', 7500); \n   c_package.listcustomer; \n   c_package.delcustomer(code); \n   c_package.listcustomer; \nEND; \n/  \n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal \nCustomer(7): Rajnish \nCustomer(8): Subham \nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal\nCustomer(7): Rajnish \n\nPL/SQL procedure successfully completed \n \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "title": "PL/SQL - Packages", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Packages</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_triggers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_collections.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>In this chapter, we will discuss the Packages in PL/SQL. Packages are schema objects that groups logically related PL/SQL types, variables, and subprograms.</p>\n<p>A package will have two mandatory parts \u2212</p>\n<ul class=\"list\">\n<li>Package specification</li>\n<li>Package body or definition</li>\n</ul>\n<h2>Package Specification</h2>\n<p>The specification is the interface to the package. It just <b>DECLARES</b> the types, variables, constants, exceptions, cursors, and subprograms that can be referenced from outside the package. In other words, it contains all information about the content of the package, but excludes the code for the subprograms.</p>\n<p>All objects placed in the specification are called <b>public</b> objects. Any subprogram not in the package specification but coded in the package body is called a <b>private</b> object.</p>\n<p>The following code snippet shows a package specification having a single procedure. You can have many global variables defined and multiple procedures or functions inside a package.</p>\n<pre class=\"prettyprint notranslate\">\nCREATE PACKAGE cust_sal AS \n   PROCEDURE find_sal(c_id customers.id%type); \nEND cust_sal; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage created.\n</pre>\n<h2>Package Body</h2>\n<p>The package body has the codes for various methods declared in the package specification and other private declarations, which are hidden from the code outside the package.</p>\n<p>The <b>CREATE PACKAGE BODY</b> Statement is used for creating the package body. The following code snippet shows the package body declaration for the <b><i>cust_sal</i></b> package created above. I assumed that we already have CUSTOMERS table created in our database as mentioned in the <a href=\"/plsql/plsql_variable_types.htm\">PL/SQL - Variables</a> chapter.</p>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE BODY cust_sal AS  \n   \n   PROCEDURE find_sal(c_id customers.id%TYPE) IS \n   c_sal customers.salary%TYPE; \n   BEGIN \n      SELECT salary INTO c_sal \n      FROM customers \n      WHERE id = c_id; \n      dbms_output.put_line('Salary: '|| c_sal); \n   END find_sal; \nEND cust_sal; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage body created.\n</pre>\n<h2>Using the Package Elements</h2>\n<p>The package elements (variables, procedures or functions) are accessed with the following syntax \u2212</p>\n<pre class=\"result notranslate\">\npackage_name.element_name;\n</pre>\n<p>Consider, we already have created the above package in our database schema, the following program uses the <b><i>find_sal</i></b> method of the <b><i>cust_sal</i></b> package \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   code customers.id%type := &amp;cc_id; \nBEGIN \n   cust_sal.find_sal(code); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it prompts to enter the customer ID and when you enter an ID, it displays the corresponding salary as follows \u2212</p>\n<pre class=\"result notranslate\">\nEnter value for cc_id: 1 \nSalary: 3000 \n\nPL/SQL procedure successfully completed. \n</pre>\n<h3>Example</h3>\n<p>The following program provides a more complete package. We will use the CUSTOMERS table stored in our database with the following records \u2212</p>\n<pre class=\"result notranslate\">\nSelect * from customers;  \n\n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  3000.00 | \n|  2 | Khilan   |  25 | Delhi     |  3000.00 | \n|  3 | kaushik  |  23 | Kota      |  3000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  7500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  9500.00 | \n|  6 | Komal    |  22 | MP        |  5500.00 | \n+----+----------+-----+-----------+----------+\n</pre>\n<h3>The Package Specification</h3>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE c_package AS \n   -- Adds a customer \n   PROCEDURE addCustomer(c_id   customers.id%type, \n   c_name  customerS.No.ame%type, \n   c_age  customers.age%type, \n   c_addr customers.address%type,  \n   c_sal  customers.salary%type); \n   \n   -- Removes a customer \n   PROCEDURE delCustomer(c_id  customers.id%TYPE); \n   --Lists all customers \n   PROCEDURE listCustomer; \n  \nEND c_package; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it creates the above package and displays the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage created.\n</pre>\n<h3>Creating the Package Body</h3>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE BODY c_package AS \n   PROCEDURE addCustomer(c_id  customers.id%type, \n      c_name customerS.No.ame%type, \n      c_age  customers.age%type, \n      c_addr  customers.address%type,  \n      c_sal   customers.salary%type) \n   IS \n   BEGIN \n      INSERT INTO customers (id,name,age,address,salary) \n         VALUES(c_id, c_name, c_age, c_addr, c_sal); \n   END addCustomer; \n   \n   PROCEDURE delCustomer(c_id   customers.id%type) IS \n   BEGIN \n      DELETE FROM customers \n      WHERE id = c_id; \n   END delCustomer;  \n   \n   PROCEDURE listCustomer IS \n   CURSOR c_customers is \n      SELECT  name FROM customers; \n   TYPE c_list is TABLE OF customerS.No.ame%type; \n   name_list c_list := c_list(); \n   counter integer :=0; \n   BEGIN \n      FOR n IN c_customers LOOP \n      counter := counter +1; \n      name_list.extend; \n      name_list(counter) := n.name; \n      dbms_output.put_line('Customer(' ||counter|| ')'||name_list(counter)); \n      END LOOP; \n   END listCustomer;\n   \nEND c_package; \n/\n</pre>\n<p>The above example makes use of the <b>nested table</b>. We will discuss the concept of nested table in the next chapter.</p>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage body created.\n</pre>\n<h3>Using The Package</h3>\n<p>The following program uses the methods declared and defined in the package <i>c_package</i>.</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   code customers.id%type:= 8; \nBEGIN \n   c_package.addcustomer(7, 'Rajnish', 25, 'Chennai', 3500); \n   c_package.addcustomer(8, 'Subham', 32, 'Delhi', 7500); \n   c_package.listcustomer; \n   c_package.delcustomer(code); \n   c_package.listcustomer; \nEND; \n/  \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal \nCustomer(7): Rajnish \nCustomer(8): Subham \nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal\nCustomer(7): Rajnish \n\nPL/SQL procedure successfully completed \n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_triggers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_collections.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>PL/SQL Packages</title>\n<meta content=\"PL/SQL Packages - Learn PL/SQL programming in simple and easy steps starting with PL/SQL syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"description\">\n<meta content=\"PL/SQL, syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #d02023 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #d02023 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #d02023 !important;}\r\n.submenu-item{ border-bottom: 2px solid #d02023 !important; border-top: 2px solid #d02023 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#d02023; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/plsql/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"PL/SQL Tutorial\" src=\"/plsql/images/plsql-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Tutorial</li>\n<li><a href=\"/plsql/index.htm\">PL/SQL - Home</a></li>\n<li><a href=\"/plsql/plsql_overview.htm\">PL/SQL - Overview</a></li>\n<li><a href=\"/plsql/plsql_environment_setup.htm\">PL/SQL - Environment</a></li>\n<li><a href=\"/plsql/plsql_basic_syntax.htm\">PL/SQL - Basic Syntax</a></li>\n<li><a href=\"/plsql/plsql_data_types.htm\">PL/SQL - Data Types</a></li>\n<li><a href=\"/plsql/plsql_variable_types.htm\">PL/SQL - Variables</a></li>\n<li><a href=\"/plsql/plsql_constants.htm\">PL/SQL - Constants and Literals</a></li>\n<li><a href=\"/plsql/plsql_operators.htm\">PL/SQL - Operators</a></li>\n<li><a href=\"/plsql/plsql_conditional_control.htm\">PL/SQL - Conditions</a></li>\n<li><a href=\"/plsql/plsql_loops.htm\">PL/SQL - Loops </a></li>\n<li><a href=\"/plsql/plsql_strings.htm\">PL/SQL - Strings</a></li>\n<li><a href=\"/plsql/plsql_arrays.htm\">PL/SQL - Arrays</a></li>\n<li><a href=\"/plsql/plsql_procedures.htm\">PL/SQL - Procedures</a></li>\n<li><a href=\"/plsql/plsql_functions.htm\">PL/SQL - Functions</a></li>\n<li><a href=\"/plsql/plsql_cursors.htm\">PL/SQL - Cursors</a></li>\n<li><a href=\"/plsql/plsql_records.htm\">PL/SQL - Records</a></li>\n<li><a href=\"/plsql/plsql_exceptions.htm\">PL/SQL - Exceptions</a></li>\n<li><a href=\"/plsql/plsql_triggers.htm\">PL/SQL - Triggers</a></li>\n<li><a href=\"/plsql/plsql_packages.htm\">PL/SQL - Packages</a></li>\n<li><a href=\"/plsql/plsql_collections.htm\">PL/SQL - Collections</a></li>\n<li><a href=\"/plsql/plsql_transactions.htm\">PL/SQL - Transactions</a></li>\n<li><a href=\"/plsql/plsql_date_time.htm\">PL/SQL - Date &amp; Time</a></li>\n<li><a href=\"/plsql/plsql_dbms_output.htm\">PL/SQL - DBMS Output</a></li>\n<li><a href=\"/plsql/plsql_object_oriented.htm\">PL/SQL - Object Oriented</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Useful Resources</li>\n<li><a href=\"/plsql/plsql_questions_answers.htm\">PL/SQL - Questions and Answers</a></li>\n<li><a href=\"/plsql/plsql_quick_guide.htm\">PL/SQL - Quick Guide</a></li>\n<li><a href=\"/plsql/plsql_useful_resources.htm\">PL/SQL - Useful Resources</a></li>\n<li><a href=\"/plsql/plsql_discussion.htm\">PL/SQL - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Packages</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_triggers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_collections.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>In this chapter, we will discuss the Packages in PL/SQL. Packages are schema objects that groups logically related PL/SQL types, variables, and subprograms.</p>\n<p>A package will have two mandatory parts \u2212</p>\n<ul class=\"list\">\n<li>Package specification</li>\n<li>Package body or definition</li>\n</ul>\n<h2>Package Specification</h2>\n<p>The specification is the interface to the package. It just <b>DECLARES</b> the types, variables, constants, exceptions, cursors, and subprograms that can be referenced from outside the package. In other words, it contains all information about the content of the package, but excludes the code for the subprograms.</p>\n<p>All objects placed in the specification are called <b>public</b> objects. Any subprogram not in the package specification but coded in the package body is called a <b>private</b> object.</p>\n<p>The following code snippet shows a package specification having a single procedure. You can have many global variables defined and multiple procedures or functions inside a package.</p>\n<pre class=\"prettyprint notranslate\">\nCREATE PACKAGE cust_sal AS \n   PROCEDURE find_sal(c_id customers.id%type); \nEND cust_sal; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage created.\n</pre>\n<h2>Package Body</h2>\n<p>The package body has the codes for various methods declared in the package specification and other private declarations, which are hidden from the code outside the package.</p>\n<p>The <b>CREATE PACKAGE BODY</b> Statement is used for creating the package body. The following code snippet shows the package body declaration for the <b><i>cust_sal</i></b> package created above. I assumed that we already have CUSTOMERS table created in our database as mentioned in the <a href=\"/plsql/plsql_variable_types.htm\">PL/SQL - Variables</a> chapter.</p>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE BODY cust_sal AS  \n   \n   PROCEDURE find_sal(c_id customers.id%TYPE) IS \n   c_sal customers.salary%TYPE; \n   BEGIN \n      SELECT salary INTO c_sal \n      FROM customers \n      WHERE id = c_id; \n      dbms_output.put_line('Salary: '|| c_sal); \n   END find_sal; \nEND cust_sal; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage body created.\n</pre>\n<h2>Using the Package Elements</h2>\n<p>The package elements (variables, procedures or functions) are accessed with the following syntax \u2212</p>\n<pre class=\"result notranslate\">\npackage_name.element_name;\n</pre>\n<p>Consider, we already have created the above package in our database schema, the following program uses the <b><i>find_sal</i></b> method of the <b><i>cust_sal</i></b> package \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   code customers.id%type := &amp;cc_id; \nBEGIN \n   cust_sal.find_sal(code); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it prompts to enter the customer ID and when you enter an ID, it displays the corresponding salary as follows \u2212</p>\n<pre class=\"result notranslate\">\nEnter value for cc_id: 1 \nSalary: 3000 \n\nPL/SQL procedure successfully completed. \n</pre>\n<h3>Example</h3>\n<p>The following program provides a more complete package. We will use the CUSTOMERS table stored in our database with the following records \u2212</p>\n<pre class=\"result notranslate\">\nSelect * from customers;  \n\n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  3000.00 | \n|  2 | Khilan   |  25 | Delhi     |  3000.00 | \n|  3 | kaushik  |  23 | Kota      |  3000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  7500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  9500.00 | \n|  6 | Komal    |  22 | MP        |  5500.00 | \n+----+----------+-----+-----------+----------+\n</pre>\n<h3>The Package Specification</h3>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE c_package AS \n   -- Adds a customer \n   PROCEDURE addCustomer(c_id   customers.id%type, \n   c_name  customerS.No.ame%type, \n   c_age  customers.age%type, \n   c_addr customers.address%type,  \n   c_sal  customers.salary%type); \n   \n   -- Removes a customer \n   PROCEDURE delCustomer(c_id  customers.id%TYPE); \n   --Lists all customers \n   PROCEDURE listCustomer; \n  \nEND c_package; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it creates the above package and displays the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage created.\n</pre>\n<h3>Creating the Package Body</h3>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE PACKAGE BODY c_package AS \n   PROCEDURE addCustomer(c_id  customers.id%type, \n      c_name customerS.No.ame%type, \n      c_age  customers.age%type, \n      c_addr  customers.address%type,  \n      c_sal   customers.salary%type) \n   IS \n   BEGIN \n      INSERT INTO customers (id,name,age,address,salary) \n         VALUES(c_id, c_name, c_age, c_addr, c_sal); \n   END addCustomer; \n   \n   PROCEDURE delCustomer(c_id   customers.id%type) IS \n   BEGIN \n      DELETE FROM customers \n      WHERE id = c_id; \n   END delCustomer;  \n   \n   PROCEDURE listCustomer IS \n   CURSOR c_customers is \n      SELECT  name FROM customers; \n   TYPE c_list is TABLE OF customerS.No.ame%type; \n   name_list c_list := c_list(); \n   counter integer :=0; \n   BEGIN \n      FOR n IN c_customers LOOP \n      counter := counter +1; \n      name_list.extend; \n      name_list(counter) := n.name; \n      dbms_output.put_line('Customer(' ||counter|| ')'||name_list(counter)); \n      END LOOP; \n   END listCustomer;\n   \nEND c_package; \n/\n</pre>\n<p>The above example makes use of the <b>nested table</b>. We will discuss the concept of nested table in the next chapter.</p>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nPackage body created.\n</pre>\n<h3>Using The Package</h3>\n<p>The following program uses the methods declared and defined in the package <i>c_package</i>.</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   code customers.id%type:= 8; \nBEGIN \n   c_package.addcustomer(7, 'Rajnish', 25, 'Chennai', 3500); \n   c_package.addcustomer(8, 'Subham', 32, 'Delhi', 7500); \n   c_package.listcustomer; \n   c_package.delcustomer(code); \n   c_package.listcustomer; \nEND; \n/  \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal \nCustomer(7): Rajnish \nCustomer(8): Subham \nCustomer(1): Ramesh  \nCustomer(2): Khilan  \nCustomer(3): kaushik     \nCustomer(4): Chaitali  \nCustomer(5): Hardik  \nCustomer(6): Komal\nCustomer(7): Rajnish \n\nPL/SQL procedure successfully completed \n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_triggers.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_collections.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/plsql/plsql_packages.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\">\n</img></a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_packages.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_packages.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/plsql/plsql_packages.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_packages.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_packages.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "url": "https://www.tutorialspoint.com/plsql/plsql_packages.htm", "title_html": "<h1>PL/SQL - Packages</h1>"}