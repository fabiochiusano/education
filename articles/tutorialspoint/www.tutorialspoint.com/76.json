{"content": "\n Operating System Scheduling algorithms \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n A Process Scheduler schedules different processes to be assigned to the CPU based on particular scheduling algorithms. There are six popular process scheduling algorithms which we are going to discuss in this chapter \u2212 \n \nFirst-Come, First-Served (FCFS) Scheduling\nShortest-Job-Next (SJN) Scheduling\nPriority Scheduling\nShortest Remaining Time\nRound Robin(RR) Scheduling\nMultiple-Level Queues Scheduling\n \n These algorithms are either non-preemptive or preemptive. Non-preemptive\nalgorithms are designed so that once a process enters the running state, it cannot be preempted until it completes its allotted time, whereas the preemptive scheduling is based on priority where a scheduler may preempt a low priority running process anytime when a high priority process enters into a ready state. \n First Come First Serve (FCFS) \n \nJobs are executed on first come, first serve basis.\nIt is a non-preemptive, pre-emptive scheduling algorithm.\nEasy to understand and implement.\nIts implementation is based on FIFO queue.\nPoor in performance as average wait time is high.\n \n  \n Wait time of each process is as follows \u2212 \n \n\nProcess\nWait Time : Service Time - Arrival Time\n\n\nP0\n0 - 0 = 0\n\n\nP1\n5 - 1 = 4\n\n\nP2\n8 - 2 = 6\n\n\nP3\n16 - 3 = 13\n\n \n Average Wait Time: (0+4+6+13) / 4 = 5.75 \n Shortest Job Next (SJN) \n \nThis is also known as shortest job first, or SJF\nThis is a non-preemptive, pre-emptive scheduling algorithm.\nBest approach to minimize waiting time.\nEasy to implement in Batch systems where required CPU time is known in advance.\nImpossible to implement in interactive systems where required CPU time is not known.\nThe processer should know in advance how much time process will take.\n \n  \n Wait time of each process is as follows \u2212 \n \n\nProcess\nWait Time : Service Time - Arrival Time\n\n\nP0\n3 - 0 = 3\n\n\nP1\n0 - 0 = 0\n\n\nP2\n16 - 2 = 14\n\n\nP3\n8 - 3 = 5\n\n \n Average Wait Time: (3+0+14+5) / 4 = 5.50 \n Priority Based Scheduling \n \nPriority scheduling is a non-preemptive algorithm and one of the most common scheduling algorithms in batch systems.\nEach process is assigned a priority. Process with highest priority is to be executed first and so on.\nProcesses with same priority are executed on first come first served basis.\nPriority can be decided based on memory requirements, time requirements or any other resource requirement.\n \n  \n Wait time of each process is as follows \u2212 \n \n\nProcess\nWait Time : Service Time - Arrival Time\n\n\nP0\n9 - 0 = 9\n\n\nP1\n6 - 1 = 5\n\n\nP2\n14 - 2 = 12\n\n\nP3\n0 - 0 = 0\n\n \n Average Wait Time: (9+5+12+0) / 4 = 6.5 \n Shortest Remaining Time \n \nShortest remaining time (SRT) is the preemptive version of the SJN algorithm.\nThe processor is allocated to the job closest to completion but it can be preempted by a newer ready job with shorter time to completion.\nImpossible to implement in interactive systems where required CPU time is not known.\nIt is often used in batch environments where short jobs need to give preference.\n \n Round Robin Scheduling \n \nRound Robin is the preemptive process scheduling algorithm.\nEach process is provided a fix time to execute, it is called a quantum.\nOnce a process is executed for a given time period, it is preempted and other process executes for a given time period.\nContext switching is used to save states of preempted processes.\n \n  \n Wait time of each process is as follows \u2212 \n \n\nProcess\nWait Time : Service Time - Arrival Time\n\n\nP0\n(0 - 0) + (12 - 3) = 9\n\n\nP1\n(3 - 1) = 2\n\n\nP2\n(6 - 2) + (14 - 9) + (20 - 17) = 12\n\n\nP3\n(9 - 3) + (17 - 12) = 11\n\n \n Average Wait Time: (9+2+12+11) / 4 = 8.5 \n Multiple-Level Queues Scheduling \n Multiple-level queues are not an independent scheduling algorithm. They make use of other existing algorithms to group and schedule jobs with common characteristics. \n \nMultiple queues are maintained for processes with common characteristics.\nEach queue can have its own scheduling algorithms.\nPriorities are assigned to each queue.\n \n For example, CPU-bound jobs can be scheduled in one queue and all I/O-bound jobs in another queue. The Process Scheduler then alternately selects jobs from each queue and assigns them to the CPU based on the algorithm assigned to the queue. \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "title": "Operating System Scheduling algorithms", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>Operating System Scheduling algorithms</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/operating_system/os_process_scheduling.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/operating_system/os_multi_threading.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>A Process Scheduler schedules different processes to be assigned to the CPU based on particular scheduling algorithms. There are six popular process scheduling algorithms which we are going to discuss in this chapter \u2212</p>\n<ul class=\"list\">\n<li>First-Come, First-Served (FCFS) Scheduling</li>\n<li>Shortest-Job-Next (SJN) Scheduling</li>\n<li>Priority Scheduling</li>\n<li>Shortest Remaining Time</li>\n<li>Round Robin(RR) Scheduling</li>\n<li>Multiple-Level Queues Scheduling</li>\n</ul>\n<p>These algorithms are either <b>non-preemptive or preemptive</b>. Non-preemptive\nalgorithms are designed so that once a process enters the running state, it cannot be preempted until it completes its allotted time, whereas the preemptive scheduling is based on priority where a scheduler may preempt a low priority running process anytime when a high priority process enters into a ready state.</p>\n<h2>First Come First Serve (FCFS)</h2>\n<ul class=\"list\">\n<li>Jobs are executed on first come, first serve basis.</li>\n<li>It is a non-preemptive, pre-emptive scheduling algorithm.</li>\n<li>Easy to understand and implement.</li>\n<li>Its implementation is based on FIFO queue.</li>\n<li>Poor in performance as average wait time is high.</li>\n</ul>\n<img alt=\"First Come First Serve Scheduling Algorithm\" src=\"/operating_system/images/fcfs.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%;\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>0 - 0 = 0</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>5 - 1 = 4</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>8 - 2 = 6</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>16 - 3 = 13</td>\n</tr>\n</table>\n<p>Average Wait Time: (0+4+6+13) / 4 = 5.75</p>\n<h2>Shortest Job Next (SJN)</h2>\n<ul class=\"list\">\n<li><p>This is also known as <b>shortest job first</b>, or SJF</p></li>\n<li><p>This is a non-preemptive, pre-emptive scheduling algorithm.</p></li>\n<li><p>Best approach to minimize waiting time.</p></li>\n<li><p>Easy to implement in Batch systems where required CPU time is known in advance.</p></li>\n<li><p>Impossible to implement in interactive systems where required CPU time is not known.</p></li>\n<li><p>The processer should know in advance how much time process will take.</p></li>\n</ul>\n<img alt=\"Shortest Job First Scheduling Algorithm\" src=\"/operating_system/images/sjf.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>3 - 0 = 3</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>0 - 0 = 0</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>16 - 2 = 14</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>8 - 3 = 5</td>\n</tr>\n</table>\n<p>Average Wait Time: (3+0+14+5) / 4 = 5.50</p>\n<h2>Priority Based Scheduling</h2>\n<ul class=\"list\">\n<li><p>Priority scheduling is a non-preemptive algorithm and one of the most common scheduling algorithms in batch systems.</p></li>\n<li><p>Each process is assigned a priority. Process with highest priority is to be executed first and so on.</p></li>\n<li><p>Processes with same priority are executed on first come first served basis.</p></li>\n<li><p>Priority can be decided based on memory requirements, time requirements or any other resource requirement.</p></li>\n</ul>\n<img alt=\"Priority Scheduling Algorithm\" src=\"/operating_system/images/priority_scheduling.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>9 - 0 = 9</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>6 - 1 = 5</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>14 - 2 = 12</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>0 - 0 = 0</td>\n</tr>\n</table>\n<p>Average Wait Time: (9+5+12+0) / 4 = 6.5</p>\n<h2>Shortest Remaining Time</h2>\n<ul class=\"list\">\n<li><p>Shortest remaining time (SRT) is the preemptive version of the SJN algorithm.</p></li>\n<li><p>The processor is allocated to the job closest to completion but it can be preempted by a newer ready job with shorter time to completion.</p></li>\n<li><p>Impossible to implement in interactive systems where required CPU time is not known.</p></li>\n<li><p>It is often used in batch environments where short jobs need to give preference.</p></li>\n</ul>\n<h2>Round Robin Scheduling</h2>\n<ul class=\"list\">\n<li><p>Round Robin is the preemptive process scheduling algorithm.</p></li>\n<li><p>Each process is provided a fix time to execute, it is called a <b>quantum</b>.</p></li>\n<li><p>Once a process is executed for a given time period, it is preempted and other process executes for a given time period.</p></li>\n<li><p>Context switching is used to save states of preempted processes.</p></li>\n</ul>\n<img alt=\"Round Robin Scheduling Algorithm\" src=\"/operating_system/images/round_robin.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>(0 - 0) + (12 - 3) = 9</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>(3 - 1) = 2</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>(6 - 2) + (14 - 9) + (20 - 17) = 12</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>(9 - 3) + (17 - 12) = 11</td>\n</tr>\n</table>\n<p>Average Wait Time: (9+2+12+11) / 4 = 8.5</p>\n<h2>Multiple-Level Queues Scheduling</h2>\n<p>Multiple-level queues are not an independent scheduling algorithm. They make use of other existing algorithms to group and schedule jobs with common characteristics.</p>\n<ul class=\"list\">\n<li>Multiple queues are maintained for processes with common characteristics.</li>\n<li>Each queue can have its own scheduling algorithms.</li>\n<li>Priorities are assigned to each queue.</li>\n</ul>\n<p>For example, CPU-bound jobs can be scheduled in one queue and all I/O-bound jobs in another queue. The Process Scheduler then alternately selects jobs from each queue and assigns them to the CPU based on the algorithm assigned to the queue.</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/operating_system/os_process_scheduling.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/operating_system/os_multi_threading.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>Operating System Scheduling algorithms</title>\n<meta content=\"Operating System Scheduling algorithms - Learning operating system in simple and easy steps starting from basic to advanced concepts with examples including Definition, Functions, Conceptual View, Program Execution, Program Execution, Communication, Error Handling, User Account Management, Multitasking, Real Time System, Process, Program, Memory Management, and Security, Overview, Types, Services, Properties, Processes, Process Scheduling, Scheduling Algorithms, Multithreading, Virtual Memory, I/O Hardware, I/O Software, File System, Linux.\" name=\"description\">\n<meta content=\"Operating System, Tutorials, Learning, Beginners, Basics, Definition, Functions, Conceptual View, Program Execution, Program Execution, Communication, Error Handling, User Account Management, Multitasking, Real Time System, Process, Program, Memory Management, Security, Overview, Types, Services, Properties, Processes, Process Scheduling, Scheduling Algorithms, Multithreading, Virtual Memory, I/O Hardware, I/O Software, File System, Linux.\" name=\"Keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #3896c2 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #3896c2 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #3896c2 !important;}\r\n.submenu-item{ border-bottom: 2px solid #3896c2 !important; border-top: 2px solid #3896c2 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#3896c2; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/operating_system/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"Operating System Tutorial\" src=\"/operating_system/images/os-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li><a class=\"videolink\" href=\"/operating_system/index.asp\" target=\"_blank\"><img alt=\"Operating System Video Tutorials\" src=\"/operating_system/images/operating-system-video-tutorials.jpg\"/></a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Operating System Tutorial</li>\n<li><a href=\"/operating_system/index.htm\">OS - Home</a></li>\n<li><a href=\"/operating_system/os_overview.htm\">OS - Overview</a></li>\n<li><a href=\"/operating_system/os_types.htm\">OS - Types</a></li>\n<li><a href=\"/operating_system/os_services.htm\">OS - Services</a></li>\n<li><a href=\"/operating_system/os_properties.htm\">OS - Properties</a></li>\n<li><a href=\"/operating_system/os_processes.htm\">OS - Processes</a></li>\n<li><a href=\"/operating_system/os_process_scheduling.htm\">OS - Process Scheduling</a></li>\n<li><a href=\"/operating_system/os_process_scheduling_algorithms.htm\">OS - Scheduling algorithms</a></li>\n<li><a href=\"/operating_system/os_multi_threading.htm\">OS -  Multi-threading</a></li>\n<li><a href=\"/operating_system/os_memory_management.htm\">OS - Memory Management</a></li>\n<li><a href=\"/operating_system/os_virtual_memory.htm\">OS -  Virtual Memory</a></li>\n<li><a href=\"/operating_system/os_io_hardware.htm\">OS -  I/O Hardware</a></li>\n<li><a href=\"/operating_system/os_io_software.htm\">OS - I/O Software</a></li>\n<li><a href=\"/operating_system/os_file_system.htm\">OS -  File System</a></li>\n<li><a href=\"/operating_system/os_security.htm\">OS - Security</a></li>\n<li><a href=\"/operating_system/os_linux.htm\">OS - Linux</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">OS - Exams Questions with Answers</li>\n<li><a class=\"left\" href=\"/operating_system/os_exams_questions_answers.htm\">OS - Exams Questions with Answers</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Operating System Useful Resources</li>\n<li><a class=\"left\" href=\"/operating_system/os_quick_guide.htm\">OS - Quick Guide</a></li>\n<li><a class=\"left\" href=\"/operating_system/os_useful_resources.htm\">OS - Useful Resources</a></li>\n<li><a class=\"left\" href=\"/operating_system/os_discussion.htm\">OS - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>Operating System Scheduling algorithms</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/operating_system/os_process_scheduling.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/operating_system/os_multi_threading.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>A Process Scheduler schedules different processes to be assigned to the CPU based on particular scheduling algorithms. There are six popular process scheduling algorithms which we are going to discuss in this chapter \u2212</p>\n<ul class=\"list\">\n<li>First-Come, First-Served (FCFS) Scheduling</li>\n<li>Shortest-Job-Next (SJN) Scheduling</li>\n<li>Priority Scheduling</li>\n<li>Shortest Remaining Time</li>\n<li>Round Robin(RR) Scheduling</li>\n<li>Multiple-Level Queues Scheduling</li>\n</ul>\n<p>These algorithms are either <b>non-preemptive or preemptive</b>. Non-preemptive\nalgorithms are designed so that once a process enters the running state, it cannot be preempted until it completes its allotted time, whereas the preemptive scheduling is based on priority where a scheduler may preempt a low priority running process anytime when a high priority process enters into a ready state.</p>\n<h2>First Come First Serve (FCFS)</h2>\n<ul class=\"list\">\n<li>Jobs are executed on first come, first serve basis.</li>\n<li>It is a non-preemptive, pre-emptive scheduling algorithm.</li>\n<li>Easy to understand and implement.</li>\n<li>Its implementation is based on FIFO queue.</li>\n<li>Poor in performance as average wait time is high.</li>\n</ul>\n<img alt=\"First Come First Serve Scheduling Algorithm\" src=\"/operating_system/images/fcfs.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%;\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>0 - 0 = 0</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>5 - 1 = 4</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>8 - 2 = 6</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>16 - 3 = 13</td>\n</tr>\n</table>\n<p>Average Wait Time: (0+4+6+13) / 4 = 5.75</p>\n<h2>Shortest Job Next (SJN)</h2>\n<ul class=\"list\">\n<li><p>This is also known as <b>shortest job first</b>, or SJF</p></li>\n<li><p>This is a non-preemptive, pre-emptive scheduling algorithm.</p></li>\n<li><p>Best approach to minimize waiting time.</p></li>\n<li><p>Easy to implement in Batch systems where required CPU time is known in advance.</p></li>\n<li><p>Impossible to implement in interactive systems where required CPU time is not known.</p></li>\n<li><p>The processer should know in advance how much time process will take.</p></li>\n</ul>\n<img alt=\"Shortest Job First Scheduling Algorithm\" src=\"/operating_system/images/sjf.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>3 - 0 = 3</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>0 - 0 = 0</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>16 - 2 = 14</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>8 - 3 = 5</td>\n</tr>\n</table>\n<p>Average Wait Time: (3+0+14+5) / 4 = 5.50</p>\n<h2>Priority Based Scheduling</h2>\n<ul class=\"list\">\n<li><p>Priority scheduling is a non-preemptive algorithm and one of the most common scheduling algorithms in batch systems.</p></li>\n<li><p>Each process is assigned a priority. Process with highest priority is to be executed first and so on.</p></li>\n<li><p>Processes with same priority are executed on first come first served basis.</p></li>\n<li><p>Priority can be decided based on memory requirements, time requirements or any other resource requirement.</p></li>\n</ul>\n<img alt=\"Priority Scheduling Algorithm\" src=\"/operating_system/images/priority_scheduling.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>9 - 0 = 9</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>6 - 1 = 5</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>14 - 2 = 12</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>0 - 0 = 0</td>\n</tr>\n</table>\n<p>Average Wait Time: (9+5+12+0) / 4 = 6.5</p>\n<h2>Shortest Remaining Time</h2>\n<ul class=\"list\">\n<li><p>Shortest remaining time (SRT) is the preemptive version of the SJN algorithm.</p></li>\n<li><p>The processor is allocated to the job closest to completion but it can be preempted by a newer ready job with shorter time to completion.</p></li>\n<li><p>Impossible to implement in interactive systems where required CPU time is not known.</p></li>\n<li><p>It is often used in batch environments where short jobs need to give preference.</p></li>\n</ul>\n<h2>Round Robin Scheduling</h2>\n<ul class=\"list\">\n<li><p>Round Robin is the preemptive process scheduling algorithm.</p></li>\n<li><p>Each process is provided a fix time to execute, it is called a <b>quantum</b>.</p></li>\n<li><p>Once a process is executed for a given time period, it is preempted and other process executes for a given time period.</p></li>\n<li><p>Context switching is used to save states of preempted processes.</p></li>\n</ul>\n<img alt=\"Round Robin Scheduling Algorithm\" src=\"/operating_system/images/round_robin.jpg\"/>\n<p><b>Wait time</b> of each process is as follows \u2212</p>\n<table class=\"table table-bordered\" style=\"text-align:center\">\n<tr>\n<th style=\"width:10%; text-align:center\">Process</th>\n<th style=\"text-align:center\">Wait Time : Service Time - Arrival Time</th>\n</tr>\n<tr>\n<td>P0</td>\n<td>(0 - 0) + (12 - 3) = 9</td>\n</tr>\n<tr>\n<td>P1</td>\n<td>(3 - 1) = 2</td>\n</tr>\n<tr>\n<td>P2</td>\n<td>(6 - 2) + (14 - 9) + (20 - 17) = 12</td>\n</tr>\n<tr>\n<td>P3</td>\n<td>(9 - 3) + (17 - 12) = 11</td>\n</tr>\n</table>\n<p>Average Wait Time: (9+2+12+11) / 4 = 8.5</p>\n<h2>Multiple-Level Queues Scheduling</h2>\n<p>Multiple-level queues are not an independent scheduling algorithm. They make use of other existing algorithms to group and schedule jobs with common characteristics.</p>\n<ul class=\"list\">\n<li>Multiple queues are maintained for processes with common characteristics.</li>\n<li>Each queue can have its own scheduling algorithms.</li>\n<li>Priorities are assigned to each queue.</li>\n</ul>\n<p>For example, CPU-bound jobs can be scheduled in one queue and all I/O-bound jobs in another queue. The Process Scheduler then alternately selects jobs from each queue and assigns them to the CPU based on the algorithm assigned to the queue.</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/operating_system/os_process_scheduling.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/operating_system/os_multi_threading.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "url": "https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm", "title_html": "<h1>Operating System Scheduling algorithms</h1>"}