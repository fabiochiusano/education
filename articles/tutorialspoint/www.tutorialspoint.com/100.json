{"content": "\n DCN - Transmission Control Protocol \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n The transmission Control Protocol (TCP) is one of the most important protocols of Internet Protocols suite.  It is most widely used protocol for data transmission in communication network such as internet. \n Features \n \nTCP is reliable protocol. That is, the receiver always sends either positive or negative acknowledgement about the data packet to the sender, so that the sender always has bright clue about whether the data packet is reached the destination or it needs to resend it.\nTCP ensures that the data reaches intended destination in the same order it was sent.\nTCP is connection oriented.  TCP requires that connection between two remote points be established before sending actual data.\nTCP provides error-checking and recovery mechanism.\nTCP provides end-to-end communication.\nTCP provides flow control and quality of service.\nTCP operates in Client/Server point-to-point mode.\nTCP provides full duplex server, i.e. it can perform roles of both receiver and sender.\n \n Header \n The length of TCP header is minimum 20 bytes long and maximum 60 bytes. \n \n\nSource Port (16-bits)\u00a0 - It identifies source port of the application process on the sending device.\nDestination Port (16-bits)\u00a0- It identifies destination port of the application process on the receiving device.\nSequence Number (32-bits)\u00a0- Sequence number of data bytes of a segment in a session.\nAcknowledgement Number (32-bits)\u00a0 - When ACK flag is set, this number contains the next sequence number of the data byte expected and works as acknowledgement of the previous data received.\nData Offset (4-bits)\u00a0 - This field implies both, the size of TCP header (32-bit words) and the offset of data in current packet in the whole TCP segment.\nReserved (3-bits)\u00a0 - Reserved for future use and all are set zero by default.\nFlags (1-bit each)\n\nNS - Nonce Sum bit is used by Explicit Congestion Notification signaling process.\nCWR - When a host receives packet with ECE bit set, it sets Congestion Windows Reduced to acknowledge that ECE received.\nECE -It has two meanings:\n\nIf SYN bit is clear to 0, then ECE means that the IP packet has its CE (congestion experience) bit set.\nIf SYN bit is set to 1, ECE means that the device is ECT capable.\n\n\nURG - It indicates that Urgent Pointer field has significant data and should be processed.\nACK - It indicates that Acknowledgement field has significance.  If ACK is cleared to 0, it indicates that packet does not contain any acknowledgement.\nPSH - When set, it is a request to the receiving station to PUSH data (as soon as it comes) to the receiving application without buffering it.\nRST - Reset flag has the following features: \n\nIt is used to refuse an incoming connection.\nIt is used to reject a segment.\nIt is used to restart a connection.\n\n\nSYN - This flag is used to set up a connection between hosts.\nFIN - This flag is used to release a connection and no more data is exchanged thereafter.  Because packets with SYN and FIN flags have sequence numbers, they are processed in correct order.\n\n\nWindows Size\u00a0 - This field is used for flow control between two stations and indicates the amount of buffer (in bytes) the receiver has allocated for a segment, i.e. how much data is the receiver expecting.\nChecksum\u00a0- This field contains the checksum of Header, Data and Pseudo Headers.\nUrgent Pointer\u00a0 - It points to the urgent data byte if URG flag is set to 1.\nOptions\u00a0 - It facilitates additional options which are not covered by the regular header. Option field is always described in 32-bit words.  If this field contains data less than 32-bit, padding is used to cover the remaining bits to reach 32-bit boundary.\n\nAddressing\nTCP communication between two remote hosts is done by means of port numbers (TSAPs).  Ports numbers can range from 0 \u2013 65535 which are divided as:\n\nSystem Ports (0 \u2013 1023)\nUser Ports ( 1024 \u2013 49151)\nPrivate/Dynamic Ports (49152 \u2013 65535)\n\nConnection Management\nTCP communication works in Server/Client model.  The client initiates the connection and the server either accepts or rejects it.  Three-way handshaking is used for connection management.\n\nEstablishment\nClient initiates the connection and sends the segment with a Sequence number.  Server acknowledges it back with its own Sequence number and ACK of client\u2019s segment which is one more than client\u2019s Sequence number. Client after receiving ACK of its segment sends an acknowledgement of Server\u2019s response.\nRelease\nEither of server and client can send TCP segment with FIN flag set to 1.  When the receiving end responds it back by ACKnowledging FIN, that direction of TCP communication is closed and connection is released.\nBandwidth Management\nTCP uses the concept of window size to accommodate the need of Bandwidth management.  Window size tells the sender at the remote end, the number of data byte segments the receiver at this end can receive.  TCP uses slow start phase by using window size 1 and increases the window size exponentially after each successful communication.\nFor example, the client uses windows size 2 and sends 2 bytes of data.  When the acknowledgement of this segment received the windows size is doubled to 4 and next sent the segment sent will be 4 data bytes long.  When the acknowledgement of 4-byte data segment is received, the client sets windows size to 8 and so on.\nIf an acknowledgement is missed, i.e. data lost in transit network or it received NACK, then the window size is reduced to half and slow start phase starts again.\nError Control \u2227 Flow Control\nTCP uses port numbers to know what application process it needs to handover the data segment. Along with that, it uses sequence numbers to synchronize itself with the remote host.  All data segments are sent and received with sequence numbers.  The Sender knows which last data segment was received by the Receiver when it gets ACK.  The Receiver knows about the last segment sent by the Sender by referring to the sequence number of recently received packet.\nIf the sequence number of a segment recently received does not match with the sequence number the receiver was expecting, then it is discarded and NACK is sent back.  If two segments arrive with the same sequence number, the TCP timestamp value is compared to make a decision.\nMultiplexing\nThe technique to combine two or more data streams in one session is called Multiplexing.  When a TCP client initializes a connection with Server, it always refers to a well-defined port number which indicates the application process. The client itself uses a randomly generated port number from private port number pools.\nUsing TCP Multiplexing, a client can communicate with a number of different application process in a single session.  For example, a client requests a web page which in turn contains different types of data (HTTP, SMTP, FTP etc.) the TCP session timeout is increased and the session is kept open for longer time so that the three-way handshake overhead can be avoided.\nThis enables the client system to receive multiple connection over single virtual connection.  These virtual connections are not good for Servers if the timeout is too long.\nCongestion Control\nWhen large amount of data is fed to system which is not capable of handling it, congestion occurs. TCP controls congestion by means of Window mechanism.  TCP sets a window size telling the other end how much data segment to send.  TCP may use three algorithms for congestion control:\n\nAdditive increase, Multiplicative Decrease\nSlow Start\nTimeout React\n\nTimer Management\nTCP uses different types of timer to control and management various tasks:\nKeep-alive timer:\n\nThis timer is used to check the integrity and validity of a connection.\nWhen keep-alive time expires, the host sends a probe to check if the connection still exists.\n\nRetransmission timer:\n\nThis timer maintains stateful session of data sent.\nIf the acknowledgement of sent data does not receive within the Retransmission time, the data segment is sent again.\n\nPersist timer:\n\nTCP session can be paused by either host by sending Window Size 0.\nTo resume the session a host needs to send Window Size with some larger value.\nIf this segment never reaches the other end, both ends may wait for each other for infinite time.\nWhen the Persist timer expires, the host re-sends its window size to let the other end know.\nPersist Timer helps avoid deadlocks in communication.\n\nTimed-Wait:\n\nAfter releasing a connection, either of the hosts waits for a Timed-Wait time to terminate the connection completely.\nThis is in order to make sure that the other end has received the acknowledgement of its connection termination request.\nTimed-out can be a maximum of 240 seconds (4 minutes).\n\nCrash Recovery\nTCP is very reliable protocol.  It provides sequence number to each of byte sent in segment.  It provides the feedback mechanism i.e. when a host receives a packet, it is bound to ACK that packet having the next sequence number expected (if it is not the last segment).\nWhen a TCP Server crashes mid-way communication and re-starts its process it sends TPDU broadcast to all its hosts.  The hosts can then send the last data segment which was never unacknowledged and carry onwards.\n\n\n Previous Page\n\n\n Print\n\n\n PDF\n\n\nNext Page \u00a0\n\n\n\n\nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n\n", "title": "DCN - Transmission Control Protocol", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>DCN - Transmission Control Protocol</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_communication_computer_network/transport_layer_introduction.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_communication_computer_network/user_datagram_protocol.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>The transmission Control Protocol (TCP) is one of the most important protocols of Internet Protocols suite.  It is most widely used protocol for data transmission in communication network such as internet.</p>\n<h2>Features</h2>\n<ul class=\"list\">\n<li><p>TCP is reliable protocol. That is, the receiver always sends either positive or negative acknowledgement about the data packet to the sender, so that the sender always has bright clue about whether the data packet is reached the destination or it needs to resend it.</p></li>\n<li><p>TCP ensures that the data reaches intended destination in the same order it was sent.</p></li>\n<li><p>TCP is connection oriented.  TCP requires that connection between two remote points be established before sending actual data.</p></li>\n<li><p>TCP provides error-checking and recovery mechanism.</p></li>\n<li><p>TCP provides end-to-end communication.</p></li>\n<li><p>TCP provides flow control and quality of service.</p></li>\n<li><p>TCP operates in Client/Server point-to-point mode.</p></li>\n<li><p>TCP provides full duplex server, i.e. it can perform roles of both receiver and sender.</p></li>\n</ul>\n<h2>Header</h2>\n<p>The length of TCP header is minimum 20 bytes long and maximum 60 bytes.</p>\n<img alt=\"TCP Header\" src=\"/data_communication_computer_network/images/TCP_Header.jpg\">\n<ul class=\"list\">\n<li><p><b>Source Port (16-bits)</b>\u00a0 - It identifies source port of the application process on the sending device.</p></li>\n<li><p><b>Destination Port (16-bits)</b>\u00a0- It identifies destination port of the application process on the receiving device.</p></li>\n<li><p><b>Sequence Number (32-bits)</b>\u00a0- Sequence number of data bytes of a segment in a session.</p></li>\n<li><p><b>Acknowledgement Number (32-bits)</b>\u00a0 - When ACK flag is set, this number contains the next sequence number of the data byte expected and works as acknowledgement of the previous data received.</p></li>\n<li><p><b>Data Offset (4-bits)</b>\u00a0 - This field implies both, the size of TCP header (32-bit words) and the offset of data in current packet in the whole TCP segment.</p></li>\n<li><p><b>Reserved (3-bits)</b>\u00a0 - Reserved for future use and all are set zero by default.</p></li>\n<li><p><b>Flags (1-bit each)</b><p>\n<ul class=\"list\">\n<li><p><b>NS</b> - Nonce Sum bit is used by Explicit Congestion Notification signaling process.</p></li>\n<li><p><b>CWR</b> - When a host receives packet with ECE bit set, it sets Congestion Windows Reduced to acknowledge that ECE received.</p></li>\n<li><p><b>ECE</b> -It has two meanings:</p>\n<ul class=\"list\">\n<li><p>If SYN bit is clear to 0, then ECE means that the IP packet has its CE (congestion experience) bit set.</p></li>\n<li><p>If SYN bit is set to 1, ECE means that the device is ECT capable.</p></li>\n</ul>\n</li>\n<li><p><b>URG</b> - It indicates that Urgent Pointer field has significant data and should be processed.</p></li>\n<li><p><b>ACK</b> - It indicates that Acknowledgement field has significance.  If ACK is cleared to 0, it indicates that packet does not contain any acknowledgement.</p></li>\n<li><p><b>PSH</b> - When set, it is a request to the receiving station to PUSH data (as soon as it comes) to the receiving application without buffering it.</p></li>\n<li><p><b>RST</b> - Reset flag has the following features: </p>\n<ul class=\"list\">\n<li><p>It is used to refuse an incoming connection.</p></li>\n<li><p>It is used to reject a segment.</p></li>\n<li><p>It is used to restart a connection.</p></li>\n</ul>\n</li>\n<li><p><b>SYN</b> - This flag is used to set up a connection between hosts.</p></li>\n<li><p><b>FIN</b> - This flag is used to release a connection and no more data is exchanged thereafter.  Because packets with SYN and FIN flags have sequence numbers, they are processed in correct order.</p></li>\n</ul>\n</p></p></li>\n<li><p><b>Windows Size</b>\u00a0 - This field is used for flow control between two stations and indicates the amount of buffer (in bytes) the receiver has allocated for a segment, i.e. how much data is the receiver expecting.</p></li>\n<li><p><b>Checksum</b>\u00a0- This field contains the checksum of Header, Data and Pseudo Headers.</p></li>\n<li><p><b>Urgent Pointer</b>\u00a0 - It points to the urgent data byte if URG flag is set to 1.</p></li>\n<li><p><b>Options</b>\u00a0 - It facilitates additional options which are not covered by the regular header. Option field is always described in 32-bit words.  If this field contains data less than 32-bit, padding is used to cover the remaining bits to reach 32-bit boundary.</p></li>\n</ul>\n<h2>Addressing</h2>\n<p>TCP communication between two remote hosts is done by means of port numbers (TSAPs).  Ports numbers can range from 0 \u2013 65535 which are divided as:</p>\n<ul class=\"list\">\n<li>System Ports (0 \u2013 1023)</li>\n<li>User Ports ( 1024 \u2013 49151)</li>\n<li>Private/Dynamic Ports (49152 \u2013 65535)</li>\n</ul>\n<h2>Connection Management</h2>\n<p>TCP communication works in Server/Client model.  The client initiates the connection and the server either accepts or rejects it.  Three-way handshaking is used for connection management.</p>\n<img alt=\"TCP Handshake\" src=\"/data_communication_computer_network/images/TCP_handshake.jpg\"/>\n<h3>Establishment</h3>\n<p>Client initiates the connection and sends the segment with a Sequence number.  Server acknowledges it back with its own Sequence number and ACK of client\u2019s segment which is one more than client\u2019s Sequence number. Client after receiving ACK of its segment sends an acknowledgement of Server\u2019s response.</p>\n<h3>Release</h3>\n<p>Either of server and client can send TCP segment with FIN flag set to 1.  When the receiving end responds it back by ACKnowledging FIN, that direction of TCP communication is closed and connection is released.</p>\n<h2>Bandwidth Management</h2>\n<p>TCP uses the concept of window size to accommodate the need of Bandwidth management.  Window size tells the sender at the remote end, the number of data byte segments the receiver at this end can receive.  TCP uses slow start phase by using window size 1 and increases the window size exponentially after each successful communication.</p>\n<p>For example, the client uses windows size 2 and sends 2 bytes of data.  When the acknowledgement of this segment received the windows size is doubled to 4 and next sent the segment sent will be 4 data bytes long.  When the acknowledgement of 4-byte data segment is received, the client sets windows size to 8 and so on.</p>\n<p>If an acknowledgement is missed, i.e. data lost in transit network or it received NACK, then the window size is reduced to half and slow start phase starts again.</p>\n<h2>Error Control \u2227 Flow Control</h2>\n<p>TCP uses port numbers to know what application process it needs to handover the data segment. Along with that, it uses sequence numbers to synchronize itself with the remote host.  All data segments are sent and received with sequence numbers.  The Sender knows which last data segment was received by the Receiver when it gets ACK.  The Receiver knows about the last segment sent by the Sender by referring to the sequence number of recently received packet.</p>\n<p>If the sequence number of a segment recently received does not match with the sequence number the receiver was expecting, then it is discarded and NACK is sent back.  If two segments arrive with the same sequence number, the TCP timestamp value is compared to make a decision.</p>\n<h2>Multiplexing</h2>\n<p>The technique to combine two or more data streams in one session is called Multiplexing.  When a TCP client initializes a connection with Server, it always refers to a well-defined port number which indicates the application process. The client itself uses a randomly generated port number from private port number pools.</p>\n<p>Using TCP Multiplexing, a client can communicate with a number of different application process in a single session.  For example, a client requests a web page which in turn contains different types of data (HTTP, SMTP, FTP etc.) the TCP session timeout is increased and the session is kept open for longer time so that the three-way handshake overhead can be avoided.</p>\n<p>This enables the client system to receive multiple connection over single virtual connection.  These virtual connections are not good for Servers if the timeout is too long.</p>\n<h2>Congestion Control</h2>\n<p>When large amount of data is fed to system which is not capable of handling it, congestion occurs. TCP controls congestion by means of Window mechanism.  TCP sets a window size telling the other end how much data segment to send.  TCP may use three algorithms for congestion control:</p>\n<ul class=\"list\">\n<li><p>Additive increase, Multiplicative Decrease</p></li>\n<li><p>Slow Start</p></li>\n<li><p>Timeout React</p></li>\n</ul>\n<h2>Timer Management</h2>\n<p>TCP uses different types of timer to control and management various tasks:</p>\n<h3>Keep-alive timer:</h3>\n<ul class=\"list\">\n<li><p>This timer is used to check the integrity and validity of a connection.</p></li>\n<li><p>When keep-alive time expires, the host sends a probe to check if the connection still exists.</p></li>\n</ul>\n<h3>Retransmission timer:</h3>\n<ul class=\"list\">\n<li><p>This timer maintains stateful session of data sent.</p></li>\n<li><p>If the acknowledgement of sent data does not receive within the Retransmission time, the data segment is sent again.</p></li>\n</ul>\n<h3>Persist timer:</h3>\n<ul class=\"list\">\n<li><p>TCP session can be paused by either host by sending Window Size 0.</p></li>\n<li><p>To resume the session a host needs to send Window Size with some larger value.</p></li>\n<li><p>If this segment never reaches the other end, both ends may wait for each other for infinite time.</p></li>\n<li><p>When the Persist timer expires, the host re-sends its window size to let the other end know.</p></li>\n<li><p>Persist Timer helps avoid deadlocks in communication.</p></li>\n</ul>\n<h3>Timed-Wait:</h3>\n<ul class=\"list\">\n<li><p>After releasing a connection, either of the hosts waits for a Timed-Wait time to terminate the connection completely.</p></li>\n<li><p>This is in order to make sure that the other end has received the acknowledgement of its connection termination request.</p></li>\n<li><p>Timed-out can be a maximum of 240 seconds (4 minutes).</p></li>\n</ul>\n<h2>Crash Recovery</h2>\n<p>TCP is very reliable protocol.  It provides sequence number to each of byte sent in segment.  It provides the feedback mechanism i.e. when a host receives a packet, it is bound to ACK that packet having the next sequence number expected (if it is not the last segment).</p>\n<p>When a TCP Server crashes mid-way communication and re-starts its process it sends TPDU broadcast to all its hosts.  The hosts can then send the last data segment which was never unacknowledged and carry onwards.</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_communication_computer_network/transport_layer_introduction.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"pdf-btn\">\n<a href=\"/data_communication_computer_network/pdf/transmission_control_protocol.pdf\" target=\"_blank\" title=\"DCN Transmission Control Protocol\"><i class=\"icon icon-file-pdf-o big-font\"></i> PDF</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_communication_computer_network/user_datagram_protocol.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</img></div>", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>DCN Transmission Control Protocol</title>\n<meta content=\"DCN Transmission Control Protocol - Learn Data Communication &amp; Computer Network in simple and easy steps starting from their overview and then covering Network Architecture, Network topologies, Network Models, Physical Layer, Digital Transmission, Transmission media, Wireless Transmission, Analog Transmission, Multiplexing, Switching, Data Link Layer, Error detection and Correction, Data Link Control &amp; Protocols, Network Layer, Network Addressing, Routing, Transport Layer, Transmission Control Protocol (TCP), Application Layer with DNS, SMTP, FTP, POP, HTTP.\" name=\"description\">\n<meta content=\"Data Communication, Computer Network, Tutorial, Network Architecture, Network topologies, Network Models, Physical Layer, Digital Transmission, Transmission media, Wireless Transmission, Analog Transmission, Multiplexing, Switching, Data Link Layer, Error detection and Correction, Data Link Control, Protocols, Network Layer, Network Addressing, Routing, Transport Layer, Transmission, control, protocol (TCP), Application Layer with DNS, SMTP, FTP, POP, HTTP.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #2bb2b0 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #2bb2b0 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #2bb2b0 !important;}\r\n.submenu-item{ border-bottom: 2px solid #2bb2b0 !important; border-top: 2px solid #2bb2b0 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#2bb2b0; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/data_communication_computer_network/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"Data Communication and Computer Network\" src=\"/data_communication_computer_network/images/dcn-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">DCN Tutorial</li>\n<li><a href=\"/data_communication_computer_network/index.htm\" target=\"_top\">Data Comm &amp; Networks Home</a></li>\n<li><a href=\"/data_communication_computer_network/data_communication_computer_network_overview.htm\" target=\"_top\">DCN -  Overview</a></li>\n<li><a href=\"/data_communication_computer_network/computer_network_types.htm\" target=\"_top\">DCN - Computer Network Types</a></li>\n<li><a href=\"/data_communication_computer_network/network_lan_technologies.htm\" target=\"_top\">DCN - Network LAN Technologies</a></li>\n<li><a href=\"/data_communication_computer_network/computer_network_topologies.htm\" target=\"_top\">DCN - Computer Network Topologies</a></li>\n<li><a href=\"/data_communication_computer_network/computer_network_models.htm\" target=\"_top\">DCN - Computer Network Models</a></li>\n<li><a href=\"/data_communication_computer_network/computer_network_security.htm\" target=\"_top\">DCN - Computer Network Security</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Physical Layer</li>\n<li><a href=\"/data_communication_computer_network/physical_layer_introduction.htm\" target=\"_top\">DCN - Physical Layer Introduction</a></li>\n<li><a href=\"/data_communication_computer_network/digital_transmission.htm\" target=\"_top\">DCN - Digital Transmission</a></li>\n<li><a href=\"/data_communication_computer_network/analog_transmission.htm\" target=\"_top\">DCN - Analog Transmission</a></li>\n<li><a href=\"/data_communication_computer_network/transmission_media.htm\" target=\"_top\">DCN - Transmission media</a></li>\n<li><a href=\"/data_communication_computer_network/wireless_transmission.htm\" target=\"_top\">DCN - Wireless Transmission</a></li>\n<li><a href=\"/data_communication_computer_network/physical_layer_multiplexing.htm\" target=\"_top\">DCN - Multiplexing</a></li>\n<li><a href=\"/data_communication_computer_network/physical_layer_switching.htm\" target=\"_top\">DCN - Network Switching</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Data Link Layer</li>\n<li><a href=\"/data_communication_computer_network/data_link_layer_introduction.htm\" target=\"_top\">DCN - Data Link Layer Introduction</a></li>\n<li><a href=\"/data_communication_computer_network/error_detection_and_correction.htm\" target=\"_top\">DCN - Error detection and Correction</a></li>\n<li><a href=\"/data_communication_computer_network/data_link_control_and_protocols.htm\" target=\"_top\">DCN - Data Link Control &amp; Protocols</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Network Layer</li>\n<li><a href=\"/data_communication_computer_network/network_layer_introduction.htm\" target=\"_top\">DCN - Network Layer Introduction</a></li>\n<li><a href=\"/data_communication_computer_network/network_addressing.htm\" target=\"_top\">DCN - Network Addressing</a></li>\n<li><a href=\"/data_communication_computer_network/network_layer_routing.htm\" target=\"_top\">DCN - Routing</a></li>\n<li><a href=\"/data_communication_computer_network/internetworking.htm\" target=\"_top\">DCN - Internetworking</a></li>\n<li><a href=\"/data_communication_computer_network/network_layer_protocols.htm\" target=\"_top\">DCN - Network Layer Protocols</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Transport Layer</li>\n<li><a href=\"/data_communication_computer_network/transport_layer_introduction.htm\" target=\"_top\">DCN - Transport Layer Introduction</a></li>\n<li><a href=\"/data_communication_computer_network/transmission_control_protocol.htm\" target=\"_top\">DCN - Transmission Control Protocol</a></li>\n<li><a href=\"/data_communication_computer_network/user_datagram_protocol.htm\" target=\"_top\">DCN - User Datagram Protocol</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">Application Layer</li>\n<li><a href=\"/data_communication_computer_network/application_layer_introduction.htm\" target=\"_top\">DCN - Application Layer Introduction</a></li>\n<li><a href=\"/data_communication_computer_network/client_server_model.htm\" target=\"_top\">DCN - Client-Server Model</a></li>\n<li><a href=\"/data_communication_computer_network/application_protocols.htm\" target=\"_top\">DCN - Application Protocols</a></li>\n<li><a href=\"/data_communication_computer_network/network_services.htm\" target=\"_top\">DCN - Network Services</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">DCN Useful Resources</li>\n<li><a href=\"/data_communication_computer_network/dcn_quick_guide.htm\" target=\"_top\">DCN - Quick Guide</a></li>\n<li><a href=\"/data_communication_computer_network/dcn_useful_resources.htm\" target=\"_top\">DCN - Useful Resources</a></li>\n<li><a href=\"/data_communication_computer_network/dcn_discussion.htm\" target=\"_top\">DCN - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>DCN - Transmission Control Protocol</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_communication_computer_network/transport_layer_introduction.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_communication_computer_network/user_datagram_protocol.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>The transmission Control Protocol (TCP) is one of the most important protocols of Internet Protocols suite.  It is most widely used protocol for data transmission in communication network such as internet.</p>\n<h2>Features</h2>\n<ul class=\"list\">\n<li><p>TCP is reliable protocol. That is, the receiver always sends either positive or negative acknowledgement about the data packet to the sender, so that the sender always has bright clue about whether the data packet is reached the destination or it needs to resend it.</p></li>\n<li><p>TCP ensures that the data reaches intended destination in the same order it was sent.</p></li>\n<li><p>TCP is connection oriented.  TCP requires that connection between two remote points be established before sending actual data.</p></li>\n<li><p>TCP provides error-checking and recovery mechanism.</p></li>\n<li><p>TCP provides end-to-end communication.</p></li>\n<li><p>TCP provides flow control and quality of service.</p></li>\n<li><p>TCP operates in Client/Server point-to-point mode.</p></li>\n<li><p>TCP provides full duplex server, i.e. it can perform roles of both receiver and sender.</p></li>\n</ul>\n<h2>Header</h2>\n<p>The length of TCP header is minimum 20 bytes long and maximum 60 bytes.</p>\n<img alt=\"TCP Header\" src=\"/data_communication_computer_network/images/TCP_Header.jpg\">\n<ul class=\"list\">\n<li><p><b>Source Port (16-bits)</b>\u00a0 - It identifies source port of the application process on the sending device.</p></li>\n<li><p><b>Destination Port (16-bits)</b>\u00a0- It identifies destination port of the application process on the receiving device.</p></li>\n<li><p><b>Sequence Number (32-bits)</b>\u00a0- Sequence number of data bytes of a segment in a session.</p></li>\n<li><p><b>Acknowledgement Number (32-bits)</b>\u00a0 - When ACK flag is set, this number contains the next sequence number of the data byte expected and works as acknowledgement of the previous data received.</p></li>\n<li><p><b>Data Offset (4-bits)</b>\u00a0 - This field implies both, the size of TCP header (32-bit words) and the offset of data in current packet in the whole TCP segment.</p></li>\n<li><p><b>Reserved (3-bits)</b>\u00a0 - Reserved for future use and all are set zero by default.</p></li>\n<li><p><b>Flags (1-bit each)</b><p>\n<ul class=\"list\">\n<li><p><b>NS</b> - Nonce Sum bit is used by Explicit Congestion Notification signaling process.</p></li>\n<li><p><b>CWR</b> - When a host receives packet with ECE bit set, it sets Congestion Windows Reduced to acknowledge that ECE received.</p></li>\n<li><p><b>ECE</b> -It has two meanings:</p>\n<ul class=\"list\">\n<li><p>If SYN bit is clear to 0, then ECE means that the IP packet has its CE (congestion experience) bit set.</p></li>\n<li><p>If SYN bit is set to 1, ECE means that the device is ECT capable.</p></li>\n</ul>\n</li>\n<li><p><b>URG</b> - It indicates that Urgent Pointer field has significant data and should be processed.</p></li>\n<li><p><b>ACK</b> - It indicates that Acknowledgement field has significance.  If ACK is cleared to 0, it indicates that packet does not contain any acknowledgement.</p></li>\n<li><p><b>PSH</b> - When set, it is a request to the receiving station to PUSH data (as soon as it comes) to the receiving application without buffering it.</p></li>\n<li><p><b>RST</b> - Reset flag has the following features: </p>\n<ul class=\"list\">\n<li><p>It is used to refuse an incoming connection.</p></li>\n<li><p>It is used to reject a segment.</p></li>\n<li><p>It is used to restart a connection.</p></li>\n</ul>\n</li>\n<li><p><b>SYN</b> - This flag is used to set up a connection between hosts.</p></li>\n<li><p><b>FIN</b> - This flag is used to release a connection and no more data is exchanged thereafter.  Because packets with SYN and FIN flags have sequence numbers, they are processed in correct order.</p></li>\n</ul>\n</p></p></li>\n<li><p><b>Windows Size</b>\u00a0 - This field is used for flow control between two stations and indicates the amount of buffer (in bytes) the receiver has allocated for a segment, i.e. how much data is the receiver expecting.</p></li>\n<li><p><b>Checksum</b>\u00a0- This field contains the checksum of Header, Data and Pseudo Headers.</p></li>\n<li><p><b>Urgent Pointer</b>\u00a0 - It points to the urgent data byte if URG flag is set to 1.</p></li>\n<li><p><b>Options</b>\u00a0 - It facilitates additional options which are not covered by the regular header. Option field is always described in 32-bit words.  If this field contains data less than 32-bit, padding is used to cover the remaining bits to reach 32-bit boundary.</p></li>\n</ul>\n<h2>Addressing</h2>\n<p>TCP communication between two remote hosts is done by means of port numbers (TSAPs).  Ports numbers can range from 0 \u2013 65535 which are divided as:</p>\n<ul class=\"list\">\n<li>System Ports (0 \u2013 1023)</li>\n<li>User Ports ( 1024 \u2013 49151)</li>\n<li>Private/Dynamic Ports (49152 \u2013 65535)</li>\n</ul>\n<h2>Connection Management</h2>\n<p>TCP communication works in Server/Client model.  The client initiates the connection and the server either accepts or rejects it.  Three-way handshaking is used for connection management.</p>\n<img alt=\"TCP Handshake\" src=\"/data_communication_computer_network/images/TCP_handshake.jpg\"/>\n<h3>Establishment</h3>\n<p>Client initiates the connection and sends the segment with a Sequence number.  Server acknowledges it back with its own Sequence number and ACK of client\u2019s segment which is one more than client\u2019s Sequence number. Client after receiving ACK of its segment sends an acknowledgement of Server\u2019s response.</p>\n<h3>Release</h3>\n<p>Either of server and client can send TCP segment with FIN flag set to 1.  When the receiving end responds it back by ACKnowledging FIN, that direction of TCP communication is closed and connection is released.</p>\n<h2>Bandwidth Management</h2>\n<p>TCP uses the concept of window size to accommodate the need of Bandwidth management.  Window size tells the sender at the remote end, the number of data byte segments the receiver at this end can receive.  TCP uses slow start phase by using window size 1 and increases the window size exponentially after each successful communication.</p>\n<p>For example, the client uses windows size 2 and sends 2 bytes of data.  When the acknowledgement of this segment received the windows size is doubled to 4 and next sent the segment sent will be 4 data bytes long.  When the acknowledgement of 4-byte data segment is received, the client sets windows size to 8 and so on.</p>\n<p>If an acknowledgement is missed, i.e. data lost in transit network or it received NACK, then the window size is reduced to half and slow start phase starts again.</p>\n<h2>Error Control \u2227 Flow Control</h2>\n<p>TCP uses port numbers to know what application process it needs to handover the data segment. Along with that, it uses sequence numbers to synchronize itself with the remote host.  All data segments are sent and received with sequence numbers.  The Sender knows which last data segment was received by the Receiver when it gets ACK.  The Receiver knows about the last segment sent by the Sender by referring to the sequence number of recently received packet.</p>\n<p>If the sequence number of a segment recently received does not match with the sequence number the receiver was expecting, then it is discarded and NACK is sent back.  If two segments arrive with the same sequence number, the TCP timestamp value is compared to make a decision.</p>\n<h2>Multiplexing</h2>\n<p>The technique to combine two or more data streams in one session is called Multiplexing.  When a TCP client initializes a connection with Server, it always refers to a well-defined port number which indicates the application process. The client itself uses a randomly generated port number from private port number pools.</p>\n<p>Using TCP Multiplexing, a client can communicate with a number of different application process in a single session.  For example, a client requests a web page which in turn contains different types of data (HTTP, SMTP, FTP etc.) the TCP session timeout is increased and the session is kept open for longer time so that the three-way handshake overhead can be avoided.</p>\n<p>This enables the client system to receive multiple connection over single virtual connection.  These virtual connections are not good for Servers if the timeout is too long.</p>\n<h2>Congestion Control</h2>\n<p>When large amount of data is fed to system which is not capable of handling it, congestion occurs. TCP controls congestion by means of Window mechanism.  TCP sets a window size telling the other end how much data segment to send.  TCP may use three algorithms for congestion control:</p>\n<ul class=\"list\">\n<li><p>Additive increase, Multiplicative Decrease</p></li>\n<li><p>Slow Start</p></li>\n<li><p>Timeout React</p></li>\n</ul>\n<h2>Timer Management</h2>\n<p>TCP uses different types of timer to control and management various tasks:</p>\n<h3>Keep-alive timer:</h3>\n<ul class=\"list\">\n<li><p>This timer is used to check the integrity and validity of a connection.</p></li>\n<li><p>When keep-alive time expires, the host sends a probe to check if the connection still exists.</p></li>\n</ul>\n<h3>Retransmission timer:</h3>\n<ul class=\"list\">\n<li><p>This timer maintains stateful session of data sent.</p></li>\n<li><p>If the acknowledgement of sent data does not receive within the Retransmission time, the data segment is sent again.</p></li>\n</ul>\n<h3>Persist timer:</h3>\n<ul class=\"list\">\n<li><p>TCP session can be paused by either host by sending Window Size 0.</p></li>\n<li><p>To resume the session a host needs to send Window Size with some larger value.</p></li>\n<li><p>If this segment never reaches the other end, both ends may wait for each other for infinite time.</p></li>\n<li><p>When the Persist timer expires, the host re-sends its window size to let the other end know.</p></li>\n<li><p>Persist Timer helps avoid deadlocks in communication.</p></li>\n</ul>\n<h3>Timed-Wait:</h3>\n<ul class=\"list\">\n<li><p>After releasing a connection, either of the hosts waits for a Timed-Wait time to terminate the connection completely.</p></li>\n<li><p>This is in order to make sure that the other end has received the acknowledgement of its connection termination request.</p></li>\n<li><p>Timed-out can be a maximum of 240 seconds (4 minutes).</p></li>\n</ul>\n<h2>Crash Recovery</h2>\n<p>TCP is very reliable protocol.  It provides sequence number to each of byte sent in segment.  It provides the feedback mechanism i.e. when a host receives a packet, it is bound to ACK that packet having the next sequence number expected (if it is not the last segment).</p>\n<p>When a TCP Server crashes mid-way communication and re-starts its process it sends TPDU broadcast to all its hosts.  The hosts can then send the last data segment which was never unacknowledged and carry onwards.</p>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/data_communication_computer_network/transport_layer_introduction.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"pdf-btn\">\n<a href=\"/data_communication_computer_network/pdf/transmission_control_protocol.pdf\" target=\"_blank\" title=\"DCN Transmission Control Protocol\"><i class=\"icon icon-file-pdf-o big-font\"></i> PDF</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/data_communication_computer_network/user_datagram_protocol.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</img></div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "url": "https://www.tutorialspoint.com/data_communication_computer_network/transmission_control_protocol.htm", "title_html": "<h1>DCN - Transmission Control Protocol</h1>"}