{"content": "\n PL/SQL - Functions \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n In this chapter, we will discuss the functions in PL/SQL. A function is same as a procedure except that it returns a value. Therefore, all the discussions of the previous chapter are true for functions too. \n Creating a Function \n A standalone function is created using the CREATE FUNCTION statement. The simplified syntax for the CREATE OR REPLACE PROCEDURE statement is as follows \u2212 \n \nCREATE [OR REPLACE] FUNCTION function_name \n[(parameter_name [IN | OUT | IN OUT] type [, ...])] \nRETURN return_datatype \n{IS | AS} \nBEGIN \n   < function_body > \nEND [function_name];\n \n Where, \n \nfunction-name specifies the name of the function.\n[OR REPLACE] option allows the modification of an existing function.\nThe optional parameter list contains name, mode and types of the parameters. IN represents the value that will be passed from outside and OUT represents the parameter that will be used to return a value outside of the procedure.\nThe function must contain a return statement.\nThe RETURN clause specifies the data type you are going to return from the function.\nfunction-body contains the executable part.\nThe AS keyword is used instead of the IS keyword for creating a standalone function.\n \n Example \n The following example illustrates how to create and call a standalone function. This function returns the total number of CUSTOMERS in the customers table. \n We will use the CUSTOMERS table, which we had created in the PL/SQL Variables chapter \u2212 \n \nSelect * from customers; \n \n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  2000.00 | \n|  2 | Khilan   |  25 | Delhi     |  1500.00 | \n|  3 | kaushik  |  23 | Kota      |  2000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  6500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  8500.00 | \n|  6 | Komal    |  22 | MP        |  4500.00 | \n+----+----------+-----+-----------+----------+  \n \n \nCREATE OR REPLACE FUNCTION totalCustomers \nRETURN number IS \n   total number(2) := 0; \nBEGIN \n   SELECT count(*) into total \n   FROM customers; \n    \n   RETURN total; \nEND; \n/ \n \n When the above code is executed using the SQL prompt, it will produce the following result \u2212 \n \nFunction created.\n \n Calling a Function \n While creating a function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. \n A called function performs the defined task and when its return statement is executed or when the last end statement is reached, it returns the program control back to the main program. \n To call a function, you simply need to pass the required parameters along with the function name and if the function returns a value, then you can store the returned value. Following program calls the function totalCustomers from an anonymous block \u2212 \n \nDECLARE \n   c number(2); \nBEGIN \n   c := totalCustomers(); \n   dbms_output.put_line('Total no. of Customers: ' || c); \nEND; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nTotal no. of Customers: 6  \n\nPL/SQL procedure successfully completed. \n \n Example \n The following example demonstrates Declaring, Defining, and Invoking a Simple PL/SQL Function that computes and returns the maximum of two values. \n \nDECLARE \n   a number; \n   b number; \n   c number; \nFUNCTION findMax(x IN number, y IN number)  \nRETURN number \nIS \n    z number; \nBEGIN \n   IF x > y THEN \n      z:= x; \n   ELSE \n      Z:= y; \n   END IF;  \n   RETURN z; \nEND; \nBEGIN \n   a:= 23; \n   b:= 45;  \n   c := findMax(a, b); \n   dbms_output.put_line(' Maximum of (23,45): ' || c); \nEND; \n/ \n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nMaximum of (23,45): 45   \n\nPL/SQL procedure successfully completed. \n \n PL/SQL Recursive Functions \n We have seen that a program or subprogram may call another subprogram. When a subprogram calls itself, it is referred to as a recursive call and the process is known as recursion. \n To illustrate the concept, let us calculate the factorial of a number. Factorial of a number n is defined as \u2212 \n \nn! = n*(n-1)! \n   = n*(n-1)*(n-2)! \n      ... \n   = n*(n-1)*(n-2)*(n-3)... 1 \n \n The following program calculates the factorial of a given number by calling itself recursively \u2212 \n \nDECLARE \n   num number; \n   factorial number;  \n   \nFUNCTION fact(x number) \nRETURN number  \nIS \n   f number; \nBEGIN \n   IF x=0 THEN \n      f := 1; \n   ELSE \n      f := x * fact(x-1); \n   END IF; \nRETURN f; \nEND;  \n\nBEGIN \n   num:= 6; \n   factorial := fact(num); \n   dbms_output.put_line(' Factorial '|| num || ' is ' || factorial); \nEND; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nFactorial 6 is 720 \n  \nPL/SQL procedure successfully completed.\n \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "title": "PL/SQL - Functions", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Functions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_procedures.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_cursors.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>In this chapter, we will discuss the functions in PL/SQL. A function is same as a procedure except that it returns a value. Therefore, all the discussions of the previous chapter are true for functions too.</p>\n<h2>Creating a Function</h2>\n<p>A standalone function is created using the <b>CREATE FUNCTION</b> statement. The simplified syntax for the <b>CREATE OR REPLACE PROCEDURE</b> statement is as follows \u2212</p>\n<pre class=\"result notranslate\">\nCREATE [OR REPLACE] FUNCTION function_name \n[(parameter_name [IN | OUT | IN OUT] type [, ...])] \nRETURN return_datatype \n{IS | AS} \nBEGIN \n   &lt; function_body &gt; \nEND [function_name];\n</pre>\n<p>Where,</p>\n<ul class=\"list\">\n<li><p><i>function-name</i> specifies the name of the function.</p></li>\n<li><p>[OR REPLACE] option allows the modification of an existing function.</p></li>\n<li><p>The optional parameter list contains name, mode and types of the parameters. IN represents the value that will be passed from outside and OUT represents the parameter that will be used to return a value outside of the procedure.</p></li>\n<li><p>The function must contain a <b>return</b> statement.</p></li>\n<li><p>The <i>RETURN</i> clause specifies the data type you are going to return from the function.</p></li>\n<li><p><i>function-body</i> contains the executable part.</p></li>\n<li><p>The AS keyword is used instead of the IS keyword for creating a standalone function.</p></li>\n</ul>\n<h3>Example</h3>\n<p>The following example illustrates how to create and call a standalone function. This function returns the total number of CUSTOMERS in the customers table.</p>\n<p>We will use the CUSTOMERS table, which we had created in the <a href=\"/plsql/plsql_variable_types.htm\">PL/SQL Variables</a> chapter \u2212</p>\n<pre class=\"result notranslate\">\nSelect * from customers; \n \n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  2000.00 | \n|  2 | Khilan   |  25 | Delhi     |  1500.00 | \n|  3 | kaushik  |  23 | Kota      |  2000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  6500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  8500.00 | \n|  6 | Komal    |  22 | MP        |  4500.00 | \n+----+----------+-----+-----------+----------+  \n</pre>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE FUNCTION totalCustomers \nRETURN number IS \n   total number(2) := 0; \nBEGIN \n   SELECT count(*) into total \n   FROM customers; \n    \n   RETURN total; \nEND; \n/ \n</pre>\n<p>When the above code is executed using the SQL prompt, it will produce the following result \u2212</p>\n<pre class=\"result notranslate\">\nFunction created.\n</pre>\n<h2>Calling a Function</h2>\n<p>While creating a function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function.</p>\n<p>A called function performs the defined task and when its return statement is executed or when the <b>last end statement</b> is reached, it returns the program control back to the main program.</p>\n<p>To call a function, you simply need to pass the required parameters along with the function name and if the function returns a value, then you can store the returned value. Following program calls the function <b>totalCustomers</b> from an anonymous block \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   c number(2); \nBEGIN \n   c := totalCustomers(); \n   dbms_output.put_line('Total no. of Customers: ' || c); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nTotal no. of Customers: 6  \n\nPL/SQL procedure successfully completed. \n</pre>\n<h3>Example</h3>\n<p>The following example demonstrates Declaring, Defining, and Invoking a Simple PL/SQL Function that computes and returns the maximum of two values.</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   a number; \n   b number; \n   c number; \nFUNCTION findMax(x IN number, y IN number)  \nRETURN number \nIS \n    z number; \nBEGIN \n   IF x &gt; y THEN \n      z:= x; \n   ELSE \n      Z:= y; \n   END IF;  \n   RETURN z; \nEND; \nBEGIN \n   a:= 23; \n   b:= 45;  \n   c := findMax(a, b); \n   dbms_output.put_line(' Maximum of (23,45): ' || c); \nEND; \n/ \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nMaximum of (23,45): 45   \n\nPL/SQL procedure successfully completed. \n</pre>\n<h2>PL/SQL Recursive Functions</h2>\n<p>We have seen that a program or subprogram may call another subprogram. When a subprogram calls itself, it is referred to as a recursive call and the process is known as <b>recursion</b>.</p>\n<p>To illustrate the concept, let us calculate the factorial of a number. Factorial of a number n is defined as \u2212</p>\n<pre class=\"result notranslate\">\nn! = n*(n-1)! \n   = n*(n-1)*(n-2)! \n      ... \n   = n*(n-1)*(n-2)*(n-3)... 1 \n</pre>\n<p>The following program calculates the factorial of a given number by calling itself recursively \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   num number; \n   factorial number;  \n   \nFUNCTION fact(x number) \nRETURN number  \nIS \n   f number; \nBEGIN \n   IF x=0 THEN \n      f := 1; \n   ELSE \n      f := x * fact(x-1); \n   END IF; \nRETURN f; \nEND;  \n\nBEGIN \n   num:= 6; \n   factorial := fact(num); \n   dbms_output.put_line(' Factorial '|| num || ' is ' || factorial); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nFactorial 6 is 720 \n  \nPL/SQL procedure successfully completed.\n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_procedures.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_cursors.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>PL/SQL Functions</title>\n<meta content=\"PL/SQL Functions - Learn PL/SQL programming in simple and easy steps starting with PL/SQL syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"description\">\n<meta content=\"PL/SQL, syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #d02023 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #d02023 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #d02023 !important;}\r\n.submenu-item{ border-bottom: 2px solid #d02023 !important; border-top: 2px solid #d02023 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#d02023; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/plsql/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"PL/SQL Tutorial\" src=\"/plsql/images/plsql-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Tutorial</li>\n<li><a href=\"/plsql/index.htm\">PL/SQL - Home</a></li>\n<li><a href=\"/plsql/plsql_overview.htm\">PL/SQL - Overview</a></li>\n<li><a href=\"/plsql/plsql_environment_setup.htm\">PL/SQL - Environment</a></li>\n<li><a href=\"/plsql/plsql_basic_syntax.htm\">PL/SQL - Basic Syntax</a></li>\n<li><a href=\"/plsql/plsql_data_types.htm\">PL/SQL - Data Types</a></li>\n<li><a href=\"/plsql/plsql_variable_types.htm\">PL/SQL - Variables</a></li>\n<li><a href=\"/plsql/plsql_constants.htm\">PL/SQL - Constants and Literals</a></li>\n<li><a href=\"/plsql/plsql_operators.htm\">PL/SQL - Operators</a></li>\n<li><a href=\"/plsql/plsql_conditional_control.htm\">PL/SQL - Conditions</a></li>\n<li><a href=\"/plsql/plsql_loops.htm\">PL/SQL - Loops </a></li>\n<li><a href=\"/plsql/plsql_strings.htm\">PL/SQL - Strings</a></li>\n<li><a href=\"/plsql/plsql_arrays.htm\">PL/SQL - Arrays</a></li>\n<li><a href=\"/plsql/plsql_procedures.htm\">PL/SQL - Procedures</a></li>\n<li><a href=\"/plsql/plsql_functions.htm\">PL/SQL - Functions</a></li>\n<li><a href=\"/plsql/plsql_cursors.htm\">PL/SQL - Cursors</a></li>\n<li><a href=\"/plsql/plsql_records.htm\">PL/SQL - Records</a></li>\n<li><a href=\"/plsql/plsql_exceptions.htm\">PL/SQL - Exceptions</a></li>\n<li><a href=\"/plsql/plsql_triggers.htm\">PL/SQL - Triggers</a></li>\n<li><a href=\"/plsql/plsql_packages.htm\">PL/SQL - Packages</a></li>\n<li><a href=\"/plsql/plsql_collections.htm\">PL/SQL - Collections</a></li>\n<li><a href=\"/plsql/plsql_transactions.htm\">PL/SQL - Transactions</a></li>\n<li><a href=\"/plsql/plsql_date_time.htm\">PL/SQL - Date &amp; Time</a></li>\n<li><a href=\"/plsql/plsql_dbms_output.htm\">PL/SQL - DBMS Output</a></li>\n<li><a href=\"/plsql/plsql_object_oriented.htm\">PL/SQL - Object Oriented</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Useful Resources</li>\n<li><a href=\"/plsql/plsql_questions_answers.htm\">PL/SQL - Questions and Answers</a></li>\n<li><a href=\"/plsql/plsql_quick_guide.htm\">PL/SQL - Quick Guide</a></li>\n<li><a href=\"/plsql/plsql_useful_resources.htm\">PL/SQL - Useful Resources</a></li>\n<li><a href=\"/plsql/plsql_discussion.htm\">PL/SQL - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Functions</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_procedures.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_cursors.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>In this chapter, we will discuss the functions in PL/SQL. A function is same as a procedure except that it returns a value. Therefore, all the discussions of the previous chapter are true for functions too.</p>\n<h2>Creating a Function</h2>\n<p>A standalone function is created using the <b>CREATE FUNCTION</b> statement. The simplified syntax for the <b>CREATE OR REPLACE PROCEDURE</b> statement is as follows \u2212</p>\n<pre class=\"result notranslate\">\nCREATE [OR REPLACE] FUNCTION function_name \n[(parameter_name [IN | OUT | IN OUT] type [, ...])] \nRETURN return_datatype \n{IS | AS} \nBEGIN \n   &lt; function_body &gt; \nEND [function_name];\n</pre>\n<p>Where,</p>\n<ul class=\"list\">\n<li><p><i>function-name</i> specifies the name of the function.</p></li>\n<li><p>[OR REPLACE] option allows the modification of an existing function.</p></li>\n<li><p>The optional parameter list contains name, mode and types of the parameters. IN represents the value that will be passed from outside and OUT represents the parameter that will be used to return a value outside of the procedure.</p></li>\n<li><p>The function must contain a <b>return</b> statement.</p></li>\n<li><p>The <i>RETURN</i> clause specifies the data type you are going to return from the function.</p></li>\n<li><p><i>function-body</i> contains the executable part.</p></li>\n<li><p>The AS keyword is used instead of the IS keyword for creating a standalone function.</p></li>\n</ul>\n<h3>Example</h3>\n<p>The following example illustrates how to create and call a standalone function. This function returns the total number of CUSTOMERS in the customers table.</p>\n<p>We will use the CUSTOMERS table, which we had created in the <a href=\"/plsql/plsql_variable_types.htm\">PL/SQL Variables</a> chapter \u2212</p>\n<pre class=\"result notranslate\">\nSelect * from customers; \n \n+----+----------+-----+-----------+----------+ \n| ID | NAME     | AGE | ADDRESS   | SALARY   | \n+----+----------+-----+-----------+----------+ \n|  1 | Ramesh   |  32 | Ahmedabad |  2000.00 | \n|  2 | Khilan   |  25 | Delhi     |  1500.00 | \n|  3 | kaushik  |  23 | Kota      |  2000.00 | \n|  4 | Chaitali |  25 | Mumbai    |  6500.00 | \n|  5 | Hardik   |  27 | Bhopal    |  8500.00 | \n|  6 | Komal    |  22 | MP        |  4500.00 | \n+----+----------+-----+-----------+----------+  \n</pre>\n<pre class=\"prettyprint notranslate\">\nCREATE OR REPLACE FUNCTION totalCustomers \nRETURN number IS \n   total number(2) := 0; \nBEGIN \n   SELECT count(*) into total \n   FROM customers; \n    \n   RETURN total; \nEND; \n/ \n</pre>\n<p>When the above code is executed using the SQL prompt, it will produce the following result \u2212</p>\n<pre class=\"result notranslate\">\nFunction created.\n</pre>\n<h2>Calling a Function</h2>\n<p>While creating a function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function.</p>\n<p>A called function performs the defined task and when its return statement is executed or when the <b>last end statement</b> is reached, it returns the program control back to the main program.</p>\n<p>To call a function, you simply need to pass the required parameters along with the function name and if the function returns a value, then you can store the returned value. Following program calls the function <b>totalCustomers</b> from an anonymous block \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   c number(2); \nBEGIN \n   c := totalCustomers(); \n   dbms_output.put_line('Total no. of Customers: ' || c); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nTotal no. of Customers: 6  \n\nPL/SQL procedure successfully completed. \n</pre>\n<h3>Example</h3>\n<p>The following example demonstrates Declaring, Defining, and Invoking a Simple PL/SQL Function that computes and returns the maximum of two values.</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   a number; \n   b number; \n   c number; \nFUNCTION findMax(x IN number, y IN number)  \nRETURN number \nIS \n    z number; \nBEGIN \n   IF x &gt; y THEN \n      z:= x; \n   ELSE \n      Z:= y; \n   END IF;  \n   RETURN z; \nEND; \nBEGIN \n   a:= 23; \n   b:= 45;  \n   c := findMax(a, b); \n   dbms_output.put_line(' Maximum of (23,45): ' || c); \nEND; \n/ \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nMaximum of (23,45): 45   \n\nPL/SQL procedure successfully completed. \n</pre>\n<h2>PL/SQL Recursive Functions</h2>\n<p>We have seen that a program or subprogram may call another subprogram. When a subprogram calls itself, it is referred to as a recursive call and the process is known as <b>recursion</b>.</p>\n<p>To illustrate the concept, let us calculate the factorial of a number. Factorial of a number n is defined as \u2212</p>\n<pre class=\"result notranslate\">\nn! = n*(n-1)! \n   = n*(n-1)*(n-2)! \n      ... \n   = n*(n-1)*(n-2)*(n-3)... 1 \n</pre>\n<p>The following program calculates the factorial of a given number by calling itself recursively \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   num number; \n   factorial number;  \n   \nFUNCTION fact(x number) \nRETURN number  \nIS \n   f number; \nBEGIN \n   IF x=0 THEN \n      f := 1; \n   ELSE \n      f := x * fact(x-1); \n   END IF; \nRETURN f; \nEND;  \n\nBEGIN \n   num:= 6; \n   factorial := fact(num); \n   dbms_output.put_line(' Factorial '|| num || ' is ' || factorial); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nFactorial 6 is 720 \n  \nPL/SQL procedure successfully completed.\n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_procedures.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_cursors.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/plsql/plsql_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\">\n</img></a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/plsql/plsql_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "url": "https://www.tutorialspoint.com/plsql/plsql_functions.htm", "title_html": "<h1>PL/SQL - Functions</h1>"}