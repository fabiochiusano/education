{"content": "\n PL/SQL - Strings \n  \n Advertisements \n \n<!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//-->\n\n\n \n  \n \n Previous Page\n \n \nNext Page \u00a0\n \n  \n  \n The string in PL/SQL is actually a sequence of characters with an optional size specification. The characters could be numeric, letters, blank, special characters or a combination of all. PL/SQL offers three kinds of strings \u2212 \n \nFixed-length strings \u2212 In such strings, programmers specify the length while declaring the string. The string is right-padded with spaces to the length so specified.\nVariable-length strings \u2212 In such strings, a maximum length up to 32,767, for the string is specified and no padding takes place.\nCharacter large objects (CLOBs) \u2212 These are variable-length strings that can be up to 128 terabytes.\n \n PL/SQL strings could be either variables or literals. A string literal is enclosed within quotation marks. For example, \n \n'This is a string literal.' Or 'hello world'\n \n To include a single quote inside a string literal, you need to type two single quotes next to one another. For example, \n \n'this isn''t what it looks like'\n \n Declaring String Variables \n Oracle database provides numerous string datatypes, such as CHAR, NCHAR, VARCHAR2, NVARCHAR2, CLOB, and NCLOB. The datatypes prefixed with an 'N' are 'national character set' datatypes, that store Unicode character data. \n If you need to declare a variable-length string, you must provide the maximum length of that string. For example, the VARCHAR2 data type. The following example illustrates declaring and using some string variables \u2212 \n \nDECLARE \n   name varchar2(20); \n   company varchar2(30); \n   introduction clob; \n   choice char(1); \nBEGIN \n   name := 'John Smith'; \n   company := 'Infotech'; \n   introduction := ' Hello! I''m John Smith from Infotech.'; \n   choice := 'y'; \n   IF choice = 'y' THEN \n      dbms_output.put_line(name); \n      dbms_output.put_line(company); \n      dbms_output.put_line(introduction); \n   END IF; \nEND; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nJohn Smith \nInfotech\nHello! I'm John Smith from Infotech.  \n\nPL/SQL procedure successfully completed\n \n To declare a fixed-length string, use the CHAR datatype. Here you do not have to specify a maximum length for a fixed-length variable. If you leave off the length constraint, Oracle Database automatically uses a maximum length required. The following two declarations are identical \u2212 \n \nred_flag CHAR(1) := 'Y'; \n red_flag CHAR   := 'Y';\n \n PL/SQL String Functions and Operators \n PL/SQL offers the concatenation operator (||) for joining two strings. The following table provides the string functions provided by PL/SQL \u2212 \n \n\nS.No\nFunction & Purpose\n\n\n1\nASCII(x);\nReturns the ASCII value of the character x.\n\n\n\n2\nCHR(x);\nReturns the character with the ASCII value of x.\n\n\n\n3\nCONCAT(x, y);\nConcatenates the strings x and y and returns the appended string.\n\n\n\n4\nINITCAP(x);\nConverts the initial letter of each word in x to uppercase and returns that string.\n\n\n\n5\nINSTR(x, find_string [, start] [, occurrence]);\nSearches for find_string in x and returns the position at which it occurs.\n\n\n\n6\nINSTRB(x);\nReturns the location of a string within another string, but returns the value in bytes.\n\n\n\n7\nLENGTH(x);\nReturns the number of characters in x.\n\n\n\n8\nLENGTHB(x);\nReturns the length of a character string in bytes for single byte character set.\n\n\n\n9\nLOWER(x);\nConverts the letters in x to lowercase and returns that string.\n\n\n\n10\nLPAD(x, width [, pad_string]) ;\nPads x with spaces to the left, to bring the total length of the string up to width characters.\n\n\n\n11 \nLTRIM(x [, trim_string]);\nTrims characters from the left of x.\n\n\n\n12\nNANVL(x, value);\nReturns value if x matches the NaN special value (not a number), otherwise x is returned.\n\n\n\n13\nNLS_INITCAP(x);\nSame as the INITCAP function except that it can use a different sort method as specified by NLSSORT.\n\n\n\n14\nNLS_LOWER(x) ;\nSame as the LOWER function except that it can use a different sort method as specified by NLSSORT.\n\n\n\n15\nNLS_UPPER(x);\nSame as the UPPER function except that it can use a different sort method as specified by NLSSORT.\n\n\n\n16\nNLSSORT(x);\nChanges the method of sorting the characters. Must be specified before any NLS function; otherwise, the default sort will be used.\n\n\n\n17\nNVL(x, value);\nReturns value if x is null; otherwise, x is returned.\n\n\n\n18\nNVL2(x, value1, value2);\nReturns value1 if x is not null; if x is null, value2 is returned.\n\n\n\n19\nREPLACE(x, search_string, replace_string);\nSearches x for search_string and replaces it with replace_string.\n\n\n\n20\nRPAD(x, width [, pad_string]);\nPads x to the right.\n\n\n\n21\nRTRIM(x [, trim_string]);\nTrims x from the right.\n\n\n\n22\nSOUNDEX(x) ;\nReturns a string containing the phonetic representation of x.\n\n\n\n23\nSUBSTR(x, start [, length]);\nReturns a substring of x that begins at the position specified by start. An optional length for the substring may be supplied.\n\n\n\n24\nSUBSTRB(x);\nSame as SUBSTR except that the parameters are expressed in bytes instead of characters for the single-byte character systems.\n\n\n\n25\nTRIM([trim_char FROM) x);\nTrims characters from the left and right of x.\n\n\n\n26\nUPPER(x);\nConverts the letters in x to uppercase and returns that string.\n\n\n \n Let us now work out on a few examples to understand the concept \u2212 \n Example 1 \n \nDECLARE \n   greetings varchar2(11) := 'hello world'; \nBEGIN \n   dbms_output.put_line(UPPER(greetings)); \n    \n   dbms_output.put_line(LOWER(greetings)); \n    \n   dbms_output.put_line(INITCAP(greetings)); \n    \n   /* retrieve the first character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, 1, 1)); \n    \n   /* retrieve the last character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, -1, 1)); \n    \n   /* retrieve five characters,  \n      starting from the seventh position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 7, 5)); \n    \n   /* retrieve the remainder of the string, \n      starting from the second position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 2)); \n     \n   /* find the location of the first \"e\" */ \n   dbms_output.put_line ( INSTR (greetings, 'e')); \nEND; \n/ \n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \nHELLO WORLD \nhello world \nHello World \nh \nd \nWorld \nello World \n2  \n\nPL/SQL procedure successfully completed.\n \n Example 2 \n \nDECLARE \n   greetings varchar2(30) := '......Hello World.....'; \nBEGIN \n   dbms_output.put_line(RTRIM(greetings,'.')); \n   dbms_output.put_line(LTRIM(greetings, '.')); \n   dbms_output.put_line(TRIM( '.' from greetings)); \nEND; \n/\n \n When the above code is executed at the SQL prompt, it produces the following result \u2212 \n \n......Hello World  \nHello World..... \nHello World  \n\nPL/SQL procedure successfully completed. \n \n  \n \n Previous Page\n \n \n Print\n \n \nNext Page \u00a0\n \n  \n  PRINTING ENDS HERE  \n \nAdvertisements\n<!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//-->\n\n\n \n", "title": "PL/SQL - Strings", "content_html": "<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Strings</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_loops.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_arrays.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>The string in PL/SQL is actually a sequence of characters with an optional size specification. The characters could be numeric, letters, blank, special characters or a combination of all. PL/SQL offers three kinds of strings \u2212</p>\n<ul class=\"list\">\n<li><p><b>Fixed-length strings</b> \u2212 In such strings, programmers specify the length while declaring the string. The string is right-padded with spaces to the length so specified.</p></li>\n<li><p><b>Variable-length strings</b> \u2212 In such strings, a maximum length up to 32,767, for the string is specified and no padding takes place.</p></li>\n<li><p><b>Character large objects (CLOBs)</b> \u2212 These are variable-length strings that can be up to 128 terabytes.</p></li>\n</ul>\n<p>PL/SQL strings could be either variables or literals. A string literal is enclosed within quotation marks. For example,</p>\n<pre class=\"result notranslate\">\n'This is a string literal.' Or 'hello world'\n</pre>\n<p>To include a single quote inside a string literal, you need to type two single quotes next to one another. For example,</p>\n<pre class=\"result notranslate\">\n'this isn''t what it looks like'\n</pre>\n<h2>Declaring String Variables</h2>\n<p>Oracle database provides numerous string datatypes, such as CHAR, NCHAR, VARCHAR2, NVARCHAR2, CLOB, and NCLOB. The datatypes prefixed with an <b>'N'</b> are <b>'national character set'</b> datatypes, that store Unicode character data.</p>\n<p>If you need to declare a variable-length string, you must provide the maximum length of that string. For example, the VARCHAR2 data type. The following example illustrates declaring and using some string variables \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   name varchar2(20); \n   company varchar2(30); \n   introduction clob; \n   choice char(1); \nBEGIN \n   name := 'John Smith'; \n   company := 'Infotech'; \n   introduction := ' Hello! I''m John Smith from Infotech.'; \n   choice := 'y'; \n   IF choice = 'y' THEN \n      dbms_output.put_line(name); \n      dbms_output.put_line(company); \n      dbms_output.put_line(introduction); \n   END IF; \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nJohn Smith \nInfotech\nHello! I'm John Smith from Infotech.  \n\nPL/SQL procedure successfully completed\n</pre>\n<p>To declare a fixed-length string, use the CHAR datatype. Here you do not have to specify a maximum length for a fixed-length variable. If you leave off the length constraint, Oracle Database automatically uses a maximum length required. The following two declarations are identical \u2212</p>\n<pre class=\"result notranslate\">\nred_flag CHAR(1) := 'Y'; \n red_flag CHAR   := 'Y';\n</pre>\n<h2>PL/SQL String Functions and Operators</h2>\n<p>PL/SQL offers the concatenation operator <b>(||)</b> for joining two strings. The following table provides the string functions provided by PL/SQL \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">S.No</th>\n<th style=\"text-align:center;\">Function &amp; Purpose</th>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">1</td>\n<td><p><b>ASCII(x);</b></p>\n<p>Returns the ASCII value of the character x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">2</td>\n<td><p><b>CHR(x);</b></p>\n<p>Returns the character with the ASCII value of x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">3</td>\n<td><p><b>CONCAT(x, y);</b></p>\n<p>Concatenates the strings x and y and returns the appended string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">4</td>\n<td><p><b>INITCAP(x);</b></p>\n<p>Converts the initial letter of each word in x to uppercase and returns that string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">5</td>\n<td><p><b>INSTR(x, find_string [, start] [, occurrence]);</b></p>\n<p>Searches for <b>find_string</b> in x and returns the position at which it occurs.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">6</td>\n<td><p><b>INSTRB(x);</b></p>\n<p>Returns the location of a string within another string, but returns the value in bytes.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">7</td>\n<td><p><b>LENGTH(x);</b></p>\n<p>Returns the number of characters in x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">8</td>\n<td><p><b>LENGTHB(x);</b></p>\n<p>Returns the length of a character string in bytes for single byte character set.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">9</td>\n<td><p><b>LOWER(x);</b></p>\n<p>Converts the letters in x to lowercase and returns that string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">10</td>\n<td><p><b>LPAD(x, width [, pad_string]) ;</b></p>\n<p>Pads <b>x</b> with spaces to the left, to bring the total length of the string up to width characters.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">11 </td>\n<td><p><b>LTRIM(x [, trim_string]);</b></p>\n<p>Trims characters from the left of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">12</td>\n<td><p><b>NANVL(x, value);</b></p>\n<p>Returns value if x matches the NaN special value (not a number), otherwise <b>x</b> is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">13</td>\n<td><p><b>NLS_INITCAP(x);</b></p>\n<p>Same as the INITCAP function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">14</td>\n<td><p><b>NLS_LOWER(x) ;</b></p>\n<p>Same as the LOWER function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">15</td>\n<td><p><b>NLS_UPPER(x);</b></p>\n<p>Same as the UPPER function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">16</td>\n<td><p><b>NLSSORT(x);</b></p>\n<p>Changes the method of sorting the characters. Must be specified before any NLS function; otherwise, the default sort will be used.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">17</td>\n<td><p><b>NVL(x, value);</b></p>\n<p>Returns value if <b>x</b> is null; otherwise, x is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">18</td>\n<td><p><b>NVL2(x, value1, value2);</b></p>\n<p>Returns value1 if x is not null; if x is null, value2 is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">19</td>\n<td><p><b>REPLACE(x, search_string, replace_string);</b></p>\n<p>Searches <b>x</b> for search_string and replaces it with replace_string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">20</td>\n<td><p><b>RPAD(x, width [, pad_string]);</b></p>\n<p>Pads <b>x</b> to the right.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">21</td>\n<td><p><b>RTRIM(x [, trim_string]);</b></p>\n<p>Trims <b>x</b> from the right.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">22</td>\n<td><p><b>SOUNDEX(x) ;</b></p>\n<p>Returns a string containing the phonetic representation of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">23</td>\n<td><p><b>SUBSTR(x, start [, length]);</b></p>\n<p>Returns a substring of <b>x</b> that begins at the position specified by start. An optional length for the substring may be supplied.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">24</td>\n<td><p><b>SUBSTRB(x);</b></p>\n<p>Same as SUBSTR except that the parameters are expressed in bytes instead of characters for the single-byte character systems.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">25</td>\n<td><p><b>TRIM([trim_char FROM) x);</b></p>\n<p>Trims characters from the left and right of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">26</td>\n<td><p><b>UPPER(x);</b></p>\n<p>Converts the letters in x to uppercase and returns that string.</p>\n</td>\n</tr>\n</table>\n<p>Let us now work out on a few examples to understand the concept \u2212</p>\n<h3>Example 1</h3>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   greetings varchar2(11) := 'hello world'; \nBEGIN \n   dbms_output.put_line(UPPER(greetings)); \n    \n   dbms_output.put_line(LOWER(greetings)); \n    \n   dbms_output.put_line(INITCAP(greetings)); \n    \n   /* retrieve the first character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, 1, 1)); \n    \n   /* retrieve the last character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, -1, 1)); \n    \n   /* retrieve five characters,  \n      starting from the seventh position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 7, 5)); \n    \n   /* retrieve the remainder of the string, \n      starting from the second position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 2)); \n     \n   /* find the location of the first \"e\" */ \n   dbms_output.put_line ( INSTR (greetings, 'e')); \nEND; \n/ \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nHELLO WORLD \nhello world \nHello World \nh \nd \nWorld \nello World \n2  \n\nPL/SQL procedure successfully completed.\n</pre>\n<h3>Example 2</h3>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   greetings varchar2(30) := '......Hello World.....'; \nBEGIN \n   dbms_output.put_line(RTRIM(greetings,'.')); \n   dbms_output.put_line(LTRIM(greetings, '.')); \n   dbms_output.put_line(TRIM( '.' from greetings)); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\n......Hello World  \nHello World..... \nHello World  \n\nPL/SQL procedure successfully completed. \n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_loops.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_arrays.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>", "html": "<!DOCTYPE html>\n\n<!--[if IE 8]><html class=\"ie ie8\"> <![endif]-->\n<!--[if IE 9]><html class=\"ie ie9\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html> <!--<![endif]-->\n<head>\n<!-- Basic -->\n<meta charset=\"utf-8\"/>\n<title>PL/SQL Strings</title>\n<meta content=\"PL/SQL Strings - Learn PL/SQL programming in simple and easy steps starting with PL/SQL syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"description\">\n<meta content=\"PL/SQL, syntax, Environment Setup, Operators, Transactions, Date and Time, data types, variables, constants, records, conditional statements, iterative statements, cursors, procedures, functions, exception handling, triggers, packages, collections, external procedures, arrays, strings, dbms output.\" name=\"keywords\"/>\n<base href=\"https://www.tutorialspoint.com/\"/>\n<link href=\"/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>\n<meta content=\"width=device-width,initial-scale=1.0,user-scalable=yes\" name=\"viewport\"/>\n<meta content=\"en_US\" property=\"og:locale\">\n<meta content=\"website\" property=\"og:type\"/>\n<meta content=\"471319149685276\" property=\"fb:app_id\"/>\n<meta content=\"www.tutorialspoint.com\" property=\"og:site_name\"/>\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/>\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/>\n<meta content=\"tutorialspoint.com\" name=\"author\"/>\n<script src=\"https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2\" type=\"text/javascript\"></script>\n<link href=\"https://www.tutorialspoint.com/theme/css/style-min.css?v=3.1\" rel=\"stylesheet\"/>\n<script>\r\nfunction openNav() {\t\r\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  document.getElementById(\"right_obs\").style.display = \"block\";\r\n}\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\nfunction close_obs_sidenav(){\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  document.getElementById(\"right_obs\").style.display = \"none\";\r\n}\r\n</script>\n<!-- Head Libs -->\n<!--[if IE 8]>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/theme/css/ie8.css\">\r\n<![endif]-->\n<style>\r\n#privacy-banner {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 1rem .5rem;\r\n    background: #fff;\r\n    z-index: 1030;\r\n    color: #000;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    display: none;\r\n    border-top: 2px solid rgb(130, 130, 130);\r\n  }\r\n  #privacy-banner p {\r\n    margin: 0;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  #privacy-banner a {\r\n    text-decoration: none;\r\n    margin: 20px auto 0 auto;\r\n    display: block;\r\n    max-width: 150px;\r\n  }\r\n  #privacy-banner a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  #banner-learn {\r\n    color: #000;\r\n  }\r\n  #banner-accept {\r\n    padding: 7px 15px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    background:#737373 !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    #privacy-banner {\r\n      padding: 1.5rem .5rem;\r\n    }\r\n    #privacy-banner a {\r\n      display: inline-block;\r\n      margin: 0 10px;\r\n    }\r\n}\r\nselect{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }\r\n.btnsbmt{ background: #d02023 !important;}\r\nul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}\r\ndiv.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #d02023 url(/images/pattern.png) repeat center center !important;}\r\n.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #d02023 !important;}\r\n.submenu-item{ border-bottom: 2px solid #d02023 !important; border-top: 2px solid #d02023 !important }\r\n.ace_scroller{overflow: auto!important;}\r\na.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#d02023; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}\r\na.demo:hover{opacity:.8}\r\n</style>\n<script>\r\n$(document).ready(function() {\r\n  $('input[name=\"q\"]').keydown(function(event){\r\n    if(event.keyCode == 13) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n});\r\n</script>\n</meta></meta></head>\n<body onload=\"prettyPrint()\">\n<div class=\"wrapLoader\">\n<div class=\"imgLoader\">\n<img alt=\"\" height=\"70\" src=\"/images/loading-cg.gif\" width=\"70\"/>\n</div>\n</div>\n<div class=\"display-none\" id=\"right_obs\" onclick=\"close_obs_sidenav()\"></div>\n<header>\n<div class=\"container\">\n<h1 class=\"logo\">\n<a href=\"index.htm\" title=\"tutorialspoint\">\n<img alt=\"tutorialspoint\" src=\"/plsql/images/logo.png\"/>\n</a>\n</h1>\n<ul class=\"tp-inline-block pull-right\" id=\"tp-head-icons\">\n<li>\n<div class=\"tp-second-nav tp-display-none tp-pointer\" onclick=\"openNav()\">\n<i class=\"fa fa-th-large fa-lg\"></i>\n</div>\n</li>\n</ul>\n<button class=\"btn btn-responsive-nav btn-inverse\" data-target=\".nav-main-collapse\" data-toggle=\"collapse\" id=\"pull\" style=\"top: 24px!important\"> <i class=\"icon icon-bars\"></i> </button>\n<nav>\n<ul class=\"nav nav-pills nav-top\">\n<li><a href=\"/about/about_careers.htm\" style=\"background: #fffb09; font-weight: bold;\"><i class=\"icon icon-suitcase\"></i> Jobs</a></li>\n<li> <a href=\"/programming_examples/\" target=\"_blank\"><i class=\"fa fa-cubes\"></i> \u00a0Examples</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/whiteboard.htm\"><img alt=\"Whiteboard\" src=\"theme/css/icons/image-editor.png\" title=\"Whiteboard\"/> \u00a0Whiteboard</a> </li>\n<li> <a href=\"https://www.tutorialspoint.com/netmeeting.php\"><i class=\"fa-camera\"></i> \u00a0Net Meeting</a> </li>\n<li> <a href=\"/online_dev_tools.htm\"> <i class=\"dev-tools-menu\" style=\"opacity:.5\"></i> Tools </a> </li>\n<li> <a href=\"/articles/index.php\"><i class=\"icon icon-file-text-o\"></i> \u00a0Articles</a> </li>\n<li class=\"top-icons\">\n<ul class=\"social-icons\">\n<li class=\"facebook\"><a data-placement=\"bottom\" href=\"https://www.facebook.com/tutorialspointindia\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Facebook\">Facebook</a></li>\n<li class=\"googleplus\"><a data-placement=\"bottom\" href=\"https://plus.google.com/u/0/116678774017490391259/posts\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Google+\">Google+</a></li>\n<li class=\"twitter\"><a data-placement=\"bottom\" href=\"https://www.twitter.com/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Twitter\">Twitter</a></li>\n<li class=\"linkedin\"><a data-placement=\"bottom\" href=\"https://www.linkedin.com/company/tutorialspoint\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint @ Linkedin\">Linkedin</a></li>\n<li class=\"youtube\"><a data-placement=\"bottom\" href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" rel=\"nofollow\" target=\"_blank\" title=\"tutorialspoint YouTube\">YouTube</a></li>\n</ul>\n</li>\n</ul>\n</nav>\n</div>\n<div class=\"sidenav\" id=\"mySidenav\">\n<div class=\"navbar nav-main\">\n<div class=\"container\">\n<nav class=\"nav-main mega-menu\">\n<ul class=\"nav nav-pills nav-main\" id=\"mainMenu\">\n<li class=\"dropdown no-sub-menu\"> <a class=\"dropdown\" href=\"index.htm\"><i class=\"icon icon-home\"></i> Home</a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"/questions/index.php\"><i class=\"fa fa-send\"></i> Q/A </a> </li>\n<li class=\"dropdown\"><a class=\"dropdown\" href=\"tutorialslibrary.htm\"><span class=\"tut-lib\"> Library </span></a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"videotutorials/index.htm\"><i class=\"fa-toggle-right\"></i> Videos </a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"tutor_connect/index.php\"><i class=\"fa-user\"> </i> Tutors</a></li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"codingground.htm\"><i class=\"fa-code\"></i> Coding Ground </a> </li>\n<li class=\"dropdown no-sub-menu\"><a class=\"dropdown\" href=\"https://store.tutorialspoint.com/\"><i class=\"fa-usd\"></i> Store </a> </li>\n<li class=\"dropdown no-sub-menu\">\n<div class=\"searchform-popup\">\n<input autocomplete=\"off\" class=\"header-search-box\" id=\"search-string\" name=\"q\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" placeholder=\"Search your favorite tutorials...\" type=\"text\"/>\n<div class=\"magnifying-glass\"><i class=\"icon-search\"></i> Search </div>\n</div>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n</div>\n</header></body></html>\n\n<div style=\"clear:both;\"></div>\n<div class=\"main\" role=\"main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-2\">\n<aside class=\"sidebar\">\n<div class=\"mini-logo\">\n<img alt=\"PL/SQL Tutorial\" src=\"/plsql/images/plsql-mini-logo.jpg\">\n</img></div>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Tutorial</li>\n<li><a href=\"/plsql/index.htm\">PL/SQL - Home</a></li>\n<li><a href=\"/plsql/plsql_overview.htm\">PL/SQL - Overview</a></li>\n<li><a href=\"/plsql/plsql_environment_setup.htm\">PL/SQL - Environment</a></li>\n<li><a href=\"/plsql/plsql_basic_syntax.htm\">PL/SQL - Basic Syntax</a></li>\n<li><a href=\"/plsql/plsql_data_types.htm\">PL/SQL - Data Types</a></li>\n<li><a href=\"/plsql/plsql_variable_types.htm\">PL/SQL - Variables</a></li>\n<li><a href=\"/plsql/plsql_constants.htm\">PL/SQL - Constants and Literals</a></li>\n<li><a href=\"/plsql/plsql_operators.htm\">PL/SQL - Operators</a></li>\n<li><a href=\"/plsql/plsql_conditional_control.htm\">PL/SQL - Conditions</a></li>\n<li><a href=\"/plsql/plsql_loops.htm\">PL/SQL - Loops </a></li>\n<li><a href=\"/plsql/plsql_strings.htm\">PL/SQL - Strings</a></li>\n<li><a href=\"/plsql/plsql_arrays.htm\">PL/SQL - Arrays</a></li>\n<li><a href=\"/plsql/plsql_procedures.htm\">PL/SQL - Procedures</a></li>\n<li><a href=\"/plsql/plsql_functions.htm\">PL/SQL - Functions</a></li>\n<li><a href=\"/plsql/plsql_cursors.htm\">PL/SQL - Cursors</a></li>\n<li><a href=\"/plsql/plsql_records.htm\">PL/SQL - Records</a></li>\n<li><a href=\"/plsql/plsql_exceptions.htm\">PL/SQL - Exceptions</a></li>\n<li><a href=\"/plsql/plsql_triggers.htm\">PL/SQL - Triggers</a></li>\n<li><a href=\"/plsql/plsql_packages.htm\">PL/SQL - Packages</a></li>\n<li><a href=\"/plsql/plsql_collections.htm\">PL/SQL - Collections</a></li>\n<li><a href=\"/plsql/plsql_transactions.htm\">PL/SQL - Transactions</a></li>\n<li><a href=\"/plsql/plsql_date_time.htm\">PL/SQL - Date &amp; Time</a></li>\n<li><a href=\"/plsql/plsql_dbms_output.htm\">PL/SQL - DBMS Output</a></li>\n<li><a href=\"/plsql/plsql_object_oriented.htm\">PL/SQL - Object Oriented</a></li>\n</ul>\n<ul class=\"nav nav-list primary left-menu\">\n<li class=\"heading\">PL/SQL Useful Resources</li>\n<li><a href=\"/plsql/plsql_questions_answers.htm\">PL/SQL - Questions and Answers</a></li>\n<li><a href=\"/plsql/plsql_quick_guide.htm\">PL/SQL - Quick Guide</a></li>\n<li><a href=\"/plsql/plsql_useful_resources.htm\">PL/SQL - Useful Resources</a></li>\n<li><a href=\"/plsql/plsql_discussion.htm\">PL/SQL - Discussion</a></li>\n</ul>\n<ul class=\"nav nav-list primary push-bottom left-menu special\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a href=\"/upsc_ias_exams.htm\" target=\"_top\">UPSC IAS Exams Notes</a></li>\n<li><a href=\"/developers_best_practices/index.htm\" target=\"_top\">Developer's Best Practices</a></li>\n<li><a href=\"/questions_and_answers.htm\" target=\"_top\">Questions and Answers</a></li>\n<li><a href=\"/effective_resume_writing.htm\" target=\"_top\">Effective Resume Writing</a></li>\n<li><a href=\"/hr_interview_questions/index.htm\" target=\"_top\">HR Interview Questions</a></li>\n<li><a href=\"/computer_glossary.htm\" target=\"_top\">Computer Glossary</a></li>\n<li><a href=\"/computer_whoiswho.htm\" target=\"_top\">Who is Who</a></li>\n</ul>\n</aside>\n</div>\n<!-- PRINTING STARTS HERE -->\n<div class=\"row\">\n<div class=\"content\">\n<div class=\"col-md-7 middle-col\">\n<h1>PL/SQL - Strings</h1>\n<hr/>\n<div style=\"padding-bottom:5px;padding-left:10px;text-align: center;\">Advertisements</div>\n<div style=\"text-align: center;\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 468;\ngoogle_ad_height = 60;\ngoogle_ad_format = \"468x60_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\" type=\"text/javascript\">\n</script>\n</div>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_loops.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_arrays.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<div class=\"clearer\"></div>\n<hr/>\n<p>The string in PL/SQL is actually a sequence of characters with an optional size specification. The characters could be numeric, letters, blank, special characters or a combination of all. PL/SQL offers three kinds of strings \u2212</p>\n<ul class=\"list\">\n<li><p><b>Fixed-length strings</b> \u2212 In such strings, programmers specify the length while declaring the string. The string is right-padded with spaces to the length so specified.</p></li>\n<li><p><b>Variable-length strings</b> \u2212 In such strings, a maximum length up to 32,767, for the string is specified and no padding takes place.</p></li>\n<li><p><b>Character large objects (CLOBs)</b> \u2212 These are variable-length strings that can be up to 128 terabytes.</p></li>\n</ul>\n<p>PL/SQL strings could be either variables or literals. A string literal is enclosed within quotation marks. For example,</p>\n<pre class=\"result notranslate\">\n'This is a string literal.' Or 'hello world'\n</pre>\n<p>To include a single quote inside a string literal, you need to type two single quotes next to one another. For example,</p>\n<pre class=\"result notranslate\">\n'this isn''t what it looks like'\n</pre>\n<h2>Declaring String Variables</h2>\n<p>Oracle database provides numerous string datatypes, such as CHAR, NCHAR, VARCHAR2, NVARCHAR2, CLOB, and NCLOB. The datatypes prefixed with an <b>'N'</b> are <b>'national character set'</b> datatypes, that store Unicode character data.</p>\n<p>If you need to declare a variable-length string, you must provide the maximum length of that string. For example, the VARCHAR2 data type. The following example illustrates declaring and using some string variables \u2212</p>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   name varchar2(20); \n   company varchar2(30); \n   introduction clob; \n   choice char(1); \nBEGIN \n   name := 'John Smith'; \n   company := 'Infotech'; \n   introduction := ' Hello! I''m John Smith from Infotech.'; \n   choice := 'y'; \n   IF choice = 'y' THEN \n      dbms_output.put_line(name); \n      dbms_output.put_line(company); \n      dbms_output.put_line(introduction); \n   END IF; \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nJohn Smith \nInfotech\nHello! I'm John Smith from Infotech.  \n\nPL/SQL procedure successfully completed\n</pre>\n<p>To declare a fixed-length string, use the CHAR datatype. Here you do not have to specify a maximum length for a fixed-length variable. If you leave off the length constraint, Oracle Database automatically uses a maximum length required. The following two declarations are identical \u2212</p>\n<pre class=\"result notranslate\">\nred_flag CHAR(1) := 'Y'; \n red_flag CHAR   := 'Y';\n</pre>\n<h2>PL/SQL String Functions and Operators</h2>\n<p>PL/SQL offers the concatenation operator <b>(||)</b> for joining two strings. The following table provides the string functions provided by PL/SQL \u2212</p>\n<table class=\"table table-bordered\">\n<tr>\n<th style=\"text-align:center;\">S.No</th>\n<th style=\"text-align:center;\">Function &amp; Purpose</th>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">1</td>\n<td><p><b>ASCII(x);</b></p>\n<p>Returns the ASCII value of the character x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">2</td>\n<td><p><b>CHR(x);</b></p>\n<p>Returns the character with the ASCII value of x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">3</td>\n<td><p><b>CONCAT(x, y);</b></p>\n<p>Concatenates the strings x and y and returns the appended string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">4</td>\n<td><p><b>INITCAP(x);</b></p>\n<p>Converts the initial letter of each word in x to uppercase and returns that string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">5</td>\n<td><p><b>INSTR(x, find_string [, start] [, occurrence]);</b></p>\n<p>Searches for <b>find_string</b> in x and returns the position at which it occurs.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">6</td>\n<td><p><b>INSTRB(x);</b></p>\n<p>Returns the location of a string within another string, but returns the value in bytes.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">7</td>\n<td><p><b>LENGTH(x);</b></p>\n<p>Returns the number of characters in x.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">8</td>\n<td><p><b>LENGTHB(x);</b></p>\n<p>Returns the length of a character string in bytes for single byte character set.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">9</td>\n<td><p><b>LOWER(x);</b></p>\n<p>Converts the letters in x to lowercase and returns that string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">10</td>\n<td><p><b>LPAD(x, width [, pad_string]) ;</b></p>\n<p>Pads <b>x</b> with spaces to the left, to bring the total length of the string up to width characters.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">11 </td>\n<td><p><b>LTRIM(x [, trim_string]);</b></p>\n<p>Trims characters from the left of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">12</td>\n<td><p><b>NANVL(x, value);</b></p>\n<p>Returns value if x matches the NaN special value (not a number), otherwise <b>x</b> is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">13</td>\n<td><p><b>NLS_INITCAP(x);</b></p>\n<p>Same as the INITCAP function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">14</td>\n<td><p><b>NLS_LOWER(x) ;</b></p>\n<p>Same as the LOWER function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">15</td>\n<td><p><b>NLS_UPPER(x);</b></p>\n<p>Same as the UPPER function except that it can use a different sort method as specified by NLSSORT.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">16</td>\n<td><p><b>NLSSORT(x);</b></p>\n<p>Changes the method of sorting the characters. Must be specified before any NLS function; otherwise, the default sort will be used.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">17</td>\n<td><p><b>NVL(x, value);</b></p>\n<p>Returns value if <b>x</b> is null; otherwise, x is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">18</td>\n<td><p><b>NVL2(x, value1, value2);</b></p>\n<p>Returns value1 if x is not null; if x is null, value2 is returned.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">19</td>\n<td><p><b>REPLACE(x, search_string, replace_string);</b></p>\n<p>Searches <b>x</b> for search_string and replaces it with replace_string.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">20</td>\n<td><p><b>RPAD(x, width [, pad_string]);</b></p>\n<p>Pads <b>x</b> to the right.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">21</td>\n<td><p><b>RTRIM(x [, trim_string]);</b></p>\n<p>Trims <b>x</b> from the right.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">22</td>\n<td><p><b>SOUNDEX(x) ;</b></p>\n<p>Returns a string containing the phonetic representation of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">23</td>\n<td><p><b>SUBSTR(x, start [, length]);</b></p>\n<p>Returns a substring of <b>x</b> that begins at the position specified by start. An optional length for the substring may be supplied.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">24</td>\n<td><p><b>SUBSTRB(x);</b></p>\n<p>Same as SUBSTR except that the parameters are expressed in bytes instead of characters for the single-byte character systems.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">25</td>\n<td><p><b>TRIM([trim_char FROM) x);</b></p>\n<p>Trims characters from the left and right of <b>x</b>.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align:center; vertical-align:middle;\">26</td>\n<td><p><b>UPPER(x);</b></p>\n<p>Converts the letters in x to uppercase and returns that string.</p>\n</td>\n</tr>\n</table>\n<p>Let us now work out on a few examples to understand the concept \u2212</p>\n<h3>Example 1</h3>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   greetings varchar2(11) := 'hello world'; \nBEGIN \n   dbms_output.put_line(UPPER(greetings)); \n    \n   dbms_output.put_line(LOWER(greetings)); \n    \n   dbms_output.put_line(INITCAP(greetings)); \n    \n   /* retrieve the first character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, 1, 1)); \n    \n   /* retrieve the last character in the string */ \n   dbms_output.put_line ( SUBSTR (greetings, -1, 1)); \n    \n   /* retrieve five characters,  \n      starting from the seventh position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 7, 5)); \n    \n   /* retrieve the remainder of the string, \n      starting from the second position. */ \n   dbms_output.put_line ( SUBSTR (greetings, 2)); \n     \n   /* find the location of the first \"e\" */ \n   dbms_output.put_line ( INSTR (greetings, 'e')); \nEND; \n/ \n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\nHELLO WORLD \nhello world \nHello World \nh \nd \nWorld \nello World \n2  \n\nPL/SQL procedure successfully completed.\n</pre>\n<h3>Example 2</h3>\n<pre class=\"prettyprint notranslate\">\nDECLARE \n   greetings varchar2(30) := '......Hello World.....'; \nBEGIN \n   dbms_output.put_line(RTRIM(greetings,'.')); \n   dbms_output.put_line(LTRIM(greetings, '.')); \n   dbms_output.put_line(TRIM( '.' from greetings)); \nEND; \n/\n</pre>\n<p>When the above code is executed at the SQL prompt, it produces the following result \u2212</p>\n<pre class=\"result notranslate\">\n......Hello World  \nHello World..... \nHello World  \n\nPL/SQL procedure successfully completed. \n</pre>\n<hr/>\n<div class=\"pre-btn\">\n<a href=\"/plsql/plsql_loops.htm\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n</div>\n<div class=\"print-btn center\">\n<a href=\"/cgi-bin/printpage.cgi\" target=\"_blank\"><i class=\"icon icon-print big-font\"></i> Print</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/plsql/plsql_arrays.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>\u00a0</a>\n</div>\n<hr/>\n<!-- PRINTING ENDS HERE -->\n<div class=\"bottomgooglead\">\n<div class=\"bottomadtag\">Advertisements</div>\n<script><!--\nvar width = 580;\nvar height = 400;\nvar format = \"580x400_as\";\nif( window.innerWidth < 468 ){\n   width = 300;\n   height = 250;\n   format = \"300x250_as\";\n}\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = width;\ngoogle_ad_height = height;\ngoogle_ad_format = format;\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-md-3\" id=\"rightbar\">\n<div class=\"simple-ad\">\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/plsql/plsql_strings.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/facebookIcon.jpg\">\n</img></a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_strings.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/twitterIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/plsql/plsql_strings.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/linkedinIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/plsql/plsql_strings.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/googlePlusIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_strings.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/StumbleUponIcon.jpg\"/>\n</a>\n<a href=\"javascript:void(0)\" onclick=\"var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/plsql/plsql_strings.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;\">\n<img alt=\"img\" src=\"/images/reddit.jpg\"/>\n</a>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\ngoogle_ad_format = \"300x250_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 600;\ngoogle_ad_format = \"300x600_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel =\"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"rightgooglead\">\n<script><!--\ngoogle_ad_client = \"ca-pub-2537027957187252\";\n/* Right Side Ad */\ngoogle_ad_slot = \"right_side_ad\";\ngoogle_ad_width = 300;\ngoogle_ad_height = 250;\n//-->\n</script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"footer-copyright\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-1\">\n<a class=\"logo\" href=\"index.htm\"> <img alt=\"Tutorials Point\" class=\"img-responsive\" src=\"/scripts/img/logo-footer.png\"/> </a>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<nav id=\"sub-menu\">\n<ul>\n<li><a href=\"/about/about_privacy.htm\">Privacy Policy</a></li>\n<li><a href=\"/about/about_cookies.htm\">Cookies Policy</a></li>\n<li><a href=\"/about/contact_us.htm\">Contact</a></li>\n</ul>\n</nav>\n</div>\n<div class=\"col-md-3 col-sm-12 col-xs-12\">\n<p>\u00a9 Copyright 2019. All Rights Reserved.</p>\n</div>\n<div class=\"col-md-4 col-sm-12 col-xs-12\">\n<div class=\"news-group\">\n<input autocomplete=\"off\" class=\"form-control-foot search\" id=\"textemail\" name=\"textemail\" onblur=\"if (this.value == '') {this.value = 'Enter email for newsletter...';}\" onfocus=\"if (this.value == 'Enter email for newsletter...') {this.value = '';}\" placeholder=\"Enter email for newsletter\" type=\"text\"/>\n<span class=\"input-group-btn\"> <button class=\"btn btn-default btn-footer\" id=\"btnemail\" onclick=\"javascript:void(0);\" type=\"submit\">go</button> </span>\n<div id=\"newsresponse\"></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"privacy-banner\">\n<div>\n<p>\n      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.\n      <a href=\"javascript:void(0)\" id=\"banner-accept\">Accept</a>\n<a href=\"/about/about_cookies.htm\" id=\"banner-learn\" target=\"_blank\">Learn more</a>\n</p>\n</div>\n</div>\n<script>\n// Banner Trigger if Not Closed\nif (!localStorage.bannerClosed) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n} else {\n  document.getElementById('privacy-banner').style.display = \"none\";\n}\ndocument.getElementById('banner-accept').addEventListener('click', function() {\n  document.getElementById('privacy-banner').style.display = \"none\";\n  localStorage.bannerClosed = 'true';\n});\nif (navigator.userAgent.match(/Opera|OPR\\//)) {\n  document.getElementById('privacy-banner').style.display = \"inherit\";\n}\n</script>\n<!-- Libs -->\n<script src=\"/theme/js/custom-min.js?v=7\"></script>\n<script src=\"https://www.google-analytics.com/urchin.js\">\n</script>\n<script>\n_uacct = \"UA-232293-6\";\nurchinTracker();\n$('.pg-icon').click(function(){\n   $('.wrapLoader').show();\n});\n</script>\n\n\n\n", "url": "https://www.tutorialspoint.com/plsql/plsql_strings.htm", "title_html": "<h1>PL/SQL - Strings</h1>"}